

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 16 02:02:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _SSPBUF	set	4041
    78  0000                     _SSPCON2bits	set	4037
    79  0000                     _SSPADD	set	4040
    80  0000                     _SSPCON2	set	4037
    81  0000                     _SSPCON1	set	4038
    82  0000                     _SSPSTAT	set	4039
    83  0000                     _TRISBbits	set	3987
    84  0000                     _TXREG	set	4013
    85  0000                     _RCREG	set	4014
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _TXSTAbits	set	4012
    88  0000                     _SPBRG	set	4015
    89  0000                     _ACKEN	set	32300
    90  0000                     _ACKDT	set	32301
    91  0000                     _ACKSTAT	set	32302
    92  0000                     _RCIF	set	31989
    93  0000                     _TRISC7	set	31911
    94  0000                     _TRISC6	set	31910
    95                           
    96                           	psect	smallconst
    97  000800                     __psmallconst:
    98                           	opt callstack 0
    99  000800  00                 	db	0
   100  000801                     STR_2:
   101  000801  0D                 	db	13
   102  000802  4C                 	db	76	;'L'
   103  000803  75                 	db	117	;'u'
   104  000804  7A                 	db	122	;'z'
   105  000805  20                 	db	32
   106  000806  6D                 	db	109	;'m'
   107  000807  65                 	db	101	;'e'
   108  000808  64                 	db	100	;'d'
   109  000809  69                 	db	105	;'i'
   110  00080A  64                 	db	100	;'d'
   111  00080B  61                 	db	97	;'a'
   112  00080C  3A                 	db	58	;':'
   113  00080D  20                 	db	32
   114  00080E  25                 	db	37
   115  00080F  64                 	db	100	;'d'
   116  000810  20                 	db	32
   117  000811  6C                 	db	108	;'l'
   118  000812  75                 	db	117	;'u'
   119  000813  78                 	db	120	;'x'
   120  000814  73                 	db	115	;'s'
   121  000815  0A                 	db	10
   122  000816  0D                 	db	13
   123  000817  00                 	db	0
   124  000818                     STR_1:
   125  000818  0D                 	db	13
   126  000819  0A                 	db	10
   127  00081A  53                 	db	83	;'S'
   128  00081B  69                 	db	105	;'i'
   129  00081C  73                 	db	115	;'s'
   130  00081D  74                 	db	116	;'t'
   131  00081E  65                 	db	101	;'e'
   132  00081F  6D                 	db	109	;'m'
   133  000820  61                 	db	97	;'a'
   134  000821  20                 	db	32
   135  000822  49                 	db	73	;'I'
   136  000823  6E                 	db	110	;'n'
   137  000824  69                 	db	105	;'i'
   138  000825  63                 	db	99	;'c'
   139  000826  69                 	db	105	;'i'
   140  000827  61                 	db	97	;'a'
   141  000828  64                 	db	100	;'d'
   142  000829  6F                 	db	111	;'o'
   143  00082A  0A                 	db	10
   144  00082B  0D                 	db	13
   145  00082C  00                 	db	0
   146                           
   147                           ; #config settings
   148  00082D  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	cinit
   151  001CDE                     __pcinit:
   152                           	opt callstack 0
   153  001CDE                     start_initialization:
   154                           	opt callstack 0
   155  001CDE                     __initialization:
   156                           	opt callstack 0
   157                           
   158                           ; Clear objects allocated to BANK0 (40 bytes)
   159  001CDE  EE00  F08E         	lfsr	0,__pbssBANK0
   160  001CE2  0E28               	movlw	40
   161  001CE4                     clear_0:
   162  001CE4  6AEE               	clrf	postinc0,c
   163  001CE6  06E8               	decf	wreg,f,c
   164  001CE8  E1FD               	bnz	clear_0
   165  001CEA                     end_of_initialization:
   166                           	opt callstack 0
   167  001CEA                     __end_of__initialization:
   168                           	opt callstack 0
   169  001CEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  001CEC  6EF8               	movwf	tblptru,c
   171  001CEE  0100               	movlb	0
   172  001CF0  EFAE  F00C         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssBANK0
   175  00008E                     __pbssBANK0:
   176                           	opt callstack 0
   177  00008E                     _nout:
   178                           	opt callstack 0
   179  00008E                     	ds	2
   180  000090                     _width:
   181                           	opt callstack 0
   182  000090                     	ds	2
   183  000092                     _prec:
   184                           	opt callstack 0
   185  000092                     	ds	2
   186  000094                     _flags:
   187                           	opt callstack 0
   188  000094                     	ds	2
   189  000096                     _dbuf:
   190                           	opt callstack 0
   191  000096                     	ds	32
   192                           
   193                           	psect	cstackBANK0
   194  000060                     __pcstackBANK0:
   195                           	opt callstack 0
   196  000060                     	ds	2
   197  000062                     sprintf@ap:
   198                           	opt callstack 0
   199                           
   200                           ; 2 bytes @ 0x2
   201  000062                     	ds	2
   202  000064                     sprintf@f:
   203                           	opt callstack 0
   204                           
   205                           ; 6 bytes @ 0x4
   206  000064                     	ds	6
   207  00006A                     ??_main:
   208                           
   209                           ; 1 bytes @ 0xA
   210  00006A                     	ds	2
   211  00006C                     main@buffer:
   212                           	opt callstack 0
   213                           
   214                           ; 30 bytes @ 0xC
   215  00006C                     	ds	30
   216  00008A                     main@luzMedida:
   217                           	opt callstack 0
   218                           
   219                           ; 4 bytes @ 0x2A
   220  00008A                     	ds	4
   221                           
   222                           	psect	cstackCOMRAM
   223  000001                     __pcstackCOMRAM:
   224                           	opt callstack 0
   225  000001                     ??_i2c_espera:
   226  000001                     ?_strlen:
   227                           	opt callstack 0
   228  000001                     ?___aldiv:
   229                           	opt callstack 0
   230  000001                     ?___xxtofl:
   231                           	opt callstack 0
   232  000001                     ?___aodiv:
   233                           	opt callstack 0
   234  000001                     ?___aomod:
   235                           	opt callstack 0
   236  000001                     UART_write@dato:
   237                           	opt callstack 0
   238  000001                     fputc@c:
   239                           	opt callstack 0
   240  000001                     strlen@s:
   241                           	opt callstack 0
   242  000001                     ___aldiv@dividend:
   243                           	opt callstack 0
   244  000001                     ___xxtofl@val:
   245                           	opt callstack 0
   246  000001                     ___aodiv@dividend:
   247                           	opt callstack 0
   248  000001                     ___aomod@dividend:
   249                           	opt callstack 0
   250                           
   251                           ; 8 bytes @ 0x0
   252  000001                     	ds	1
   253  000002                     i2c_envia_dato@dato:
   254                           	opt callstack 0
   255  000002                     i2c_recibe_datoACK@a:
   256                           	opt callstack 0
   257  000002                     UART_printf@cadena:
   258                           	opt callstack 0
   259                           
   260                           ; 2 bytes @ 0x1
   261  000002                     	ds	1
   262  000003                     i2c_recibe_datoACK@datoleido:
   263                           	opt callstack 0
   264  000003                     BH1750_write@cmd:
   265                           	opt callstack 0
   266  000003                     fputc@fp:
   267                           	opt callstack 0
   268  000003                     strlen@a:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x2
   272  000003                     	ds	1
   273  000004                     ??_BH1750_init:
   274                           
   275                           ; 1 bytes @ 0x3
   276  000004                     	ds	1
   277  000005                     ??_fputc:
   278  000005                     ??___xxtofl:
   279  000005                     ___aldiv@divisor:
   280                           	opt callstack 0
   281                           
   282                           ; 4 bytes @ 0x4
   283  000005                     	ds	4
   284  000009                     ___aldiv@counter:
   285                           	opt callstack 0
   286  000009                     ___xxtofl@sign:
   287                           	opt callstack 0
   288  000009                     ___aodiv@divisor:
   289                           	opt callstack 0
   290  000009                     ___aomod@divisor:
   291                           	opt callstack 0
   292                           
   293                           ; 8 bytes @ 0x8
   294  000009                     	ds	1
   295  00000A                     ___aldiv@sign:
   296                           	opt callstack 0
   297  00000A                     ___xxtofl@exp:
   298                           	opt callstack 0
   299  00000A                     fputs@s:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x9
   303  00000A                     	ds	1
   304  00000B                     ___aldiv@quotient:
   305                           	opt callstack 0
   306  00000B                     ___xxtofl@arg:
   307                           	opt callstack 0
   308                           
   309                           ; 4 bytes @ 0xA
   310  00000B                     	ds	1
   311  00000C                     fputs@fp:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0xB
   315  00000C                     	ds	2
   316  00000E                     fputs@c:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0xD
   320  00000E                     	ds	1
   321  00000F                     ?___fldiv:
   322                           	opt callstack 0
   323  00000F                     fputs@i:
   324                           	opt callstack 0
   325  00000F                     UART_init@BAUD:
   326                           	opt callstack 0
   327  00000F                     ___fldiv@b:
   328                           	opt callstack 0
   329                           
   330                           ; 4 bytes @ 0xE
   331  00000F                     	ds	2
   332  000011                     ?_pad:
   333                           	opt callstack 0
   334  000011                     ___aodiv@counter:
   335                           	opt callstack 0
   336  000011                     ___aomod@counter:
   337                           	opt callstack 0
   338  000011                     pad@fp:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x10
   342  000011                     	ds	1
   343  000012                     ___aodiv@sign:
   344                           	opt callstack 0
   345  000012                     ___aomod@sign:
   346                           	opt callstack 0
   347                           
   348                           ; 1 bytes @ 0x11
   349  000012                     	ds	1
   350  000013                     ?_abs:
   351                           	opt callstack 0
   352  000013                     pad@buf:
   353                           	opt callstack 0
   354  000013                     abs@a:
   355                           	opt callstack 0
   356  000013                     ___fldiv@a:
   357                           	opt callstack 0
   358  000013                     ___aodiv@quotient:
   359                           	opt callstack 0
   360                           
   361                           ; 8 bytes @ 0x12
   362  000013                     	ds	2
   363  000015                     ??_abs:
   364  000015                     pad@p:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x14
   368  000015                     	ds	2
   369  000017                     ??___fldiv:
   370  000017                     ??_pad:
   371  000017                     _UART_init$1077:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x16
   375  000017                     	ds	1
   376  000018                     pad@i:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0x17
   380  000018                     	ds	2
   381  00001A                     pad@w:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x19
   385  00001A                     	ds	1
   386  00001B                     ___fldiv@rem:
   387                           	opt callstack 0
   388                           
   389                           ; 4 bytes @ 0x1A
   390  00001B                     	ds	1
   391  00001C                     ?_dtoa:
   392                           	opt callstack 0
   393  00001C                     dtoa@fp:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x1B
   397  00001C                     	ds	2
   398  00001E                     dtoa@d:
   399                           	opt callstack 0
   400                           
   401                           ; 8 bytes @ 0x1D
   402  00001E                     	ds	1
   403  00001F                     ___fldiv@sign:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x1E
   407  00001F                     	ds	1
   408  000020                     ___fldiv@new_exp:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x1F
   412  000020                     	ds	2
   413  000022                     ___fldiv@grs:
   414                           	opt callstack 0
   415                           
   416                           ; 4 bytes @ 0x21
   417  000022                     	ds	4
   418  000026                     ??_dtoa:
   419  000026                     ___fldiv@bexp:
   420                           	opt callstack 0
   421                           
   422                           ; 1 bytes @ 0x25
   423  000026                     	ds	1
   424  000027                     ___fldiv@aexp:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0x26
   428  000027                     	ds	1
   429  000028                     ?___fltol:
   430                           	opt callstack 0
   431  000028                     ___fltol@f1:
   432                           	opt callstack 0
   433                           
   434                           ; 4 bytes @ 0x27
   435  000028                     	ds	4
   436  00002C                     ??___fltol:
   437                           
   438                           ; 1 bytes @ 0x2B
   439  00002C                     	ds	2
   440  00002E                     _dtoa$354:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x2D
   444  00002E                     	ds	2
   445  000030                     ___fltol@sign1:
   446                           	opt callstack 0
   447  000030                     dtoa@p:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x2F
   451  000030                     	ds	1
   452  000031                     ___fltol@exp1:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x30
   456  000031                     	ds	1
   457  000032                     ?_BH1750_read_word:
   458                           	opt callstack 0
   459  000032                     dtoa@w:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x31
   463  000032                     	ds	2
   464  000034                     dtoa@s:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x33
   468  000034                     	ds	2
   469  000036                     ??_BH1750_read_word:
   470  000036                     dtoa@n:
   471                           	opt callstack 0
   472                           
   473                           ; 8 bytes @ 0x35
   474  000036                     	ds	2
   475  000038                     BH1750_read_word@lb:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0x37
   479  000038                     	ds	1
   480  000039                     BH1750_read_word@hb:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x38
   484  000039                     	ds	1
   485  00003A                     BH1750_read_word@value:
   486                           	opt callstack 0
   487                           
   488                           ; 4 bytes @ 0x39
   489  00003A                     	ds	4
   490  00003E                     ?_get_lux_value:
   491                           	opt callstack 0
   492  00003E                     dtoa@i:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x3D
   496  00003E                     	ds	2
   497  000040                     ?_vfpfcnvrt:
   498                           	opt callstack 0
   499  000040                     vfpfcnvrt@fp:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x3F
   503  000040                     	ds	2
   504  000042                     ??_get_lux_value:
   505  000042                     vfpfcnvrt@fmt:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x41
   509  000042                     	ds	1
   510  000043                     get_lux_value@mode:
   511                           	opt callstack 0
   512                           
   513                           ; 1 bytes @ 0x42
   514  000043                     	ds	1
   515  000044                     vfpfcnvrt@ap:
   516                           	opt callstack 0
   517  000044                     get_lux_value@lux_value:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0x43
   521  000044                     	ds	2
   522  000046                     ??_vfpfcnvrt:
   523                           
   524                           ; 1 bytes @ 0x45
   525  000046                     	ds	2
   526  000048                     vfpfcnvrt@ll:
   527                           	opt callstack 0
   528                           
   529                           ; 8 bytes @ 0x47
   530  000048                     	ds	8
   531  000050                     ?_vfprintf:
   532                           	opt callstack 0
   533  000050                     vfprintf@fp:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x4F
   537  000050                     	ds	2
   538  000052                     vfprintf@fmt:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x51
   542  000052                     	ds	2
   543  000054                     vfprintf@ap:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x53
   547  000054                     	ds	2
   548  000056                     vfprintf@cfmt:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x55
   552  000056                     	ds	2
   553  000058                     ?_sprintf:
   554                           	opt callstack 0
   555  000058                     sprintf@s:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x57
   559  000058                     	ds	2
   560  00005A                     sprintf@fmt:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x59
   564  00005A                     	ds	6
   565  000060                     
   566                           ; 1 bytes @ 0x5F
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 10 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  buffer         30   12[BANK0 ] unsigned char [30]
   577 ;;  luzMedida       4   42[BANK0 ] unsigned long 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   587 ;;      Params:         0       0       0       0       0       0       0       0       0
   588 ;;      Locals:         0      34       0       0       0       0       0       0       0
   589 ;;      Temps:          0       2       0       0       0       0       0       0       0
   590 ;;      Totals:         0      36       0       0       0       0       0       0       0
   591 ;;Total ram usage:       36 bytes
   592 ;; Hardware stack levels required when called:    8
   593 ;; This function calls:
   594 ;;		_BH1750_init
   595 ;;		_UART_init
   596 ;;		_UART_printf
   597 ;;		_get_lux_value
   598 ;;		_i2c_iniciar
   599 ;;		_sprintf
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text0
   606  00195C                     __ptext0:
   607                           	opt callstack 0
   608  00195C                     _main:
   609                           	opt callstack 23
   610  00195C                     
   611                           ;main.c: 13:     T_BYTE buffer[30];;main.c: 15:     UART_init(9600);
   612  00195C  0E80               	movlw	128
   613  00195E  6E0F               	movwf	UART_init@BAUD^0,c
   614  001960  0E25               	movlw	37
   615  001962  6E10               	movwf	(UART_init@BAUD+1)^0,c
   616  001964  0E00               	movlw	0
   617  001966  6E11               	movwf	(UART_init@BAUD+2)^0,c
   618  001968  0E00               	movlw	0
   619  00196A  6E12               	movwf	(UART_init@BAUD+3)^0,c
   620  00196C  ECF6  F00C         	call	_UART_init	;wreg free
   621  001970                     
   622                           ;main.c: 16:     UART_printf("\r\nSistema Iniciado\n\r");
   623  001970  0E18               	movlw	low STR_1
   624  001972  6E02               	movwf	UART_printf@cadena^0,c
   625  001974  0E08               	movlw	high STR_1
   626  001976  6E03               	movwf	(UART_printf@cadena+1)^0,c
   627  001978  EC5F  F00D         	call	_UART_printf	;wreg free
   628  00197C                     
   629                           ;main.c: 17:     i2c_iniciar();
   630  00197C  EC7A  F00E         	call	_i2c_iniciar	;wreg free
   631  001980                     
   632                           ;main.c: 18:     BH1750_init();
   633  001980  EC90  F00E         	call	_BH1750_init	;wreg free
   634  001984                     l2267:
   635                           
   636                           ;main.c: 21:     {;main.c: 22:         luzMedida = get_lux_value(0x10);
   637  001984  0E10               	movlw	16
   638  001986  ECB7  F00D         	call	_get_lux_value
   639  00198A  C03E  F08A         	movff	?_get_lux_value,main@luzMedida
   640  00198E  C03F  F08B         	movff	?_get_lux_value+1,main@luzMedida+1
   641  001992  C040  F08C         	movff	?_get_lux_value+2,main@luzMedida+2
   642  001996  C041  F08D         	movff	?_get_lux_value+3,main@luzMedida+3
   643  00199A                     
   644                           ;main.c: 23:         sprintf(buffer, "\rLuz medida: %d luxs\n\r",luzMedida);
   645  00199A  0E6C               	movlw	low main@buffer
   646  00199C  6E58               	movwf	sprintf@s^0,c
   647  00199E  0E00               	movlw	high main@buffer
   648  0019A0  6E59               	movwf	(sprintf@s+1)^0,c
   649  0019A2  0E01               	movlw	low STR_2
   650  0019A4  6E5A               	movwf	sprintf@fmt^0,c
   651  0019A6  0E08               	movlw	high STR_2
   652  0019A8  6E5B               	movwf	(sprintf@fmt+1)^0,c
   653  0019AA  C08A  F05C         	movff	main@luzMedida,?_sprintf+4
   654  0019AE  C08B  F05D         	movff	main@luzMedida+1,?_sprintf+5
   655  0019B2  C08C  F05E         	movff	main@luzMedida+2,?_sprintf+6
   656  0019B6  C08D  F05F         	movff	main@luzMedida+3,?_sprintf+7
   657  0019BA  EC8E  F00D         	call	_sprintf	;wreg free
   658  0019BE                     
   659                           ;main.c: 24:         UART_printf(buffer);
   660  0019BE  0E6C               	movlw	low main@buffer
   661  0019C0  6E02               	movwf	UART_printf@cadena^0,c
   662  0019C2  0E00               	movlw	high main@buffer
   663  0019C4  6E03               	movwf	(UART_printf@cadena+1)^0,c
   664  0019C6  EC5F  F00D         	call	_UART_printf	;wreg free
   665  0019CA                     
   666                           ;main.c: 25:         _delay((unsigned long)((500)*(4000000/4000.0)));
   667  0019CA  0E03               	movlw	3
   668  0019CC  0100               	movlb	0	; () banked
   669  0019CE  6F6B               	movwf	(??_main+1)& (0+255),b
   670  0019D0  0E8A               	movlw	138
   671  0019D2  6F6A               	movwf	??_main& (0+255),b
   672  0019D4  0E55               	movlw	85
   673  0019D6                     u1987:
   674  0019D6  2EE8               	decfsz	wreg,f,c
   675  0019D8  D7FE               	bra	u1987
   676  0019DA  2F6A               	decfsz	??_main& (0+255),f,b
   677  0019DC  D7FC               	bra	u1987
   678  0019DE  2F6B               	decfsz	(??_main+1)& (0+255),f,b
   679  0019E0  D7FA               	bra	u1987
   680  0019E2  D000               	nop2	
   681  0019E4  EFC2  F00C         	goto	l2267
   682  0019E8  EF00  F000         	goto	start
   683  0019EC                     __end_of_main:
   684                           	opt callstack 0
   685                           
   686 ;; *************** function _sprintf *****************
   687 ;; Defined at:
   688 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  s               2   87[COMRAM] PTR unsigned char 
   691 ;;		 -> main@buffer(30), 
   692 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   693 ;;		 -> STR_2(23), 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  f               6    4[BANK0 ] struct _IO_FILE
   696 ;;  ap              2    2[BANK0 ] PTR void [1]
   697 ;;		 -> ?_sprintf(2), 
   698 ;;  ret             2    0        int 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  2   87[COMRAM] int 
   701 ;; Registers used:
   702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   708 ;;      Params:         8       0       0       0       0       0       0       0       0
   709 ;;      Locals:         0      10       0       0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0
   711 ;;      Totals:         8      10       0       0       0       0       0       0       0
   712 ;;Total ram usage:       18 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    7
   715 ;; This function calls:
   716 ;;		_vfprintf
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text1
   723  001B1C                     __ptext1:
   724                           	opt callstack 0
   725  001B1C                     _sprintf:
   726                           	opt callstack 23
   727  001B1C  0E5C               	movlw	low (?_sprintf+4)
   728  001B1E  0100               	movlb	0	; () banked
   729  001B20  6F62               	movwf	sprintf@ap& (0+255),b
   730  001B22  0E00               	movlw	high (?_sprintf+4)
   731  001B24  6F63               	movwf	(sprintf@ap+1)& (0+255),b
   732  001B26  C058  F064         	movff	sprintf@s,sprintf@f
   733  001B2A  C059  F065         	movff	sprintf@s+1,sprintf@f+1
   734  001B2E                     
   735                           ; BSR set to: 0
   736  001B2E  0E00               	movlw	0
   737  001B30  6F67               	movwf	(sprintf@f+3)& (0+255),b
   738  001B32  0E00               	movlw	0
   739  001B34  6F66               	movwf	(sprintf@f+2)& (0+255),b
   740  001B36                     
   741                           ; BSR set to: 0
   742  001B36  0E00               	movlw	0
   743  001B38  6F69               	movwf	(sprintf@f+5)& (0+255),b
   744  001B3A  0E00               	movlw	0
   745  001B3C  6F68               	movwf	(sprintf@f+4)& (0+255),b
   746  001B3E                     
   747                           ; BSR set to: 0
   748  001B3E  0E64               	movlw	low sprintf@f
   749  001B40  6E50               	movwf	vfprintf@fp^0,c
   750  001B42  0E00               	movlw	high sprintf@f
   751  001B44  6E51               	movwf	(vfprintf@fp+1)^0,c
   752  001B46  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   753  001B4A  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   754  001B4E  0E62               	movlw	low sprintf@ap
   755  001B50  6E54               	movwf	vfprintf@ap^0,c
   756  001B52  0E00               	movlw	high sprintf@ap
   757  001B54  6E55               	movwf	(vfprintf@ap+1)^0,c
   758  001B56  EC2E  F00D         	call	_vfprintf	;wreg free
   759  001B5A  0100               	movlb	0	; () banked
   760  001B5C  5166               	movf	(sprintf@f+2)& (0+255),w,b
   761  001B5E  2458               	addwf	sprintf@s^0,w,c
   762  001B60  6ED9               	movwf	fsr2l,c
   763  001B62  5167               	movf	(sprintf@f+3)& (0+255),w,b
   764  001B64  2059               	addwfc	(sprintf@s+1)^0,w,c
   765  001B66  6EDA               	movwf	fsr2h,c
   766  001B68  0E00               	movlw	0
   767  001B6A  6EDF               	movwf	indf2,c
   768  001B6C                     
   769                           ; BSR set to: 0
   770  001B6C  0012               	return		;funcret
   771  001B6E                     __end_of_sprintf:
   772                           	opt callstack 0
   773                           
   774 ;; *************** function _vfprintf *****************
   775 ;; Defined at:
   776 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   779 ;;		 -> sprintf@f(6), 
   780 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   781 ;;		 -> STR_2(23), 
   782 ;;  ap              2   83[COMRAM] PTR PTR void 
   783 ;;		 -> sprintf@ap(2), 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   786 ;;		 -> STR_2(23), 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2   79[COMRAM] int 
   789 ;; Registers used:
   790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         6       0       0       0       0       0       0       0       0
   797 ;;      Locals:         2       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         8       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        8 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    6
   803 ;; This function calls:
   804 ;;		_vfpfcnvrt
   805 ;; This function is called by:
   806 ;;		_sprintf
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text2
   811  001A5C                     __ptext2:
   812                           	opt callstack 0
   813  001A5C                     _vfprintf:
   814                           	opt callstack 23
   815  001A5C                     
   816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   817  001A5C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   818  001A60  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   819  001A64                     
   820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   821  001A64  0E00               	movlw	0
   822  001A66  0100               	movlb	0	; () banked
   823  001A68  6F8F               	movwf	(_nout+1)& (0+255),b
   824  001A6A  0E00               	movlw	0
   825  001A6C  6F8E               	movwf	_nout& (0+255),b
   826                           
   827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   828  001A6E  EF4C  F00D         	goto	l2127
   829  001A72                     l2125:
   830                           
   831                           ; BSR set to: 0
   832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   833  001A72  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   834  001A76  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   835  001A7A  0E56               	movlw	low vfprintf@cfmt
   836  001A7C  6E42               	movwf	vfpfcnvrt@fmt^0,c
   837  001A7E  0E00               	movlw	high vfprintf@cfmt
   838  001A80  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   839  001A82  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   840  001A86  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   841  001A8A  EC55  F007         	call	_vfpfcnvrt	;wreg free
   842  001A8E  5040               	movf	?_vfpfcnvrt^0,w,c
   843  001A90  0100               	movlb	0	; () banked
   844  001A92  278E               	addwf	_nout& (0+255),f,b
   845  001A94  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   846  001A96  238F               	addwfc	(_nout+1)& (0+255),f,b
   847  001A98                     l2127:
   848                           
   849                           ; BSR set to: 0
   850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   851  001A98  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   852  001A9C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   853  001AA0                     	if	0	;tblptru may be non-zero
   854  001AA0                     	endif
   855  001AA0                     	if	0	;tblptru may be non-zero
   856  001AA0                     	endif
   857  001AA0  0008               	tblrd		*
   858  001AA2  50F5               	movf	tablat,w,c
   859  001AA4  0900               	iorlw	0
   860  001AA6  A4D8               	btfss	status,2,c
   861  001AA8  EF58  F00D         	goto	u1881
   862  001AAC  EF5A  F00D         	goto	u1880
   863  001AB0                     u1881:
   864  001AB0  EF39  F00D         	goto	l2125
   865  001AB4                     u1880:
   866  001AB4                     
   867                           ; BSR set to: 0
   868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   869  001AB4  C08E  F050         	movff	_nout,?_vfprintf
   870  001AB8  C08F  F051         	movff	_nout+1,?_vfprintf+1
   871  001ABC                     
   872                           ; BSR set to: 0
   873  001ABC  0012               	return		;funcret
   874  001ABE                     __end_of_vfprintf:
   875                           	opt callstack 0
   876                           
   877 ;; *************** function _vfpfcnvrt *****************
   878 ;; Defined at:
   879 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   882 ;;		 -> sprintf@f(6), 
   883 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   884 ;;		 -> vfprintf@cfmt(2), 
   885 ;;  ap              2   67[COMRAM] PTR PTR void 
   886 ;;		 -> sprintf@ap(2), 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  ll              8   71[COMRAM] long long 
   889 ;;  llu             8    0        unsigned long long 
   890 ;;  f               4    0        unsigned long long 
   891 ;;  vp              3    0        PTR void 
   892 ;;  ct              3    0        unsigned char [3]
   893 ;;  cp              3    0        PTR unsigned char 
   894 ;;  i               2    0        int 
   895 ;;  done            2    0        int 
   896 ;;  c               1    0        unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  2   63[COMRAM] int 
   899 ;; Registers used:
   900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   906 ;;      Params:         6       0       0       0       0       0       0       0       0
   907 ;;      Locals:         8       0       0       0       0       0       0       0       0
   908 ;;      Temps:          2       0       0       0       0       0       0       0       0
   909 ;;      Totals:        16       0       0       0       0       0       0       0       0
   910 ;;Total ram usage:       16 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    5
   913 ;; This function calls:
   914 ;;		_dtoa
   915 ;;		_fputc
   916 ;; This function is called by:
   917 ;;		_vfprintf
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text3
   922  000EAA                     __ptext3:
   923                           	opt callstack 0
   924  000EAA                     _vfpfcnvrt:
   925                           	opt callstack 23
   926  000EAA                     
   927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   928  000EAA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   929  000EAE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   930  000EB2  CFDE FFF6          	movff	postinc2,tblptrl
   931  000EB6  CFDD FFF7          	movff	postdec2,tblptrh
   932  000EBA                     	if	0	;tblptru may be non-zero
   933  000EBA                     	endif
   934  000EBA                     	if	0	;tblptru may be non-zero
   935  000EBA                     	endif
   936  000EBA  0008               	tblrd		*
   937  000EBC  50F5               	movf	tablat,w,c
   938  000EBE  0A25               	xorlw	37
   939  000EC0  A4D8               	btfss	status,2,c
   940  000EC2  EF65  F007         	goto	u1431
   941  000EC6  EF67  F007         	goto	u1430
   942  000ECA                     u1431:
   943  000ECA  EF13  F008         	goto	l1861
   944  000ECE                     u1430:
   945  000ECE                     
   946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   947  000ECE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   948  000ED2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   949  000ED6  2ADE               	incf	postinc2,f,c
   950  000ED8  0E00               	movlw	0
   951  000EDA  22DD               	addwfc	postdec2,f,c
   952  000EDC                     
   953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   954  000EDC  0E00               	movlw	0
   955  000EDE  0100               	movlb	0	; () banked
   956  000EE0  6F91               	movwf	(_width+1)& (0+255),b
   957  000EE2  0E00               	movlw	0
   958  000EE4  6F90               	movwf	_width& (0+255),b
   959  000EE6  C090  F094         	movff	_width,_flags
   960  000EEA  C091  F095         	movff	_width+1,_flags+1
   961  000EEE                     
   962                           ; BSR set to: 0
   963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   964  000EEE  6992               	setf	_prec& (0+255),b
   965  000EF0  6993               	setf	(_prec+1)& (0+255),b
   966  000EF2                     
   967                           ; BSR set to: 0
   968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   969  000EF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   970  000EF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   971  000EFA  CFDE FFF6          	movff	postinc2,tblptrl
   972  000EFE  CFDD FFF7          	movff	postdec2,tblptrh
   973  000F02                     	if	0	;tblptru may be non-zero
   974  000F02                     	endif
   975  000F02                     	if	0	;tblptru may be non-zero
   976  000F02                     	endif
   977  000F02  0008               	tblrd		*
   978  000F04  50F5               	movf	tablat,w,c
   979  000F06  0A64               	xorlw	100
   980  000F08  B4D8               	btfsc	status,2,c
   981  000F0A  EF89  F007         	goto	u1441
   982  000F0E  EF8B  F007         	goto	u1440
   983  000F12                     u1441:
   984  000F12  EF9D  F007         	goto	l1839
   985  000F16                     u1440:
   986  000F16                     
   987                           ; BSR set to: 0
   988  000F16  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   989  000F1A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   990  000F1E  CFDE FFF6          	movff	postinc2,tblptrl
   991  000F22  CFDD FFF7          	movff	postdec2,tblptrh
   992  000F26                     	if	0	;tblptru may be non-zero
   993  000F26                     	endif
   994  000F26                     	if	0	;tblptru may be non-zero
   995  000F26                     	endif
   996  000F26  0008               	tblrd		*
   997  000F28  50F5               	movf	tablat,w,c
   998  000F2A  0A69               	xorlw	105
   999  000F2C  A4D8               	btfss	status,2,c
  1000  000F2E  EF9B  F007         	goto	u1451
  1001  000F32  EF9D  F007         	goto	u1450
  1002  000F36                     u1451:
  1003  000F36  EFDD  F007         	goto	l1845
  1004  000F3A                     u1450:
  1005  000F3A                     l1839:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1009  000F3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1010  000F3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1011  000F42  2ADE               	incf	postinc2,f,c
  1012  000F44  0E00               	movlw	0
  1013  000F46  22DD               	addwfc	postdec2,f,c
  1014                           
  1015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1016  000F48  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1017  000F4C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1018  000F50  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1019  000F54  0E02               	movlw	2
  1020  000F56  26DE               	addwf	postinc2,f,c
  1021  000F58  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1022  000F5C  0E00               	movlw	0
  1023  000F5E  22DD               	addwfc	postdec2,f,c
  1024  000F60  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1025  000F64  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1026  000F68  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1027  000F6C  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1028  000F70  0E00               	movlw	0
  1029  000F72  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1030  000F74  0EFF               	movlw	-1
  1031  000F76  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1032  000F78  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1033  000F7A  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1034  000F7C  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1035  000F7E  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1036  000F80  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1037  000F82                     
  1038                           ; BSR set to: 0
  1039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1040  000F82  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1041  000F86  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1042  000F8A  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1043  000F8E  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1044  000F92  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1045  000F96  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1046  000F9A  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1047  000F9E  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1048  000FA2  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1049  000FA6  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1050  000FAA  ECE4  F005         	call	_dtoa	;wreg free
  1051  000FAE  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1052  000FB2  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1053  000FB6  EF2E  F008         	goto	l175
  1054  000FBA                     l1845:
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1058  000FBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1059  000FBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1060  000FC2  CFDE FFF6          	movff	postinc2,tblptrl
  1061  000FC6  CFDD FFF7          	movff	postdec2,tblptrh
  1062  000FCA                     	if	0	;tblptru may be non-zero
  1063  000FCA                     	endif
  1064  000FCA                     	if	0	;tblptru may be non-zero
  1065  000FCA                     	endif
  1066  000FCA  0008               	tblrd		*
  1067  000FCC  50F5               	movf	tablat,w,c
  1068  000FCE  0A25               	xorlw	37
  1069  000FD0  A4D8               	btfss	status,2,c
  1070  000FD2  EFED  F007         	goto	u1461
  1071  000FD6  EFEF  F007         	goto	u1460
  1072  000FDA                     u1461:
  1073  000FDA  EF06  F008         	goto	l1855
  1074  000FDE                     u1460:
  1075  000FDE                     
  1076                           ; BSR set to: 0
  1077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1078  000FDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1079  000FE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1080  000FE6  2ADE               	incf	postinc2,f,c
  1081  000FE8  0E00               	movlw	0
  1082  000FEA  22DD               	addwfc	postdec2,f,c
  1083  000FEC                     
  1084                           ; BSR set to: 0
  1085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1086  000FEC  0E00               	movlw	0
  1087  000FEE  6E02               	movwf	(fputc@c+1)^0,c
  1088  000FF0  0E25               	movlw	37
  1089  000FF2  6E01               	movwf	fputc@c^0,c
  1090  000FF4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1091  000FF8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1092  000FFC  EC88  F00B         	call	_fputc	;wreg free
  1093  001000                     l1851:
  1094                           
  1095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1096  001000  0E00               	movlw	0
  1097  001002  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1098  001004  0E01               	movlw	1
  1099  001006  6E40               	movwf	?_vfpfcnvrt^0,c
  1100  001008  EF2E  F008         	goto	l175
  1101  00100C                     l1855:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1105  00100C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1106  001010  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1107  001014  2ADE               	incf	postinc2,f,c
  1108  001016  0E00               	movlw	0
  1109  001018  22DD               	addwfc	postdec2,f,c
  1110  00101A                     
  1111                           ; BSR set to: 0
  1112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1113  00101A  0E00               	movlw	0
  1114  00101C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1115  00101E  0E00               	movlw	0
  1116  001020  6E40               	movwf	?_vfpfcnvrt^0,c
  1117  001022  EF2E  F008         	goto	l175
  1118  001026                     l1861:
  1119                           
  1120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1121  001026  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1122  00102A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1123  00102E  CFDE FFF6          	movff	postinc2,tblptrl
  1124  001032  CFDD FFF7          	movff	postdec2,tblptrh
  1125  001036                     	if	0	;tblptru may be non-zero
  1126  001036                     	endif
  1127  001036                     	if	0	;tblptru may be non-zero
  1128  001036                     	endif
  1129  001036  0008               	tblrd		*
  1130  001038  50F5               	movf	tablat,w,c
  1131  00103A  6E01               	movwf	fputc@c^0,c
  1132  00103C  6A02               	clrf	(fputc@c+1)^0,c
  1133  00103E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1134  001042  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1135  001046  EC88  F00B         	call	_fputc	;wreg free
  1136  00104A                     
  1137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1138  00104A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1139  00104E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1140  001052  2ADE               	incf	postinc2,f,c
  1141  001054  0E00               	movlw	0
  1142  001056  22DD               	addwfc	postdec2,f,c
  1143  001058  EF00  F008         	goto	l1851
  1144  00105C                     l175:
  1145  00105C  0012               	return		;funcret
  1146  00105E                     __end_of_vfpfcnvrt:
  1147                           	opt callstack 0
  1148                           
  1149 ;; *************** function _dtoa *****************
  1150 ;; Defined at:
  1151 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1154 ;;		 -> sprintf@f(6), 
  1155 ;;  d               8   29[COMRAM] long long 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  n               8   53[COMRAM] long long 
  1158 ;;  i               2   61[COMRAM] int 
  1159 ;;  s               2   51[COMRAM] int 
  1160 ;;  w               2   49[COMRAM] int 
  1161 ;;  p               2   47[COMRAM] int 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  2   27[COMRAM] int 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1171 ;;      Params:        10       0       0       0       0       0       0       0       0
  1172 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1173 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1174 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1175 ;;Total ram usage:       36 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    4
  1178 ;; This function calls:
  1179 ;;		___aodiv
  1180 ;;		___aomod
  1181 ;;		_abs
  1182 ;;		_pad
  1183 ;; This function is called by:
  1184 ;;		_vfpfcnvrt
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text4
  1189  000BC8                     __ptext4:
  1190                           	opt callstack 0
  1191  000BC8                     _dtoa:
  1192                           	opt callstack 23
  1193  000BC8                     
  1194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1195  000BC8  C01E  F036         	movff	dtoa@d,dtoa@n
  1196  000BCC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1197  000BD0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1198  000BD4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1199  000BD8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1200  000BDC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1201  000BE0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1202  000BE4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1203  000BE8                     
  1204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1205  000BE8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1206  000BEA  EFF9  F005         	goto	u1261
  1207  000BEE  EFFC  F005         	goto	u1260
  1208  000BF2                     u1261:
  1209  000BF2  0E01               	movlw	1
  1210  000BF4  EFFD  F005         	goto	u1270
  1211  000BF8                     u1260:
  1212  000BF8  0E00               	movlw	0
  1213  000BFA                     u1270:
  1214  000BFA  6E34               	movwf	dtoa@s^0,c
  1215  000BFC  6A35               	clrf	(dtoa@s+1)^0,c
  1216                           
  1217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1218  000BFE  5034               	movf	dtoa@s^0,w,c
  1219  000C00  1035               	iorwf	(dtoa@s+1)^0,w,c
  1220  000C02  B4D8               	btfsc	status,2,c
  1221  000C04  EF06  F006         	goto	u1281
  1222  000C08  EF08  F006         	goto	u1280
  1223  000C0C                     u1281:
  1224  000C0C  EF18  F006         	goto	l1741
  1225  000C10                     u1280:
  1226  000C10                     
  1227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1228  000C10  1E3D               	comf	(dtoa@n+7)^0,f,c
  1229  000C12  1E3C               	comf	(dtoa@n+6)^0,f,c
  1230  000C14  1E3B               	comf	(dtoa@n+5)^0,f,c
  1231  000C16  1E3A               	comf	(dtoa@n+4)^0,f,c
  1232  000C18  1E39               	comf	(dtoa@n+3)^0,f,c
  1233  000C1A  1E38               	comf	(dtoa@n+2)^0,f,c
  1234  000C1C  1E37               	comf	(dtoa@n+1)^0,f,c
  1235  000C1E  6C36               	negf	dtoa@n^0,c
  1236  000C20  0E00               	movlw	0
  1237  000C22  2237               	addwfc	(dtoa@n+1)^0,f,c
  1238  000C24  2238               	addwfc	(dtoa@n+2)^0,f,c
  1239  000C26  2239               	addwfc	(dtoa@n+3)^0,f,c
  1240  000C28  223A               	addwfc	(dtoa@n+4)^0,f,c
  1241  000C2A  223B               	addwfc	(dtoa@n+5)^0,f,c
  1242  000C2C  223C               	addwfc	(dtoa@n+6)^0,f,c
  1243  000C2E  223D               	addwfc	(dtoa@n+7)^0,f,c
  1244  000C30                     l1741:
  1245                           
  1246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1247  000C30  0100               	movlb	0	; () banked
  1248  000C32  BF93               	btfsc	(_prec+1)& (0+255),7,b
  1249  000C34  EF1E  F006         	goto	u1291
  1250  000C38  EF20  F006         	goto	u1290
  1251  000C3C                     u1291:
  1252  000C3C  EF21  F006         	goto	l1745
  1253  000C40                     u1290:
  1254  000C40                     
  1255                           ; BSR set to: 0
  1256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1257  000C40  9394               	bcf	_flags& (0+255),1,b
  1258  000C42                     l1745:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1262  000C42  BF93               	btfsc	(_prec+1)& (0+255),7,b
  1263  000C44  EF2E  F006         	goto	u1300
  1264  000C48  5193               	movf	(_prec+1)& (0+255),w,b
  1265  000C4A  E106               	bnz	u1301
  1266  000C4C  0592               	decf	_prec& (0+255),w,b
  1267  000C4E  B0D8               	btfsc	status,0,c
  1268  000C50  EF2C  F006         	goto	u1301
  1269  000C54  EF2E  F006         	goto	u1300
  1270  000C58                     u1301:
  1271  000C58  EF34  F006         	goto	l148
  1272  000C5C                     u1300:
  1273  000C5C                     
  1274                           ; BSR set to: 0
  1275  000C5C  0E00               	movlw	0
  1276  000C5E  6E31               	movwf	(dtoa@p+1)^0,c
  1277  000C60  0E01               	movlw	1
  1278  000C62  6E30               	movwf	dtoa@p^0,c
  1279  000C64  EF38  F006         	goto	l150
  1280  000C68                     l148:
  1281                           
  1282                           ; BSR set to: 0
  1283  000C68  C092  F030         	movff	_prec,dtoa@p
  1284  000C6C  C093  F031         	movff	_prec+1,dtoa@p+1
  1285  000C70                     l150:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1289  000C70  C090  F032         	movff	_width,dtoa@w
  1290  000C74  C091  F033         	movff	_width+1,dtoa@w+1
  1291  000C78                     
  1292                           ; BSR set to: 0
  1293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1294  000C78  5034               	movf	dtoa@s^0,w,c
  1295  000C7A  1035               	iorwf	(dtoa@s+1)^0,w,c
  1296  000C7C  A4D8               	btfss	status,2,c
  1297  000C7E  EF43  F006         	goto	u1311
  1298  000C82  EF45  F006         	goto	u1310
  1299  000C86                     u1311:
  1300  000C86  EF4C  F006         	goto	l1753
  1301  000C8A                     u1310:
  1302  000C8A                     
  1303                           ; BSR set to: 0
  1304  000C8A  A594               	btfss	_flags& (0+255),2,b
  1305  000C8C  EF4A  F006         	goto	u1321
  1306  000C90  EF4C  F006         	goto	u1320
  1307  000C94                     u1321:
  1308  000C94  EF4F  F006         	goto	l1755
  1309  000C98                     u1320:
  1310  000C98                     l1753:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1314  000C98  0632               	decf	dtoa@w^0,f,c
  1315  000C9A  A0D8               	btfss	status,0,c
  1316  000C9C  0633               	decf	(dtoa@w+1)^0,f,c
  1317  000C9E                     l1755:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1321  000C9E  0E00               	movlw	0
  1322  000CA0  6E3F               	movwf	(dtoa@i+1)^0,c
  1323  000CA2  0E1F               	movlw	31
  1324  000CA4  6E3E               	movwf	dtoa@i^0,c
  1325  000CA6                     
  1326                           ; BSR set to: 0
  1327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1328  000CA6  0E00               	movlw	0
  1329  000CA8  6FB5               	movwf	(_dbuf+31)& (0+255),b
  1330                           
  1331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1332  000CAA  EFD3  F006         	goto	l1769
  1333  000CAE                     l1759:
  1334                           
  1335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1336  000CAE  063E               	decf	dtoa@i^0,f,c
  1337  000CB0  A0D8               	btfss	status,0,c
  1338  000CB2  063F               	decf	(dtoa@i+1)^0,f,c
  1339  000CB4                     
  1340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1341  000CB4  0E96               	movlw	low _dbuf
  1342  000CB6  243E               	addwf	dtoa@i^0,w,c
  1343  000CB8  6ED9               	movwf	fsr2l,c
  1344  000CBA  0E00               	movlw	high _dbuf
  1345  000CBC  203F               	addwfc	(dtoa@i+1)^0,w,c
  1346  000CBE  6EDA               	movwf	fsr2h,c
  1347  000CC0  C036  F001         	movff	dtoa@n,___aomod@dividend
  1348  000CC4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1349  000CC8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1350  000CCC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1351  000CD0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1352  000CD4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1353  000CD8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1354  000CDC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1355  000CE0  0E0A               	movlw	10
  1356  000CE2  6E09               	movwf	___aomod@divisor^0,c
  1357  000CE4  0E00               	movlw	0
  1358  000CE6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1359  000CE8  0E00               	movlw	0
  1360  000CEA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1361  000CEC  0E00               	movlw	0
  1362  000CEE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1363  000CF0  0E00               	movlw	0
  1364  000CF2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1365  000CF4  0E00               	movlw	0
  1366  000CF6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1367  000CF8  0E00               	movlw	0
  1368  000CFA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1369  000CFC  0E00               	movlw	0
  1370  000CFE  6E10               	movwf	(___aomod@divisor+7)^0,c
  1371  000D00  ECCD  F009         	call	___aomod	;wreg free
  1372  000D04  C001  F026         	movff	?___aomod,??_dtoa
  1373  000D08  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1374  000D0C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1375  000D10  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1376  000D14  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1377  000D18  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1378  000D1C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1379  000D20  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1380  000D24  C026  F013         	movff	??_dtoa,abs@a
  1381  000D28  C028  F014         	movff	??_dtoa+2,abs@a+1
  1382  000D2C  ECFE  F00D         	call	_abs	;wreg free
  1383  000D30  5013               	movf	?_abs^0,w,c
  1384  000D32  0F30               	addlw	48
  1385  000D34  6EDF               	movwf	indf2,c
  1386  000D36                     
  1387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1388  000D36  0630               	decf	dtoa@p^0,f,c
  1389  000D38  A0D8               	btfss	status,0,c
  1390  000D3A  0631               	decf	(dtoa@p+1)^0,f,c
  1391  000D3C                     
  1392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1393  000D3C  0632               	decf	dtoa@w^0,f,c
  1394  000D3E  A0D8               	btfss	status,0,c
  1395  000D40  0633               	decf	(dtoa@w+1)^0,f,c
  1396  000D42                     
  1397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1398  000D42  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1399  000D46  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1400  000D4A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1401  000D4E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1402  000D52  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1403  000D56  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1404  000D5A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1405  000D5E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1406  000D62  0E0A               	movlw	10
  1407  000D64  6E09               	movwf	___aodiv@divisor^0,c
  1408  000D66  0E00               	movlw	0
  1409  000D68  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1410  000D6A  0E00               	movlw	0
  1411  000D6C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1412  000D6E  0E00               	movlw	0
  1413  000D70  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1414  000D72  0E00               	movlw	0
  1415  000D74  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1416  000D76  0E00               	movlw	0
  1417  000D78  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1418  000D7A  0E00               	movlw	0
  1419  000D7C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1420  000D7E  0E00               	movlw	0
  1421  000D80  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1422  000D82  EC09  F009         	call	___aodiv	;wreg free
  1423  000D86  C001  F036         	movff	?___aodiv,dtoa@n
  1424  000D8A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1425  000D8E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1426  000D92  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1427  000D96  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1428  000D9A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1429  000D9E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1430  000DA2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1431  000DA6                     l1769:
  1432                           
  1433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1434  000DA6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1435  000DA8  EFDE  F006         	goto	u1331
  1436  000DAC  503F               	movf	(dtoa@i+1)^0,w,c
  1437  000DAE  E108               	bnz	u1330
  1438  000DB0  043E               	decf	dtoa@i^0,w,c
  1439  000DB2  A0D8               	btfss	status,0,c
  1440  000DB4  EFDE  F006         	goto	u1331
  1441  000DB8  EFE0  F006         	goto	u1330
  1442  000DBC                     u1331:
  1443  000DBC  EF11  F007         	goto	l1779
  1444  000DC0                     u1330:
  1445  000DC0  5036               	movf	dtoa@n^0,w,c
  1446  000DC2  1037               	iorwf	(dtoa@n+1)^0,w,c
  1447  000DC4  1038               	iorwf	(dtoa@n+2)^0,w,c
  1448  000DC6  1039               	iorwf	(dtoa@n+3)^0,w,c
  1449  000DC8  103A               	iorwf	(dtoa@n+4)^0,w,c
  1450  000DCA  103B               	iorwf	(dtoa@n+5)^0,w,c
  1451  000DCC  103C               	iorwf	(dtoa@n+6)^0,w,c
  1452  000DCE  103D               	iorwf	(dtoa@n+7)^0,w,c
  1453  000DD0  A4D8               	btfss	status,2,c
  1454  000DD2  EFED  F006         	goto	u1341
  1455  000DD6  EFEF  F006         	goto	u1340
  1456  000DDA                     u1341:
  1457  000DDA  EF57  F006         	goto	l1759
  1458  000DDE                     u1340:
  1459  000DDE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1460  000DE0  EFFC  F006         	goto	u1350
  1461  000DE4  5031               	movf	(dtoa@p+1)^0,w,c
  1462  000DE6  E106               	bnz	u1351
  1463  000DE8  0430               	decf	dtoa@p^0,w,c
  1464  000DEA  B0D8               	btfsc	status,0,c
  1465  000DEC  EFFA  F006         	goto	u1351
  1466  000DF0  EFFC  F006         	goto	u1350
  1467  000DF4                     u1351:
  1468  000DF4  EF57  F006         	goto	l1759
  1469  000DF8                     u1350:
  1470  000DF8  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1471  000DFA  EF07  F007         	goto	u1361
  1472  000DFE  5033               	movf	(dtoa@w+1)^0,w,c
  1473  000E00  E108               	bnz	u1360
  1474  000E02  0432               	decf	dtoa@w^0,w,c
  1475  000E04  A0D8               	btfss	status,0,c
  1476  000E06  EF07  F007         	goto	u1361
  1477  000E0A  EF09  F007         	goto	u1360
  1478  000E0E                     u1361:
  1479  000E0E  EF11  F007         	goto	l1779
  1480  000E12                     u1360:
  1481  000E12  0100               	movlb	0	; () banked
  1482  000E14  B394               	btfsc	_flags& (0+255),1,b
  1483  000E16  EF0F  F007         	goto	u1371
  1484  000E1A  EF11  F007         	goto	u1370
  1485  000E1E                     u1371:
  1486  000E1E  EF57  F006         	goto	l1759
  1487  000E22                     u1370:
  1488  000E22                     l1779:
  1489                           
  1490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1491  000E22  5034               	movf	dtoa@s^0,w,c
  1492  000E24  1035               	iorwf	(dtoa@s+1)^0,w,c
  1493  000E26  A4D8               	btfss	status,2,c
  1494  000E28  EF18  F007         	goto	u1381
  1495  000E2C  EF1A  F007         	goto	u1380
  1496  000E30                     u1381:
  1497  000E30  EF22  F007         	goto	l1783
  1498  000E34                     u1380:
  1499  000E34  0100               	movlb	0	; () banked
  1500  000E36  A594               	btfss	_flags& (0+255),2,b
  1501  000E38  EF20  F007         	goto	u1391
  1502  000E3C  EF22  F007         	goto	u1390
  1503  000E40                     u1391:
  1504  000E40  EF40  F007         	goto	l1793
  1505  000E44                     u1390:
  1506  000E44                     l1783:
  1507                           
  1508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1509  000E44  063E               	decf	dtoa@i^0,f,c
  1510  000E46  A0D8               	btfss	status,0,c
  1511  000E48  063F               	decf	(dtoa@i+1)^0,f,c
  1512  000E4A                     
  1513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1514  000E4A  5034               	movf	dtoa@s^0,w,c
  1515  000E4C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1516  000E4E  A4D8               	btfss	status,2,c
  1517  000E50  EF2C  F007         	goto	u1401
  1518  000E54  EF2E  F007         	goto	u1400
  1519  000E58                     u1401:
  1520  000E58  EF34  F007         	goto	l1789
  1521  000E5C                     u1400:
  1522  000E5C  0E00               	movlw	0
  1523  000E5E  6E2F               	movwf	(_dtoa$354+1)^0,c
  1524  000E60  0E2B               	movlw	43
  1525  000E62  6E2E               	movwf	_dtoa$354^0,c
  1526  000E64  EF38  F007         	goto	l1791
  1527  000E68                     l1789:
  1528  000E68  0E00               	movlw	0
  1529  000E6A  6E2F               	movwf	(_dtoa$354+1)^0,c
  1530  000E6C  0E2D               	movlw	45
  1531  000E6E  6E2E               	movwf	_dtoa$354^0,c
  1532  000E70                     l1791:
  1533  000E70  0E96               	movlw	low _dbuf
  1534  000E72  243E               	addwf	dtoa@i^0,w,c
  1535  000E74  6ED9               	movwf	fsr2l,c
  1536  000E76  0E00               	movlw	high _dbuf
  1537  000E78  203F               	addwfc	(dtoa@i+1)^0,w,c
  1538  000E7A  6EDA               	movwf	fsr2h,c
  1539  000E7C  C02E  FFDF         	movff	_dtoa$354,indf2
  1540  000E80                     l1793:
  1541                           
  1542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1543  000E80  C01C  F011         	movff	dtoa@fp,pad@fp
  1544  000E84  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1545  000E88  0E96               	movlw	low _dbuf
  1546  000E8A  243E               	addwf	dtoa@i^0,w,c
  1547  000E8C  6E13               	movwf	pad@buf^0,c
  1548  000E8E  0E00               	movlw	high _dbuf
  1549  000E90  203F               	addwfc	(dtoa@i+1)^0,w,c
  1550  000E92  6E14               	movwf	(pad@buf+1)^0,c
  1551  000E94  C032  F015         	movff	dtoa@w,pad@p
  1552  000E98  C033  F016         	movff	dtoa@w+1,pad@p+1
  1553  000E9C  ECED  F00B         	call	_pad	;wreg free
  1554  000EA0  C011  F01C         	movff	?_pad,?_dtoa
  1555  000EA4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1556  000EA8  0012               	return		;funcret
  1557  000EAA                     __end_of_dtoa:
  1558                           	opt callstack 0
  1559                           
  1560 ;; *************** function _pad *****************
  1561 ;; Defined at:
  1562 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1565 ;;		 -> sprintf@f(6), 
  1566 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1567 ;;		 -> dbuf(32), 
  1568 ;;  p               2   20[COMRAM] int 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  w               2   25[COMRAM] int 
  1571 ;;  i               2   23[COMRAM] int 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  2   16[COMRAM] int 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         6       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1584 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:       11 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    3
  1588 ;; This function calls:
  1589 ;;		_fputc
  1590 ;;		_fputs
  1591 ;;		_strlen
  1592 ;; This function is called by:
  1593 ;;		_dtoa
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text5
  1598  0017DA                     __ptext5:
  1599                           	opt callstack 0
  1600  0017DA                     _pad:
  1601                           	opt callstack 23
  1602  0017DA                     
  1603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1604  0017DA  0100               	movlb	0	; () banked
  1605  0017DC  A194               	btfss	_flags& (0+255),0,b
  1606  0017DE  EFF3  F00B         	goto	u1061
  1607  0017E2  EFF5  F00B         	goto	u1060
  1608  0017E6                     u1061:
  1609  0017E6  EFFF  F00B         	goto	l1627
  1610  0017EA                     u1060:
  1611  0017EA                     
  1612                           ; BSR set to: 0
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1614  0017EA  C013  F00A         	movff	pad@buf,fputs@s
  1615  0017EE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1616  0017F2  C011  F00C         	movff	pad@fp,fputs@fp
  1617  0017F6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1618  0017FA  ECDC  F00D         	call	_fputs	;wreg free
  1619  0017FE                     l1627:
  1620                           
  1621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1622  0017FE  BE16               	btfsc	(pad@p+1)^0,7,c
  1623  001800  EF04  F00C         	goto	u1071
  1624  001804  EF06  F00C         	goto	u1070
  1625  001808                     u1071:
  1626  001808  EF0C  F00C         	goto	l1631
  1627  00180C                     u1070:
  1628  00180C  C015  F01A         	movff	pad@p,pad@w
  1629  001810  C016  F01B         	movff	pad@p+1,pad@w+1
  1630  001814  EF10  F00C         	goto	l137
  1631  001818                     l1631:
  1632  001818  0E00               	movlw	0
  1633  00181A  6E1B               	movwf	(pad@w+1)^0,c
  1634  00181C  0E00               	movlw	0
  1635  00181E  6E1A               	movwf	pad@w^0,c
  1636  001820                     l137:
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1639  001820  0E00               	movlw	0
  1640  001822  6E19               	movwf	(pad@i+1)^0,c
  1641  001824  0E00               	movlw	0
  1642  001826  6E18               	movwf	pad@i^0,c
  1643                           
  1644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1645  001828  EF22  F00C         	goto	l1637
  1646  00182C                     l1633:
  1647                           
  1648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1649  00182C  0E00               	movlw	0
  1650  00182E  6E02               	movwf	(fputc@c+1)^0,c
  1651  001830  0E20               	movlw	32
  1652  001832  6E01               	movwf	fputc@c^0,c
  1653  001834  C011  F003         	movff	pad@fp,fputc@fp
  1654  001838  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1655  00183C  EC88  F00B         	call	_fputc	;wreg free
  1656  001840                     
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1658  001840  4A18               	infsnz	pad@i^0,f,c
  1659  001842  2A19               	incf	(pad@i+1)^0,f,c
  1660  001844                     l1637:
  1661                           
  1662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1663  001844  501A               	movf	pad@w^0,w,c
  1664  001846  5C18               	subwf	pad@i^0,w,c
  1665  001848  5019               	movf	(pad@i+1)^0,w,c
  1666  00184A  0A80               	xorlw	128
  1667  00184C  6E17               	movwf	??_pad^0,c
  1668  00184E  501B               	movf	(pad@w+1)^0,w,c
  1669  001850  0A80               	xorlw	128
  1670  001852  5817               	subwfb	??_pad^0,w,c
  1671  001854  A0D8               	btfss	status,0,c
  1672  001856  EF2F  F00C         	goto	u1081
  1673  00185A  EF31  F00C         	goto	u1080
  1674  00185E                     u1081:
  1675  00185E  EF16  F00C         	goto	l1633
  1676  001862                     u1080:
  1677  001862                     
  1678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1679  001862  0100               	movlb	0	; () banked
  1680  001864  B194               	btfsc	_flags& (0+255),0,b
  1681  001866  EF37  F00C         	goto	u1091
  1682  00186A  EF39  F00C         	goto	u1090
  1683  00186E                     u1091:
  1684  00186E  EF43  F00C         	goto	l1641
  1685  001872                     u1090:
  1686  001872                     
  1687                           ; BSR set to: 0
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1689  001872  C013  F00A         	movff	pad@buf,fputs@s
  1690  001876  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1691  00187A  C011  F00C         	movff	pad@fp,fputs@fp
  1692  00187E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1693  001882  ECDC  F00D         	call	_fputs	;wreg free
  1694  001886                     l1641:
  1695                           
  1696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1697  001886  C013  F001         	movff	pad@buf,strlen@s
  1698  00188A  C014  F002         	movff	pad@buf+1,strlen@s+1
  1699  00188E  EC1E  F00E         	call	_strlen	;wreg free
  1700  001892  501A               	movf	pad@w^0,w,c
  1701  001894  2401               	addwf	?_strlen^0,w,c
  1702  001896  6E11               	movwf	?_pad^0,c
  1703  001898  501B               	movf	(pad@w+1)^0,w,c
  1704  00189A  2002               	addwfc	(?_strlen+1)^0,w,c
  1705  00189C  6E12               	movwf	(?_pad+1)^0,c
  1706  00189E  0012               	return		;funcret
  1707  0018A0                     __end_of_pad:
  1708                           	opt callstack 0
  1709                           
  1710 ;; *************** function _strlen *****************
  1711 ;; Defined at:
  1712 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1715 ;;		 -> dbuf(32), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1718 ;;		 -> dbuf(32), 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2    0[COMRAM] unsigned int 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1728 ;;      Params:         2       0       0       0       0       0       0       0       0
  1729 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1731 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1732 ;;Total ram usage:        4 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_pad
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text6
  1742  001C3C                     __ptext6:
  1743                           	opt callstack 0
  1744  001C3C                     _strlen:
  1745                           	opt callstack 25
  1746  001C3C  C001  F003         	movff	strlen@s,strlen@a
  1747  001C40  C002  F004         	movff	strlen@s+1,strlen@a+1
  1748  001C44  EF26  F00E         	goto	l1617
  1749  001C48                     l1615:
  1750  001C48  4A01               	infsnz	strlen@s^0,f,c
  1751  001C4A  2A02               	incf	(strlen@s+1)^0,f,c
  1752  001C4C                     l1617:
  1753  001C4C  C001  FFD9         	movff	strlen@s,fsr2l
  1754  001C50  C002  FFDA         	movff	strlen@s+1,fsr2h
  1755  001C54  50DF               	movf	indf2,w,c
  1756  001C56  A4D8               	btfss	status,2,c
  1757  001C58  EF30  F00E         	goto	u1051
  1758  001C5C  EF32  F00E         	goto	u1050
  1759  001C60                     u1051:
  1760  001C60  EF24  F00E         	goto	l1615
  1761  001C64                     u1050:
  1762  001C64  5003               	movf	strlen@a^0,w,c
  1763  001C66  5C01               	subwf	strlen@s^0,w,c
  1764  001C68  6E01               	movwf	?_strlen^0,c
  1765  001C6A  5004               	movf	(strlen@a+1)^0,w,c
  1766  001C6C  5802               	subwfb	(strlen@s+1)^0,w,c
  1767  001C6E  6E02               	movwf	(?_strlen+1)^0,c
  1768  001C70  0012               	return		;funcret
  1769  001C72                     __end_of_strlen:
  1770                           	opt callstack 0
  1771                           
  1772 ;; *************** function _fputs *****************
  1773 ;; Defined at:
  1774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1777 ;;		 -> dbuf(32), 
  1778 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1779 ;;		 -> sprintf@f(6), 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  i               2   14[COMRAM] int 
  1782 ;;  c               1   13[COMRAM] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  2    9[COMRAM] int 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1792 ;;      Params:         4       0       0       0       0       0       0       0       0
  1793 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1795 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1796 ;;Total ram usage:        7 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    2
  1799 ;; This function calls:
  1800 ;;		_fputc
  1801 ;; This function is called by:
  1802 ;;		_pad
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text7
  1807  001BB8                     __ptext7:
  1808                           	opt callstack 0
  1809  001BB8                     _fputs:
  1810                           	opt callstack 23
  1811  001BB8  0E00               	movlw	0
  1812  001BBA  6E10               	movwf	(fputs@i+1)^0,c
  1813  001BBC  0E00               	movlw	0
  1814  001BBE  6E0F               	movwf	fputs@i^0,c
  1815  001BC0  EFED  F00D         	goto	l1611
  1816  001BC4                     l1607:
  1817  001BC4  C00E  F001         	movff	fputs@c,fputc@c
  1818  001BC8  6A02               	clrf	(fputc@c+1)^0,c
  1819  001BCA  C00C  F003         	movff	fputs@fp,fputc@fp
  1820  001BCE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1821  001BD2  EC88  F00B         	call	_fputc	;wreg free
  1822  001BD6  4A0F               	infsnz	fputs@i^0,f,c
  1823  001BD8  2A10               	incf	(fputs@i+1)^0,f,c
  1824  001BDA                     l1611:
  1825  001BDA  500F               	movf	fputs@i^0,w,c
  1826  001BDC  240A               	addwf	fputs@s^0,w,c
  1827  001BDE  6ED9               	movwf	fsr2l,c
  1828  001BE0  5010               	movf	(fputs@i+1)^0,w,c
  1829  001BE2  200B               	addwfc	(fputs@s+1)^0,w,c
  1830  001BE4  6EDA               	movwf	fsr2h,c
  1831  001BE6  50DF               	movf	indf2,w,c
  1832  001BE8  6E0E               	movwf	fputs@c^0,c
  1833  001BEA  500E               	movf	fputs@c^0,w,c
  1834  001BEC  A4D8               	btfss	status,2,c
  1835  001BEE  EFFB  F00D         	goto	u1041
  1836  001BF2  EFFD  F00D         	goto	u1040
  1837  001BF6                     u1041:
  1838  001BF6  EFE2  F00D         	goto	l1607
  1839  001BFA                     u1040:
  1840  001BFA  0012               	return		;funcret
  1841  001BFC                     __end_of_fputs:
  1842                           	opt callstack 0
  1843                           
  1844 ;; *************** function _fputc *****************
  1845 ;; Defined at:
  1846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  c               2    0[COMRAM] int 
  1849 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1850 ;;		 -> sprintf@f(6), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2    0[COMRAM] int 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         4       0       0       0       0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1864 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1865 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:        9 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    1
  1869 ;; This function calls:
  1870 ;;		_putch
  1871 ;; This function is called by:
  1872 ;;		_pad
  1873 ;;		_vfpfcnvrt
  1874 ;;		_fputs
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text8
  1879  001710                     __ptext8:
  1880                           	opt callstack 0
  1881  001710                     _fputc:
  1882                           	opt callstack 26
  1883  001710  5003               	movf	fputc@fp^0,w,c
  1884  001712  1004               	iorwf	(fputc@fp+1)^0,w,c
  1885  001714  B4D8               	btfsc	status,2,c
  1886  001716  EF8F  F00B         	goto	u1001
  1887  00171A  EF91  F00B         	goto	u1000
  1888  00171E                     u1001:
  1889  00171E  EF9A  F00B         	goto	l1595
  1890  001722                     u1000:
  1891  001722  5003               	movf	fputc@fp^0,w,c
  1892  001724  1004               	iorwf	(fputc@fp+1)^0,w,c
  1893  001726  A4D8               	btfss	status,2,c
  1894  001728  EF98  F00B         	goto	u1011
  1895  00172C  EF9A  F00B         	goto	u1010
  1896  001730                     u1011:
  1897  001730  EF9F  F00B         	goto	l1597
  1898  001734                     u1010:
  1899  001734                     l1595:
  1900  001734  5001               	movf	fputc@c^0,w,c
  1901  001736  ECA9  F00E         	call	_putch
  1902  00173A  EFEC  F00B         	goto	l875
  1903  00173E                     l1597:
  1904  00173E  EE20 F004          	lfsr	2,4
  1905  001742  5003               	movf	fputc@fp^0,w,c
  1906  001744  26D9               	addwf	fsr2l,f,c
  1907  001746  5004               	movf	(fputc@fp+1)^0,w,c
  1908  001748  22DA               	addwfc	fsr2h,f,c
  1909  00174A  50DE               	movf	postinc2,w,c
  1910  00174C  10DE               	iorwf	postinc2,w,c
  1911  00174E  B4D8               	btfsc	status,2,c
  1912  001750  EFAC  F00B         	goto	u1021
  1913  001754  EFAE  F00B         	goto	u1020
  1914  001758                     u1021:
  1915  001758  EFC9  F00B         	goto	l1601
  1916  00175C                     u1020:
  1917  00175C  EE20 F004          	lfsr	2,4
  1918  001760  5003               	movf	fputc@fp^0,w,c
  1919  001762  26D9               	addwf	fsr2l,f,c
  1920  001764  5004               	movf	(fputc@fp+1)^0,w,c
  1921  001766  22DA               	addwfc	fsr2h,f,c
  1922  001768  EE10 F002          	lfsr	1,2
  1923  00176C  5003               	movf	fputc@fp^0,w,c
  1924  00176E  26E1               	addwf	fsr1l,f,c
  1925  001770  5004               	movf	(fputc@fp+1)^0,w,c
  1926  001772  22E2               	addwfc	fsr1h,f,c
  1927  001774  50DE               	movf	postinc2,w,c
  1928  001776  5CE6               	subwf	postinc1,w,c
  1929  001778  50E6               	movf	postinc1,w,c
  1930  00177A  0A80               	xorlw	128
  1931  00177C  6E09               	movwf	(??_fputc+4)^0,c
  1932  00177E  50DE               	movf	postinc2,w,c
  1933  001780  0A80               	xorlw	128
  1934  001782  5809               	subwfb	(??_fputc+4)^0,w,c
  1935  001784  B0D8               	btfsc	status,0,c
  1936  001786  EFC7  F00B         	goto	u1031
  1937  00178A  EFC9  F00B         	goto	u1030
  1938  00178E                     u1031:
  1939  00178E  EFEC  F00B         	goto	l875
  1940  001792                     u1030:
  1941  001792                     l1601:
  1942  001792  EE20 F002          	lfsr	2,2
  1943  001796  5003               	movf	fputc@fp^0,w,c
  1944  001798  26D9               	addwf	fsr2l,f,c
  1945  00179A  5004               	movf	(fputc@fp+1)^0,w,c
  1946  00179C  22DA               	addwfc	fsr2h,f,c
  1947  00179E  CFDE F005          	movff	postinc2,??_fputc
  1948  0017A2  CFDD F006          	movff	postdec2,??_fputc+1
  1949  0017A6  C003  FFD9         	movff	fputc@fp,fsr2l
  1950  0017AA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1951  0017AE  CFDE F007          	movff	postinc2,??_fputc+2
  1952  0017B2  CFDD F008          	movff	postdec2,??_fputc+3
  1953  0017B6  5005               	movf	??_fputc^0,w,c
  1954  0017B8  2407               	addwf	(??_fputc+2)^0,w,c
  1955  0017BA  6ED9               	movwf	fsr2l,c
  1956  0017BC  5006               	movf	(??_fputc+1)^0,w,c
  1957  0017BE  2008               	addwfc	(??_fputc+3)^0,w,c
  1958  0017C0  6EDA               	movwf	fsr2h,c
  1959  0017C2  C001  FFDF         	movff	fputc@c,indf2
  1960  0017C6  EE20 F002          	lfsr	2,2
  1961  0017CA  5003               	movf	fputc@fp^0,w,c
  1962  0017CC  26D9               	addwf	fsr2l,f,c
  1963  0017CE  5004               	movf	(fputc@fp+1)^0,w,c
  1964  0017D0  22DA               	addwfc	fsr2h,f,c
  1965  0017D2  2ADE               	incf	postinc2,f,c
  1966  0017D4  0E00               	movlw	0
  1967  0017D6  22DD               	addwfc	postdec2,f,c
  1968  0017D8                     l875:
  1969  0017D8  0012               	return		;funcret
  1970  0017DA                     __end_of_fputc:
  1971                           	opt callstack 0
  1972                           
  1973 ;; *************** function _putch *****************
  1974 ;; Defined at:
  1975 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  c               1    wreg     unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  c               1    0[COMRAM] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_fputc
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text9
  2003  001D52                     __ptext9:
  2004                           	opt callstack 0
  2005  001D52                     _putch:
  2006                           	opt callstack 26
  2007  001D52  0012               	return		;funcret
  2008  001D54                     __end_of_putch:
  2009                           	opt callstack 0
  2010                           
  2011 ;; *************** function _abs *****************
  2012 ;; Defined at:
  2013 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  a               2   18[COMRAM] int 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  2   18[COMRAM] int 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2027 ;;      Params:         2       0       0       0       0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2029 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2030 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2031 ;;Total ram usage:        4 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_dtoa
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text10
  2041  001BFC                     __ptext10:
  2042                           	opt callstack 0
  2043  001BFC                     _abs:
  2044                           	opt callstack 26
  2045  001BFC  BE14               	btfsc	(abs@a+1)^0,7,c
  2046  001BFE  EF0B  F00E         	goto	u1100
  2047  001C02  5014               	movf	(abs@a+1)^0,w,c
  2048  001C04  E106               	bnz	u1101
  2049  001C06  0413               	decf	abs@a^0,w,c
  2050  001C08  B0D8               	btfsc	status,0,c
  2051  001C0A  EF09  F00E         	goto	u1101
  2052  001C0E  EF0B  F00E         	goto	u1100
  2053  001C12                     u1101:
  2054  001C12  EF19  F00E         	goto	l860
  2055  001C16                     u1100:
  2056  001C16  C013  F015         	movff	abs@a,??_abs
  2057  001C1A  C014  F016         	movff	abs@a+1,??_abs+1
  2058  001C1E  1E15               	comf	??_abs^0,f,c
  2059  001C20  1E16               	comf	(??_abs+1)^0,f,c
  2060  001C22  4A15               	infsnz	??_abs^0,f,c
  2061  001C24  2A16               	incf	(??_abs+1)^0,f,c
  2062  001C26  C015  F013         	movff	??_abs,?_abs
  2063  001C2A  C016  F014         	movff	??_abs+1,?_abs+1
  2064  001C2E  EF1D  F00E         	goto	l863
  2065  001C32                     l860:
  2066  001C32  C013  F013         	movff	abs@a,?_abs
  2067  001C36  C014  F014         	movff	abs@a+1,?_abs+1
  2068  001C3A                     l863:
  2069  001C3A  0012               	return		;funcret
  2070  001C3C                     __end_of_abs:
  2071                           	opt callstack 0
  2072                           
  2073 ;; *************** function ___aomod *****************
  2074 ;; Defined at:
  2075 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  dividend        8    0[COMRAM] long long 
  2078 ;;  divisor         8    8[COMRAM] long long 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  sign            1   17[COMRAM] unsigned char 
  2081 ;;  counter         1   16[COMRAM] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  8    0[COMRAM] long long 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:        16       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2094 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:       18 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_dtoa
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text11
  2105  00139A                     __ptext11:
  2106                           	opt callstack 0
  2107  00139A                     ___aomod:
  2108                           	opt callstack 26
  2109  00139A  0E00               	movlw	0
  2110  00139C  6E12               	movwf	___aomod@sign^0,c
  2111  00139E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2112  0013A0  EFD6  F009         	goto	u1180
  2113  0013A4  EFD4  F009         	goto	u1181
  2114  0013A8                     u1181:
  2115  0013A8  EFE8  F009         	goto	l1701
  2116  0013AC                     u1180:
  2117  0013AC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2118  0013AE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2119  0013B0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2120  0013B2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2121  0013B4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2122  0013B6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2123  0013B8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2124  0013BA  6C01               	negf	___aomod@dividend^0,c
  2125  0013BC  0E00               	movlw	0
  2126  0013BE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2127  0013C0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2128  0013C2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2129  0013C4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2130  0013C6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2131  0013C8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2132  0013CA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2133  0013CC  0E01               	movlw	1
  2134  0013CE  6E12               	movwf	___aomod@sign^0,c
  2135  0013D0                     l1701:
  2136  0013D0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2137  0013D2  EFEF  F009         	goto	u1190
  2138  0013D6  EFED  F009         	goto	u1191
  2139  0013DA                     u1191:
  2140  0013DA  EFFF  F009         	goto	l1705
  2141  0013DE                     u1190:
  2142  0013DE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2143  0013E0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2144  0013E2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2145  0013E4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2146  0013E6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2147  0013E8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2148  0013EA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2149  0013EC  6C09               	negf	___aomod@divisor^0,c
  2150  0013EE  0E00               	movlw	0
  2151  0013F0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2152  0013F2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2153  0013F4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2154  0013F6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2155  0013F8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2156  0013FA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2157  0013FC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2158  0013FE                     l1705:
  2159  0013FE  5009               	movf	___aomod@divisor^0,w,c
  2160  001400  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2161  001402  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2162  001404  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2163  001406  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2164  001408  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2165  00140A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2166  00140C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2167  00140E  B4D8               	btfsc	status,2,c
  2168  001410  EF0C  F00A         	goto	u1201
  2169  001414  EF0E  F00A         	goto	u1200
  2170  001418                     u1201:
  2171  001418  EF56  F00A         	goto	l1721
  2172  00141C                     u1200:
  2173  00141C  0E01               	movlw	1
  2174  00141E  6E11               	movwf	___aomod@counter^0,c
  2175  001420  EF1C  F00A         	goto	l1711
  2176  001424                     l1709:
  2177  001424  90D8               	bcf	status,0,c
  2178  001426  3609               	rlcf	___aomod@divisor^0,f,c
  2179  001428  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2180  00142A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2181  00142C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2182  00142E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2183  001430  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2184  001432  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2185  001434  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2186  001436  2A11               	incf	___aomod@counter^0,f,c
  2187  001438                     l1711:
  2188  001438  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2189  00143A  EF21  F00A         	goto	u1211
  2190  00143E  EF23  F00A         	goto	u1210
  2191  001442                     u1211:
  2192  001442  EF12  F00A         	goto	l1709
  2193  001446                     u1210:
  2194  001446                     l1713:
  2195  001446  5009               	movf	___aomod@divisor^0,w,c
  2196  001448  5C01               	subwf	___aomod@dividend^0,w,c
  2197  00144A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2198  00144C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2199  00144E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2200  001450  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2201  001452  500C               	movf	(___aomod@divisor+3)^0,w,c
  2202  001454  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2203  001456  500D               	movf	(___aomod@divisor+4)^0,w,c
  2204  001458  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2205  00145A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2206  00145C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2207  00145E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2208  001460  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2209  001462  5010               	movf	(___aomod@divisor+7)^0,w,c
  2210  001464  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2211  001466  A0D8               	btfss	status,0,c
  2212  001468  EF38  F00A         	goto	u1221
  2213  00146C  EF3A  F00A         	goto	u1220
  2214  001470                     u1221:
  2215  001470  EF4A  F00A         	goto	l1717
  2216  001474                     u1220:
  2217  001474  5009               	movf	___aomod@divisor^0,w,c
  2218  001476  5E01               	subwf	___aomod@dividend^0,f,c
  2219  001478  500A               	movf	(___aomod@divisor+1)^0,w,c
  2220  00147A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2221  00147C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2222  00147E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2223  001480  500C               	movf	(___aomod@divisor+3)^0,w,c
  2224  001482  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2225  001484  500D               	movf	(___aomod@divisor+4)^0,w,c
  2226  001486  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2227  001488  500E               	movf	(___aomod@divisor+5)^0,w,c
  2228  00148A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2229  00148C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2230  00148E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2231  001490  5010               	movf	(___aomod@divisor+7)^0,w,c
  2232  001492  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2233  001494                     l1717:
  2234  001494  90D8               	bcf	status,0,c
  2235  001496  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2236  001498  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2237  00149A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2238  00149C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2239  00149E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2240  0014A0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2241  0014A2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2242  0014A4  3209               	rrcf	___aomod@divisor^0,f,c
  2243  0014A6  2E11               	decfsz	___aomod@counter^0,f,c
  2244  0014A8  EF23  F00A         	goto	l1713
  2245  0014AC                     l1721:
  2246  0014AC  5012               	movf	___aomod@sign^0,w,c
  2247  0014AE  B4D8               	btfsc	status,2,c
  2248  0014B0  EF5C  F00A         	goto	u1231
  2249  0014B4  EF5E  F00A         	goto	u1230
  2250  0014B8                     u1231:
  2251  0014B8  EF6E  F00A         	goto	l1725
  2252  0014BC                     u1230:
  2253  0014BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2254  0014BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2255  0014C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2256  0014C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2257  0014C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2258  0014C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2259  0014C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2260  0014CA  6C01               	negf	___aomod@dividend^0,c
  2261  0014CC  0E00               	movlw	0
  2262  0014CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2263  0014D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2264  0014D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2265  0014D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2266  0014D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2267  0014D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2268  0014DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2269  0014DC                     l1725:
  2270  0014DC  C001  F001         	movff	___aomod@dividend,?___aomod
  2271  0014E0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2272  0014E4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2273  0014E8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2274  0014EC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2275  0014F0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2276  0014F4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2277  0014F8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2278  0014FC  0012               	return		;funcret
  2279  0014FE                     __end_of___aomod:
  2280                           	opt callstack 0
  2281                           
  2282 ;; *************** function ___aodiv *****************
  2283 ;; Defined at:
  2284 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  dividend        8    0[COMRAM] long long 
  2287 ;;  divisor         8    8[COMRAM] long long 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  quotient        8   18[COMRAM] long long 
  2290 ;;  sign            1   17[COMRAM] unsigned char 
  2291 ;;  counter         1   16[COMRAM] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  8    0[COMRAM] long long 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2301 ;;      Params:        16       0       0       0       0       0       0       0       0
  2302 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2304 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2305 ;;Total ram usage:       26 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_dtoa
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text12
  2315  001212                     __ptext12:
  2316                           	opt callstack 0
  2317  001212                     ___aodiv:
  2318                           	opt callstack 26
  2319  001212  0E00               	movlw	0
  2320  001214  6E12               	movwf	___aodiv@sign^0,c
  2321  001216  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2322  001218  EF12  F009         	goto	u1110
  2323  00121C  EF10  F009         	goto	u1111
  2324  001220                     u1111:
  2325  001220  EF24  F009         	goto	l1657
  2326  001224                     u1110:
  2327  001224  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2328  001226  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2329  001228  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2330  00122A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2331  00122C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2332  00122E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2333  001230  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2334  001232  6C09               	negf	___aodiv@divisor^0,c
  2335  001234  0E00               	movlw	0
  2336  001236  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2337  001238  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2338  00123A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2339  00123C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2340  00123E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2341  001240  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2342  001242  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2343  001244  0E01               	movlw	1
  2344  001246  6E12               	movwf	___aodiv@sign^0,c
  2345  001248                     l1657:
  2346  001248  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2347  00124A  EF2B  F009         	goto	u1120
  2348  00124E  EF29  F009         	goto	u1121
  2349  001252                     u1121:
  2350  001252  EF3D  F009         	goto	l1663
  2351  001256                     u1120:
  2352  001256  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2353  001258  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2354  00125A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2355  00125C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2356  00125E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2357  001260  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2358  001262  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2359  001264  6C01               	negf	___aodiv@dividend^0,c
  2360  001266  0E00               	movlw	0
  2361  001268  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2362  00126A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2363  00126C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2364  00126E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2365  001270  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2366  001272  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2367  001274  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2368  001276  0E01               	movlw	1
  2369  001278  1A12               	xorwf	___aodiv@sign^0,f,c
  2370  00127A                     l1663:
  2371  00127A  EE20  F013         	lfsr	2,___aodiv@quotient
  2372  00127E  0E07               	movlw	7
  2373  001280                     u1131:
  2374  001280  6ADE               	clrf	postinc2,c
  2375  001282  06E8               	decf	wreg,f,c
  2376  001284  E2FD               	bc	u1131
  2377  001286  5009               	movf	___aodiv@divisor^0,w,c
  2378  001288  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2379  00128A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2380  00128C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2381  00128E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2382  001290  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2383  001292  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2384  001294  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2385  001296  B4D8               	btfsc	status,2,c
  2386  001298  EF50  F009         	goto	u1141
  2387  00129C  EF52  F009         	goto	u1140
  2388  0012A0                     u1141:
  2389  0012A0  EFA4  F009         	goto	l1685
  2390  0012A4                     u1140:
  2391  0012A4  0E01               	movlw	1
  2392  0012A6  6E11               	movwf	___aodiv@counter^0,c
  2393  0012A8  EF60  F009         	goto	l1671
  2394  0012AC                     l1669:
  2395  0012AC  90D8               	bcf	status,0,c
  2396  0012AE  3609               	rlcf	___aodiv@divisor^0,f,c
  2397  0012B0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2398  0012B2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2399  0012B4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2400  0012B6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2401  0012B8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2402  0012BA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2403  0012BC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2404  0012BE  2A11               	incf	___aodiv@counter^0,f,c
  2405  0012C0                     l1671:
  2406  0012C0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2407  0012C2  EF65  F009         	goto	u1151
  2408  0012C6  EF67  F009         	goto	u1150
  2409  0012CA                     u1151:
  2410  0012CA  EF56  F009         	goto	l1669
  2411  0012CE                     u1150:
  2412  0012CE                     l1673:
  2413  0012CE  90D8               	bcf	status,0,c
  2414  0012D0  3613               	rlcf	___aodiv@quotient^0,f,c
  2415  0012D2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2416  0012D4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2417  0012D6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2418  0012D8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2419  0012DA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2420  0012DC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2421  0012DE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2422  0012E0  5009               	movf	___aodiv@divisor^0,w,c
  2423  0012E2  5C01               	subwf	___aodiv@dividend^0,w,c
  2424  0012E4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2425  0012E6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2426  0012E8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2427  0012EA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2428  0012EC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2429  0012EE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2430  0012F0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2431  0012F2  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2432  0012F4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2433  0012F6  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2434  0012F8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2435  0012FA  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2436  0012FC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2437  0012FE  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2438  001300  A0D8               	btfss	status,0,c
  2439  001302  EF85  F009         	goto	u1161
  2440  001306  EF87  F009         	goto	u1160
  2441  00130A                     u1161:
  2442  00130A  EF98  F009         	goto	l1681
  2443  00130E                     u1160:
  2444  00130E  5009               	movf	___aodiv@divisor^0,w,c
  2445  001310  5E01               	subwf	___aodiv@dividend^0,f,c
  2446  001312  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2447  001314  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2448  001316  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2449  001318  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2450  00131A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2451  00131C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2452  00131E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2453  001320  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2454  001322  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2455  001324  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2456  001326  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2457  001328  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2458  00132A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2459  00132C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2460  00132E  8013               	bsf	___aodiv@quotient^0,0,c
  2461  001330                     l1681:
  2462  001330  90D8               	bcf	status,0,c
  2463  001332  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2464  001334  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2465  001336  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2466  001338  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2467  00133A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2468  00133C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2469  00133E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2470  001340  3209               	rrcf	___aodiv@divisor^0,f,c
  2471  001342  2E11               	decfsz	___aodiv@counter^0,f,c
  2472  001344  EF67  F009         	goto	l1673
  2473  001348                     l1685:
  2474  001348  5012               	movf	___aodiv@sign^0,w,c
  2475  00134A  B4D8               	btfsc	status,2,c
  2476  00134C  EFAA  F009         	goto	u1171
  2477  001350  EFAC  F009         	goto	u1170
  2478  001354                     u1171:
  2479  001354  EFBC  F009         	goto	l1689
  2480  001358                     u1170:
  2481  001358  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2482  00135A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2483  00135C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2484  00135E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2485  001360  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2486  001362  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2487  001364  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2488  001366  6C13               	negf	___aodiv@quotient^0,c
  2489  001368  0E00               	movlw	0
  2490  00136A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2491  00136C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2492  00136E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2493  001370  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2494  001372  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2495  001374  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2496  001376  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2497  001378                     l1689:
  2498  001378  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2499  00137C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2500  001380  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2501  001384  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2502  001388  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2503  00138C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2504  001390  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2505  001394  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2506  001398  0012               	return		;funcret
  2507  00139A                     __end_of___aodiv:
  2508                           	opt callstack 0
  2509                           
  2510 ;; *************** function _i2c_iniciar *****************
  2511 ;; Defined at:
  2512 ;;		line 13 in file "./I2C.h"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text13
  2540  001CF4                     __ptext13:
  2541                           	opt callstack 0
  2542  001CF4                     _i2c_iniciar:
  2543                           	opt callstack 30
  2544  001CF4                     
  2545                           ;./I2C.h: 14:     TRISBbits.RB0 = 1;
  2546  001CF4  8093               	bsf	147,0,c	;volatile
  2547                           
  2548                           ;./I2C.h: 15:     TRISBbits.RB1 = 1;
  2549  001CF6  8293               	bsf	147,1,c	;volatile
  2550  001CF8                     
  2551                           ;./I2C.h: 16:     SSPSTAT = 0b10000000;
  2552  001CF8  0E80               	movlw	128
  2553  001CFA  6EC7               	movwf	199,c	;volatile
  2554                           
  2555                           ;./I2C.h: 17:     SSPCON1 = 0b00101000;
  2556  001CFC  0E28               	movlw	40
  2557  001CFE  6EC6               	movwf	198,c	;volatile
  2558                           
  2559                           ;./I2C.h: 18:     SSPCON2 = 0b00000000;
  2560  001D00  0E00               	movlw	0
  2561  001D02  6EC5               	movwf	197,c	;volatile
  2562                           
  2563                           ;./I2C.h: 19:     SSPADD = 9;
  2564  001D04  0E09               	movlw	9
  2565  001D06  6EC8               	movwf	200,c	;volatile
  2566  001D08  0012               	return		;funcret
  2567  001D0A                     __end_of_i2c_iniciar:
  2568                           	opt callstack 0
  2569                           
  2570 ;; *************** function _get_lux_value *****************
  2571 ;; Defined at:
  2572 ;;		line 53 in file "./bh1750.h"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  mode            1    wreg     unsigned char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  mode            1   66[COMRAM] unsigned char 
  2577 ;;  lux_value       4   67[COMRAM] unsigned long 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  4   61[COMRAM] unsigned long 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2587 ;;      Params:         4       0       0       0       0       0       0       0       0
  2588 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2589 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2590 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2591 ;;Total ram usage:       10 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    3
  2594 ;; This function calls:
  2595 ;;		_BH1750_read_word
  2596 ;;		_BH1750_write
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text14
  2603  001B6E                     __ptext14:
  2604                           	opt callstack 0
  2605  001B6E                     _get_lux_value:
  2606                           	opt callstack 27
  2607                           
  2608                           ;incstack = 0
  2609                           ;get_lux_value@mode stored from wreg
  2610  001B6E  6E43               	movwf	get_lux_value@mode^0,c
  2611  001B70                     
  2612                           ;./bh1750.h: 55:     BH1750_write(0x01);
  2613  001B70  0E01               	movlw	1
  2614  001B72  EC63  F00E         	call	_BH1750_write
  2615  001B76                     
  2616                           ;./bh1750.h: 56:     BH1750_write(mode);
  2617  001B76  5043               	movf	get_lux_value@mode^0,w,c
  2618  001B78  EC63  F00E         	call	_BH1750_write
  2619  001B7C                     
  2620                           ;./bh1750.h: 57:     lux_value = BH1750_read_word();
  2621  001B7C  EC50  F00C         	call	_BH1750_read_word	;wreg free
  2622  001B80  C032  F044         	movff	?_BH1750_read_word,get_lux_value@lux_value
  2623  001B84  C033  F045         	movff	?_BH1750_read_word+1,get_lux_value@lux_value+1
  2624  001B88  C034  F046         	movff	?_BH1750_read_word+2,get_lux_value@lux_value+2
  2625  001B8C  C035  F047         	movff	?_BH1750_read_word+3,get_lux_value@lux_value+3
  2626  001B90                     
  2627                           ;./bh1750.h: 58:     _delay((unsigned long)((180)*(4000000/4000.0)));
  2628  001B90  0EEA               	movlw	234
  2629  001B92  6E42               	movwf	??_get_lux_value^0,c
  2630  001B94  0EC3               	movlw	195
  2631  001B96                     u1997:
  2632  001B96  2EE8               	decfsz	wreg,f,c
  2633  001B98  D7FE               	bra	u1997
  2634  001B9A  2E42               	decfsz	??_get_lux_value^0,f,c
  2635  001B9C  D7FC               	bra	u1997
  2636  001B9E  F000               	nop	
  2637  001BA0                     
  2638                           ;./bh1750.h: 59:     BH1750_write(0x00);
  2639  001BA0  0E00               	movlw	0
  2640  001BA2  EC63  F00E         	call	_BH1750_write
  2641  001BA6                     
  2642                           ;./bh1750.h: 61:     return lux_value;
  2643  001BA6  C044  F03E         	movff	get_lux_value@lux_value,?_get_lux_value
  2644  001BAA  C045  F03F         	movff	get_lux_value@lux_value+1,?_get_lux_value+1
  2645  001BAE  C046  F040         	movff	get_lux_value@lux_value+2,?_get_lux_value+2
  2646  001BB2  C047  F041         	movff	get_lux_value@lux_value+3,?_get_lux_value+3
  2647  001BB6  0012               	return		;funcret
  2648  001BB8                     __end_of_get_lux_value:
  2649                           	opt callstack 0
  2650                           
  2651 ;; *************** function _BH1750_read_word *****************
  2652 ;; Defined at:
  2653 ;;		line 36 in file "./bh1750.h"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  value           4   57[COMRAM] unsigned long 
  2658 ;;  hb              1   56[COMRAM] unsigned char 
  2659 ;;  lb              1   55[COMRAM] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  4   49[COMRAM] unsigned long 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         4       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2672 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:       12 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    2
  2676 ;; This function calls:
  2677 ;;		___fldiv
  2678 ;;		___fltol
  2679 ;;		___xxtofl
  2680 ;;		_i2c_detener
  2681 ;;		_i2c_envia_dato
  2682 ;;		_i2c_inicia_com
  2683 ;;		_i2c_recibe_datoACK
  2684 ;; This function is called by:
  2685 ;;		_get_lux_value
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text15
  2690  0018A0                     __ptext15:
  2691                           	opt callstack 0
  2692  0018A0                     _BH1750_read_word:
  2693                           	opt callstack 27
  2694  0018A0                     
  2695                           ;./bh1750.h: 38:     T_UBYTE lb = 0;
  2696  0018A0  0E00               	movlw	0
  2697  0018A2  6E38               	movwf	BH1750_read_word@lb^0,c
  2698                           
  2699                           ;./bh1750.h: 39:     T_UBYTE hb = 0;
  2700  0018A4  0E00               	movlw	0
  2701  0018A6  6E39               	movwf	BH1750_read_word@hb^0,c
  2702  0018A8                     
  2703                           ;./bh1750.h: 41:     i2c_inicia_com();
  2704  0018A8  ECA1  F00E         	call	_i2c_inicia_com	;wreg free
  2705  0018AC                     
  2706                           ;./bh1750.h: 42:     i2c_envia_dato(0x47);
  2707  0018AC  0E47               	movlw	71
  2708  0018AE  EC9B  F00E         	call	_i2c_envia_dato
  2709  0018B2                     
  2710                           ;./bh1750.h: 43:     hb = i2c_recibe_datoACK(1);
  2711  0018B2  0E01               	movlw	1
  2712  0018B4  EC39  F00E         	call	_i2c_recibe_datoACK
  2713  0018B8  6E39               	movwf	BH1750_read_word@hb^0,c
  2714  0018BA                     
  2715                           ;./bh1750.h: 44:     lb = i2c_recibe_datoACK(0);
  2716  0018BA  0E00               	movlw	0
  2717  0018BC  EC39  F00E         	call	_i2c_recibe_datoACK
  2718  0018C0  6E38               	movwf	BH1750_read_word@lb^0,c
  2719  0018C2                     
  2720                           ;./bh1750.h: 45:     i2c_detener();
  2721  0018C2  ECA5  F00E         	call	_i2c_detener	;wreg free
  2722  0018C6                     
  2723                           ;./bh1750.h: 47:     value = (hb <<8 ) + lb;
  2724  0018C6  5038               	movf	BH1750_read_word@lb^0,w,c
  2725  0018C8  C039  F036         	movff	BH1750_read_word@hb,??_BH1750_read_word
  2726  0018CC  6A37               	clrf	(??_BH1750_read_word+1)^0,c
  2727  0018CE  C036  F037         	movff	??_BH1750_read_word,??_BH1750_read_word+1
  2728  0018D2  6A36               	clrf	??_BH1750_read_word^0,c
  2729  0018D4  2636               	addwf	??_BH1750_read_word^0,f,c
  2730  0018D6  0E00               	movlw	0
  2731  0018D8  2237               	addwfc	(??_BH1750_read_word+1)^0,f,c
  2732  0018DA  C036  F03A         	movff	??_BH1750_read_word,BH1750_read_word@value
  2733  0018DE  C037  F03B         	movff	??_BH1750_read_word+1,BH1750_read_word@value+1
  2734  0018E2  0E00               	movlw	0
  2735  0018E4  BE3B               	btfsc	(BH1750_read_word@value+1)^0,7,c
  2736  0018E6  0EFF               	movlw	-1
  2737  0018E8  6E3C               	movwf	(BH1750_read_word@value+2)^0,c
  2738  0018EA  6E3D               	movwf	(BH1750_read_word@value+3)^0,c
  2739  0018EC                     
  2740                           ;./bh1750.h: 48:     value /= 1.2;
  2741  0018EC  0E9A               	movlw	154
  2742  0018EE  6E13               	movwf	___fldiv@a^0,c
  2743  0018F0  0E99               	movlw	153
  2744  0018F2  6E14               	movwf	(___fldiv@a+1)^0,c
  2745  0018F4  0E99               	movlw	153
  2746  0018F6  6E15               	movwf	(___fldiv@a+2)^0,c
  2747  0018F8  0E3F               	movlw	63
  2748  0018FA  6E16               	movwf	(___fldiv@a+3)^0,c
  2749  0018FC  C03A  F001         	movff	BH1750_read_word@value,___xxtofl@val
  2750  001900  C03B  F002         	movff	BH1750_read_word@value+1,___xxtofl@val+1
  2751  001904  C03C  F003         	movff	BH1750_read_word@value+2,___xxtofl@val+2
  2752  001908  C03D  F004         	movff	BH1750_read_word@value+3,___xxtofl@val+3
  2753  00190C  0E00               	movlw	0
  2754  00190E  EC2F  F008         	call	___xxtofl
  2755  001912  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2756  001916  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2757  00191A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2758  00191E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2759  001922  EC17  F004         	call	___fldiv	;wreg free
  2760  001926  C00F  F028         	movff	?___fldiv,___fltol@f1
  2761  00192A  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  2762  00192E  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  2763  001932  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  2764  001936  EC05  F00B         	call	___fltol	;wreg free
  2765  00193A  C028  F03A         	movff	?___fltol,BH1750_read_word@value
  2766  00193E  C029  F03B         	movff	?___fltol+1,BH1750_read_word@value+1
  2767  001942  C02A  F03C         	movff	?___fltol+2,BH1750_read_word@value+2
  2768  001946  C02B  F03D         	movff	?___fltol+3,BH1750_read_word@value+3
  2769  00194A                     
  2770                           ;./bh1750.h: 50:     return value;
  2771  00194A  C03A  F032         	movff	BH1750_read_word@value,?_BH1750_read_word
  2772  00194E  C03B  F033         	movff	BH1750_read_word@value+1,?_BH1750_read_word+1
  2773  001952  C03C  F034         	movff	BH1750_read_word@value+2,?_BH1750_read_word+2
  2774  001956  C03D  F035         	movff	BH1750_read_word@value+3,?_BH1750_read_word+3
  2775  00195A  0012               	return		;funcret
  2776  00195C                     __end_of_BH1750_read_word:
  2777                           	opt callstack 0
  2778                           
  2779 ;; *************** function _i2c_recibe_datoACK *****************
  2780 ;; Defined at:
  2781 ;;		line 103 in file "./I2C.h"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  a               1    wreg     unsigned char 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  a               1    1[COMRAM] unsigned char 
  2786 ;;  datoleido       1    2[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      unsigned char 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0
  2797 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2799 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2800 ;;Total ram usage:        2 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		_i2c_espera
  2805 ;; This function is called by:
  2806 ;;		_BH1750_read_word
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text16
  2811  001C72                     __ptext16:
  2812                           	opt callstack 0
  2813  001C72                     _i2c_recibe_datoACK:
  2814                           	opt callstack 27
  2815                           
  2816                           ;incstack = 0
  2817                           ;i2c_recibe_datoACK@a stored from wreg
  2818  001C72  6E02               	movwf	i2c_recibe_datoACK@a^0,c
  2819  001C74                     
  2820                           ;./I2C.h: 105:     T_UBYTE datoleido;;./I2C.h: 108:     i2c_espera();
  2821  001C74  EC50  F00E         	call	_i2c_espera	;wreg free
  2822  001C78                     
  2823                           ;./I2C.h: 109:     SSPCON2bits.RCEN = 1;
  2824  001C78  86C5               	bsf	197,3,c	;volatile
  2825                           
  2826                           ;./I2C.h: 111:     i2c_espera();
  2827  001C7A  EC50  F00E         	call	_i2c_espera	;wreg free
  2828  001C7E                     
  2829                           ;./I2C.h: 112:     datoleido = SSPBUF;
  2830  001C7E  CFC9 F003          	movff	4041,i2c_recibe_datoACK@datoleido	;volatile
  2831                           
  2832                           ;./I2C.h: 115:     i2c_espera();
  2833  001C82  EC50  F00E         	call	_i2c_espera	;wreg free
  2834  001C86                     
  2835                           ;./I2C.h: 117:     ACKDT = (a) ? 0 : 1;
  2836  001C86  5002               	movf	i2c_recibe_datoACK@a^0,w,c
  2837  001C88  B4D8               	btfsc	status,2,c
  2838  001C8A  EF49  F00E         	goto	u1411
  2839  001C8E  EF4C  F00E         	goto	u1410
  2840  001C92                     u1411:
  2841  001C92  8AC5               	bsf	4037,5,c	;volatile
  2842  001C94  EF4D  F00E         	goto	u1425
  2843  001C98                     u1410:
  2844  001C98  9AC5               	bcf	4037,5,c	;volatile
  2845  001C9A                     u1425:
  2846  001C9A                     
  2847                           ;./I2C.h: 118:     ACKEN = 1;
  2848  001C9A  88C5               	bsf	4037,4,c	;volatile
  2849  001C9C                     
  2850                           ;./I2C.h: 120:     return datoleido;
  2851  001C9C  5003               	movf	i2c_recibe_datoACK@datoleido^0,w,c
  2852  001C9E  0012               	return		;funcret
  2853  001CA0                     __end_of_i2c_recibe_datoACK:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function ___xxtofl *****************
  2857 ;; Defined at:
  2858 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  sign            1    wreg     unsigned char 
  2861 ;;  val             4    0[COMRAM] long 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  sign            1    8[COMRAM] unsigned char 
  2864 ;;  arg             4   10[COMRAM] unsigned long 
  2865 ;;  exp             1    9[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  4    0[COMRAM] unsigned char 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2875 ;;      Params:         4       0       0       0       0       0       0       0       0
  2876 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2877 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2878 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2879 ;;Total ram usage:       14 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_BH1750_read_word
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text17
  2889  00105E                     __ptext17:
  2890                           	opt callstack 0
  2891  00105E                     ___xxtofl:
  2892                           	opt callstack 28
  2893                           
  2894                           ;incstack = 0
  2895                           ;___xxtofl@sign stored from wreg
  2896  00105E  6E09               	movwf	___xxtofl@sign^0,c
  2897  001060  5009               	movf	___xxtofl@sign^0,w,c
  2898  001062  B4D8               	btfsc	status,2,c
  2899  001064  EF36  F008         	goto	u1771
  2900  001068  EF38  F008         	goto	u1770
  2901  00106C                     u1771:
  2902  00106C  EF5A  F008         	goto	l840
  2903  001070                     u1770:
  2904  001070  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2905  001072  EF3F  F008         	goto	u1780
  2906  001076  EF3D  F008         	goto	u1781
  2907  00107A                     u1781:
  2908  00107A  EF5A  F008         	goto	l840
  2909  00107E                     u1780:
  2910  00107E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2911  001082  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2912  001086  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2913  00108A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2914  00108E  1E05               	comf	??___xxtofl^0,f,c
  2915  001090  1E06               	comf	(??___xxtofl+1)^0,f,c
  2916  001092  1E07               	comf	(??___xxtofl+2)^0,f,c
  2917  001094  1E08               	comf	(??___xxtofl+3)^0,f,c
  2918  001096  2A05               	incf	??___xxtofl^0,f,c
  2919  001098  0E00               	movlw	0
  2920  00109A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2921  00109C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2922  00109E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2923  0010A0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2924  0010A4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2925  0010A8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2926  0010AC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2927  0010B0  EF62  F008         	goto	l2057
  2928  0010B4                     l840:
  2929  0010B4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2930  0010B8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2931  0010BC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2932  0010C0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2933  0010C4                     l2057:
  2934  0010C4  5001               	movf	___xxtofl@val^0,w,c
  2935  0010C6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2936  0010C8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2937  0010CA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2938  0010CC  A4D8               	btfss	status,2,c
  2939  0010CE  EF6B  F008         	goto	u1791
  2940  0010D2  EF6D  F008         	goto	u1790
  2941  0010D6                     u1791:
  2942  0010D6  EF77  F008         	goto	l2063
  2943  0010DA                     u1790:
  2944  0010DA  0E00               	movlw	0
  2945  0010DC  6E01               	movwf	?___xxtofl^0,c
  2946  0010DE  0E00               	movlw	0
  2947  0010E0  6E02               	movwf	(?___xxtofl+1)^0,c
  2948  0010E2  0E00               	movlw	0
  2949  0010E4  6E03               	movwf	(?___xxtofl+2)^0,c
  2950  0010E6  0E00               	movlw	0
  2951  0010E8  6E04               	movwf	(?___xxtofl+3)^0,c
  2952  0010EA  EF08  F009         	goto	l843
  2953  0010EE                     l2063:
  2954  0010EE  0E96               	movlw	150
  2955  0010F0  6E0A               	movwf	___xxtofl@exp^0,c
  2956  0010F2  EF81  F008         	goto	l2067
  2957  0010F6                     l2065:
  2958  0010F6  2A0A               	incf	___xxtofl@exp^0,f,c
  2959  0010F8  90D8               	bcf	status,0,c
  2960  0010FA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2961  0010FC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2962  0010FE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2963  001100  320B               	rrcf	___xxtofl@arg^0,f,c
  2964  001102                     l2067:
  2965  001102  0E00               	movlw	0
  2966  001104  140B               	andwf	___xxtofl@arg^0,w,c
  2967  001106  6E05               	movwf	??___xxtofl^0,c
  2968  001108  0E00               	movlw	0
  2969  00110A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2970  00110C  6E06               	movwf	(??___xxtofl+1)^0,c
  2971  00110E  0E00               	movlw	0
  2972  001110  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2973  001112  6E07               	movwf	(??___xxtofl+2)^0,c
  2974  001114  0EFE               	movlw	254
  2975  001116  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2976  001118  6E08               	movwf	(??___xxtofl+3)^0,c
  2977  00111A  5005               	movf	??___xxtofl^0,w,c
  2978  00111C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2979  00111E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2980  001120  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2981  001122  A4D8               	btfss	status,2,c
  2982  001124  EF96  F008         	goto	u1801
  2983  001128  EF98  F008         	goto	u1800
  2984  00112C                     u1801:
  2985  00112C  EF7B  F008         	goto	l2065
  2986  001130                     u1800:
  2987  001130  EFA6  F008         	goto	l847
  2988  001134                     l2069:
  2989  001134  2A0A               	incf	___xxtofl@exp^0,f,c
  2990  001136  0E01               	movlw	1
  2991  001138  260B               	addwf	___xxtofl@arg^0,f,c
  2992  00113A  0E00               	movlw	0
  2993  00113C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2994  00113E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2995  001140  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2996  001142  90D8               	bcf	status,0,c
  2997  001144  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2998  001146  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2999  001148  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3000  00114A  320B               	rrcf	___xxtofl@arg^0,f,c
  3001  00114C                     l847:
  3002  00114C  0E00               	movlw	0
  3003  00114E  140B               	andwf	___xxtofl@arg^0,w,c
  3004  001150  6E05               	movwf	??___xxtofl^0,c
  3005  001152  0E00               	movlw	0
  3006  001154  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3007  001156  6E06               	movwf	(??___xxtofl+1)^0,c
  3008  001158  0E00               	movlw	0
  3009  00115A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3010  00115C  6E07               	movwf	(??___xxtofl+2)^0,c
  3011  00115E  0EFF               	movlw	255
  3012  001160  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3013  001162  6E08               	movwf	(??___xxtofl+3)^0,c
  3014  001164  5005               	movf	??___xxtofl^0,w,c
  3015  001166  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3016  001168  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3017  00116A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3018  00116C  A4D8               	btfss	status,2,c
  3019  00116E  EFBB  F008         	goto	u1811
  3020  001172  EFBD  F008         	goto	u1810
  3021  001176                     u1811:
  3022  001176  EF9A  F008         	goto	l2069
  3023  00117A                     u1810:
  3024  00117A  EFC5  F008         	goto	l2077
  3025  00117E                     l2075:
  3026  00117E  060A               	decf	___xxtofl@exp^0,f,c
  3027  001180  90D8               	bcf	status,0,c
  3028  001182  360B               	rlcf	___xxtofl@arg^0,f,c
  3029  001184  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3030  001186  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3031  001188  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3032  00118A                     l2077:
  3033  00118A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3034  00118C  EFCA  F008         	goto	u1821
  3035  001190  EFCC  F008         	goto	u1820
  3036  001194                     u1821:
  3037  001194  EFD4  F008         	goto	l854
  3038  001198                     u1820:
  3039  001198  0E02               	movlw	2
  3040  00119A  600A               	cpfslt	___xxtofl@exp^0,c
  3041  00119C  EFD2  F008         	goto	u1831
  3042  0011A0  EFD4  F008         	goto	u1830
  3043  0011A4                     u1831:
  3044  0011A4  EFBF  F008         	goto	l2075
  3045  0011A8                     u1830:
  3046  0011A8                     l854:
  3047  0011A8  B00A               	btfsc	___xxtofl@exp^0,0,c
  3048  0011AA  EFD9  F008         	goto	u1841
  3049  0011AE  EFDB  F008         	goto	u1840
  3050  0011B2                     u1841:
  3051  0011B2  EFDC  F008         	goto	l2083
  3052  0011B6                     u1840:
  3053  0011B6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3054  0011B8                     l2083:
  3055  0011B8  90D8               	bcf	status,0,c
  3056  0011BA  320A               	rrcf	___xxtofl@exp^0,f,c
  3057  0011BC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3058  0011C0  6A06               	clrf	(??___xxtofl+1)^0,c
  3059  0011C2  6A07               	clrf	(??___xxtofl+2)^0,c
  3060  0011C4  6A08               	clrf	(??___xxtofl+3)^0,c
  3061  0011C6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3062  0011CA  6A07               	clrf	(??___xxtofl+2)^0,c
  3063  0011CC  6A06               	clrf	(??___xxtofl+1)^0,c
  3064  0011CE  6A05               	clrf	??___xxtofl^0,c
  3065  0011D0  5005               	movf	??___xxtofl^0,w,c
  3066  0011D2  120B               	iorwf	___xxtofl@arg^0,f,c
  3067  0011D4  5006               	movf	(??___xxtofl+1)^0,w,c
  3068  0011D6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3069  0011D8  5007               	movf	(??___xxtofl+2)^0,w,c
  3070  0011DA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3071  0011DC  5008               	movf	(??___xxtofl+3)^0,w,c
  3072  0011DE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3073  0011E0  5009               	movf	___xxtofl@sign^0,w,c
  3074  0011E2  B4D8               	btfsc	status,2,c
  3075  0011E4  EFF6  F008         	goto	u1851
  3076  0011E8  EFF8  F008         	goto	u1850
  3077  0011EC                     u1851:
  3078  0011EC  EF00  F009         	goto	l2093
  3079  0011F0                     u1850:
  3080  0011F0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3081  0011F2  EFFF  F008         	goto	u1860
  3082  0011F6  EFFD  F008         	goto	u1861
  3083  0011FA                     u1861:
  3084  0011FA  EF00  F009         	goto	l2093
  3085  0011FE                     u1860:
  3086  0011FE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3087  001200                     l2093:
  3088  001200  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3089  001204  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3090  001208  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3091  00120C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3092  001210                     l843:
  3093  001210  0012               	return		;funcret
  3094  001212                     __end_of___xxtofl:
  3095                           	opt callstack 0
  3096                           
  3097 ;; *************** function ___fltol *****************
  3098 ;; Defined at:
  3099 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  f1              4   39[COMRAM] unsigned char 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  exp1            1   48[COMRAM] unsigned char 
  3104 ;;  sign1           1   47[COMRAM] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  4   39[COMRAM] long 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3114 ;;      Params:         4       0       0       0       0       0       0       0       0
  3115 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3116 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3117 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3118 ;;Total ram usage:       10 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_BH1750_read_word
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text18
  3128  00160A                     __ptext18:
  3129                           	opt callstack 0
  3130  00160A                     ___fltol:
  3131                           	opt callstack 28
  3132  00160A  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3133  00160C  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3134  00160E  6E31               	movwf	___fltol@exp1^0,c
  3135  001610  5031               	movf	___fltol@exp1^0,w,c
  3136  001612  A4D8               	btfss	status,2,c
  3137  001614  EF0E  F00B         	goto	u1701
  3138  001618  EF10  F00B         	goto	u1700
  3139  00161C                     u1701:
  3140  00161C  EF1A  F00B         	goto	l2013
  3141  001620                     u1700:
  3142  001620                     l2009:
  3143  001620  0E00               	movlw	0
  3144  001622  6E28               	movwf	?___fltol^0,c
  3145  001624  0E00               	movlw	0
  3146  001626  6E29               	movwf	(?___fltol+1)^0,c
  3147  001628  0E00               	movlw	0
  3148  00162A  6E2A               	movwf	(?___fltol+2)^0,c
  3149  00162C  0E00               	movlw	0
  3150  00162E  6E2B               	movwf	(?___fltol+3)^0,c
  3151  001630  EF87  F00B         	goto	l482
  3152  001634                     l2013:
  3153  001634  C028  F02C         	movff	___fltol@f1,??___fltol
  3154  001638  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3155  00163C  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3156  001640  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3157  001644  0E20               	movlw	32
  3158  001646  EF2A  F00B         	goto	u1710
  3159  00164A                     u1715:
  3160  00164A  90D8               	bcf	status,0,c
  3161  00164C  322F               	rrcf	(??___fltol+3)^0,f,c
  3162  00164E  322E               	rrcf	(??___fltol+2)^0,f,c
  3163  001650  322D               	rrcf	(??___fltol+1)^0,f,c
  3164  001652  322C               	rrcf	??___fltol^0,f,c
  3165  001654                     u1710:
  3166  001654  2EE8               	decfsz	wreg,f,c
  3167  001656  EF25  F00B         	goto	u1715
  3168  00165A  502C               	movf	??___fltol^0,w,c
  3169  00165C  6E30               	movwf	___fltol@sign1^0,c
  3170  00165E  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3171  001660  0EFF               	movlw	255
  3172  001662  1628               	andwf	___fltol@f1^0,f,c
  3173  001664  0EFF               	movlw	255
  3174  001666  1629               	andwf	(___fltol@f1+1)^0,f,c
  3175  001668  0EFF               	movlw	255
  3176  00166A  162A               	andwf	(___fltol@f1+2)^0,f,c
  3177  00166C  0E00               	movlw	0
  3178  00166E  162B               	andwf	(___fltol@f1+3)^0,f,c
  3179  001670  0E96               	movlw	150
  3180  001672  5E31               	subwf	___fltol@exp1^0,f,c
  3181  001674  BE31               	btfsc	___fltol@exp1^0,7,c
  3182  001676  EF41  F00B         	goto	u1720
  3183  00167A  EF3F  F00B         	goto	u1721
  3184  00167E                     u1721:
  3185  00167E  EF57  F00B         	goto	l2033
  3186  001682                     u1720:
  3187  001682  5031               	movf	___fltol@exp1^0,w,c
  3188  001684  0A80               	xorlw	128
  3189  001686  0F97               	addlw	151
  3190  001688  B0D8               	btfsc	status,0,c
  3191  00168A  EF49  F00B         	goto	u1731
  3192  00168E  EF4B  F00B         	goto	u1730
  3193  001692                     u1731:
  3194  001692  EF4D  F00B         	goto	l2029
  3195  001696                     u1730:
  3196  001696  EF10  F00B         	goto	l2009
  3197  00169A                     l2029:
  3198  00169A  90D8               	bcf	status,0,c
  3199  00169C  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3200  00169E  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3201  0016A0  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3202  0016A2  3228               	rrcf	___fltol@f1^0,f,c
  3203  0016A4  3E31               	incfsz	___fltol@exp1^0,f,c
  3204  0016A6  EF4D  F00B         	goto	l2029
  3205  0016AA  EF6F  F00B         	goto	l2043
  3206  0016AE                     l2033:
  3207  0016AE  0E1F               	movlw	31
  3208  0016B0  6431               	cpfsgt	___fltol@exp1^0,c
  3209  0016B2  EF5D  F00B         	goto	u1741
  3210  0016B6  EF5F  F00B         	goto	u1740
  3211  0016BA                     u1741:
  3212  0016BA  EF67  F00B         	goto	l2041
  3213  0016BE                     u1740:
  3214  0016BE  EF10  F00B         	goto	l2009
  3215  0016C2                     l2039:
  3216  0016C2  90D8               	bcf	status,0,c
  3217  0016C4  3628               	rlcf	___fltol@f1^0,f,c
  3218  0016C6  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3219  0016C8  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3220  0016CA  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3221  0016CC  0631               	decf	___fltol@exp1^0,f,c
  3222  0016CE                     l2041:
  3223  0016CE  5031               	movf	___fltol@exp1^0,w,c
  3224  0016D0  A4D8               	btfss	status,2,c
  3225  0016D2  EF6D  F00B         	goto	u1751
  3226  0016D6  EF6F  F00B         	goto	u1750
  3227  0016DA                     u1751:
  3228  0016DA  EF61  F00B         	goto	l2039
  3229  0016DE                     u1750:
  3230  0016DE                     l2043:
  3231  0016DE  5030               	movf	___fltol@sign1^0,w,c
  3232  0016E0  B4D8               	btfsc	status,2,c
  3233  0016E2  EF75  F00B         	goto	u1761
  3234  0016E6  EF77  F00B         	goto	u1760
  3235  0016EA                     u1761:
  3236  0016EA  EF7F  F00B         	goto	l2047
  3237  0016EE                     u1760:
  3238  0016EE  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3239  0016F0  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3240  0016F2  1E29               	comf	(___fltol@f1+1)^0,f,c
  3241  0016F4  6C28               	negf	___fltol@f1^0,c
  3242  0016F6  0E00               	movlw	0
  3243  0016F8  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3244  0016FA  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3245  0016FC  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3246  0016FE                     l2047:
  3247  0016FE  C028  F028         	movff	___fltol@f1,?___fltol
  3248  001702  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3249  001706  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3250  00170A  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3251  00170E                     l482:
  3252  00170E  0012               	return		;funcret
  3253  001710                     __end_of___fltol:
  3254                           	opt callstack 0
  3255                           
  3256 ;; *************** function ___fldiv *****************
  3257 ;; Defined at:
  3258 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  b               4   14[COMRAM] long 
  3261 ;;  a               4   18[COMRAM] long 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  grs             4   33[COMRAM] unsigned long 
  3264 ;;  rem             4   26[COMRAM] unsigned long 
  3265 ;;  new_exp         2   31[COMRAM] short 
  3266 ;;  aexp            1   38[COMRAM] unsigned char 
  3267 ;;  bexp            1   37[COMRAM] unsigned char 
  3268 ;;  sign            1   30[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  4   14[COMRAM] unsigned char 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3278 ;;      Params:         8       0       0       0       0       0       0       0       0
  3279 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3280 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3281 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3282 ;;Total ram usage:       25 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_BH1750_read_word
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text19
  3292  00082E                     __ptext19:
  3293                           	opt callstack 0
  3294  00082E                     ___fldiv:
  3295                           	opt callstack 28
  3296  00082E  5012               	movf	(___fldiv@b+3)^0,w,c
  3297  000830  0B80               	andlw	128
  3298  000832  6E1F               	movwf	___fldiv@sign^0,c
  3299  000834  5012               	movf	(___fldiv@b+3)^0,w,c
  3300  000836  2412               	addwf	(___fldiv@b+3)^0,w,c
  3301  000838  6E26               	movwf	___fldiv@bexp^0,c
  3302  00083A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3303  00083C  EF22  F004         	goto	u1471
  3304  000840  EF24  F004         	goto	u1470
  3305  000844                     u1471:
  3306  000844  EF25  F004         	goto	l1875
  3307  000848                     u1470:
  3308  000848  8026               	bsf	___fldiv@bexp^0,0,c
  3309  00084A                     l1875:
  3310  00084A  5026               	movf	___fldiv@bexp^0,w,c
  3311  00084C  B4D8               	btfsc	status,2,c
  3312  00084E  EF2B  F004         	goto	u1481
  3313  000852  EF2D  F004         	goto	u1480
  3314  000856                     u1481:
  3315  000856  EF42  F004         	goto	l1885
  3316  00085A                     u1480:
  3317  00085A  2826               	incf	___fldiv@bexp^0,w,c
  3318  00085C  A4D8               	btfss	status,2,c
  3319  00085E  EF33  F004         	goto	u1491
  3320  000862  EF35  F004         	goto	u1490
  3321  000866                     u1491:
  3322  000866  EF3D  F004         	goto	l1881
  3323  00086A                     u1490:
  3324  00086A  0E00               	movlw	0
  3325  00086C  6E0F               	movwf	___fldiv@b^0,c
  3326  00086E  0E00               	movlw	0
  3327  000870  6E10               	movwf	(___fldiv@b+1)^0,c
  3328  000872  0E00               	movlw	0
  3329  000874  6E11               	movwf	(___fldiv@b+2)^0,c
  3330  000876  0E00               	movlw	0
  3331  000878  6E12               	movwf	(___fldiv@b+3)^0,c
  3332  00087A                     l1881:
  3333  00087A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3334  00087C  0E00               	movlw	0
  3335  00087E  6E12               	movwf	(___fldiv@b+3)^0,c
  3336  000880  EF4A  F004         	goto	l1887
  3337  000884                     l1885:
  3338  000884  0E00               	movlw	0
  3339  000886  6E0F               	movwf	___fldiv@b^0,c
  3340  000888  0E00               	movlw	0
  3341  00088A  6E10               	movwf	(___fldiv@b+1)^0,c
  3342  00088C  0E00               	movlw	0
  3343  00088E  6E11               	movwf	(___fldiv@b+2)^0,c
  3344  000890  0E00               	movlw	0
  3345  000892  6E12               	movwf	(___fldiv@b+3)^0,c
  3346  000894                     l1887:
  3347  000894  5016               	movf	(___fldiv@a+3)^0,w,c
  3348  000896  0B80               	andlw	128
  3349  000898  1A1F               	xorwf	___fldiv@sign^0,f,c
  3350  00089A  5016               	movf	(___fldiv@a+3)^0,w,c
  3351  00089C  2416               	addwf	(___fldiv@a+3)^0,w,c
  3352  00089E  6E27               	movwf	___fldiv@aexp^0,c
  3353  0008A0  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3354  0008A2  EF55  F004         	goto	u1501
  3355  0008A6  EF57  F004         	goto	u1500
  3356  0008AA                     u1501:
  3357  0008AA  EF58  F004         	goto	l1895
  3358  0008AE                     u1500:
  3359  0008AE  8027               	bsf	___fldiv@aexp^0,0,c
  3360  0008B0                     l1895:
  3361  0008B0  5027               	movf	___fldiv@aexp^0,w,c
  3362  0008B2  B4D8               	btfsc	status,2,c
  3363  0008B4  EF5E  F004         	goto	u1511
  3364  0008B8  EF60  F004         	goto	u1510
  3365  0008BC                     u1511:
  3366  0008BC  EF75  F004         	goto	l1905
  3367  0008C0                     u1510:
  3368  0008C0  2827               	incf	___fldiv@aexp^0,w,c
  3369  0008C2  A4D8               	btfss	status,2,c
  3370  0008C4  EF66  F004         	goto	u1521
  3371  0008C8  EF68  F004         	goto	u1520
  3372  0008CC                     u1521:
  3373  0008CC  EF70  F004         	goto	l1901
  3374  0008D0                     u1520:
  3375  0008D0  0E00               	movlw	0
  3376  0008D2  6E13               	movwf	___fldiv@a^0,c
  3377  0008D4  0E00               	movlw	0
  3378  0008D6  6E14               	movwf	(___fldiv@a+1)^0,c
  3379  0008D8  0E00               	movlw	0
  3380  0008DA  6E15               	movwf	(___fldiv@a+2)^0,c
  3381  0008DC  0E00               	movlw	0
  3382  0008DE  6E16               	movwf	(___fldiv@a+3)^0,c
  3383  0008E0                     l1901:
  3384  0008E0  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3385  0008E2  0E00               	movlw	0
  3386  0008E4  6E16               	movwf	(___fldiv@a+3)^0,c
  3387  0008E6  EF7D  F004         	goto	l1907
  3388  0008EA                     l1905:
  3389  0008EA  0E00               	movlw	0
  3390  0008EC  6E13               	movwf	___fldiv@a^0,c
  3391  0008EE  0E00               	movlw	0
  3392  0008F0  6E14               	movwf	(___fldiv@a+1)^0,c
  3393  0008F2  0E00               	movlw	0
  3394  0008F4  6E15               	movwf	(___fldiv@a+2)^0,c
  3395  0008F6  0E00               	movlw	0
  3396  0008F8  6E16               	movwf	(___fldiv@a+3)^0,c
  3397  0008FA                     l1907:
  3398  0008FA  5013               	movf	___fldiv@a^0,w,c
  3399  0008FC  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3400  0008FE  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3401  000900  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3402  000902  A4D8               	btfss	status,2,c
  3403  000904  EF86  F004         	goto	u1531
  3404  000908  EF88  F004         	goto	u1530
  3405  00090C                     u1531:
  3406  00090C  EFA0  F004         	goto	l1919
  3407  000910                     u1530:
  3408  000910  0E00               	movlw	0
  3409  000912  6E0F               	movwf	___fldiv@b^0,c
  3410  000914  0E00               	movlw	0
  3411  000916  6E10               	movwf	(___fldiv@b+1)^0,c
  3412  000918  0E00               	movlw	0
  3413  00091A  6E11               	movwf	(___fldiv@b+2)^0,c
  3414  00091C  0E00               	movlw	0
  3415  00091E  6E12               	movwf	(___fldiv@b+3)^0,c
  3416  000920  0E80               	movlw	128
  3417  000922  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3418  000924  0E7F               	movlw	127
  3419  000926  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3420  000928                     l1913:
  3421  000928  501F               	movf	___fldiv@sign^0,w,c
  3422  00092A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3423  00092C  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3424  000930  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3425  000934  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3426  000938  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3427  00093C  EFE3  F005         	goto	l767
  3428  000940                     l1919:
  3429  000940  5026               	movf	___fldiv@bexp^0,w,c
  3430  000942  A4D8               	btfss	status,2,c
  3431  000944  EFA6  F004         	goto	u1541
  3432  000948  EFA8  F004         	goto	u1540
  3433  00094C                     u1541:
  3434  00094C  EFB2  F004         	goto	l1927
  3435  000950                     u1540:
  3436  000950  0E00               	movlw	0
  3437  000952  6E0F               	movwf	?___fldiv^0,c
  3438  000954  0E00               	movlw	0
  3439  000956  6E10               	movwf	(?___fldiv+1)^0,c
  3440  000958  0E00               	movlw	0
  3441  00095A  6E11               	movwf	(?___fldiv+2)^0,c
  3442  00095C  0E00               	movlw	0
  3443  00095E  6E12               	movwf	(?___fldiv+3)^0,c
  3444  000960  EFE3  F005         	goto	l767
  3445  000964                     l1927:
  3446  000964  5027               	movf	___fldiv@aexp^0,w,c
  3447  000966  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3448  00096A  6A18               	clrf	(??___fldiv+1)^0,c
  3449  00096C  5E17               	subwf	??___fldiv^0,f,c
  3450  00096E  0E00               	movlw	0
  3451  000970  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3452  000972  0E7F               	movlw	127
  3453  000974  2417               	addwf	??___fldiv^0,w,c
  3454  000976  6E20               	movwf	___fldiv@new_exp^0,c
  3455  000978  0E00               	movlw	0
  3456  00097A  2018               	addwfc	(??___fldiv+1)^0,w,c
  3457  00097C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3458  00097E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3459  000982  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3460  000986  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3461  00098A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3462  00098E  0E00               	movlw	0
  3463  000990  6E0F               	movwf	___fldiv@b^0,c
  3464  000992  0E00               	movlw	0
  3465  000994  6E10               	movwf	(___fldiv@b+1)^0,c
  3466  000996  0E00               	movlw	0
  3467  000998  6E11               	movwf	(___fldiv@b+2)^0,c
  3468  00099A  0E00               	movlw	0
  3469  00099C  6E12               	movwf	(___fldiv@b+3)^0,c
  3470  00099E  0E00               	movlw	0
  3471  0009A0  6E22               	movwf	___fldiv@grs^0,c
  3472  0009A2  0E00               	movlw	0
  3473  0009A4  6E23               	movwf	(___fldiv@grs+1)^0,c
  3474  0009A6  0E00               	movlw	0
  3475  0009A8  6E24               	movwf	(___fldiv@grs+2)^0,c
  3476  0009AA  0E00               	movlw	0
  3477  0009AC  6E25               	movwf	(___fldiv@grs+3)^0,c
  3478  0009AE  0E00               	movlw	0
  3479  0009B0  6E27               	movwf	___fldiv@aexp^0,c
  3480  0009B2  EF13  F005         	goto	l769
  3481  0009B6                     l1937:
  3482  0009B6  5027               	movf	___fldiv@aexp^0,w,c
  3483  0009B8  B4D8               	btfsc	status,2,c
  3484  0009BA  EFE1  F004         	goto	u1551
  3485  0009BE  EFE3  F004         	goto	u1550
  3486  0009C2                     u1551:
  3487  0009C2  EFFA  F004         	goto	l1945
  3488  0009C6                     u1550:
  3489  0009C6  90D8               	bcf	status,0,c
  3490  0009C8  361B               	rlcf	___fldiv@rem^0,f,c
  3491  0009CA  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3492  0009CC  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3493  0009CE  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3494  0009D0  90D8               	bcf	status,0,c
  3495  0009D2  360F               	rlcf	___fldiv@b^0,f,c
  3496  0009D4  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3497  0009D6  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3498  0009D8  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3499  0009DA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3500  0009DC  EFF2  F004         	goto	u1561
  3501  0009E0  EFF4  F004         	goto	u1560
  3502  0009E4                     u1561:
  3503  0009E4  EFF5  F004         	goto	l772
  3504  0009E8                     u1560:
  3505  0009E8  800F               	bsf	___fldiv@b^0,0,c
  3506  0009EA                     l772:
  3507  0009EA  90D8               	bcf	status,0,c
  3508  0009EC  3622               	rlcf	___fldiv@grs^0,f,c
  3509  0009EE  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3510  0009F0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3511  0009F2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3512  0009F4                     l1945:
  3513  0009F4  5013               	movf	___fldiv@a^0,w,c
  3514  0009F6  5C1B               	subwf	___fldiv@rem^0,w,c
  3515  0009F8  5014               	movf	(___fldiv@a+1)^0,w,c
  3516  0009FA  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3517  0009FC  5015               	movf	(___fldiv@a+2)^0,w,c
  3518  0009FE  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3519  000A00  5016               	movf	(___fldiv@a+3)^0,w,c
  3520  000A02  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3521  000A04  A0D8               	btfss	status,0,c
  3522  000A06  EF07  F005         	goto	u1571
  3523  000A0A  EF09  F005         	goto	u1570
  3524  000A0E                     u1571:
  3525  000A0E  EF12  F005         	goto	l1951
  3526  000A12                     u1570:
  3527  000A12  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3528  000A14  5013               	movf	___fldiv@a^0,w,c
  3529  000A16  5E1B               	subwf	___fldiv@rem^0,f,c
  3530  000A18  5014               	movf	(___fldiv@a+1)^0,w,c
  3531  000A1A  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3532  000A1C  5015               	movf	(___fldiv@a+2)^0,w,c
  3533  000A1E  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3534  000A20  5016               	movf	(___fldiv@a+3)^0,w,c
  3535  000A22  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3536  000A24                     l1951:
  3537  000A24  2A27               	incf	___fldiv@aexp^0,f,c
  3538  000A26                     l769:
  3539  000A26  0E19               	movlw	25
  3540  000A28  6427               	cpfsgt	___fldiv@aexp^0,c
  3541  000A2A  EF19  F005         	goto	u1581
  3542  000A2E  EF1B  F005         	goto	u1580
  3543  000A32                     u1581:
  3544  000A32  EFDB  F004         	goto	l1937
  3545  000A36                     u1580:
  3546  000A36  501B               	movf	___fldiv@rem^0,w,c
  3547  000A38  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3548  000A3A  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3549  000A3C  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3550  000A3E  B4D8               	btfsc	status,2,c
  3551  000A40  EF24  F005         	goto	u1591
  3552  000A44  EF26  F005         	goto	u1590
  3553  000A48                     u1591:
  3554  000A48  EF3E  F005         	goto	l1963
  3555  000A4C                     u1590:
  3556  000A4C  8022               	bsf	___fldiv@grs^0,0,c
  3557  000A4E  EF3E  F005         	goto	l1963
  3558  000A52                     l1957:
  3559  000A52  90D8               	bcf	status,0,c
  3560  000A54  360F               	rlcf	___fldiv@b^0,f,c
  3561  000A56  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3562  000A58  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3563  000A5A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3564  000A5C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3565  000A5E  EF33  F005         	goto	u1601
  3566  000A62  EF35  F005         	goto	u1600
  3567  000A66                     u1601:
  3568  000A66  EF36  F005         	goto	l778
  3569  000A6A                     u1600:
  3570  000A6A  800F               	bsf	___fldiv@b^0,0,c
  3571  000A6C                     l778:
  3572  000A6C  90D8               	bcf	status,0,c
  3573  000A6E  3622               	rlcf	___fldiv@grs^0,f,c
  3574  000A70  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3575  000A72  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3576  000A74  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3577  000A76  0620               	decf	___fldiv@new_exp^0,f,c
  3578  000A78  A0D8               	btfss	status,0,c
  3579  000A7A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3580  000A7C                     l1963:
  3581  000A7C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3582  000A7E  EF43  F005         	goto	u1611
  3583  000A82  EF45  F005         	goto	u1610
  3584  000A86                     u1611:
  3585  000A86  EF29  F005         	goto	l1957
  3586  000A8A                     u1610:
  3587  000A8A  0E00               	movlw	0
  3588  000A8C  6E27               	movwf	___fldiv@aexp^0,c
  3589  000A8E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3590  000A90  EF4C  F005         	goto	u1621
  3591  000A94  EF4E  F005         	goto	u1620
  3592  000A98                     u1621:
  3593  000A98  EF72  F005         	goto	l780
  3594  000A9C                     u1620:
  3595  000A9C  0EFF               	movlw	255
  3596  000A9E  1422               	andwf	___fldiv@grs^0,w,c
  3597  000AA0  6E17               	movwf	??___fldiv^0,c
  3598  000AA2  0EFF               	movlw	255
  3599  000AA4  1423               	andwf	(___fldiv@grs+1)^0,w,c
  3600  000AA6  6E18               	movwf	(??___fldiv+1)^0,c
  3601  000AA8  0EFF               	movlw	255
  3602  000AAA  1424               	andwf	(___fldiv@grs+2)^0,w,c
  3603  000AAC  6E19               	movwf	(??___fldiv+2)^0,c
  3604  000AAE  0E7F               	movlw	127
  3605  000AB0  1425               	andwf	(___fldiv@grs+3)^0,w,c
  3606  000AB2  6E1A               	movwf	(??___fldiv+3)^0,c
  3607  000AB4  5017               	movf	??___fldiv^0,w,c
  3608  000AB6  1018               	iorwf	(??___fldiv+1)^0,w,c
  3609  000AB8  1019               	iorwf	(??___fldiv+2)^0,w,c
  3610  000ABA  101A               	iorwf	(??___fldiv+3)^0,w,c
  3611  000ABC  B4D8               	btfsc	status,2,c
  3612  000ABE  EF63  F005         	goto	u1631
  3613  000AC2  EF65  F005         	goto	u1630
  3614  000AC6                     u1631:
  3615  000AC6  EF69  F005         	goto	l781
  3616  000ACA                     u1630:
  3617  000ACA                     l1971:
  3618  000ACA  0E01               	movlw	1
  3619  000ACC  6E27               	movwf	___fldiv@aexp^0,c
  3620  000ACE  EF72  F005         	goto	l780
  3621  000AD2                     l781:
  3622  000AD2  A00F               	btfss	___fldiv@b^0,0,c
  3623  000AD4  EF6E  F005         	goto	u1641
  3624  000AD8  EF70  F005         	goto	u1640
  3625  000ADC                     u1641:
  3626  000ADC  EF72  F005         	goto	l780
  3627  000AE0                     u1640:
  3628  000AE0  EF65  F005         	goto	l1971
  3629  000AE4                     l780:
  3630  000AE4  5027               	movf	___fldiv@aexp^0,w,c
  3631  000AE6  B4D8               	btfsc	status,2,c
  3632  000AE8  EF78  F005         	goto	u1651
  3633  000AEC  EF7A  F005         	goto	u1650
  3634  000AF0                     u1651:
  3635  000AF0  EF9E  F005         	goto	l1983
  3636  000AF4                     u1650:
  3637  000AF4  0E01               	movlw	1
  3638  000AF6  260F               	addwf	___fldiv@b^0,f,c
  3639  000AF8  0E00               	movlw	0
  3640  000AFA  2210               	addwfc	(___fldiv@b+1)^0,f,c
  3641  000AFC  2211               	addwfc	(___fldiv@b+2)^0,f,c
  3642  000AFE  2212               	addwfc	(___fldiv@b+3)^0,f,c
  3643  000B00  A012               	btfss	(___fldiv@b+3)^0,0,c
  3644  000B02  EF85  F005         	goto	u1661
  3645  000B06  EF87  F005         	goto	u1660
  3646  000B0A                     u1661:
  3647  000B0A  EF9E  F005         	goto	l1983
  3648  000B0E                     u1660:
  3649  000B0E  C00F  F017         	movff	___fldiv@b,??___fldiv
  3650  000B12  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3651  000B16  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3652  000B1A  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3653  000B1E  341A               	rlcf	(??___fldiv+3)^0,w,c
  3654  000B20  321A               	rrcf	(??___fldiv+3)^0,f,c
  3655  000B22  3219               	rrcf	(??___fldiv+2)^0,f,c
  3656  000B24  3218               	rrcf	(??___fldiv+1)^0,f,c
  3657  000B26  3217               	rrcf	??___fldiv^0,f,c
  3658  000B28  C017  F00F         	movff	??___fldiv,___fldiv@b
  3659  000B2C  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3660  000B30  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3661  000B34  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3662  000B38  4A20               	infsnz	___fldiv@new_exp^0,f,c
  3663  000B3A  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  3664  000B3C                     l1983:
  3665  000B3C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3666  000B3E  EFA9  F005         	goto	u1671
  3667  000B42  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3668  000B44  E108               	bnz	u1670
  3669  000B46  2820               	incf	___fldiv@new_exp^0,w,c
  3670  000B48  A0D8               	btfss	status,0,c
  3671  000B4A  EFA9  F005         	goto	u1671
  3672  000B4E  EFAB  F005         	goto	u1670
  3673  000B52                     u1671:
  3674  000B52  EFB6  F005         	goto	l1987
  3675  000B56                     u1670:
  3676  000B56  0E00               	movlw	0
  3677  000B58  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3678  000B5A  6820               	setf	___fldiv@new_exp^0,c
  3679  000B5C  0E00               	movlw	0
  3680  000B5E  6E0F               	movwf	___fldiv@b^0,c
  3681  000B60  0E00               	movlw	0
  3682  000B62  6E10               	movwf	(___fldiv@b+1)^0,c
  3683  000B64  0E00               	movlw	0
  3684  000B66  6E11               	movwf	(___fldiv@b+2)^0,c
  3685  000B68  0E00               	movlw	0
  3686  000B6A  6E12               	movwf	(___fldiv@b+3)^0,c
  3687  000B6C                     l1987:
  3688  000B6C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3689  000B6E  EFC3  F005         	goto	u1680
  3690  000B72  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3691  000B74  E106               	bnz	u1681
  3692  000B76  0420               	decf	___fldiv@new_exp^0,w,c
  3693  000B78  B0D8               	btfsc	status,0,c
  3694  000B7A  EFC1  F005         	goto	u1681
  3695  000B7E  EFC3  F005         	goto	u1680
  3696  000B82                     u1681:
  3697  000B82  EFD1  F005         	goto	l1991
  3698  000B86                     u1680:
  3699  000B86  0E00               	movlw	0
  3700  000B88  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3701  000B8A  0E00               	movlw	0
  3702  000B8C  6E20               	movwf	___fldiv@new_exp^0,c
  3703  000B8E  0E00               	movlw	0
  3704  000B90  6E0F               	movwf	___fldiv@b^0,c
  3705  000B92  0E00               	movlw	0
  3706  000B94  6E10               	movwf	(___fldiv@b+1)^0,c
  3707  000B96  0E00               	movlw	0
  3708  000B98  6E11               	movwf	(___fldiv@b+2)^0,c
  3709  000B9A  0E00               	movlw	0
  3710  000B9C  6E12               	movwf	(___fldiv@b+3)^0,c
  3711  000B9E  0E00               	movlw	0
  3712  000BA0  6E1F               	movwf	___fldiv@sign^0,c
  3713  000BA2                     l1991:
  3714  000BA2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  3715  000BA6  A026               	btfss	___fldiv@bexp^0,0,c
  3716  000BA8  EFD8  F005         	goto	u1691
  3717  000BAC  EFDA  F005         	goto	u1690
  3718  000BB0                     u1691:
  3719  000BB0  EFDD  F005         	goto	l1997
  3720  000BB4                     u1690:
  3721  000BB4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3722  000BB6  EFDE  F005         	goto	l1999
  3723  000BBA                     l1997:
  3724  000BBA  9E11               	bcf	(___fldiv@b+2)^0,7,c
  3725  000BBC                     l1999:
  3726  000BBC  90D8               	bcf	status,0,c
  3727  000BBE  3026               	rrcf	___fldiv@bexp^0,w,c
  3728  000BC0  6E12               	movwf	(___fldiv@b+3)^0,c
  3729  000BC2  EF94  F004         	goto	l1913
  3730  000BC6                     l767:
  3731  000BC6  0012               	return		;funcret
  3732  000BC8                     __end_of___fldiv:
  3733                           	opt callstack 0
  3734                           
  3735 ;; *************** function _UART_printf *****************
  3736 ;; Defined at:
  3737 ;;		line 47 in file "./UART.h"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  3740 ;;		 -> main@buffer(30), STR_1(21), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         2       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3755 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:        2 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    1
  3759 ;; This function calls:
  3760 ;;		_UART_write
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text20
  3767  001ABE                     __ptext20:
  3768                           	opt callstack 0
  3769  001ABE                     _UART_printf:
  3770                           	opt callstack 29
  3771  001ABE                     
  3772                           ;./UART.h: 48:     while (*cadena) {
  3773  001ABE  EF75  F00D         	goto	l2203
  3774  001AC2                     l2199:
  3775                           
  3776                           ;./UART.h: 49:         UART_write(*cadena++);
  3777  001AC2  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  3778  001AC6  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3779  001ACA  6AF8               	clrf	tblptru,c
  3780  001ACC  0E07               	movlw	(high __ramtop+-1)
  3781  001ACE  64F7               	cpfsgt	tblptrh,c
  3782  001AD0  D003               	bra	u1957
  3783  001AD2  0008               	tblrd		*
  3784  001AD4  50F5               	movf	tablat,w,c
  3785  001AD6  D005               	bra	u1950
  3786  001AD8                     u1957:
  3787  001AD8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3788  001ADC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3789  001AE0  50E7               	movf	indf1,w,c
  3790  001AE2                     u1950:
  3791  001AE2  EC85  F00E         	call	_UART_write
  3792  001AE6  4A02               	infsnz	UART_printf@cadena^0,f,c
  3793  001AE8  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  3794  001AEA                     l2203:
  3795                           
  3796                           ;./UART.h: 48:     while (*cadena) {
  3797  001AEA  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  3798  001AEE  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3799  001AF2  6AF8               	clrf	tblptru,c
  3800  001AF4  0E07               	movlw	(high __ramtop+-1)
  3801  001AF6  64F7               	cpfsgt	tblptrh,c
  3802  001AF8  D003               	bra	u1967
  3803  001AFA  0008               	tblrd		*
  3804  001AFC  50F5               	movf	tablat,w,c
  3805  001AFE  D005               	bra	u1960
  3806  001B00                     u1967:
  3807  001B00  CFF6 FFE1          	movff	tblptrl,fsr1l
  3808  001B04  CFF7 FFE2          	movff	tblptrh,fsr1h
  3809  001B08  50E7               	movf	indf1,w,c
  3810  001B0A                     u1960:
  3811  001B0A  0900               	iorlw	0
  3812  001B0C  A4D8               	btfss	status,2,c
  3813  001B0E  EF8B  F00D         	goto	u1971
  3814  001B12  EF8D  F00D         	goto	u1970
  3815  001B16                     u1971:
  3816  001B16  EF61  F00D         	goto	l2199
  3817  001B1A                     u1970:
  3818  001B1A  0012               	return		;funcret
  3819  001B1C                     __end_of_UART_printf:
  3820                           	opt callstack 0
  3821                           
  3822 ;; *************** function _UART_write *****************
  3823 ;; Defined at:
  3824 ;;		line 42 in file "./UART.h"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  dato            1    wreg     unsigned char 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  dato            1    0[COMRAM] unsigned char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3838 ;;      Params:         0       0       0       0       0       0       0       0       0
  3839 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3841 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3842 ;;Total ram usage:        1 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_UART_printf
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text21
  3852  001D0A                     __ptext21:
  3853                           	opt callstack 0
  3854  001D0A                     _UART_write:
  3855                           	opt callstack 29
  3856                           
  3857                           ;incstack = 0
  3858                           ;UART_write@dato stored from wreg
  3859  001D0A  6E01               	movwf	UART_write@dato^0,c
  3860  001D0C                     
  3861                           ;./UART.h: 43:     TXREG = dato;
  3862  001D0C  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  3863  001D10                     l54:
  3864  001D10  A2AC               	btfss	172,1,c	;volatile
  3865  001D12  EF8D  F00E         	goto	u1871
  3866  001D16  EF8F  F00E         	goto	u1870
  3867  001D1A                     u1871:
  3868  001D1A  EF88  F00E         	goto	l54
  3869  001D1E                     u1870:
  3870  001D1E  0012               	return		;funcret
  3871  001D20                     __end_of_UART_write:
  3872                           	opt callstack 0
  3873                           
  3874 ;; *************** function _UART_init *****************
  3875 ;; Defined at:
  3876 ;;		line 13 in file "./UART.h"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  BAUD            4   14[COMRAM] long 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  frecuenciaCr    4    0        long 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3890 ;;      Params:         4       0       0       0       0       0       0       0       0
  3891 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3893 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3894 ;;Total ram usage:       12 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    1
  3897 ;; This function calls:
  3898 ;;		___aldiv
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text22
  3905  0019EC                     __ptext22:
  3906                           	opt callstack 0
  3907  0019EC                     _UART_init:
  3908                           	opt callstack 29
  3909  0019EC                     
  3910                           ;./UART.h: 16:     TRISC6 = 0;
  3911  0019EC  9C94               	bcf	3988,6,c	;volatile
  3912  0019EE                     
  3913                           ;./UART.h: 17:     TRISC7 = 1;
  3914  0019EE  8E94               	bsf	3988,7,c	;volatile
  3915  0019F0                     
  3916                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  3917  0019F0  0E10               	movlw	16
  3918  0019F2  6E05               	movwf	___aldiv@divisor^0,c
  3919  0019F4  0E00               	movlw	0
  3920  0019F6  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3921  0019F8  0E00               	movlw	0
  3922  0019FA  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3923  0019FC  0E00               	movlw	0
  3924  0019FE  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3925  001A00  0E00               	movlw	0
  3926  001A02  6E01               	movwf	___aldiv@dividend^0,c
  3927  001A04  0E09               	movlw	9
  3928  001A06  6E02               	movwf	(___aldiv@dividend+1)^0,c
  3929  001A08  0E3D               	movlw	61
  3930  001A0A  6E03               	movwf	(___aldiv@dividend+2)^0,c
  3931  001A0C  0E00               	movlw	0
  3932  001A0E  6E04               	movwf	(___aldiv@dividend+3)^0,c
  3933  001A10  EC7F  F00A         	call	___aldiv	;wreg free
  3934  001A14  C001  F017         	movff	?___aldiv,_UART_init$1077
  3935  001A18  C002  F018         	movff	?___aldiv+1,_UART_init$1077+1
  3936  001A1C  C003  F019         	movff	?___aldiv+2,_UART_init$1077+2
  3937  001A20  C004  F01A         	movff	?___aldiv+3,_UART_init$1077+3
  3938  001A24                     
  3939                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  3940  001A24  C017  F001         	movff	_UART_init$1077,___aldiv@dividend
  3941  001A28  C018  F002         	movff	_UART_init$1077+1,___aldiv@dividend+1
  3942  001A2C  C019  F003         	movff	_UART_init$1077+2,___aldiv@dividend+2
  3943  001A30  C01A  F004         	movff	_UART_init$1077+3,___aldiv@dividend+3
  3944  001A34  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  3945  001A38  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  3946  001A3C  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  3947  001A40  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  3948  001A44  EC7F  F00A         	call	___aldiv	;wreg free
  3949  001A48  0401               	decf	?___aldiv^0,w,c
  3950  001A4A  6EAF               	movwf	175,c	;volatile
  3951  001A4C                     
  3952                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
  3953  001A4C  84AC               	bsf	172,2,c	;volatile
  3954  001A4E                     
  3955                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
  3956  001A4E  98AC               	bcf	172,4,c	;volatile
  3957  001A50                     
  3958                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
  3959  001A50  8EAB               	bsf	171,7,c	;volatile
  3960  001A52                     
  3961                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
  3962  001A52  9CAC               	bcf	172,6,c	;volatile
  3963  001A54                     
  3964                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
  3965  001A54  8AAC               	bsf	172,5,c	;volatile
  3966  001A56                     
  3967                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
  3968  001A56  9CAB               	bcf	171,6,c	;volatile
  3969  001A58                     
  3970                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
  3971  001A58  88AB               	bsf	171,4,c	;volatile
  3972  001A5A  0012               	return		;funcret
  3973  001A5C                     __end_of_UART_init:
  3974                           	opt callstack 0
  3975                           
  3976 ;; *************** function ___aldiv *****************
  3977 ;; Defined at:
  3978 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  dividend        4    0[COMRAM] long 
  3981 ;;  divisor         4    4[COMRAM] long 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  quotient        4   10[COMRAM] long 
  3984 ;;  sign            1    9[COMRAM] unsigned char 
  3985 ;;  counter         1    8[COMRAM] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  4    0[COMRAM] long 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3995 ;;      Params:         8       0       0       0       0       0       0       0       0
  3996 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3998 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3999 ;;Total ram usage:       14 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_UART_init
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text23
  4009  0014FE                     __ptext23:
  4010                           	opt callstack 0
  4011  0014FE                     ___aldiv:
  4012                           	opt callstack 29
  4013  0014FE  0E00               	movlw	0
  4014  001500  6E0A               	movwf	___aldiv@sign^0,c
  4015  001502  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  4016  001504  EF88  F00A         	goto	u1890
  4017  001508  EF86  F00A         	goto	u1891
  4018  00150C                     u1891:
  4019  00150C  EF92  F00A         	goto	l2137
  4020  001510                     u1890:
  4021  001510  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  4022  001512  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  4023  001514  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  4024  001516  6C05               	negf	___aldiv@divisor^0,c
  4025  001518  0E00               	movlw	0
  4026  00151A  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  4027  00151C  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  4028  00151E  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  4029  001520  0E01               	movlw	1
  4030  001522  6E0A               	movwf	___aldiv@sign^0,c
  4031  001524                     l2137:
  4032  001524  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  4033  001526  EF99  F00A         	goto	u1900
  4034  00152A  EF97  F00A         	goto	u1901
  4035  00152E                     u1901:
  4036  00152E  EFA3  F00A         	goto	l2143
  4037  001532                     u1900:
  4038  001532  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  4039  001534  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  4040  001536  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  4041  001538  6C01               	negf	___aldiv@dividend^0,c
  4042  00153A  0E00               	movlw	0
  4043  00153C  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  4044  00153E  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  4045  001540  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  4046  001542  0E01               	movlw	1
  4047  001544  1A0A               	xorwf	___aldiv@sign^0,f,c
  4048  001546                     l2143:
  4049  001546  0E00               	movlw	0
  4050  001548  6E0B               	movwf	___aldiv@quotient^0,c
  4051  00154A  0E00               	movlw	0
  4052  00154C  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  4053  00154E  0E00               	movlw	0
  4054  001550  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  4055  001552  0E00               	movlw	0
  4056  001554  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  4057  001556  5005               	movf	___aldiv@divisor^0,w,c
  4058  001558  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  4059  00155A  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  4060  00155C  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  4061  00155E  B4D8               	btfsc	status,2,c
  4062  001560  EFB4  F00A         	goto	u1911
  4063  001564  EFB6  F00A         	goto	u1910
  4064  001568                     u1911:
  4065  001568  EFEC  F00A         	goto	l2165
  4066  00156C                     u1910:
  4067  00156C  0E01               	movlw	1
  4068  00156E  6E09               	movwf	___aldiv@counter^0,c
  4069  001570  EFC0  F00A         	goto	l2151
  4070  001574                     l2149:
  4071  001574  90D8               	bcf	status,0,c
  4072  001576  3605               	rlcf	___aldiv@divisor^0,f,c
  4073  001578  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  4074  00157A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  4075  00157C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  4076  00157E  2A09               	incf	___aldiv@counter^0,f,c
  4077  001580                     l2151:
  4078  001580  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  4079  001582  EFC5  F00A         	goto	u1921
  4080  001586  EFC7  F00A         	goto	u1920
  4081  00158A                     u1921:
  4082  00158A  EFBA  F00A         	goto	l2149
  4083  00158E                     u1920:
  4084  00158E                     l2153:
  4085  00158E  90D8               	bcf	status,0,c
  4086  001590  360B               	rlcf	___aldiv@quotient^0,f,c
  4087  001592  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  4088  001594  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  4089  001596  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  4090  001598  5005               	movf	___aldiv@divisor^0,w,c
  4091  00159A  5C01               	subwf	___aldiv@dividend^0,w,c
  4092  00159C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4093  00159E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  4094  0015A0  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4095  0015A2  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  4096  0015A4  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4097  0015A6  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  4098  0015A8  A0D8               	btfss	status,0,c
  4099  0015AA  EFD9  F00A         	goto	u1931
  4100  0015AE  EFDB  F00A         	goto	u1930
  4101  0015B2                     u1931:
  4102  0015B2  EFE4  F00A         	goto	l2161
  4103  0015B6                     u1930:
  4104  0015B6  5005               	movf	___aldiv@divisor^0,w,c
  4105  0015B8  5E01               	subwf	___aldiv@dividend^0,f,c
  4106  0015BA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4107  0015BC  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  4108  0015BE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4109  0015C0  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  4110  0015C2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4111  0015C4  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  4112  0015C6  800B               	bsf	___aldiv@quotient^0,0,c
  4113  0015C8                     l2161:
  4114  0015C8  90D8               	bcf	status,0,c
  4115  0015CA  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  4116  0015CC  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  4117  0015CE  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  4118  0015D0  3205               	rrcf	___aldiv@divisor^0,f,c
  4119  0015D2  2E09               	decfsz	___aldiv@counter^0,f,c
  4120  0015D4  EFC7  F00A         	goto	l2153
  4121  0015D8                     l2165:
  4122  0015D8  500A               	movf	___aldiv@sign^0,w,c
  4123  0015DA  B4D8               	btfsc	status,2,c
  4124  0015DC  EFF2  F00A         	goto	u1941
  4125  0015E0  EFF4  F00A         	goto	u1940
  4126  0015E4                     u1941:
  4127  0015E4  EFFC  F00A         	goto	l2169
  4128  0015E8                     u1940:
  4129  0015E8  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  4130  0015EA  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  4131  0015EC  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  4132  0015EE  6C0B               	negf	___aldiv@quotient^0,c
  4133  0015F0  0E00               	movlw	0
  4134  0015F2  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  4135  0015F4  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  4136  0015F6  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  4137  0015F8                     l2169:
  4138  0015F8  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  4139  0015FC  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  4140  001600  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  4141  001604  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  4142  001608  0012               	return		;funcret
  4143  00160A                     __end_of___aldiv:
  4144                           	opt callstack 0
  4145                           
  4146 ;; *************** function _BH1750_init *****************
  4147 ;; Defined at:
  4148 ;;		line 24 in file "./bh1750.h"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4164 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4165 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4166 ;;Total ram usage:        1 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    3
  4169 ;; This function calls:
  4170 ;;		_BH1750_write
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text24
  4177  001D20                     __ptext24:
  4178                           	opt callstack 0
  4179  001D20                     _BH1750_init:
  4180                           	opt callstack 27
  4181  001D20                     
  4182                           ;./bh1750.h: 25:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4183  001D20  0E82               	movlw	130
  4184  001D22  6E04               	movwf	??_BH1750_init^0,c
  4185  001D24  0EDE               	movlw	222
  4186  001D26                     u2007:
  4187  001D26  2EE8               	decfsz	wreg,f,c
  4188  001D28  D7FE               	bra	u2007
  4189  001D2A  2E04               	decfsz	??_BH1750_init^0,f,c
  4190  001D2C  D7FC               	bra	u2007
  4191  001D2E                     
  4192                           ;./bh1750.h: 26:     BH1750_write(0x00);
  4193  001D2E  0E00               	movlw	0
  4194  001D30  EC63  F00E         	call	_BH1750_write
  4195  001D34  0012               	return		;funcret
  4196  001D36                     __end_of_BH1750_init:
  4197                           	opt callstack 0
  4198                           
  4199 ;; *************** function _BH1750_write *****************
  4200 ;; Defined at:
  4201 ;;		line 29 in file "./bh1750.h"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  cmd             1    wreg     unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  cmd             1    2[COMRAM] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0
  4216 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4218 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4219 ;;Total ram usage:        1 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    2
  4222 ;; This function calls:
  4223 ;;		_i2c_detener
  4224 ;;		_i2c_envia_dato
  4225 ;;		_i2c_inicia_com
  4226 ;; This function is called by:
  4227 ;;		_BH1750_init
  4228 ;;		_get_lux_value
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text25
  4233  001CC6                     __ptext25:
  4234                           	opt callstack 0
  4235  001CC6                     _BH1750_write:
  4236                           	opt callstack 27
  4237                           
  4238                           ;incstack = 0
  4239                           ;BH1750_write@cmd stored from wreg
  4240  001CC6  6E03               	movwf	BH1750_write@cmd^0,c
  4241  001CC8                     
  4242                           ;./bh1750.h: 30:     i2c_inicia_com();
  4243  001CC8  ECA1  F00E         	call	_i2c_inicia_com	;wreg free
  4244                           
  4245                           ;./bh1750.h: 31:     i2c_envia_dato(0x46);
  4246  001CCC  0E46               	movlw	70
  4247  001CCE  EC9B  F00E         	call	_i2c_envia_dato
  4248                           
  4249                           ;./bh1750.h: 32:     i2c_envia_dato(cmd);
  4250  001CD2  5003               	movf	BH1750_write@cmd^0,w,c
  4251  001CD4  EC9B  F00E         	call	_i2c_envia_dato
  4252                           
  4253                           ;./bh1750.h: 33:     i2c_detener();
  4254  001CD8  ECA5  F00E         	call	_i2c_detener	;wreg free
  4255  001CDC  0012               	return		;funcret
  4256  001CDE                     __end_of_BH1750_write:
  4257                           	opt callstack 0
  4258                           
  4259 ;; *************** function _i2c_inicia_com *****************
  4260 ;; Defined at:
  4261 ;;		line 37 in file "./I2C.h"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;		None
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4275 ;;      Params:         0       0       0       0       0       0       0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4278 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4279 ;;Total ram usage:        0 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    1
  4282 ;; This function calls:
  4283 ;;		_i2c_espera
  4284 ;; This function is called by:
  4285 ;;		_BH1750_write
  4286 ;;		_BH1750_read_word
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text26
  4291  001D42                     __ptext26:
  4292                           	opt callstack 0
  4293  001D42                     _i2c_inicia_com:
  4294                           	opt callstack 27
  4295  001D42                     
  4296                           ;./I2C.h: 38:     i2c_espera();
  4297  001D42  EC50  F00E         	call	_i2c_espera	;wreg free
  4298  001D46                     
  4299                           ;./I2C.h: 39:     SSPCON2bits.SEN = 1;
  4300  001D46  80C5               	bsf	197,0,c	;volatile
  4301  001D48  0012               	return		;funcret
  4302  001D4A                     __end_of_i2c_inicia_com:
  4303                           	opt callstack 0
  4304                           
  4305 ;; *************** function _i2c_envia_dato *****************
  4306 ;; Defined at:
  4307 ;;		line 66 in file "./I2C.h"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  dato            1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  dato            1    1[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      unsigned char 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0
  4322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4324 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    1
  4328 ;; This function calls:
  4329 ;;		_i2c_espera
  4330 ;; This function is called by:
  4331 ;;		_BH1750_write
  4332 ;;		_BH1750_read_word
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text27
  4337  001D36                     __ptext27:
  4338                           	opt callstack 0
  4339  001D36                     _i2c_envia_dato:
  4340                           	opt callstack 27
  4341                           
  4342                           ;incstack = 0
  4343                           ;i2c_envia_dato@dato stored from wreg
  4344  001D36  6E02               	movwf	i2c_envia_dato@dato^0,c
  4345  001D38                     
  4346                           ;./I2C.h: 67:     i2c_espera();
  4347  001D38  EC50  F00E         	call	_i2c_espera	;wreg free
  4348  001D3C                     
  4349                           ;./I2C.h: 68:     SSPBUF = dato;
  4350  001D3C  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  4351  001D40  0012               	return		;funcret
  4352  001D42                     __end_of_i2c_envia_dato:
  4353                           	opt callstack 0
  4354                           
  4355 ;; *************** function _i2c_detener *****************
  4356 ;; Defined at:
  4357 ;;		line 55 in file "./I2C.h"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4374 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    1
  4378 ;; This function calls:
  4379 ;;		_i2c_espera
  4380 ;; This function is called by:
  4381 ;;		_BH1750_write
  4382 ;;		_BH1750_read_word
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text28
  4387  001D4A                     __ptext28:
  4388                           	opt callstack 0
  4389  001D4A                     _i2c_detener:
  4390                           	opt callstack 27
  4391  001D4A                     
  4392                           ;./I2C.h: 56:     i2c_espera();
  4393  001D4A  EC50  F00E         	call	_i2c_espera	;wreg free
  4394  001D4E                     
  4395                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  4396  001D4E  84C5               	bsf	197,2,c	;volatile
  4397  001D50  0012               	return		;funcret
  4398  001D52                     __end_of_i2c_detener:
  4399                           	opt callstack 0
  4400                           
  4401 ;; *************** function _i2c_espera *****************
  4402 ;; Defined at:
  4403 ;;		line 29 in file "./I2C.h"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4419 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4420 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        1 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_i2c_inicia_com
  4427 ;;		_i2c_detener
  4428 ;;		_i2c_envia_dato
  4429 ;;		_i2c_recibe_datoACK
  4430 ;;		_i2c_reinicia_com
  4431 ;;		_i2c_recibe_dato
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text29
  4436  001CA0                     __ptext29:
  4437                           	opt callstack 0
  4438  001CA0                     _i2c_espera:
  4439                           	opt callstack 27
  4440  001CA0                     l1731:
  4441  001CA0  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  4442  001CA4  0E1F               	movlw	31
  4443  001CA6  1601               	andwf	??_i2c_espera^0,f,c
  4444  001CA8  A4D8               	btfss	status,2,c
  4445  001CAA  EF59  F00E         	goto	u1241
  4446  001CAE  EF5B  F00E         	goto	u1240
  4447  001CB2                     u1241:
  4448  001CB2  EF50  F00E         	goto	l1731
  4449  001CB6                     u1240:
  4450  001CB6  B4C7               	btfsc	199,2,c	;volatile
  4451  001CB8  EF60  F00E         	goto	u1251
  4452  001CBC  EF62  F00E         	goto	u1250
  4453  001CC0                     u1251:
  4454  001CC0  EF50  F00E         	goto	l1731
  4455  001CC4                     u1250:
  4456  001CC4  0012               	return		;funcret
  4457  001CC6                     __end_of_i2c_espera:
  4458                           	opt callstack 0
  4459                           
  4460                           	psect	rparam
  4461  0000                     tosu	equ	0xFFF
  4462                           tosh	equ	0xFFE
  4463                           tosl	equ	0xFFD
  4464                           stkptr	equ	0xFFC
  4465                           pclatu	equ	0xFFB
  4466                           pclath	equ	0xFFA
  4467                           pcl	equ	0xFF9
  4468                           tblptru	equ	0xFF8
  4469                           tblptrh	equ	0xFF7
  4470                           tblptrl	equ	0xFF6
  4471                           tablat	equ	0xFF5
  4472                           prodh	equ	0xFF4
  4473                           prodl	equ	0xFF3
  4474                           indf0	equ	0xFEF
  4475                           postinc0	equ	0xFEE
  4476                           postdec0	equ	0xFED
  4477                           preinc0	equ	0xFEC
  4478                           plusw0	equ	0xFEB
  4479                           fsr0h	equ	0xFEA
  4480                           fsr0l	equ	0xFE9
  4481                           wreg	equ	0xFE8
  4482                           indf1	equ	0xFE7
  4483                           postinc1	equ	0xFE6
  4484                           postdec1	equ	0xFE5
  4485                           preinc1	equ	0xFE4
  4486                           plusw1	equ	0xFE3
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           bsr	equ	0xFE0
  4490                           indf2	equ	0xFDF
  4491                           postinc2	equ	0xFDE
  4492                           postdec2	equ	0xFDD
  4493                           preinc2	equ	0xFDC
  4494                           plusw2	equ	0xFDB
  4495                           fsr2h	equ	0xFDA
  4496                           fsr2l	equ	0xFD9
  4497                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     46      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S815_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _get_lux_value->_BH1750_read_word
    _BH1750_read_word->___fltol
    _i2c_recibe_datoACK->_i2c_espera
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _UART_printf->_UART_write
    _UART_init->___aldiv
    _BH1750_init->_BH1750_write
    _BH1750_write->_i2c_envia_dato
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0    9895
                                             10 BANK0     36    36      0
                        _BH1750_init
                          _UART_init
                        _UART_printf
                      _get_lux_value
                        _i2c_iniciar
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    6456
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_lux_value                                       10     6      4    2354
                                             61 COMRAM    10     6      4
                   _BH1750_read_word
                       _BH1750_write
 ---------------------------------------------------------------------------------
 (2) _BH1750_read_word                                    12     8      4    2264
                                             49 COMRAM    12     8      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                 _i2c_recibe_datoACK
 ---------------------------------------------------------------------------------
 (3) _i2c_recibe_datoACK                                   2     2      0      45
                                              1 COMRAM     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     0      2     219
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _BH1750_init                                          1     1      0      44
                                              3 COMRAM     1     1      0
                       _BH1750_write
 ---------------------------------------------------------------------------------
 (2) _BH1750_write                                         1     1      0      44
                                              2 COMRAM     1     1      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BH1750_init
     _BH1750_write
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _UART_init
     ___aldiv
   _UART_printf
     _UART_write
   _get_lux_value
     _BH1750_read_word
       ___fldiv
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_datoACK
         _i2c_espera
     _BH1750_write
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _i2c_iniciar
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B5      20        0.0%
DATA                 0      0      B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 16 02:02:50 2020

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                 ___fldiv@sign 001F  
                         l45 1A5A                           l54 1D10                           l63 1B1A  
                         l72 1CC4                           l81 1D50                           l57 1D1E  
                         l90 1C9E                           l66 1D08                           l75 1D48  
                         l84 1D40                           l93 1D34                           l96 1CDC  
                         l99 195A                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l102 1BB6                          l140 1862                          l142 189E  
                        l150 0C70                          l312 14FC                          l137 1820  
                        l148 0C68                          l181 1AB4                          l182 1ABC  
                        l175 105C                          l264 1608                          l168 0EA8  
                        l482 170E                          l299 1398                          l840 10B4  
                        l843 1210                          l780 0AE4                          l772 09EA  
                        l860 1C32                          l781 0AD2                          l854 11A8  
                        l767 0BC6                          l847 114C                          l863 1C3A  
                        l769 0A26                          l778 0A6C                          l890 1B6C  
                        l875 17D8                          l883 1BFA                          l893 1D52  
                        l899 1C70                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
               __CFG_BOR$OFF 000000                          _abs 1BFC                          _pad 17DA  
             ?_get_lux_value 003E                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               ___fltol@exp1 0031                 __CFG_WDT$OFF 000000                         ?_abs 0013  
                       l2021 1674                         l2013 1634                         l2101 18A0  
                       l2031 16A4                         l2023 1682                         l2015 165E  
                       l2007 160A                         l2111 18C2                         l2103 18A8  
                       l2201 1AE6                         l2041 16CE                         l2033 16AE  
                       l2017 1660                         l2009 1620                         l2113 18C6  
                       l2105 18AC                         l2121 1A5C                         l2211 1D2E  
                       l2131 1502                         l2203 1AEA                         l2043 16DE  
                       l2019 1670                         l2051 1060                         l2115 18EC  
                       l2107 18B2                         l2123 1A64                         l2141 1542  
                       l2133 1510                         l2045 16EE                         l2029 169A  
                       l2053 1070                         l2117 194A                         l2109 18BA  
                       l2221 1B90                         l2213 1B70                         l2205 1CF4  
                       l2125 1A72                         l2151 1580                         l2143 1546  
                       l2135 1520                         l2047 16FE                         l2039 16C2  
                       l2071 1136                         l2063 10EE                         l2055 107E  
                       l2223 1BA0                         l2215 1B70                         l2207 1CF8  
                       l2127 1A98                         l2231 1B2E                         l2209 1D20  
                       l2161 15C8                         l2153 158E                         l2145 1556  
                       l2137 1524                         l2129 14FE                         l2081 11B6  
                       l2073 1142                         l2065 10F6                         l2057 10C4  
                       l2225 1BA6                         l2217 1B76                         l1601 1792  
                       l2233 1B36                         l2163 15D2                         l2155 1598  
                       l2147 156C                         l2139 1532                         l2091 11FE  
                       l2083 11B8                         l2075 117E                         l2067 1102  
                       l2059 10DA                         l2219 1B7C                         l1611 1BDA  
                       l2235 1B3E                         l2157 15B6                         l2149 1574  
                       l2165 15D8                         l2181 1A24                         l2173 19EC  
                       l2093 1200                         l2085 11BC                         l2077 118A  
                       l2069 1134                         l1701 13D0                         l1605 1BB8  
                       l1613 1C3C                         l2237 1B5A                         l2229 1B1C  
                       l2261 1970                         l2167 15E8                         l2159 15C6  
                       l2191 1A54                         l2183 1A4C                         l2175 19EC  
                       l2087 11E0                         l2079 1198                         l1711 1438  
                       l1703 13DE                         l1607 1BC4                         l1615 1C48  
                       l1631 1818                         l1623 17DA                         l2271 19BE  
                       l2263 197C                         l1801 1D4A                         l2169 15F8  
                       l2193 1A56                         l2185 1A4E                         l2177 19EE  
                       l2097 1D0C                         l2089 11F0                         l1713 1446  
                       l1721 14AC                         l1705 13FE                         l1609 1BD6  
                       l1617 1C4C                         l1641 1886                         l1633 182C  
                       l1625 17EA                         l2273 19CA                         l2265 1980  
                       l2257 195C                         l1731 1CA0                         l1803 1D4E  
                       l2099 1CC8                         l2195 1A58                         l2187 1A50  
                       l2179 19F0                         l1651 1216                         l1723 14BC  
                       l1715 1474                         l1707 141C                         l1619 1C64  
                       l1635 1840                         l1627 17FE                         l2267 1984  
                       l2259 195C                         l1733 1CB6                         l1805 1D38  
                       l2189 1A52                         l2197 1ABE                         l1901 08E0  
                       l1821 1C9A                         l1813 1C74                         l1661 1276  
                       l1653 1224                         l1725 14DC                         l1717 1494  
                       l1709 1424                         l1645 1BFC                         l1637 1844  
                       l1629 180C                         l1741 0C30                         l2269 199A  
                       l1807 1D3C                         l2199 1AC2                         l1911 0920  
                       l1903 08E2                         l1823 1C9C                         l1815 1C78  
                       l1671 12C0                         l1663 127A                         l1655 1244  
                       l1719 14A6                         l1647 1C16                         l1591 1710  
                       l1639 1872                         l1751 0C8A                         l1743 0C40  
                       l1735 0BC8                         l1831 0EDC                         l1729 1CA0  
                       l1809 1D40                         l1921 0950                         l1913 0928  
                       l1905 08EA                         l1817 1C7E                         l1681 1330  
                       l1673 12CE                         l1665 1286                         l1657 1248  
                       l1649 1212                         l1593 1722                         l1761 0CB4  
                       l1753 0C98                         l1745 0C42                         l1737 0BE8  
                       l1841 0F82                         l1833 0EEE                         l1931 098E  
                       l1923 0950                         l1915 092C                         l1907 08FA  
                       l1819 1C86                         l1683 1342                         l1675 12E0  
                       l1667 12A4                         l1659 1256                         l1595 1734  
                       l1771 0DC0                         l1763 0D36                         l1755 0C9E  
                       l1747 0C5C                         l1739 0C10                         l1851 1000  
                       l1835 0EF2                         l1827 0EAA                         l1941 09DA  
                       l1933 099E                         l1909 0910                         l1677 130E  
                       l1669 12AC                         l1685 1348                         l1693 139A  
                       l1597 173E                         l1781 0E34                         l1773 0DDE  
                       l1765 0D3C                         l1757 0CA6                         l1749 0C78  
                       l1845 0FBA                         l1837 0F16                         l1829 0ECE  
                       l1861 1026                         l1951 0A24                         l1943 09E8  
                       l1935 09AE                         l1927 0964                         l1919 0940  
                       l1871 083A                         l1687 1358                         l1679 132E  
                       l1695 139E                         l1599 175C                         l1791 0E70  
                       l1783 0E44                         l1775 0DF8                         l1767 0D42  
                       l1759 0CAE                         l1863 104A                         l1847 0FDE  
                       l1855 100C                         l1839 0F3A                         l1961 0A6A  
                       l1953 0A36                         l1945 09F4                         l1937 09B6  
                       l1929 097E                         l1881 087A                         l1873 0848  
                       l1689 1378                         l1697 13AC                         l1785 0E4A  
                       l1793 0E80                         l1777 0E12                         l1769 0DA6  
                       l1857 101A                         l1849 0FEC                         l1971 0ACA  
                       l1955 0A4C                         l1963 0A7C                         l1947 0A12  
                       l1939 09C6                         l1891 08A0                         l1883 087C  
                       l1875 084A                         l1699 13CC                         l1787 0E5C  
                       l1779 0E22                         l1797 1D42                         l1981 0B38  
                       l1965 0A8A                         l1957 0A52                         l1949 0A14  
                       l1893 08AE                         l1877 085A                         l1885 0884  
                       l1869 082E                         l1789 0E68                         ?_pad 0011  
                       l1799 1D46                         l1991 0BA2                         l1975 0AF4  
                       l1983 0B3C                         l1967 0A8E                         l1959 0A5C  
                       l1895 08B0                         l1887 0894                         l1879 086A  
                       l1993 0BA6                         l1985 0B56                         l1977 0B00  
                       l1969 0A9C                         l1897 08C0                         l1889 089A  
                       l1995 0BB4                         l1987 0B6C                         l1979 0B0E  
                       l1899 08D0                         l1997 0BBA                         l1989 0B86  
                       l1999 0BBC                         STR_1 0818                         STR_2 0801  
                       u1000 1722                         u1001 171E                         u1010 1734  
                       u1011 1730                         u1100 1C16                         u1020 175C  
                       u1101 1C12                         u1021 1758                         u1110 1224  
                       u1030 1792                         u1111 1220                         u1031 178E  
                       u1120 1256                         u1200 141C                         u1040 1BFA  
                       u1121 1252                         u1201 1418                         u1041 1BF6  
                       u1210 1446                         u1050 1C64                         u1131 1280  
                       u1211 1442                         u1051 1C60                         u1140 12A4  
                       u1220 1474                         u1060 17EA                         u1300 0C5C  
                       u1141 12A0                         u1221 1470                         u1061 17E6  
                       u1301 0C58                         u1150 12CE                         u1230 14BC  
                       u1070 180C                         u1310 0C8A                         u2007 1D26  
                       u1151 12CA                         u1231 14B8                         u1071 1808  
                       u1311 0C86                         u1240 1CB6                         u1160 130E  
                       u1080 1862                         u1400 0E5C                         u1320 0C98  
                       u1241 1CB2                         u1161 130A                         u1081 185E  
                       u1401 0E58                         u1321 0C94                         u1250 1CC4  
                       u1410 1C98                         u1170 1358                         u1090 1872  
                       u1330 0DC0                         u1251 1CC0                         u1411 1C92  
                       u1171 1354                         u1091 186E                         u1331 0DBC  
                       u1500 08AE                         u1180 13AC                         u1340 0DDE  
                       u1260 0BF8                         u1501 08AA                         u1181 13A8  
                       u1341 0DDA                         u1261 0BF2                         u1510 08C0  
                       u1190 13DE                         u1350 0DF8                         u1270 0BFA  
                       u1430 0ECE                         u1511 08BC                         u1191 13DA  
                       u1351 0DF4                         u1431 0ECA                         u1600 0A6A  
                       u1520 08D0                         u1360 0E12                         u1280 0C10  
                       u1440 0F16                         u1601 0A66                         u1521 08CC  
                       u1425 1C9A                         u1361 0E0E                         u1281 0C0C  
                       u1441 0F12                         u1610 0A8A                         u1530 0910  
                       u1370 0E22                         u1290 0C40                         u1450 0F3A  
                       u1611 0A86                         u1531 090C                         u1371 0E1E  
                       u1291 0C3C                         u1451 0F36                         u1620 0A9C  
                       u1540 0950                         u1700 1620                         u1380 0E34  
                       u1460 0FDE                         u1621 0A98                         u1541 094C  
                       u1701 161C                         u1381 0E30                         u1461 0FDA  
                       u1630 0ACA                         u1550 09C6                         u1470 0848  
                       u1710 1654                         u1390 0E44                         u1631 0AC6  
                       u1551 09C2                         u1471 0844                         u1391 0E40  
                       u1640 0AE0                         u1560 09E8                         u1480 085A  
                       u1720 1682                         u1800 1130                         u1641 0ADC  
                       u1561 09E4                         u1481 0856                         u1721 167E  
                       u1801 112C                         u1650 0AF4                         u1570 0A12  
                       u1490 086A                         u1730 1696                         u1810 117A  
                       u1651 0AF0                         u1571 0A0E                         u1491 0866  
                       u1731 1692                         u1715 164A                         u1811 1176  
                       u1900 1532                         u1660 0B0E                         u1580 0A36  
                       u1740 16BE                         u1820 1198                         u1901 152E  
                       u1661 0B0A                         u1581 0A32                         u1741 16BA  
                       u1821 1194                         u1910 156C                         u1670 0B56  
                       u1590 0A4C                         u1750 16DE                         u1830 11A8  
                       u1911 1568                         u1671 0B52                         u1591 0A48  
                       u1751 16DA                         u1831 11A4                         u1920 158E  
                       u1680 0B86                         u1760 16EE                         u1840 11B6  
                       u1921 158A                         u1681 0B82                         u1761 16EA  
                       u1841 11B2                         u1930 15B6                         u1690 0BB4  
                       u1850 11F0                         u1770 1070                         u1931 15B2  
                       u1691 0BB0                         u1851 11EC                         u1771 106C  
                       u1940 15E8                         u1860 11FE                         u1780 107E  
                       u1941 15E4                         u1861 11FA                         u1781 107A  
                       u1870 1D1E                         u1950 1AE2                         u1790 10DA  
                       u1871 1D1A                         u1791 10D6                         u1960 1B0A  
                       u1880 1AB4                         u1881 1AB0                         u1890 1510  
                       u1970 1B1A                         u1891 150C                         u1971 1B16  
                       u1957 1AD8                         u1967 1B00                         u1987 19D6  
                       _RCIF 007CF5                         u1997 1B96                ??_i2c_detener 0002  
                       abs@a 0013                         _dbuf 0096                         _main 195C  
                       _dtoa 0BC8                         _prec 0092                         _nout 008E  
                       pad@i 0018                         pad@p 0015                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 001A                         fsr2l 000FD9  
              ??_i2c_iniciar 0001                         start 0000                __CFG_IESO$OFF 000000  
            ___fldiv@new_exp 0020                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                      ??_abs 0015                        ??_pad 0017               _i2c_envia_dato 1D36  
              __CFG_PLLDIV$1 000000               _i2c_inicia_com 1D42     __end_of_BH1750_read_word 195C  
             __CFG_CCP2MX$ON 000000                ___fltol@sign1 0030              __end_of___aldiv 160A  
            __end_of___aodiv 139A                        ?_main 0001                        ?_dtoa 001C  
            __end_of___aomod 14FE                        _ACKEN 007E2C                        _ACKDT 007E2D  
            __end_of___fldiv 0BC8              __end_of___fltol 1710                        _RCREG 000FAE  
               vfpfcnvrt@fmt 0042                        _SPBRG 000FAF                __CFG_USBDIV$1 000000  
                      _TXREG 000FAD                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
         __size_of_UART_init 0070                        _flags 0094                        _fputc 1710  
                      _fputs 1BB8                  ?_UART_write 0001                        pad@fp 0011  
                      _width 0090                        _putch 1D52                        dtoa@d 001E  
                      dtoa@i 003E                        dtoa@n 0036                        dtoa@p 0030  
                      dtoa@s 0034                        dtoa@w 0032                        tablat 000FF5  
                      status 000FD8              __end_of_sprintf 1B6E               __CFG_ICPRT$OFF 000000  
                 _i2c_espera 1CA0              __initialization 1CDE  i2c_recibe_datoACK@datoleido 0003  
        __end_of_i2c_detener 1D52       __end_of_i2c_envia_dato 1D42                 __end_of_main 19EC  
               __end_of_dtoa 0EAA       __end_of_i2c_inicia_com 1D4A          __end_of_i2c_iniciar 1D0A  
                     ??_main 006A                       ??_dtoa 0026              ??_get_lux_value 0042  
              __activetblptr 000002           i2c_envia_dato@dato 0002  __size_of_i2c_recibe_datoACK 002E  
                     ?_fputc 0001                       ?_fputs 000A                       ?_putch 0001  
                     _SSPADD 000FC8                       _TRISC6 007CA6                       _TRISC7 007CA7  
                     _SSPBUF 000FC9             __end_of___xxtofl 1212               __CFG_XINST$OFF 000000  
              ??_BH1750_init 0004                 vfprintf@cfmt 0056              ?_i2c_envia_dato 0001  
                  ??___aldiv 0009                    ??___aodiv 0011                    ??___aomod 0011  
          __end_of_UART_init 1A5C                    ??___fldiv 0017                    ??___fltol 002C  
            ?_i2c_inicia_com 0001          __size_of_UART_write 0016                 ?_UART_printf 0002  
                     clear_0 1CE4                main@luzMedida 008A                       pad@buf 0013  
                     dtoa@fp 001C                       _strlen 1C3C                       fputc@c 0001  
                     fputs@c 000E                       fputs@i 000F                       fputs@s 000A  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                       putch@c 0001            get_lux_value@mode 0043  
           __end_of_vfprintf 1ABE                    ??_sprintf 0060                 ___xxtofl@arg 000B  
               ___xxtofl@exp 000A                 ___xxtofl@val 0001                   __accesstop 0060  
    __end_of__initialization 1CEA              __CFG_PBADEN$OFF 000000              __CFG_FOSC$XT_XT 000000  
                _i2c_detener 1D4A                ___rparam_used 000001                   ___fltol@f1 0028  
                _i2c_iniciar 1CF4                  ?_i2c_espera 0001               __pcstackCOMRAM 0001  
              __end_of_fputc 17DA                __end_of_fputs 1BFC                __end_of_putch 1D54  
        __end_of_BH1750_init 1D36                      ??_fputc 0005                      ??_fputs 000E  
                    ??_putch 0001                   __pbssBANK0 008E                ?_BH1750_write 0001  
                    _ACKSTAT 007E2E            ?_BH1750_read_word 0032                      ?_strlen 0001  
         ??_BH1750_read_word 0036                    ?___xxtofl 0001           __size_of_vfpfcnvrt 01B4  
        __size_of_i2c_espera 0026                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
               ??_UART_write 0001                      _SSPSTAT 000FC7              __CFG_VREGEN$OFF 000000  
                    __Hparam 0000                      __Lparam 0000                  _BH1750_init 1D20  
             ??_BH1750_write 0003                      ___aldiv 14FE                      ___aodiv 1212  
                    ___aomod 139A                      ___fldiv 082E                      ___fltol 160A  
                  ?_vfprintf 0050                 __psmallconst 0800              __CFG_STVREN$OFF 000000  
                    __pcinit 1CDE                      __ramtop 0800           __end_of_UART_write 1D20  
                    __ptext0 195C                      __ptext1 1B1C                      __ptext2 1A5C  
                    __ptext3 0EAA                      __ptext4 0BC8                      __ptext5 17DA  
                    __ptext6 1C3C                      __ptext7 1BB8                      __ptext8 1710  
                    __ptext9 1D52              __size_of_strlen 0036         __size_of_UART_printf 005E  
               __size_of_abs 0040          i2c_recibe_datoACK@a 0002                 __size_of_pad 00C6  
                 ??___xxtofl 0005             ___aldiv@dividend 0001           BH1750_read_word@hb 0039  
         BH1750_read_word@lb 0038                      _sprintf 1B1C         end_of_initialization 1CEA  
                    fputc@fp 0003        BH1750_read_word@value 003A                __Lmediumconst 0000  
                    fputs@fp 000C             ??_i2c_envia_dato 0002             ??_i2c_inicia_com 0002  
          __end_of_vfpfcnvrt 105E                    _RCSTAbits 000FAB             ___aldiv@quotient 000B  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 0056                      strlen@a 0003  
                    strlen@s 0001                    _UART_init 19EC   __end_of_i2c_recibe_datoACK 1CA0  
      __end_of_get_lux_value 1BB8                ___xxtofl@sign 0009                    _TRISBbits 000F93  
                ___fldiv@grs 0022                  ___fldiv@rem 001B               _UART_init$1077 0017  
               ?_i2c_detener 0001                   main@buffer 006C                    _TXSTAbits 000FAC  
               ?_i2c_iniciar 0001                 ??_i2c_espera 0001                  vfpfcnvrt@ap 0044  
                vfpfcnvrt@fp 0040                  vfpfcnvrt@ll 0048                   ?_UART_init 000F  
             __end_of_strlen 1C72          start_initialization 1CDE                  __end_of_abs 1C3C  
                __end_of_pad 18A0         __end_of_BH1750_write 1CDE           __end_of_i2c_espera 1CC6  
                vfprintf@fmt 0052       get_lux_value@lux_value 0044             __CFG_LPT1OSC$OFF 000000  
                   ??_strlen 0003                    ___fldiv@a 0013                    ___fldiv@b 000F  
              __pcstackBANK0 0060             ___aodiv@dividend 0001            __size_of___xxtofl 01B4  
  __size_of_BH1750_read_word 00BC            UART_printf@cadena 0002                 ?_BH1750_init 0001  
                   ?___aldiv 0001                     ?___aodiv 0001                     ?___aomod 0001  
                   ?___fldiv 000F             ___aodiv@quotient 0013                     ?___fltol 0028  
                ??_UART_init 0013            __size_of_vfprintf 0062                  __smallconst 0800  
                   ?_sprintf 0058               __size_of_fputc 00CA               __size_of_fputs 0044  
             __size_of_putch 0002              ___aldiv@divisor 0005              ___aldiv@counter 0009  
       __size_of_i2c_detener 0008         __size_of_i2c_iniciar 0016             __CFG_WDTPS$32768 000000  
              ??_UART_printf 0004                    _vfpfcnvrt 0EAA        __size_of_BH1750_write 0018  
             UART_write@dato 0001           _i2c_recibe_datoACK 1C72                     __Hrparam 0000  
              UART_init@BAUD 000F                   vfprintf@ap 0054                     __Lrparam 0000  
                 vfprintf@fp 0050          ?_i2c_recibe_datoACK 0001                 _BH1750_write 1CC6  
           __size_of___aldiv 010C             __size_of___aodiv 0188             __size_of___aomod 0164  
           __size_of___fldiv 039A             __size_of___fltol 0106                   ?_vfpfcnvrt 0040  
            ___aodiv@divisor 0009              ___aodiv@counter 0011                   sprintf@fmt 005A  
                   ___xxtofl 105E          __end_of_UART_printf 1B1C                     _dtoa$354 002E  
       ??_i2c_recibe_datoACK 0002                     __ptext10 1BFC                     __ptext11 139A  
                   __ptext20 1ABE                     __ptext12 1212                     __ptext21 1D0A  
                   __ptext13 1CF4                     __ptext22 19EC                     __ptext14 1B6E  
                   __ptext23 14FE                     __ptext15 18A0                     __ptext24 1D20  
                   __ptext16 1C72                     __ptext25 1CC6                     __ptext17 105E  
                   __ptext26 1D42                     __ptext18 160A                     __ptext27 1D36  
                   __ptext19 082E                     __ptext28 1D4A                     __ptext29 1CA0  
           __size_of_sprintf 0052             _BH1750_read_word 18A0                __size_of_main 0090  
              __size_of_dtoa 02E2       __size_of_get_lux_value 004A         __size_of_BH1750_init 0016  
                   _vfprintf 1A5C      __size_of_i2c_envia_dato 000C      __size_of_i2c_inicia_com 0008  
           ___aomod@dividend 0001        __CFG_CPUDIV$OSC1_PLL2 000000                    sprintf@ap 0062  
            ___aomod@divisor 0009                  ??_vfpfcnvrt 0046              ___aomod@counter 0011  
                _UART_printf 1ABE                     sprintf@f 0064                     sprintf@s 0058  
               ___aldiv@sign 000A                _get_lux_value 1B6E                  _SSPCON2bits 000FC5  
                 _UART_write 1D0A                 ___aodiv@sign 0012              BH1750_write@cmd 0003  
               ___aomod@sign 0012  
