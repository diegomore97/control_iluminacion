

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 16 01:50:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _SSPBUF	set	4041
    78  0000                     _SSPCON2bits	set	4037
    79  0000                     _SSPADD	set	4040
    80  0000                     _SSPCON2	set	4037
    81  0000                     _SSPCON1	set	4038
    82  0000                     _SSPSTAT	set	4039
    83  0000                     _TRISBbits	set	3987
    84  0000                     _TXREG	set	4013
    85  0000                     _RCREG	set	4014
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _TXSTAbits	set	4012
    88  0000                     _SPBRG	set	4015
    89  0000                     _ACKEN	set	32300
    90  0000                     _ACKDT	set	32301
    91  0000                     _ACKSTAT	set	32302
    92  0000                     _RCIF	set	31989
    93  0000                     _TRISC7	set	31911
    94  0000                     _TRISC6	set	31910
    95                           
    96                           	psect	smallconst
    97  000800                     __psmallconst:
    98                           	opt callstack 0
    99  000800  00                 	db	0
   100  000801                     STR_2:
   101  000801  0D                 	db	13
   102  000802  4C                 	db	76	;'L'
   103  000803  75                 	db	117	;'u'
   104  000804  7A                 	db	122	;'z'
   105  000805  20                 	db	32
   106  000806  6D                 	db	109	;'m'
   107  000807  65                 	db	101	;'e'
   108  000808  64                 	db	100	;'d'
   109  000809  69                 	db	105	;'i'
   110  00080A  64                 	db	100	;'d'
   111  00080B  61                 	db	97	;'a'
   112  00080C  3A                 	db	58	;':'
   113  00080D  20                 	db	32
   114  00080E  25                 	db	37
   115  00080F  64                 	db	100	;'d'
   116  000810  20                 	db	32
   117  000811  6C                 	db	108	;'l'
   118  000812  75                 	db	117	;'u'
   119  000813  78                 	db	120	;'x'
   120  000814  73                 	db	115	;'s'
   121  000815  0A                 	db	10
   122  000816  0D                 	db	13
   123  000817  00                 	db	0
   124  000818                     STR_1:
   125  000818  0D                 	db	13
   126  000819  0A                 	db	10
   127  00081A  53                 	db	83	;'S'
   128  00081B  69                 	db	105	;'i'
   129  00081C  73                 	db	115	;'s'
   130  00081D  74                 	db	116	;'t'
   131  00081E  65                 	db	101	;'e'
   132  00081F  6D                 	db	109	;'m'
   133  000820  61                 	db	97	;'a'
   134  000821  20                 	db	32
   135  000822  49                 	db	73	;'I'
   136  000823  6E                 	db	110	;'n'
   137  000824  69                 	db	105	;'i'
   138  000825  63                 	db	99	;'c'
   139  000826  69                 	db	105	;'i'
   140  000827  61                 	db	97	;'a'
   141  000828  64                 	db	100	;'d'
   142  000829  6F                 	db	111	;'o'
   143  00082A  0A                 	db	10
   144  00082B  0D                 	db	13
   145  00082C  00                 	db	0
   146                           
   147                           ; #config settings
   148  00082D  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	cinit
   151  001CC0                     __pcinit:
   152                           	opt callstack 0
   153  001CC0                     start_initialization:
   154                           	opt callstack 0
   155  001CC0                     __initialization:
   156                           	opt callstack 0
   157                           
   158                           ; Clear objects allocated to BANK0 (40 bytes)
   159  001CC0  EE00  F08E         	lfsr	0,__pbssBANK0
   160  001CC4  0E28               	movlw	40
   161  001CC6                     clear_0:
   162  001CC6  6AEE               	clrf	postinc0,c
   163  001CC8  06E8               	decf	wreg,f,c
   164  001CCA  E1FD               	bnz	clear_0
   165  001CCC                     end_of_initialization:
   166                           	opt callstack 0
   167  001CCC                     __end_of__initialization:
   168                           	opt callstack 0
   169  001CCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  001CCE  6EF8               	movwf	tblptru,c
   171  001CD0  0100               	movlb	0
   172  001CD2  EF9F  F00C         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssBANK0
   175  00008E                     __pbssBANK0:
   176                           	opt callstack 0
   177  00008E                     _nout:
   178                           	opt callstack 0
   179  00008E                     	ds	2
   180  000090                     _width:
   181                           	opt callstack 0
   182  000090                     	ds	2
   183  000092                     _prec:
   184                           	opt callstack 0
   185  000092                     	ds	2
   186  000094                     _flags:
   187                           	opt callstack 0
   188  000094                     	ds	2
   189  000096                     _dbuf:
   190                           	opt callstack 0
   191  000096                     	ds	32
   192                           
   193                           	psect	cstackBANK0
   194  000060                     __pcstackBANK0:
   195                           	opt callstack 0
   196  000060                     	ds	2
   197  000062                     sprintf@ap:
   198                           	opt callstack 0
   199                           
   200                           ; 2 bytes @ 0x2
   201  000062                     	ds	2
   202  000064                     sprintf@f:
   203                           	opt callstack 0
   204                           
   205                           ; 6 bytes @ 0x4
   206  000064                     	ds	6
   207  00006A                     ??_main:
   208                           
   209                           ; 1 bytes @ 0xA
   210  00006A                     	ds	2
   211  00006C                     main@buffer:
   212                           	opt callstack 0
   213                           
   214                           ; 30 bytes @ 0xC
   215  00006C                     	ds	30
   216  00008A                     main@luzMedida:
   217                           	opt callstack 0
   218                           
   219                           ; 4 bytes @ 0x2A
   220  00008A                     	ds	4
   221                           
   222                           	psect	cstackCOMRAM
   223  000001                     __pcstackCOMRAM:
   224                           	opt callstack 0
   225  000001                     ??_i2c_espera:
   226  000001                     ?_strlen:
   227                           	opt callstack 0
   228  000001                     ?___aldiv:
   229                           	opt callstack 0
   230  000001                     ?___xxtofl:
   231                           	opt callstack 0
   232  000001                     ?___aodiv:
   233                           	opt callstack 0
   234  000001                     ?___aomod:
   235                           	opt callstack 0
   236  000001                     UART_write@dato:
   237                           	opt callstack 0
   238  000001                     fputc@c:
   239                           	opt callstack 0
   240  000001                     strlen@s:
   241                           	opt callstack 0
   242  000001                     ___aldiv@dividend:
   243                           	opt callstack 0
   244  000001                     ___xxtofl@val:
   245                           	opt callstack 0
   246  000001                     ___aodiv@dividend:
   247                           	opt callstack 0
   248  000001                     ___aomod@dividend:
   249                           	opt callstack 0
   250                           
   251                           ; 8 bytes @ 0x0
   252  000001                     	ds	1
   253  000002                     i2c_envia_dato@dato:
   254                           	opt callstack 0
   255  000002                     i2c_recibe_datoACK@a:
   256                           	opt callstack 0
   257  000002                     UART_printf@cadena:
   258                           	opt callstack 0
   259                           
   260                           ; 2 bytes @ 0x1
   261  000002                     	ds	1
   262  000003                     i2c_recibe_datoACK@datoleido:
   263                           	opt callstack 0
   264  000003                     BH1750_write@cmd:
   265                           	opt callstack 0
   266  000003                     fputc@fp:
   267                           	opt callstack 0
   268  000003                     strlen@a:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x2
   272  000003                     	ds	1
   273  000004                     ??_BH1750_init:
   274                           
   275                           ; 1 bytes @ 0x3
   276  000004                     	ds	1
   277  000005                     ??_fputc:
   278  000005                     ??___xxtofl:
   279  000005                     ___aldiv@divisor:
   280                           	opt callstack 0
   281                           
   282                           ; 4 bytes @ 0x4
   283  000005                     	ds	4
   284  000009                     ___aldiv@counter:
   285                           	opt callstack 0
   286  000009                     ___xxtofl@sign:
   287                           	opt callstack 0
   288  000009                     ___aodiv@divisor:
   289                           	opt callstack 0
   290  000009                     ___aomod@divisor:
   291                           	opt callstack 0
   292                           
   293                           ; 8 bytes @ 0x8
   294  000009                     	ds	1
   295  00000A                     ___aldiv@sign:
   296                           	opt callstack 0
   297  00000A                     ___xxtofl@exp:
   298                           	opt callstack 0
   299  00000A                     fputs@s:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x9
   303  00000A                     	ds	1
   304  00000B                     ___aldiv@quotient:
   305                           	opt callstack 0
   306  00000B                     ___xxtofl@arg:
   307                           	opt callstack 0
   308                           
   309                           ; 4 bytes @ 0xA
   310  00000B                     	ds	1
   311  00000C                     fputs@fp:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0xB
   315  00000C                     	ds	2
   316  00000E                     fputs@c:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0xD
   320  00000E                     	ds	1
   321  00000F                     ?___fldiv:
   322                           	opt callstack 0
   323  00000F                     fputs@i:
   324                           	opt callstack 0
   325  00000F                     UART_init@BAUD:
   326                           	opt callstack 0
   327  00000F                     ___fldiv@b:
   328                           	opt callstack 0
   329                           
   330                           ; 4 bytes @ 0xE
   331  00000F                     	ds	2
   332  000011                     ?_pad:
   333                           	opt callstack 0
   334  000011                     ___aodiv@counter:
   335                           	opt callstack 0
   336  000011                     ___aomod@counter:
   337                           	opt callstack 0
   338  000011                     pad@fp:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x10
   342  000011                     	ds	1
   343  000012                     ___aodiv@sign:
   344                           	opt callstack 0
   345  000012                     ___aomod@sign:
   346                           	opt callstack 0
   347                           
   348                           ; 1 bytes @ 0x11
   349  000012                     	ds	1
   350  000013                     ?_abs:
   351                           	opt callstack 0
   352  000013                     pad@buf:
   353                           	opt callstack 0
   354  000013                     abs@a:
   355                           	opt callstack 0
   356  000013                     ___fldiv@a:
   357                           	opt callstack 0
   358  000013                     ___aodiv@quotient:
   359                           	opt callstack 0
   360                           
   361                           ; 8 bytes @ 0x12
   362  000013                     	ds	2
   363  000015                     ??_abs:
   364  000015                     pad@p:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x14
   368  000015                     	ds	2
   369  000017                     ??___fldiv:
   370  000017                     ??_pad:
   371  000017                     _UART_init$1077:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x16
   375  000017                     	ds	1
   376  000018                     pad@i:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0x17
   380  000018                     	ds	2
   381  00001A                     pad@w:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x19
   385  00001A                     	ds	1
   386  00001B                     ___fldiv@rem:
   387                           	opt callstack 0
   388                           
   389                           ; 4 bytes @ 0x1A
   390  00001B                     	ds	1
   391  00001C                     ?_dtoa:
   392                           	opt callstack 0
   393  00001C                     dtoa@fp:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x1B
   397  00001C                     	ds	2
   398  00001E                     dtoa@d:
   399                           	opt callstack 0
   400                           
   401                           ; 8 bytes @ 0x1D
   402  00001E                     	ds	1
   403  00001F                     ___fldiv@sign:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x1E
   407  00001F                     	ds	1
   408  000020                     ___fldiv@new_exp:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x1F
   412  000020                     	ds	2
   413  000022                     ___fldiv@grs:
   414                           	opt callstack 0
   415                           
   416                           ; 4 bytes @ 0x21
   417  000022                     	ds	4
   418  000026                     ??_dtoa:
   419  000026                     ___fldiv@bexp:
   420                           	opt callstack 0
   421                           
   422                           ; 1 bytes @ 0x25
   423  000026                     	ds	1
   424  000027                     ___fldiv@aexp:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0x26
   428  000027                     	ds	1
   429  000028                     ?___fltol:
   430                           	opt callstack 0
   431  000028                     ___fltol@f1:
   432                           	opt callstack 0
   433                           
   434                           ; 4 bytes @ 0x27
   435  000028                     	ds	4
   436  00002C                     ??___fltol:
   437                           
   438                           ; 1 bytes @ 0x2B
   439  00002C                     	ds	2
   440  00002E                     _dtoa$354:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x2D
   444  00002E                     	ds	2
   445  000030                     ___fltol@sign1:
   446                           	opt callstack 0
   447  000030                     dtoa@p:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x2F
   451  000030                     	ds	1
   452  000031                     ___fltol@exp1:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x30
   456  000031                     	ds	1
   457  000032                     ?_BH1750_read_word:
   458                           	opt callstack 0
   459  000032                     dtoa@w:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x31
   463  000032                     	ds	2
   464  000034                     dtoa@s:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x33
   468  000034                     	ds	2
   469  000036                     BH1750_read_word@hb:
   470                           	opt callstack 0
   471  000036                     dtoa@n:
   472                           	opt callstack 0
   473                           
   474                           ; 8 bytes @ 0x35
   475  000036                     	ds	1
   476  000037                     BH1750_read_word@lb:
   477                           	opt callstack 0
   478                           
   479                           ; 1 bytes @ 0x36
   480  000037                     	ds	1
   481  000038                     BH1750_read_word@value:
   482                           	opt callstack 0
   483                           
   484                           ; 4 bytes @ 0x37
   485  000038                     	ds	4
   486  00003C                     ?_get_lux_value:
   487                           	opt callstack 0
   488                           
   489                           ; 4 bytes @ 0x3B
   490  00003C                     	ds	2
   491  00003E                     dtoa@i:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x3D
   495  00003E                     	ds	2
   496  000040                     ??_get_lux_value:
   497  000040                     ?_vfpfcnvrt:
   498                           	opt callstack 0
   499  000040                     vfpfcnvrt@fp:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x3F
   503  000040                     	ds	1
   504  000041                     get_lux_value@mode:
   505                           	opt callstack 0
   506                           
   507                           ; 1 bytes @ 0x40
   508  000041                     	ds	1
   509  000042                     vfpfcnvrt@fmt:
   510                           	opt callstack 0
   511  000042                     get_lux_value@lux_value:
   512                           	opt callstack 0
   513                           
   514                           ; 4 bytes @ 0x41
   515  000042                     	ds	2
   516  000044                     vfpfcnvrt@ap:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x43
   520  000044                     	ds	2
   521  000046                     ??_vfpfcnvrt:
   522                           
   523                           ; 1 bytes @ 0x45
   524  000046                     	ds	2
   525  000048                     vfpfcnvrt@ll:
   526                           	opt callstack 0
   527                           
   528                           ; 8 bytes @ 0x47
   529  000048                     	ds	8
   530  000050                     ?_vfprintf:
   531                           	opt callstack 0
   532  000050                     vfprintf@fp:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x4F
   536  000050                     	ds	2
   537  000052                     vfprintf@fmt:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x51
   541  000052                     	ds	2
   542  000054                     vfprintf@ap:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x53
   546  000054                     	ds	2
   547  000056                     vfprintf@cfmt:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x55
   551  000056                     	ds	2
   552  000058                     ?_sprintf:
   553                           	opt callstack 0
   554  000058                     sprintf@s:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0x57
   558  000058                     	ds	2
   559  00005A                     sprintf@fmt:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x59
   563  00005A                     	ds	6
   564  000060                     
   565                           ; 1 bytes @ 0x5F
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   568 ;;
   569 ;; *************** function _main *****************
   570 ;; Defined at:
   571 ;;		line 10 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  buffer         30   12[BANK0 ] unsigned char [30]
   576 ;;  luzMedida       4   42[BANK0 ] unsigned long 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   586 ;;      Params:         0       0       0       0       0       0       0       0       0
   587 ;;      Locals:         0      34       0       0       0       0       0       0       0
   588 ;;      Temps:          0       2       0       0       0       0       0       0       0
   589 ;;      Totals:         0      36       0       0       0       0       0       0       0
   590 ;;Total ram usage:       36 bytes
   591 ;; Hardware stack levels required when called:    8
   592 ;; This function calls:
   593 ;;		_BH1750_init
   594 ;;		_UART_init
   595 ;;		_UART_printf
   596 ;;		_get_lux_value
   597 ;;		_i2c_iniciar
   598 ;;		_sprintf
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  00193E                     __ptext0:
   606                           	opt callstack 0
   607  00193E                     _main:
   608                           	opt callstack 23
   609  00193E                     
   610                           ;main.c: 13:     T_BYTE buffer[30];;main.c: 15:     UART_init(9600);
   611  00193E  0E80               	movlw	128
   612  001940  6E0F               	movwf	UART_init@BAUD^0,c
   613  001942  0E25               	movlw	37
   614  001944  6E10               	movwf	(UART_init@BAUD+1)^0,c
   615  001946  0E00               	movlw	0
   616  001948  6E11               	movwf	(UART_init@BAUD+2)^0,c
   617  00194A  0E00               	movlw	0
   618  00194C  6E12               	movwf	(UART_init@BAUD+3)^0,c
   619  00194E  ECE7  F00C         	call	_UART_init	;wreg free
   620  001952                     
   621                           ;main.c: 16:     UART_printf("\r\nSistema Iniciado\n\r");
   622  001952  0E18               	movlw	low STR_1
   623  001954  6E02               	movwf	UART_printf@cadena^0,c
   624  001956  0E08               	movlw	high STR_1
   625  001958  6E03               	movwf	(UART_printf@cadena+1)^0,c
   626  00195A  EC50  F00D         	call	_UART_printf	;wreg free
   627  00195E                     
   628                           ;main.c: 17:     i2c_iniciar();
   629  00195E  EC6B  F00E         	call	_i2c_iniciar	;wreg free
   630  001962                     
   631                           ;main.c: 18:     BH1750_init();
   632  001962  EC81  F00E         	call	_BH1750_init	;wreg free
   633  001966                     l2263:
   634                           
   635                           ;main.c: 21:     {;main.c: 22:         luzMedida = get_lux_value(0x10);
   636  001966  0E10               	movlw	16
   637  001968  ECA8  F00D         	call	_get_lux_value
   638  00196C  C03C  F08A         	movff	?_get_lux_value,main@luzMedida
   639  001970  C03D  F08B         	movff	?_get_lux_value+1,main@luzMedida+1
   640  001974  C03E  F08C         	movff	?_get_lux_value+2,main@luzMedida+2
   641  001978  C03F  F08D         	movff	?_get_lux_value+3,main@luzMedida+3
   642  00197C                     
   643                           ;main.c: 23:         sprintf(buffer, "\rLuz medida: %d luxs\n\r",luzMedida);
   644  00197C  0E6C               	movlw	low main@buffer
   645  00197E  6E58               	movwf	sprintf@s^0,c
   646  001980  0E00               	movlw	high main@buffer
   647  001982  6E59               	movwf	(sprintf@s+1)^0,c
   648  001984  0E01               	movlw	low STR_2
   649  001986  6E5A               	movwf	sprintf@fmt^0,c
   650  001988  0E08               	movlw	high STR_2
   651  00198A  6E5B               	movwf	(sprintf@fmt+1)^0,c
   652  00198C  C08A  F05C         	movff	main@luzMedida,?_sprintf+4
   653  001990  C08B  F05D         	movff	main@luzMedida+1,?_sprintf+5
   654  001994  C08C  F05E         	movff	main@luzMedida+2,?_sprintf+6
   655  001998  C08D  F05F         	movff	main@luzMedida+3,?_sprintf+7
   656  00199C  EC7F  F00D         	call	_sprintf	;wreg free
   657  0019A0                     
   658                           ;main.c: 24:         UART_printf(buffer);
   659  0019A0  0E6C               	movlw	low main@buffer
   660  0019A2  6E02               	movwf	UART_printf@cadena^0,c
   661  0019A4  0E00               	movlw	high main@buffer
   662  0019A6  6E03               	movwf	(UART_printf@cadena+1)^0,c
   663  0019A8  EC50  F00D         	call	_UART_printf	;wreg free
   664  0019AC                     
   665                           ;main.c: 25:         _delay((unsigned long)((500)*(4000000/4000.0)));
   666  0019AC  0E03               	movlw	3
   667  0019AE  0100               	movlb	0	; () banked
   668  0019B0  6F6B               	movwf	(??_main+1)& (0+255),b
   669  0019B2  0E8A               	movlw	138
   670  0019B4  6F6A               	movwf	??_main& (0+255),b
   671  0019B6  0E55               	movlw	85
   672  0019B8                     u1987:
   673  0019B8  2EE8               	decfsz	wreg,f,c
   674  0019BA  D7FE               	bra	u1987
   675  0019BC  2F6A               	decfsz	??_main& (0+255),f,b
   676  0019BE  D7FC               	bra	u1987
   677  0019C0  2F6B               	decfsz	(??_main+1)& (0+255),f,b
   678  0019C2  D7FA               	bra	u1987
   679  0019C4  D000               	nop2	
   680  0019C6  EFB3  F00C         	goto	l2263
   681  0019CA  EF00  F000         	goto	start
   682  0019CE                     __end_of_main:
   683                           	opt callstack 0
   684                           
   685 ;; *************** function _sprintf *****************
   686 ;; Defined at:
   687 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  s               2   87[COMRAM] PTR unsigned char 
   690 ;;		 -> main@buffer(30), 
   691 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   692 ;;		 -> STR_2(23), 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  f               6    4[BANK0 ] struct _IO_FILE
   695 ;;  ap              2    2[BANK0 ] PTR void [1]
   696 ;;		 -> ?_sprintf(2), 
   697 ;;  ret             2    0        int 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  2   87[COMRAM] int 
   700 ;; Registers used:
   701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         8       0       0       0       0       0       0       0       0
   708 ;;      Locals:         0      10       0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0
   710 ;;      Totals:         8      10       0       0       0       0       0       0       0
   711 ;;Total ram usage:       18 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    7
   714 ;; This function calls:
   715 ;;		_vfprintf
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text1
   722  001AFE                     __ptext1:
   723                           	opt callstack 0
   724  001AFE                     _sprintf:
   725                           	opt callstack 23
   726  001AFE  0E5C               	movlw	low (?_sprintf+4)
   727  001B00  0100               	movlb	0	; () banked
   728  001B02  6F62               	movwf	sprintf@ap& (0+255),b
   729  001B04  0E00               	movlw	high (?_sprintf+4)
   730  001B06  6F63               	movwf	(sprintf@ap+1)& (0+255),b
   731  001B08  C058  F064         	movff	sprintf@s,sprintf@f
   732  001B0C  C059  F065         	movff	sprintf@s+1,sprintf@f+1
   733  001B10                     
   734                           ; BSR set to: 0
   735  001B10  0E00               	movlw	0
   736  001B12  6F67               	movwf	(sprintf@f+3)& (0+255),b
   737  001B14  0E00               	movlw	0
   738  001B16  6F66               	movwf	(sprintf@f+2)& (0+255),b
   739  001B18                     
   740                           ; BSR set to: 0
   741  001B18  0E00               	movlw	0
   742  001B1A  6F69               	movwf	(sprintf@f+5)& (0+255),b
   743  001B1C  0E00               	movlw	0
   744  001B1E  6F68               	movwf	(sprintf@f+4)& (0+255),b
   745  001B20                     
   746                           ; BSR set to: 0
   747  001B20  0E64               	movlw	low sprintf@f
   748  001B22  6E50               	movwf	vfprintf@fp^0,c
   749  001B24  0E00               	movlw	high sprintf@f
   750  001B26  6E51               	movwf	(vfprintf@fp+1)^0,c
   751  001B28  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   752  001B2C  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   753  001B30  0E62               	movlw	low sprintf@ap
   754  001B32  6E54               	movwf	vfprintf@ap^0,c
   755  001B34  0E00               	movlw	high sprintf@ap
   756  001B36  6E55               	movwf	(vfprintf@ap+1)^0,c
   757  001B38  EC1F  F00D         	call	_vfprintf	;wreg free
   758  001B3C  0100               	movlb	0	; () banked
   759  001B3E  5166               	movf	(sprintf@f+2)& (0+255),w,b
   760  001B40  2458               	addwf	sprintf@s^0,w,c
   761  001B42  6ED9               	movwf	fsr2l,c
   762  001B44  5167               	movf	(sprintf@f+3)& (0+255),w,b
   763  001B46  2059               	addwfc	(sprintf@s+1)^0,w,c
   764  001B48  6EDA               	movwf	fsr2h,c
   765  001B4A  0E00               	movlw	0
   766  001B4C  6EDF               	movwf	indf2,c
   767  001B4E                     
   768                           ; BSR set to: 0
   769  001B4E  0012               	return		;funcret
   770  001B50                     __end_of_sprintf:
   771                           	opt callstack 0
   772                           
   773 ;; *************** function _vfprintf *****************
   774 ;; Defined at:
   775 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   778 ;;		 -> sprintf@f(6), 
   779 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   780 ;;		 -> STR_2(23), 
   781 ;;  ap              2   83[COMRAM] PTR PTR void 
   782 ;;		 -> sprintf@ap(2), 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   785 ;;		 -> STR_2(23), 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  2   79[COMRAM] int 
   788 ;; Registers used:
   789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   795 ;;      Params:         6       0       0       0       0       0       0       0       0
   796 ;;      Locals:         2       0       0       0       0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0       0       0
   798 ;;      Totals:         8       0       0       0       0       0       0       0       0
   799 ;;Total ram usage:        8 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    6
   802 ;; This function calls:
   803 ;;		_vfpfcnvrt
   804 ;; This function is called by:
   805 ;;		_sprintf
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text2
   810  001A3E                     __ptext2:
   811                           	opt callstack 0
   812  001A3E                     _vfprintf:
   813                           	opt callstack 23
   814  001A3E                     
   815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   816  001A3E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   817  001A42  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   818  001A46                     
   819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   820  001A46  0E00               	movlw	0
   821  001A48  0100               	movlb	0	; () banked
   822  001A4A  6F8F               	movwf	(_nout+1)& (0+255),b
   823  001A4C  0E00               	movlw	0
   824  001A4E  6F8E               	movwf	_nout& (0+255),b
   825                           
   826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   827  001A50  EF3D  F00D         	goto	l2123
   828  001A54                     l2121:
   829                           
   830                           ; BSR set to: 0
   831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   832  001A54  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   833  001A58  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   834  001A5C  0E56               	movlw	low vfprintf@cfmt
   835  001A5E  6E42               	movwf	vfpfcnvrt@fmt^0,c
   836  001A60  0E00               	movlw	high vfprintf@cfmt
   837  001A62  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   838  001A64  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   839  001A68  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   840  001A6C  EC55  F007         	call	_vfpfcnvrt	;wreg free
   841  001A70  5040               	movf	?_vfpfcnvrt^0,w,c
   842  001A72  0100               	movlb	0	; () banked
   843  001A74  278E               	addwf	_nout& (0+255),f,b
   844  001A76  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   845  001A78  238F               	addwfc	(_nout+1)& (0+255),f,b
   846  001A7A                     l2123:
   847                           
   848                           ; BSR set to: 0
   849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   850  001A7A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   851  001A7E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   852  001A82                     	if	0	;tblptru may be non-zero
   853  001A82                     	endif
   854  001A82                     	if	0	;tblptru may be non-zero
   855  001A82                     	endif
   856  001A82  0008               	tblrd		*
   857  001A84  50F5               	movf	tablat,w,c
   858  001A86  0900               	iorlw	0
   859  001A88  A4D8               	btfss	status,2,c
   860  001A8A  EF49  F00D         	goto	u1881
   861  001A8E  EF4B  F00D         	goto	u1880
   862  001A92                     u1881:
   863  001A92  EF2A  F00D         	goto	l2121
   864  001A96                     u1880:
   865  001A96                     
   866                           ; BSR set to: 0
   867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   868  001A96  C08E  F050         	movff	_nout,?_vfprintf
   869  001A9A  C08F  F051         	movff	_nout+1,?_vfprintf+1
   870  001A9E                     
   871                           ; BSR set to: 0
   872  001A9E  0012               	return		;funcret
   873  001AA0                     __end_of_vfprintf:
   874                           	opt callstack 0
   875                           
   876 ;; *************** function _vfpfcnvrt *****************
   877 ;; Defined at:
   878 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   881 ;;		 -> sprintf@f(6), 
   882 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   883 ;;		 -> vfprintf@cfmt(2), 
   884 ;;  ap              2   67[COMRAM] PTR PTR void 
   885 ;;		 -> sprintf@ap(2), 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  ll              8   71[COMRAM] long long 
   888 ;;  llu             8    0        unsigned long long 
   889 ;;  f               4    0        unsigned long long 
   890 ;;  vp              3    0        PTR void 
   891 ;;  ct              3    0        unsigned char [3]
   892 ;;  cp              3    0        PTR unsigned char 
   893 ;;  i               2    0        int 
   894 ;;  done            2    0        int 
   895 ;;  c               1    0        unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2   63[COMRAM] int 
   898 ;; Registers used:
   899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         6       0       0       0       0       0       0       0       0
   906 ;;      Locals:         8       0       0       0       0       0       0       0       0
   907 ;;      Temps:          2       0       0       0       0       0       0       0       0
   908 ;;      Totals:        16       0       0       0       0       0       0       0       0
   909 ;;Total ram usage:       16 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    5
   912 ;; This function calls:
   913 ;;		_dtoa
   914 ;;		_fputc
   915 ;; This function is called by:
   916 ;;		_vfprintf
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text3
   921  000EAA                     __ptext3:
   922                           	opt callstack 0
   923  000EAA                     _vfpfcnvrt:
   924                           	opt callstack 23
   925  000EAA                     
   926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   927  000EAA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   928  000EAE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   929  000EB2  CFDE FFF6          	movff	postinc2,tblptrl
   930  000EB6  CFDD FFF7          	movff	postdec2,tblptrh
   931  000EBA                     	if	0	;tblptru may be non-zero
   932  000EBA                     	endif
   933  000EBA                     	if	0	;tblptru may be non-zero
   934  000EBA                     	endif
   935  000EBA  0008               	tblrd		*
   936  000EBC  50F5               	movf	tablat,w,c
   937  000EBE  0A25               	xorlw	37
   938  000EC0  A4D8               	btfss	status,2,c
   939  000EC2  EF65  F007         	goto	u1431
   940  000EC6  EF67  F007         	goto	u1430
   941  000ECA                     u1431:
   942  000ECA  EF13  F008         	goto	l1859
   943  000ECE                     u1430:
   944  000ECE                     
   945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   946  000ECE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   947  000ED2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   948  000ED6  2ADE               	incf	postinc2,f,c
   949  000ED8  0E00               	movlw	0
   950  000EDA  22DD               	addwfc	postdec2,f,c
   951  000EDC                     
   952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   953  000EDC  0E00               	movlw	0
   954  000EDE  0100               	movlb	0	; () banked
   955  000EE0  6F91               	movwf	(_width+1)& (0+255),b
   956  000EE2  0E00               	movlw	0
   957  000EE4  6F90               	movwf	_width& (0+255),b
   958  000EE6  C090  F094         	movff	_width,_flags
   959  000EEA  C091  F095         	movff	_width+1,_flags+1
   960  000EEE                     
   961                           ; BSR set to: 0
   962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   963  000EEE  6992               	setf	_prec& (0+255),b
   964  000EF0  6993               	setf	(_prec+1)& (0+255),b
   965  000EF2                     
   966                           ; BSR set to: 0
   967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   968  000EF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   969  000EF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   970  000EFA  CFDE FFF6          	movff	postinc2,tblptrl
   971  000EFE  CFDD FFF7          	movff	postdec2,tblptrh
   972  000F02                     	if	0	;tblptru may be non-zero
   973  000F02                     	endif
   974  000F02                     	if	0	;tblptru may be non-zero
   975  000F02                     	endif
   976  000F02  0008               	tblrd		*
   977  000F04  50F5               	movf	tablat,w,c
   978  000F06  0A64               	xorlw	100
   979  000F08  B4D8               	btfsc	status,2,c
   980  000F0A  EF89  F007         	goto	u1441
   981  000F0E  EF8B  F007         	goto	u1440
   982  000F12                     u1441:
   983  000F12  EF9D  F007         	goto	l1837
   984  000F16                     u1440:
   985  000F16                     
   986                           ; BSR set to: 0
   987  000F16  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   988  000F1A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   989  000F1E  CFDE FFF6          	movff	postinc2,tblptrl
   990  000F22  CFDD FFF7          	movff	postdec2,tblptrh
   991  000F26                     	if	0	;tblptru may be non-zero
   992  000F26                     	endif
   993  000F26                     	if	0	;tblptru may be non-zero
   994  000F26                     	endif
   995  000F26  0008               	tblrd		*
   996  000F28  50F5               	movf	tablat,w,c
   997  000F2A  0A69               	xorlw	105
   998  000F2C  A4D8               	btfss	status,2,c
   999  000F2E  EF9B  F007         	goto	u1451
  1000  000F32  EF9D  F007         	goto	u1450
  1001  000F36                     u1451:
  1002  000F36  EFDD  F007         	goto	l1843
  1003  000F3A                     u1450:
  1004  000F3A                     l1837:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1008  000F3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1009  000F3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1010  000F42  2ADE               	incf	postinc2,f,c
  1011  000F44  0E00               	movlw	0
  1012  000F46  22DD               	addwfc	postdec2,f,c
  1013                           
  1014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1015  000F48  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1016  000F4C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1017  000F50  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1018  000F54  0E02               	movlw	2
  1019  000F56  26DE               	addwf	postinc2,f,c
  1020  000F58  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1021  000F5C  0E00               	movlw	0
  1022  000F5E  22DD               	addwfc	postdec2,f,c
  1023  000F60  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1024  000F64  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1025  000F68  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1026  000F6C  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1027  000F70  0E00               	movlw	0
  1028  000F72  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1029  000F74  0EFF               	movlw	-1
  1030  000F76  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1031  000F78  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1032  000F7A  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1033  000F7C  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1034  000F7E  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1035  000F80  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1036  000F82                     
  1037                           ; BSR set to: 0
  1038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1039  000F82  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1040  000F86  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1041  000F8A  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1042  000F8E  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1043  000F92  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1044  000F96  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1045  000F9A  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1046  000F9E  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1047  000FA2  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1048  000FA6  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1049  000FAA  ECE4  F005         	call	_dtoa	;wreg free
  1050  000FAE  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1051  000FB2  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1052  000FB6  EF2E  F008         	goto	l175
  1053  000FBA                     l1843:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1057  000FBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1058  000FBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1059  000FC2  CFDE FFF6          	movff	postinc2,tblptrl
  1060  000FC6  CFDD FFF7          	movff	postdec2,tblptrh
  1061  000FCA                     	if	0	;tblptru may be non-zero
  1062  000FCA                     	endif
  1063  000FCA                     	if	0	;tblptru may be non-zero
  1064  000FCA                     	endif
  1065  000FCA  0008               	tblrd		*
  1066  000FCC  50F5               	movf	tablat,w,c
  1067  000FCE  0A25               	xorlw	37
  1068  000FD0  A4D8               	btfss	status,2,c
  1069  000FD2  EFED  F007         	goto	u1461
  1070  000FD6  EFEF  F007         	goto	u1460
  1071  000FDA                     u1461:
  1072  000FDA  EF06  F008         	goto	l1853
  1073  000FDE                     u1460:
  1074  000FDE                     
  1075                           ; BSR set to: 0
  1076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1077  000FDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1078  000FE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1079  000FE6  2ADE               	incf	postinc2,f,c
  1080  000FE8  0E00               	movlw	0
  1081  000FEA  22DD               	addwfc	postdec2,f,c
  1082  000FEC                     
  1083                           ; BSR set to: 0
  1084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1085  000FEC  0E00               	movlw	0
  1086  000FEE  6E02               	movwf	(fputc@c+1)^0,c
  1087  000FF0  0E25               	movlw	37
  1088  000FF2  6E01               	movwf	fputc@c^0,c
  1089  000FF4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1090  000FF8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1091  000FFC  EC88  F00B         	call	_fputc	;wreg free
  1092  001000                     l1849:
  1093                           
  1094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1095  001000  0E00               	movlw	0
  1096  001002  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1097  001004  0E01               	movlw	1
  1098  001006  6E40               	movwf	?_vfpfcnvrt^0,c
  1099  001008  EF2E  F008         	goto	l175
  1100  00100C                     l1853:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1104  00100C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1105  001010  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1106  001014  2ADE               	incf	postinc2,f,c
  1107  001016  0E00               	movlw	0
  1108  001018  22DD               	addwfc	postdec2,f,c
  1109  00101A                     
  1110                           ; BSR set to: 0
  1111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1112  00101A  0E00               	movlw	0
  1113  00101C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1114  00101E  0E00               	movlw	0
  1115  001020  6E40               	movwf	?_vfpfcnvrt^0,c
  1116  001022  EF2E  F008         	goto	l175
  1117  001026                     l1859:
  1118                           
  1119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1120  001026  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1121  00102A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1122  00102E  CFDE FFF6          	movff	postinc2,tblptrl
  1123  001032  CFDD FFF7          	movff	postdec2,tblptrh
  1124  001036                     	if	0	;tblptru may be non-zero
  1125  001036                     	endif
  1126  001036                     	if	0	;tblptru may be non-zero
  1127  001036                     	endif
  1128  001036  0008               	tblrd		*
  1129  001038  50F5               	movf	tablat,w,c
  1130  00103A  6E01               	movwf	fputc@c^0,c
  1131  00103C  6A02               	clrf	(fputc@c+1)^0,c
  1132  00103E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1133  001042  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1134  001046  EC88  F00B         	call	_fputc	;wreg free
  1135  00104A                     
  1136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1137  00104A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1138  00104E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1139  001052  2ADE               	incf	postinc2,f,c
  1140  001054  0E00               	movlw	0
  1141  001056  22DD               	addwfc	postdec2,f,c
  1142  001058  EF00  F008         	goto	l1849
  1143  00105C                     l175:
  1144  00105C  0012               	return		;funcret
  1145  00105E                     __end_of_vfpfcnvrt:
  1146                           	opt callstack 0
  1147                           
  1148 ;; *************** function _dtoa *****************
  1149 ;; Defined at:
  1150 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1153 ;;		 -> sprintf@f(6), 
  1154 ;;  d               8   29[COMRAM] long long 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  n               8   53[COMRAM] long long 
  1157 ;;  i               2   61[COMRAM] int 
  1158 ;;  s               2   51[COMRAM] int 
  1159 ;;  w               2   49[COMRAM] int 
  1160 ;;  p               2   47[COMRAM] int 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  2   27[COMRAM] int 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:        10       0       0       0       0       0       0       0       0
  1171 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1172 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1173 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1174 ;;Total ram usage:       36 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    4
  1177 ;; This function calls:
  1178 ;;		___aodiv
  1179 ;;		___aomod
  1180 ;;		_abs
  1181 ;;		_pad
  1182 ;; This function is called by:
  1183 ;;		_vfpfcnvrt
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text4
  1188  000BC8                     __ptext4:
  1189                           	opt callstack 0
  1190  000BC8                     _dtoa:
  1191                           	opt callstack 23
  1192  000BC8                     
  1193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1194  000BC8  C01E  F036         	movff	dtoa@d,dtoa@n
  1195  000BCC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1196  000BD0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1197  000BD4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1198  000BD8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1199  000BDC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1200  000BE0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1201  000BE4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1202  000BE8                     
  1203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1204  000BE8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1205  000BEA  EFF9  F005         	goto	u1261
  1206  000BEE  EFFC  F005         	goto	u1260
  1207  000BF2                     u1261:
  1208  000BF2  0E01               	movlw	1
  1209  000BF4  EFFD  F005         	goto	u1270
  1210  000BF8                     u1260:
  1211  000BF8  0E00               	movlw	0
  1212  000BFA                     u1270:
  1213  000BFA  6E34               	movwf	dtoa@s^0,c
  1214  000BFC  6A35               	clrf	(dtoa@s+1)^0,c
  1215                           
  1216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1217  000BFE  5034               	movf	dtoa@s^0,w,c
  1218  000C00  1035               	iorwf	(dtoa@s+1)^0,w,c
  1219  000C02  B4D8               	btfsc	status,2,c
  1220  000C04  EF06  F006         	goto	u1281
  1221  000C08  EF08  F006         	goto	u1280
  1222  000C0C                     u1281:
  1223  000C0C  EF18  F006         	goto	l1739
  1224  000C10                     u1280:
  1225  000C10                     
  1226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1227  000C10  1E3D               	comf	(dtoa@n+7)^0,f,c
  1228  000C12  1E3C               	comf	(dtoa@n+6)^0,f,c
  1229  000C14  1E3B               	comf	(dtoa@n+5)^0,f,c
  1230  000C16  1E3A               	comf	(dtoa@n+4)^0,f,c
  1231  000C18  1E39               	comf	(dtoa@n+3)^0,f,c
  1232  000C1A  1E38               	comf	(dtoa@n+2)^0,f,c
  1233  000C1C  1E37               	comf	(dtoa@n+1)^0,f,c
  1234  000C1E  6C36               	negf	dtoa@n^0,c
  1235  000C20  0E00               	movlw	0
  1236  000C22  2237               	addwfc	(dtoa@n+1)^0,f,c
  1237  000C24  2238               	addwfc	(dtoa@n+2)^0,f,c
  1238  000C26  2239               	addwfc	(dtoa@n+3)^0,f,c
  1239  000C28  223A               	addwfc	(dtoa@n+4)^0,f,c
  1240  000C2A  223B               	addwfc	(dtoa@n+5)^0,f,c
  1241  000C2C  223C               	addwfc	(dtoa@n+6)^0,f,c
  1242  000C2E  223D               	addwfc	(dtoa@n+7)^0,f,c
  1243  000C30                     l1739:
  1244                           
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1246  000C30  0100               	movlb	0	; () banked
  1247  000C32  BF93               	btfsc	(_prec+1)& (0+255),7,b
  1248  000C34  EF1E  F006         	goto	u1291
  1249  000C38  EF20  F006         	goto	u1290
  1250  000C3C                     u1291:
  1251  000C3C  EF21  F006         	goto	l1743
  1252  000C40                     u1290:
  1253  000C40                     
  1254                           ; BSR set to: 0
  1255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1256  000C40  9394               	bcf	_flags& (0+255),1,b
  1257  000C42                     l1743:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1261  000C42  BF93               	btfsc	(_prec+1)& (0+255),7,b
  1262  000C44  EF2E  F006         	goto	u1300
  1263  000C48  5193               	movf	(_prec+1)& (0+255),w,b
  1264  000C4A  E106               	bnz	u1301
  1265  000C4C  0592               	decf	_prec& (0+255),w,b
  1266  000C4E  B0D8               	btfsc	status,0,c
  1267  000C50  EF2C  F006         	goto	u1301
  1268  000C54  EF2E  F006         	goto	u1300
  1269  000C58                     u1301:
  1270  000C58  EF34  F006         	goto	l148
  1271  000C5C                     u1300:
  1272  000C5C                     
  1273                           ; BSR set to: 0
  1274  000C5C  0E00               	movlw	0
  1275  000C5E  6E31               	movwf	(dtoa@p+1)^0,c
  1276  000C60  0E01               	movlw	1
  1277  000C62  6E30               	movwf	dtoa@p^0,c
  1278  000C64  EF38  F006         	goto	l150
  1279  000C68                     l148:
  1280                           
  1281                           ; BSR set to: 0
  1282  000C68  C092  F030         	movff	_prec,dtoa@p
  1283  000C6C  C093  F031         	movff	_prec+1,dtoa@p+1
  1284  000C70                     l150:
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1288  000C70  C090  F032         	movff	_width,dtoa@w
  1289  000C74  C091  F033         	movff	_width+1,dtoa@w+1
  1290  000C78                     
  1291                           ; BSR set to: 0
  1292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1293  000C78  5034               	movf	dtoa@s^0,w,c
  1294  000C7A  1035               	iorwf	(dtoa@s+1)^0,w,c
  1295  000C7C  A4D8               	btfss	status,2,c
  1296  000C7E  EF43  F006         	goto	u1311
  1297  000C82  EF45  F006         	goto	u1310
  1298  000C86                     u1311:
  1299  000C86  EF4C  F006         	goto	l1751
  1300  000C8A                     u1310:
  1301  000C8A                     
  1302                           ; BSR set to: 0
  1303  000C8A  A594               	btfss	_flags& (0+255),2,b
  1304  000C8C  EF4A  F006         	goto	u1321
  1305  000C90  EF4C  F006         	goto	u1320
  1306  000C94                     u1321:
  1307  000C94  EF4F  F006         	goto	l1753
  1308  000C98                     u1320:
  1309  000C98                     l1751:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1313  000C98  0632               	decf	dtoa@w^0,f,c
  1314  000C9A  A0D8               	btfss	status,0,c
  1315  000C9C  0633               	decf	(dtoa@w+1)^0,f,c
  1316  000C9E                     l1753:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1320  000C9E  0E00               	movlw	0
  1321  000CA0  6E3F               	movwf	(dtoa@i+1)^0,c
  1322  000CA2  0E1F               	movlw	31
  1323  000CA4  6E3E               	movwf	dtoa@i^0,c
  1324  000CA6                     
  1325                           ; BSR set to: 0
  1326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1327  000CA6  0E00               	movlw	0
  1328  000CA8  6FB5               	movwf	(_dbuf+31)& (0+255),b
  1329                           
  1330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1331  000CAA  EFD3  F006         	goto	l1767
  1332  000CAE                     l1757:
  1333                           
  1334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1335  000CAE  063E               	decf	dtoa@i^0,f,c
  1336  000CB0  A0D8               	btfss	status,0,c
  1337  000CB2  063F               	decf	(dtoa@i+1)^0,f,c
  1338  000CB4                     
  1339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1340  000CB4  0E96               	movlw	low _dbuf
  1341  000CB6  243E               	addwf	dtoa@i^0,w,c
  1342  000CB8  6ED9               	movwf	fsr2l,c
  1343  000CBA  0E00               	movlw	high _dbuf
  1344  000CBC  203F               	addwfc	(dtoa@i+1)^0,w,c
  1345  000CBE  6EDA               	movwf	fsr2h,c
  1346  000CC0  C036  F001         	movff	dtoa@n,___aomod@dividend
  1347  000CC4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1348  000CC8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1349  000CCC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1350  000CD0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1351  000CD4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1352  000CD8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1353  000CDC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1354  000CE0  0E0A               	movlw	10
  1355  000CE2  6E09               	movwf	___aomod@divisor^0,c
  1356  000CE4  0E00               	movlw	0
  1357  000CE6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1358  000CE8  0E00               	movlw	0
  1359  000CEA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1360  000CEC  0E00               	movlw	0
  1361  000CEE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1362  000CF0  0E00               	movlw	0
  1363  000CF2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1364  000CF4  0E00               	movlw	0
  1365  000CF6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1366  000CF8  0E00               	movlw	0
  1367  000CFA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1368  000CFC  0E00               	movlw	0
  1369  000CFE  6E10               	movwf	(___aomod@divisor+7)^0,c
  1370  000D00  ECCD  F009         	call	___aomod	;wreg free
  1371  000D04  C001  F026         	movff	?___aomod,??_dtoa
  1372  000D08  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1373  000D0C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1374  000D10  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1375  000D14  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1376  000D18  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1377  000D1C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1378  000D20  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1379  000D24  C026  F013         	movff	??_dtoa,abs@a
  1380  000D28  C028  F014         	movff	??_dtoa+2,abs@a+1
  1381  000D2C  ECEF  F00D         	call	_abs	;wreg free
  1382  000D30  5013               	movf	?_abs^0,w,c
  1383  000D32  0F30               	addlw	48
  1384  000D34  6EDF               	movwf	indf2,c
  1385  000D36                     
  1386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1387  000D36  0630               	decf	dtoa@p^0,f,c
  1388  000D38  A0D8               	btfss	status,0,c
  1389  000D3A  0631               	decf	(dtoa@p+1)^0,f,c
  1390  000D3C                     
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1392  000D3C  0632               	decf	dtoa@w^0,f,c
  1393  000D3E  A0D8               	btfss	status,0,c
  1394  000D40  0633               	decf	(dtoa@w+1)^0,f,c
  1395  000D42                     
  1396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1397  000D42  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1398  000D46  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1399  000D4A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1400  000D4E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1401  000D52  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1402  000D56  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1403  000D5A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1404  000D5E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1405  000D62  0E0A               	movlw	10
  1406  000D64  6E09               	movwf	___aodiv@divisor^0,c
  1407  000D66  0E00               	movlw	0
  1408  000D68  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1409  000D6A  0E00               	movlw	0
  1410  000D6C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1411  000D6E  0E00               	movlw	0
  1412  000D70  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1413  000D72  0E00               	movlw	0
  1414  000D74  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1415  000D76  0E00               	movlw	0
  1416  000D78  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1417  000D7A  0E00               	movlw	0
  1418  000D7C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1419  000D7E  0E00               	movlw	0
  1420  000D80  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1421  000D82  EC09  F009         	call	___aodiv	;wreg free
  1422  000D86  C001  F036         	movff	?___aodiv,dtoa@n
  1423  000D8A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1424  000D8E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1425  000D92  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1426  000D96  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1427  000D9A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1428  000D9E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1429  000DA2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1430  000DA6                     l1767:
  1431                           
  1432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1433  000DA6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1434  000DA8  EFDE  F006         	goto	u1331
  1435  000DAC  503F               	movf	(dtoa@i+1)^0,w,c
  1436  000DAE  E108               	bnz	u1330
  1437  000DB0  043E               	decf	dtoa@i^0,w,c
  1438  000DB2  A0D8               	btfss	status,0,c
  1439  000DB4  EFDE  F006         	goto	u1331
  1440  000DB8  EFE0  F006         	goto	u1330
  1441  000DBC                     u1331:
  1442  000DBC  EF11  F007         	goto	l1777
  1443  000DC0                     u1330:
  1444  000DC0  5036               	movf	dtoa@n^0,w,c
  1445  000DC2  1037               	iorwf	(dtoa@n+1)^0,w,c
  1446  000DC4  1038               	iorwf	(dtoa@n+2)^0,w,c
  1447  000DC6  1039               	iorwf	(dtoa@n+3)^0,w,c
  1448  000DC8  103A               	iorwf	(dtoa@n+4)^0,w,c
  1449  000DCA  103B               	iorwf	(dtoa@n+5)^0,w,c
  1450  000DCC  103C               	iorwf	(dtoa@n+6)^0,w,c
  1451  000DCE  103D               	iorwf	(dtoa@n+7)^0,w,c
  1452  000DD0  A4D8               	btfss	status,2,c
  1453  000DD2  EFED  F006         	goto	u1341
  1454  000DD6  EFEF  F006         	goto	u1340
  1455  000DDA                     u1341:
  1456  000DDA  EF57  F006         	goto	l1757
  1457  000DDE                     u1340:
  1458  000DDE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1459  000DE0  EFFC  F006         	goto	u1350
  1460  000DE4  5031               	movf	(dtoa@p+1)^0,w,c
  1461  000DE6  E106               	bnz	u1351
  1462  000DE8  0430               	decf	dtoa@p^0,w,c
  1463  000DEA  B0D8               	btfsc	status,0,c
  1464  000DEC  EFFA  F006         	goto	u1351
  1465  000DF0  EFFC  F006         	goto	u1350
  1466  000DF4                     u1351:
  1467  000DF4  EF57  F006         	goto	l1757
  1468  000DF8                     u1350:
  1469  000DF8  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1470  000DFA  EF07  F007         	goto	u1361
  1471  000DFE  5033               	movf	(dtoa@w+1)^0,w,c
  1472  000E00  E108               	bnz	u1360
  1473  000E02  0432               	decf	dtoa@w^0,w,c
  1474  000E04  A0D8               	btfss	status,0,c
  1475  000E06  EF07  F007         	goto	u1361
  1476  000E0A  EF09  F007         	goto	u1360
  1477  000E0E                     u1361:
  1478  000E0E  EF11  F007         	goto	l1777
  1479  000E12                     u1360:
  1480  000E12  0100               	movlb	0	; () banked
  1481  000E14  B394               	btfsc	_flags& (0+255),1,b
  1482  000E16  EF0F  F007         	goto	u1371
  1483  000E1A  EF11  F007         	goto	u1370
  1484  000E1E                     u1371:
  1485  000E1E  EF57  F006         	goto	l1757
  1486  000E22                     u1370:
  1487  000E22                     l1777:
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1490  000E22  5034               	movf	dtoa@s^0,w,c
  1491  000E24  1035               	iorwf	(dtoa@s+1)^0,w,c
  1492  000E26  A4D8               	btfss	status,2,c
  1493  000E28  EF18  F007         	goto	u1381
  1494  000E2C  EF1A  F007         	goto	u1380
  1495  000E30                     u1381:
  1496  000E30  EF22  F007         	goto	l1781
  1497  000E34                     u1380:
  1498  000E34  0100               	movlb	0	; () banked
  1499  000E36  A594               	btfss	_flags& (0+255),2,b
  1500  000E38  EF20  F007         	goto	u1391
  1501  000E3C  EF22  F007         	goto	u1390
  1502  000E40                     u1391:
  1503  000E40  EF40  F007         	goto	l1791
  1504  000E44                     u1390:
  1505  000E44                     l1781:
  1506                           
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1508  000E44  063E               	decf	dtoa@i^0,f,c
  1509  000E46  A0D8               	btfss	status,0,c
  1510  000E48  063F               	decf	(dtoa@i+1)^0,f,c
  1511  000E4A                     
  1512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1513  000E4A  5034               	movf	dtoa@s^0,w,c
  1514  000E4C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1515  000E4E  A4D8               	btfss	status,2,c
  1516  000E50  EF2C  F007         	goto	u1401
  1517  000E54  EF2E  F007         	goto	u1400
  1518  000E58                     u1401:
  1519  000E58  EF34  F007         	goto	l1787
  1520  000E5C                     u1400:
  1521  000E5C  0E00               	movlw	0
  1522  000E5E  6E2F               	movwf	(_dtoa$354+1)^0,c
  1523  000E60  0E2B               	movlw	43
  1524  000E62  6E2E               	movwf	_dtoa$354^0,c
  1525  000E64  EF38  F007         	goto	l1789
  1526  000E68                     l1787:
  1527  000E68  0E00               	movlw	0
  1528  000E6A  6E2F               	movwf	(_dtoa$354+1)^0,c
  1529  000E6C  0E2D               	movlw	45
  1530  000E6E  6E2E               	movwf	_dtoa$354^0,c
  1531  000E70                     l1789:
  1532  000E70  0E96               	movlw	low _dbuf
  1533  000E72  243E               	addwf	dtoa@i^0,w,c
  1534  000E74  6ED9               	movwf	fsr2l,c
  1535  000E76  0E00               	movlw	high _dbuf
  1536  000E78  203F               	addwfc	(dtoa@i+1)^0,w,c
  1537  000E7A  6EDA               	movwf	fsr2h,c
  1538  000E7C  C02E  FFDF         	movff	_dtoa$354,indf2
  1539  000E80                     l1791:
  1540                           
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1542  000E80  C01C  F011         	movff	dtoa@fp,pad@fp
  1543  000E84  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1544  000E88  0E96               	movlw	low _dbuf
  1545  000E8A  243E               	addwf	dtoa@i^0,w,c
  1546  000E8C  6E13               	movwf	pad@buf^0,c
  1547  000E8E  0E00               	movlw	high _dbuf
  1548  000E90  203F               	addwfc	(dtoa@i+1)^0,w,c
  1549  000E92  6E14               	movwf	(pad@buf+1)^0,c
  1550  000E94  C032  F015         	movff	dtoa@w,pad@p
  1551  000E98  C033  F016         	movff	dtoa@w+1,pad@p+1
  1552  000E9C  ECED  F00B         	call	_pad	;wreg free
  1553  000EA0  C011  F01C         	movff	?_pad,?_dtoa
  1554  000EA4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1555  000EA8  0012               	return		;funcret
  1556  000EAA                     __end_of_dtoa:
  1557                           	opt callstack 0
  1558                           
  1559 ;; *************** function _pad *****************
  1560 ;; Defined at:
  1561 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1564 ;;		 -> sprintf@f(6), 
  1565 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1566 ;;		 -> dbuf(32), 
  1567 ;;  p               2   20[COMRAM] int 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  w               2   25[COMRAM] int 
  1570 ;;  i               2   23[COMRAM] int 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2   16[COMRAM] int 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1580 ;;      Params:         6       0       0       0       0       0       0       0       0
  1581 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1582 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1583 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1584 ;;Total ram usage:       11 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    3
  1587 ;; This function calls:
  1588 ;;		_fputc
  1589 ;;		_fputs
  1590 ;;		_strlen
  1591 ;; This function is called by:
  1592 ;;		_dtoa
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text5
  1597  0017DA                     __ptext5:
  1598                           	opt callstack 0
  1599  0017DA                     _pad:
  1600                           	opt callstack 23
  1601  0017DA                     
  1602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1603  0017DA  0100               	movlb	0	; () banked
  1604  0017DC  A194               	btfss	_flags& (0+255),0,b
  1605  0017DE  EFF3  F00B         	goto	u1061
  1606  0017E2  EFF5  F00B         	goto	u1060
  1607  0017E6                     u1061:
  1608  0017E6  EFFF  F00B         	goto	l1625
  1609  0017EA                     u1060:
  1610  0017EA                     
  1611                           ; BSR set to: 0
  1612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1613  0017EA  C013  F00A         	movff	pad@buf,fputs@s
  1614  0017EE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1615  0017F2  C011  F00C         	movff	pad@fp,fputs@fp
  1616  0017F6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1617  0017FA  ECCD  F00D         	call	_fputs	;wreg free
  1618  0017FE                     l1625:
  1619                           
  1620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1621  0017FE  BE16               	btfsc	(pad@p+1)^0,7,c
  1622  001800  EF04  F00C         	goto	u1071
  1623  001804  EF06  F00C         	goto	u1070
  1624  001808                     u1071:
  1625  001808  EF0C  F00C         	goto	l1629
  1626  00180C                     u1070:
  1627  00180C  C015  F01A         	movff	pad@p,pad@w
  1628  001810  C016  F01B         	movff	pad@p+1,pad@w+1
  1629  001814  EF10  F00C         	goto	l137
  1630  001818                     l1629:
  1631  001818  0E00               	movlw	0
  1632  00181A  6E1B               	movwf	(pad@w+1)^0,c
  1633  00181C  0E00               	movlw	0
  1634  00181E  6E1A               	movwf	pad@w^0,c
  1635  001820                     l137:
  1636                           
  1637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1638  001820  0E00               	movlw	0
  1639  001822  6E19               	movwf	(pad@i+1)^0,c
  1640  001824  0E00               	movlw	0
  1641  001826  6E18               	movwf	pad@i^0,c
  1642                           
  1643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1644  001828  EF22  F00C         	goto	l1635
  1645  00182C                     l1631:
  1646                           
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1648  00182C  0E00               	movlw	0
  1649  00182E  6E02               	movwf	(fputc@c+1)^0,c
  1650  001830  0E20               	movlw	32
  1651  001832  6E01               	movwf	fputc@c^0,c
  1652  001834  C011  F003         	movff	pad@fp,fputc@fp
  1653  001838  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1654  00183C  EC88  F00B         	call	_fputc	;wreg free
  1655  001840                     
  1656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1657  001840  4A18               	infsnz	pad@i^0,f,c
  1658  001842  2A19               	incf	(pad@i+1)^0,f,c
  1659  001844                     l1635:
  1660                           
  1661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1662  001844  501A               	movf	pad@w^0,w,c
  1663  001846  5C18               	subwf	pad@i^0,w,c
  1664  001848  5019               	movf	(pad@i+1)^0,w,c
  1665  00184A  0A80               	xorlw	128
  1666  00184C  6E17               	movwf	??_pad^0,c
  1667  00184E  501B               	movf	(pad@w+1)^0,w,c
  1668  001850  0A80               	xorlw	128
  1669  001852  5817               	subwfb	??_pad^0,w,c
  1670  001854  A0D8               	btfss	status,0,c
  1671  001856  EF2F  F00C         	goto	u1081
  1672  00185A  EF31  F00C         	goto	u1080
  1673  00185E                     u1081:
  1674  00185E  EF16  F00C         	goto	l1631
  1675  001862                     u1080:
  1676  001862                     
  1677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1678  001862  0100               	movlb	0	; () banked
  1679  001864  B194               	btfsc	_flags& (0+255),0,b
  1680  001866  EF37  F00C         	goto	u1091
  1681  00186A  EF39  F00C         	goto	u1090
  1682  00186E                     u1091:
  1683  00186E  EF43  F00C         	goto	l1639
  1684  001872                     u1090:
  1685  001872                     
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1688  001872  C013  F00A         	movff	pad@buf,fputs@s
  1689  001876  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1690  00187A  C011  F00C         	movff	pad@fp,fputs@fp
  1691  00187E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1692  001882  ECCD  F00D         	call	_fputs	;wreg free
  1693  001886                     l1639:
  1694                           
  1695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1696  001886  C013  F001         	movff	pad@buf,strlen@s
  1697  00188A  C014  F002         	movff	pad@buf+1,strlen@s+1
  1698  00188E  EC0F  F00E         	call	_strlen	;wreg free
  1699  001892  501A               	movf	pad@w^0,w,c
  1700  001894  2401               	addwf	?_strlen^0,w,c
  1701  001896  6E11               	movwf	?_pad^0,c
  1702  001898  501B               	movf	(pad@w+1)^0,w,c
  1703  00189A  2002               	addwfc	(?_strlen+1)^0,w,c
  1704  00189C  6E12               	movwf	(?_pad+1)^0,c
  1705  00189E  0012               	return		;funcret
  1706  0018A0                     __end_of_pad:
  1707                           	opt callstack 0
  1708                           
  1709 ;; *************** function _strlen *****************
  1710 ;; Defined at:
  1711 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1714 ;;		 -> dbuf(32), 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1717 ;;		 -> dbuf(32), 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2    0[COMRAM] unsigned int 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1727 ;;      Params:         2       0       0       0       0       0       0       0       0
  1728 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1730 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1731 ;;Total ram usage:        4 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_pad
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text6
  1741  001C1E                     __ptext6:
  1742                           	opt callstack 0
  1743  001C1E                     _strlen:
  1744                           	opt callstack 25
  1745  001C1E  C001  F003         	movff	strlen@s,strlen@a
  1746  001C22  C002  F004         	movff	strlen@s+1,strlen@a+1
  1747  001C26  EF17  F00E         	goto	l1615
  1748  001C2A                     l1613:
  1749  001C2A  4A01               	infsnz	strlen@s^0,f,c
  1750  001C2C  2A02               	incf	(strlen@s+1)^0,f,c
  1751  001C2E                     l1615:
  1752  001C2E  C001  FFD9         	movff	strlen@s,fsr2l
  1753  001C32  C002  FFDA         	movff	strlen@s+1,fsr2h
  1754  001C36  50DF               	movf	indf2,w,c
  1755  001C38  A4D8               	btfss	status,2,c
  1756  001C3A  EF21  F00E         	goto	u1051
  1757  001C3E  EF23  F00E         	goto	u1050
  1758  001C42                     u1051:
  1759  001C42  EF15  F00E         	goto	l1613
  1760  001C46                     u1050:
  1761  001C46  5003               	movf	strlen@a^0,w,c
  1762  001C48  5C01               	subwf	strlen@s^0,w,c
  1763  001C4A  6E01               	movwf	?_strlen^0,c
  1764  001C4C  5004               	movf	(strlen@a+1)^0,w,c
  1765  001C4E  5802               	subwfb	(strlen@s+1)^0,w,c
  1766  001C50  6E02               	movwf	(?_strlen+1)^0,c
  1767  001C52  0012               	return		;funcret
  1768  001C54                     __end_of_strlen:
  1769                           	opt callstack 0
  1770                           
  1771 ;; *************** function _fputs *****************
  1772 ;; Defined at:
  1773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1776 ;;		 -> dbuf(32), 
  1777 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1778 ;;		 -> sprintf@f(6), 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  i               2   14[COMRAM] int 
  1781 ;;  c               1   13[COMRAM] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  2    9[COMRAM] int 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1791 ;;      Params:         4       0       0       0       0       0       0       0       0
  1792 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1794 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1795 ;;Total ram usage:        7 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    2
  1798 ;; This function calls:
  1799 ;;		_fputc
  1800 ;; This function is called by:
  1801 ;;		_pad
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text7
  1806  001B9A                     __ptext7:
  1807                           	opt callstack 0
  1808  001B9A                     _fputs:
  1809                           	opt callstack 23
  1810  001B9A  0E00               	movlw	0
  1811  001B9C  6E10               	movwf	(fputs@i+1)^0,c
  1812  001B9E  0E00               	movlw	0
  1813  001BA0  6E0F               	movwf	fputs@i^0,c
  1814  001BA2  EFDE  F00D         	goto	l1609
  1815  001BA6                     l1605:
  1816  001BA6  C00E  F001         	movff	fputs@c,fputc@c
  1817  001BAA  6A02               	clrf	(fputc@c+1)^0,c
  1818  001BAC  C00C  F003         	movff	fputs@fp,fputc@fp
  1819  001BB0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1820  001BB4  EC88  F00B         	call	_fputc	;wreg free
  1821  001BB8  4A0F               	infsnz	fputs@i^0,f,c
  1822  001BBA  2A10               	incf	(fputs@i+1)^0,f,c
  1823  001BBC                     l1609:
  1824  001BBC  500F               	movf	fputs@i^0,w,c
  1825  001BBE  240A               	addwf	fputs@s^0,w,c
  1826  001BC0  6ED9               	movwf	fsr2l,c
  1827  001BC2  5010               	movf	(fputs@i+1)^0,w,c
  1828  001BC4  200B               	addwfc	(fputs@s+1)^0,w,c
  1829  001BC6  6EDA               	movwf	fsr2h,c
  1830  001BC8  50DF               	movf	indf2,w,c
  1831  001BCA  6E0E               	movwf	fputs@c^0,c
  1832  001BCC  500E               	movf	fputs@c^0,w,c
  1833  001BCE  A4D8               	btfss	status,2,c
  1834  001BD0  EFEC  F00D         	goto	u1041
  1835  001BD4  EFEE  F00D         	goto	u1040
  1836  001BD8                     u1041:
  1837  001BD8  EFD3  F00D         	goto	l1605
  1838  001BDC                     u1040:
  1839  001BDC  0012               	return		;funcret
  1840  001BDE                     __end_of_fputs:
  1841                           	opt callstack 0
  1842                           
  1843 ;; *************** function _fputc *****************
  1844 ;; Defined at:
  1845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  c               2    0[COMRAM] int 
  1848 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1849 ;;		 -> sprintf@f(6), 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2    0[COMRAM] int 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1861 ;;      Params:         4       0       0       0       0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1863 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1864 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1865 ;;Total ram usage:        9 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    1
  1868 ;; This function calls:
  1869 ;;		_putch
  1870 ;; This function is called by:
  1871 ;;		_pad
  1872 ;;		_vfpfcnvrt
  1873 ;;		_fputs
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text8
  1878  001710                     __ptext8:
  1879                           	opt callstack 0
  1880  001710                     _fputc:
  1881                           	opt callstack 26
  1882  001710  5003               	movf	fputc@fp^0,w,c
  1883  001712  1004               	iorwf	(fputc@fp+1)^0,w,c
  1884  001714  B4D8               	btfsc	status,2,c
  1885  001716  EF8F  F00B         	goto	u1001
  1886  00171A  EF91  F00B         	goto	u1000
  1887  00171E                     u1001:
  1888  00171E  EF9A  F00B         	goto	l1593
  1889  001722                     u1000:
  1890  001722  5003               	movf	fputc@fp^0,w,c
  1891  001724  1004               	iorwf	(fputc@fp+1)^0,w,c
  1892  001726  A4D8               	btfss	status,2,c
  1893  001728  EF98  F00B         	goto	u1011
  1894  00172C  EF9A  F00B         	goto	u1010
  1895  001730                     u1011:
  1896  001730  EF9F  F00B         	goto	l1595
  1897  001734                     u1010:
  1898  001734                     l1593:
  1899  001734  5001               	movf	fputc@c^0,w,c
  1900  001736  EC9A  F00E         	call	_putch
  1901  00173A  EFEC  F00B         	goto	l875
  1902  00173E                     l1595:
  1903  00173E  EE20 F004          	lfsr	2,4
  1904  001742  5003               	movf	fputc@fp^0,w,c
  1905  001744  26D9               	addwf	fsr2l,f,c
  1906  001746  5004               	movf	(fputc@fp+1)^0,w,c
  1907  001748  22DA               	addwfc	fsr2h,f,c
  1908  00174A  50DE               	movf	postinc2,w,c
  1909  00174C  10DE               	iorwf	postinc2,w,c
  1910  00174E  B4D8               	btfsc	status,2,c
  1911  001750  EFAC  F00B         	goto	u1021
  1912  001754  EFAE  F00B         	goto	u1020
  1913  001758                     u1021:
  1914  001758  EFC9  F00B         	goto	l1599
  1915  00175C                     u1020:
  1916  00175C  EE20 F004          	lfsr	2,4
  1917  001760  5003               	movf	fputc@fp^0,w,c
  1918  001762  26D9               	addwf	fsr2l,f,c
  1919  001764  5004               	movf	(fputc@fp+1)^0,w,c
  1920  001766  22DA               	addwfc	fsr2h,f,c
  1921  001768  EE10 F002          	lfsr	1,2
  1922  00176C  5003               	movf	fputc@fp^0,w,c
  1923  00176E  26E1               	addwf	fsr1l,f,c
  1924  001770  5004               	movf	(fputc@fp+1)^0,w,c
  1925  001772  22E2               	addwfc	fsr1h,f,c
  1926  001774  50DE               	movf	postinc2,w,c
  1927  001776  5CE6               	subwf	postinc1,w,c
  1928  001778  50E6               	movf	postinc1,w,c
  1929  00177A  0A80               	xorlw	128
  1930  00177C  6E09               	movwf	(??_fputc+4)^0,c
  1931  00177E  50DE               	movf	postinc2,w,c
  1932  001780  0A80               	xorlw	128
  1933  001782  5809               	subwfb	(??_fputc+4)^0,w,c
  1934  001784  B0D8               	btfsc	status,0,c
  1935  001786  EFC7  F00B         	goto	u1031
  1936  00178A  EFC9  F00B         	goto	u1030
  1937  00178E                     u1031:
  1938  00178E  EFEC  F00B         	goto	l875
  1939  001792                     u1030:
  1940  001792                     l1599:
  1941  001792  EE20 F002          	lfsr	2,2
  1942  001796  5003               	movf	fputc@fp^0,w,c
  1943  001798  26D9               	addwf	fsr2l,f,c
  1944  00179A  5004               	movf	(fputc@fp+1)^0,w,c
  1945  00179C  22DA               	addwfc	fsr2h,f,c
  1946  00179E  CFDE F005          	movff	postinc2,??_fputc
  1947  0017A2  CFDD F006          	movff	postdec2,??_fputc+1
  1948  0017A6  C003  FFD9         	movff	fputc@fp,fsr2l
  1949  0017AA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1950  0017AE  CFDE F007          	movff	postinc2,??_fputc+2
  1951  0017B2  CFDD F008          	movff	postdec2,??_fputc+3
  1952  0017B6  5005               	movf	??_fputc^0,w,c
  1953  0017B8  2407               	addwf	(??_fputc+2)^0,w,c
  1954  0017BA  6ED9               	movwf	fsr2l,c
  1955  0017BC  5006               	movf	(??_fputc+1)^0,w,c
  1956  0017BE  2008               	addwfc	(??_fputc+3)^0,w,c
  1957  0017C0  6EDA               	movwf	fsr2h,c
  1958  0017C2  C001  FFDF         	movff	fputc@c,indf2
  1959  0017C6  EE20 F002          	lfsr	2,2
  1960  0017CA  5003               	movf	fputc@fp^0,w,c
  1961  0017CC  26D9               	addwf	fsr2l,f,c
  1962  0017CE  5004               	movf	(fputc@fp+1)^0,w,c
  1963  0017D0  22DA               	addwfc	fsr2h,f,c
  1964  0017D2  2ADE               	incf	postinc2,f,c
  1965  0017D4  0E00               	movlw	0
  1966  0017D6  22DD               	addwfc	postdec2,f,c
  1967  0017D8                     l875:
  1968  0017D8  0012               	return		;funcret
  1969  0017DA                     __end_of_fputc:
  1970                           	opt callstack 0
  1971                           
  1972 ;; *************** function _putch *****************
  1973 ;; Defined at:
  1974 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  c               1    wreg     unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  c               1    0[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_fputc
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text9
  2002  001D34                     __ptext9:
  2003                           	opt callstack 0
  2004  001D34                     _putch:
  2005                           	opt callstack 26
  2006  001D34  0012               	return		;funcret
  2007  001D36                     __end_of_putch:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _abs *****************
  2011 ;; Defined at:
  2012 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  a               2   18[COMRAM] int 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  2   18[COMRAM] int 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:         2       0       0       0       0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2029 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:        4 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_dtoa
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text10
  2040  001BDE                     __ptext10:
  2041                           	opt callstack 0
  2042  001BDE                     _abs:
  2043                           	opt callstack 26
  2044  001BDE  BE14               	btfsc	(abs@a+1)^0,7,c
  2045  001BE0  EFFC  F00D         	goto	u1100
  2046  001BE4  5014               	movf	(abs@a+1)^0,w,c
  2047  001BE6  E106               	bnz	u1101
  2048  001BE8  0413               	decf	abs@a^0,w,c
  2049  001BEA  B0D8               	btfsc	status,0,c
  2050  001BEC  EFFA  F00D         	goto	u1101
  2051  001BF0  EFFC  F00D         	goto	u1100
  2052  001BF4                     u1101:
  2053  001BF4  EF0A  F00E         	goto	l860
  2054  001BF8                     u1100:
  2055  001BF8  C013  F015         	movff	abs@a,??_abs
  2056  001BFC  C014  F016         	movff	abs@a+1,??_abs+1
  2057  001C00  1E15               	comf	??_abs^0,f,c
  2058  001C02  1E16               	comf	(??_abs+1)^0,f,c
  2059  001C04  4A15               	infsnz	??_abs^0,f,c
  2060  001C06  2A16               	incf	(??_abs+1)^0,f,c
  2061  001C08  C015  F013         	movff	??_abs,?_abs
  2062  001C0C  C016  F014         	movff	??_abs+1,?_abs+1
  2063  001C10  EF0E  F00E         	goto	l863
  2064  001C14                     l860:
  2065  001C14  C013  F013         	movff	abs@a,?_abs
  2066  001C18  C014  F014         	movff	abs@a+1,?_abs+1
  2067  001C1C                     l863:
  2068  001C1C  0012               	return		;funcret
  2069  001C1E                     __end_of_abs:
  2070                           	opt callstack 0
  2071                           
  2072 ;; *************** function ___aomod *****************
  2073 ;; Defined at:
  2074 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  dividend        8    0[COMRAM] long long 
  2077 ;;  divisor         8    8[COMRAM] long long 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  sign            1   17[COMRAM] unsigned char 
  2080 ;;  counter         1   16[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  8    0[COMRAM] long long 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2090 ;;      Params:        16       0       0       0       0       0       0       0       0
  2091 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2093 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2094 ;;Total ram usage:       18 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_dtoa
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text11
  2104  00139A                     __ptext11:
  2105                           	opt callstack 0
  2106  00139A                     ___aomod:
  2107                           	opt callstack 26
  2108  00139A  0E00               	movlw	0
  2109  00139C  6E12               	movwf	___aomod@sign^0,c
  2110  00139E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2111  0013A0  EFD6  F009         	goto	u1180
  2112  0013A4  EFD4  F009         	goto	u1181
  2113  0013A8                     u1181:
  2114  0013A8  EFE8  F009         	goto	l1699
  2115  0013AC                     u1180:
  2116  0013AC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2117  0013AE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2118  0013B0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2119  0013B2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2120  0013B4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2121  0013B6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2122  0013B8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2123  0013BA  6C01               	negf	___aomod@dividend^0,c
  2124  0013BC  0E00               	movlw	0
  2125  0013BE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2126  0013C0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2127  0013C2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2128  0013C4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2129  0013C6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2130  0013C8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2131  0013CA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2132  0013CC  0E01               	movlw	1
  2133  0013CE  6E12               	movwf	___aomod@sign^0,c
  2134  0013D0                     l1699:
  2135  0013D0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2136  0013D2  EFEF  F009         	goto	u1190
  2137  0013D6  EFED  F009         	goto	u1191
  2138  0013DA                     u1191:
  2139  0013DA  EFFF  F009         	goto	l1703
  2140  0013DE                     u1190:
  2141  0013DE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2142  0013E0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2143  0013E2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2144  0013E4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2145  0013E6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2146  0013E8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2147  0013EA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2148  0013EC  6C09               	negf	___aomod@divisor^0,c
  2149  0013EE  0E00               	movlw	0
  2150  0013F0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2151  0013F2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2152  0013F4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2153  0013F6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2154  0013F8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2155  0013FA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2156  0013FC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2157  0013FE                     l1703:
  2158  0013FE  5009               	movf	___aomod@divisor^0,w,c
  2159  001400  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2160  001402  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2161  001404  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2162  001406  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2163  001408  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2164  00140A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2165  00140C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2166  00140E  B4D8               	btfsc	status,2,c
  2167  001410  EF0C  F00A         	goto	u1201
  2168  001414  EF0E  F00A         	goto	u1200
  2169  001418                     u1201:
  2170  001418  EF56  F00A         	goto	l1719
  2171  00141C                     u1200:
  2172  00141C  0E01               	movlw	1
  2173  00141E  6E11               	movwf	___aomod@counter^0,c
  2174  001420  EF1C  F00A         	goto	l1709
  2175  001424                     l1707:
  2176  001424  90D8               	bcf	status,0,c
  2177  001426  3609               	rlcf	___aomod@divisor^0,f,c
  2178  001428  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2179  00142A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2180  00142C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2181  00142E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2182  001430  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2183  001432  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2184  001434  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2185  001436  2A11               	incf	___aomod@counter^0,f,c
  2186  001438                     l1709:
  2187  001438  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2188  00143A  EF21  F00A         	goto	u1211
  2189  00143E  EF23  F00A         	goto	u1210
  2190  001442                     u1211:
  2191  001442  EF12  F00A         	goto	l1707
  2192  001446                     u1210:
  2193  001446                     l1711:
  2194  001446  5009               	movf	___aomod@divisor^0,w,c
  2195  001448  5C01               	subwf	___aomod@dividend^0,w,c
  2196  00144A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2197  00144C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2198  00144E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2199  001450  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2200  001452  500C               	movf	(___aomod@divisor+3)^0,w,c
  2201  001454  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2202  001456  500D               	movf	(___aomod@divisor+4)^0,w,c
  2203  001458  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2204  00145A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2205  00145C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2206  00145E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2207  001460  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2208  001462  5010               	movf	(___aomod@divisor+7)^0,w,c
  2209  001464  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2210  001466  A0D8               	btfss	status,0,c
  2211  001468  EF38  F00A         	goto	u1221
  2212  00146C  EF3A  F00A         	goto	u1220
  2213  001470                     u1221:
  2214  001470  EF4A  F00A         	goto	l1715
  2215  001474                     u1220:
  2216  001474  5009               	movf	___aomod@divisor^0,w,c
  2217  001476  5E01               	subwf	___aomod@dividend^0,f,c
  2218  001478  500A               	movf	(___aomod@divisor+1)^0,w,c
  2219  00147A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2220  00147C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2221  00147E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2222  001480  500C               	movf	(___aomod@divisor+3)^0,w,c
  2223  001482  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2224  001484  500D               	movf	(___aomod@divisor+4)^0,w,c
  2225  001486  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2226  001488  500E               	movf	(___aomod@divisor+5)^0,w,c
  2227  00148A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2228  00148C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2229  00148E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2230  001490  5010               	movf	(___aomod@divisor+7)^0,w,c
  2231  001492  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2232  001494                     l1715:
  2233  001494  90D8               	bcf	status,0,c
  2234  001496  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2235  001498  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2236  00149A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2237  00149C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2238  00149E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2239  0014A0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2240  0014A2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2241  0014A4  3209               	rrcf	___aomod@divisor^0,f,c
  2242  0014A6  2E11               	decfsz	___aomod@counter^0,f,c
  2243  0014A8  EF23  F00A         	goto	l1711
  2244  0014AC                     l1719:
  2245  0014AC  5012               	movf	___aomod@sign^0,w,c
  2246  0014AE  B4D8               	btfsc	status,2,c
  2247  0014B0  EF5C  F00A         	goto	u1231
  2248  0014B4  EF5E  F00A         	goto	u1230
  2249  0014B8                     u1231:
  2250  0014B8  EF6E  F00A         	goto	l1723
  2251  0014BC                     u1230:
  2252  0014BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2253  0014BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2254  0014C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2255  0014C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2256  0014C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2257  0014C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2258  0014C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2259  0014CA  6C01               	negf	___aomod@dividend^0,c
  2260  0014CC  0E00               	movlw	0
  2261  0014CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2262  0014D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2263  0014D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2264  0014D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2265  0014D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2266  0014D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2267  0014DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2268  0014DC                     l1723:
  2269  0014DC  C001  F001         	movff	___aomod@dividend,?___aomod
  2270  0014E0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2271  0014E4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2272  0014E8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2273  0014EC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2274  0014F0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2275  0014F4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2276  0014F8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2277  0014FC  0012               	return		;funcret
  2278  0014FE                     __end_of___aomod:
  2279                           	opt callstack 0
  2280                           
  2281 ;; *************** function ___aodiv *****************
  2282 ;; Defined at:
  2283 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  dividend        8    0[COMRAM] long long 
  2286 ;;  divisor         8    8[COMRAM] long long 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  quotient        8   18[COMRAM] long long 
  2289 ;;  sign            1   17[COMRAM] unsigned char 
  2290 ;;  counter         1   16[COMRAM] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  8    0[COMRAM] long long 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2300 ;;      Params:        16       0       0       0       0       0       0       0       0
  2301 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2303 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2304 ;;Total ram usage:       26 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_dtoa
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text12
  2314  001212                     __ptext12:
  2315                           	opt callstack 0
  2316  001212                     ___aodiv:
  2317                           	opt callstack 26
  2318  001212  0E00               	movlw	0
  2319  001214  6E12               	movwf	___aodiv@sign^0,c
  2320  001216  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2321  001218  EF12  F009         	goto	u1110
  2322  00121C  EF10  F009         	goto	u1111
  2323  001220                     u1111:
  2324  001220  EF24  F009         	goto	l1655
  2325  001224                     u1110:
  2326  001224  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2327  001226  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2328  001228  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2329  00122A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2330  00122C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2331  00122E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2332  001230  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2333  001232  6C09               	negf	___aodiv@divisor^0,c
  2334  001234  0E00               	movlw	0
  2335  001236  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2336  001238  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2337  00123A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2338  00123C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2339  00123E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2340  001240  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2341  001242  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2342  001244  0E01               	movlw	1
  2343  001246  6E12               	movwf	___aodiv@sign^0,c
  2344  001248                     l1655:
  2345  001248  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2346  00124A  EF2B  F009         	goto	u1120
  2347  00124E  EF29  F009         	goto	u1121
  2348  001252                     u1121:
  2349  001252  EF3D  F009         	goto	l1661
  2350  001256                     u1120:
  2351  001256  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2352  001258  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2353  00125A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2354  00125C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2355  00125E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2356  001260  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2357  001262  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2358  001264  6C01               	negf	___aodiv@dividend^0,c
  2359  001266  0E00               	movlw	0
  2360  001268  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2361  00126A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2362  00126C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2363  00126E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2364  001270  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2365  001272  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2366  001274  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2367  001276  0E01               	movlw	1
  2368  001278  1A12               	xorwf	___aodiv@sign^0,f,c
  2369  00127A                     l1661:
  2370  00127A  EE20  F013         	lfsr	2,___aodiv@quotient
  2371  00127E  0E07               	movlw	7
  2372  001280                     u1131:
  2373  001280  6ADE               	clrf	postinc2,c
  2374  001282  06E8               	decf	wreg,f,c
  2375  001284  E2FD               	bc	u1131
  2376  001286  5009               	movf	___aodiv@divisor^0,w,c
  2377  001288  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2378  00128A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2379  00128C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2380  00128E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2381  001290  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2382  001292  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2383  001294  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2384  001296  B4D8               	btfsc	status,2,c
  2385  001298  EF50  F009         	goto	u1141
  2386  00129C  EF52  F009         	goto	u1140
  2387  0012A0                     u1141:
  2388  0012A0  EFA4  F009         	goto	l1683
  2389  0012A4                     u1140:
  2390  0012A4  0E01               	movlw	1
  2391  0012A6  6E11               	movwf	___aodiv@counter^0,c
  2392  0012A8  EF60  F009         	goto	l1669
  2393  0012AC                     l1667:
  2394  0012AC  90D8               	bcf	status,0,c
  2395  0012AE  3609               	rlcf	___aodiv@divisor^0,f,c
  2396  0012B0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2397  0012B2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2398  0012B4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2399  0012B6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2400  0012B8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2401  0012BA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2402  0012BC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2403  0012BE  2A11               	incf	___aodiv@counter^0,f,c
  2404  0012C0                     l1669:
  2405  0012C0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2406  0012C2  EF65  F009         	goto	u1151
  2407  0012C6  EF67  F009         	goto	u1150
  2408  0012CA                     u1151:
  2409  0012CA  EF56  F009         	goto	l1667
  2410  0012CE                     u1150:
  2411  0012CE                     l1671:
  2412  0012CE  90D8               	bcf	status,0,c
  2413  0012D0  3613               	rlcf	___aodiv@quotient^0,f,c
  2414  0012D2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2415  0012D4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2416  0012D6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2417  0012D8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2418  0012DA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2419  0012DC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2420  0012DE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2421  0012E0  5009               	movf	___aodiv@divisor^0,w,c
  2422  0012E2  5C01               	subwf	___aodiv@dividend^0,w,c
  2423  0012E4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2424  0012E6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2425  0012E8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2426  0012EA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2427  0012EC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2428  0012EE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2429  0012F0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2430  0012F2  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2431  0012F4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2432  0012F6  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2433  0012F8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2434  0012FA  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2435  0012FC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2436  0012FE  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2437  001300  A0D8               	btfss	status,0,c
  2438  001302  EF85  F009         	goto	u1161
  2439  001306  EF87  F009         	goto	u1160
  2440  00130A                     u1161:
  2441  00130A  EF98  F009         	goto	l1679
  2442  00130E                     u1160:
  2443  00130E  5009               	movf	___aodiv@divisor^0,w,c
  2444  001310  5E01               	subwf	___aodiv@dividend^0,f,c
  2445  001312  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2446  001314  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2447  001316  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2448  001318  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2449  00131A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2450  00131C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2451  00131E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2452  001320  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2453  001322  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2454  001324  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2455  001326  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2456  001328  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2457  00132A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2458  00132C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2459  00132E  8013               	bsf	___aodiv@quotient^0,0,c
  2460  001330                     l1679:
  2461  001330  90D8               	bcf	status,0,c
  2462  001332  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2463  001334  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2464  001336  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2465  001338  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2466  00133A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2467  00133C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2468  00133E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2469  001340  3209               	rrcf	___aodiv@divisor^0,f,c
  2470  001342  2E11               	decfsz	___aodiv@counter^0,f,c
  2471  001344  EF67  F009         	goto	l1671
  2472  001348                     l1683:
  2473  001348  5012               	movf	___aodiv@sign^0,w,c
  2474  00134A  B4D8               	btfsc	status,2,c
  2475  00134C  EFAA  F009         	goto	u1171
  2476  001350  EFAC  F009         	goto	u1170
  2477  001354                     u1171:
  2478  001354  EFBC  F009         	goto	l1687
  2479  001358                     u1170:
  2480  001358  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2481  00135A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2482  00135C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2483  00135E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2484  001360  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2485  001362  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2486  001364  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2487  001366  6C13               	negf	___aodiv@quotient^0,c
  2488  001368  0E00               	movlw	0
  2489  00136A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2490  00136C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2491  00136E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2492  001370  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2493  001372  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2494  001374  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2495  001376  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2496  001378                     l1687:
  2497  001378  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2498  00137C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2499  001380  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2500  001384  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2501  001388  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2502  00138C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2503  001390  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2504  001394  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2505  001398  0012               	return		;funcret
  2506  00139A                     __end_of___aodiv:
  2507                           	opt callstack 0
  2508                           
  2509 ;; *************** function _i2c_iniciar *****************
  2510 ;; Defined at:
  2511 ;;		line 13 in file "./I2C.h"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text13
  2539  001CD6                     __ptext13:
  2540                           	opt callstack 0
  2541  001CD6                     _i2c_iniciar:
  2542                           	opt callstack 30
  2543  001CD6                     
  2544                           ;./I2C.h: 14:     TRISBbits.RB0 = 1;
  2545  001CD6  8093               	bsf	147,0,c	;volatile
  2546                           
  2547                           ;./I2C.h: 15:     TRISBbits.RB1 = 1;
  2548  001CD8  8293               	bsf	147,1,c	;volatile
  2549  001CDA                     
  2550                           ;./I2C.h: 16:     SSPSTAT = 0b10000000;
  2551  001CDA  0E80               	movlw	128
  2552  001CDC  6EC7               	movwf	199,c	;volatile
  2553                           
  2554                           ;./I2C.h: 17:     SSPCON1 = 0b00101000;
  2555  001CDE  0E28               	movlw	40
  2556  001CE0  6EC6               	movwf	198,c	;volatile
  2557                           
  2558                           ;./I2C.h: 18:     SSPCON2 = 0b00000000;
  2559  001CE2  0E00               	movlw	0
  2560  001CE4  6EC5               	movwf	197,c	;volatile
  2561                           
  2562                           ;./I2C.h: 19:     SSPADD = 9;
  2563  001CE6  0E09               	movlw	9
  2564  001CE8  6EC8               	movwf	200,c	;volatile
  2565  001CEA  0012               	return		;funcret
  2566  001CEC                     __end_of_i2c_iniciar:
  2567                           	opt callstack 0
  2568                           
  2569 ;; *************** function _get_lux_value *****************
  2570 ;; Defined at:
  2571 ;;		line 59 in file "./bh1750.h"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  mode            1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  mode            1   64[COMRAM] unsigned char 
  2576 ;;  lux_value       4   65[COMRAM] unsigned long 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  4   59[COMRAM] unsigned long 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2586 ;;      Params:         4       0       0       0       0       0       0       0       0
  2587 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2589 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2590 ;;Total ram usage:       10 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    3
  2593 ;; This function calls:
  2594 ;;		_BH1750_read_word
  2595 ;;		_BH1750_write
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text14
  2602  001B50                     __ptext14:
  2603                           	opt callstack 0
  2604  001B50                     _get_lux_value:
  2605                           	opt callstack 27
  2606                           
  2607                           ;incstack = 0
  2608                           ;get_lux_value@mode stored from wreg
  2609  001B50  6E41               	movwf	get_lux_value@mode^0,c
  2610  001B52                     
  2611                           ;./bh1750.h: 61:     BH1750_write(0x01);
  2612  001B52  0E01               	movlw	1
  2613  001B54  EC54  F00E         	call	_BH1750_write
  2614  001B58                     
  2615                           ;./bh1750.h: 62:     BH1750_write(mode);
  2616  001B58  5041               	movf	get_lux_value@mode^0,w,c
  2617  001B5A  EC54  F00E         	call	_BH1750_write
  2618  001B5E                     
  2619                           ;./bh1750.h: 63:     lux_value = BH1750_read_word();
  2620  001B5E  EC50  F00C         	call	_BH1750_read_word	;wreg free
  2621  001B62  C032  F042         	movff	?_BH1750_read_word,get_lux_value@lux_value
  2622  001B66  C033  F043         	movff	?_BH1750_read_word+1,get_lux_value@lux_value+1
  2623  001B6A  C034  F044         	movff	?_BH1750_read_word+2,get_lux_value@lux_value+2
  2624  001B6E  C035  F045         	movff	?_BH1750_read_word+3,get_lux_value@lux_value+3
  2625  001B72                     
  2626                           ;./bh1750.h: 64:     _delay((unsigned long)((180)*(4000000/4000.0)));
  2627  001B72  0EEA               	movlw	234
  2628  001B74  6E40               	movwf	??_get_lux_value^0,c
  2629  001B76  0EC3               	movlw	195
  2630  001B78                     u1997:
  2631  001B78  2EE8               	decfsz	wreg,f,c
  2632  001B7A  D7FE               	bra	u1997
  2633  001B7C  2E40               	decfsz	??_get_lux_value^0,f,c
  2634  001B7E  D7FC               	bra	u1997
  2635  001B80  F000               	nop	
  2636  001B82                     
  2637                           ;./bh1750.h: 65:     BH1750_write(0x00);
  2638  001B82  0E00               	movlw	0
  2639  001B84  EC54  F00E         	call	_BH1750_write
  2640  001B88                     
  2641                           ;./bh1750.h: 67:     return lux_value;
  2642  001B88  C042  F03C         	movff	get_lux_value@lux_value,?_get_lux_value
  2643  001B8C  C043  F03D         	movff	get_lux_value@lux_value+1,?_get_lux_value+1
  2644  001B90  C044  F03E         	movff	get_lux_value@lux_value+2,?_get_lux_value+2
  2645  001B94  C045  F03F         	movff	get_lux_value@lux_value+3,?_get_lux_value+3
  2646  001B98  0012               	return		;funcret
  2647  001B9A                     __end_of_get_lux_value:
  2648                           	opt callstack 0
  2649                           
  2650 ;; *************** function _BH1750_read_word *****************
  2651 ;; Defined at:
  2652 ;;		line 42 in file "./bh1750.h"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  value           4   55[COMRAM] unsigned long 
  2657 ;;  lb              1   54[COMRAM] unsigned char 
  2658 ;;  hb              1   53[COMRAM] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  4   49[COMRAM] unsigned long 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2668 ;;      Params:         4       0       0       0       0       0       0       0       0
  2669 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2671 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2672 ;;Total ram usage:       10 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    2
  2675 ;; This function calls:
  2676 ;;		___fldiv
  2677 ;;		___fltol
  2678 ;;		___xxtofl
  2679 ;;		_i2c_detener
  2680 ;;		_i2c_envia_dato
  2681 ;;		_i2c_inicia_com
  2682 ;;		_i2c_recibe_datoACK
  2683 ;; This function is called by:
  2684 ;;		_get_lux_value
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text15
  2689  0018A0                     __ptext15:
  2690                           	opt callstack 0
  2691  0018A0                     _BH1750_read_word:
  2692                           	opt callstack 27
  2693  0018A0                     
  2694                           ;./bh1750.h: 44:     T_UBYTE lb = 0;
  2695  0018A0  0E00               	movlw	0
  2696  0018A2  6E37               	movwf	BH1750_read_word@lb^0,c
  2697                           
  2698                           ;./bh1750.h: 45:     T_UBYTE hb = 0;
  2699  0018A4  0E00               	movlw	0
  2700  0018A6  6E36               	movwf	BH1750_read_word@hb^0,c
  2701  0018A8                     
  2702                           ;./bh1750.h: 47:     i2c_inicia_com();
  2703  0018A8  EC92  F00E         	call	_i2c_inicia_com	;wreg free
  2704  0018AC                     
  2705                           ;./bh1750.h: 48:     i2c_envia_dato(0x47);
  2706  0018AC  0E47               	movlw	71
  2707  0018AE  EC8C  F00E         	call	_i2c_envia_dato
  2708  0018B2  0E01               	movlw	1
  2709  0018B4  EC2A  F00E         	call	_i2c_recibe_datoACK
  2710  0018B8                     
  2711                           ;./bh1750.h: 50:     lb = i2c_recibe_datoACK(0);
  2712  0018B8  0E00               	movlw	0
  2713  0018BA  EC2A  F00E         	call	_i2c_recibe_datoACK
  2714  0018BE  6E37               	movwf	BH1750_read_word@lb^0,c
  2715  0018C0                     
  2716                           ;./bh1750.h: 51:     i2c_detener();
  2717  0018C0  EC96  F00E         	call	_i2c_detener	;wreg free
  2718  0018C4                     
  2719                           ;./bh1750.h: 53:     value = (( T_UBYTE ) (((( T_UBYTE )( hb )) << 8 ) + (( T_UBYTE )( l
      +                          b ))));
  2720  0018C4  5037               	movf	BH1750_read_word@lb^0,w,c
  2721  0018C6  6E38               	movwf	BH1750_read_word@value^0,c
  2722  0018C8  6A39               	clrf	(BH1750_read_word@value+1)^0,c
  2723  0018CA  6A3A               	clrf	(BH1750_read_word@value+2)^0,c
  2724  0018CC  6A3B               	clrf	(BH1750_read_word@value+3)^0,c
  2725                           
  2726                           ;./bh1750.h: 54:     value /= 1.2;
  2727  0018CE  0E9A               	movlw	154
  2728  0018D0  6E13               	movwf	___fldiv@a^0,c
  2729  0018D2  0E99               	movlw	153
  2730  0018D4  6E14               	movwf	(___fldiv@a+1)^0,c
  2731  0018D6  0E99               	movlw	153
  2732  0018D8  6E15               	movwf	(___fldiv@a+2)^0,c
  2733  0018DA  0E3F               	movlw	63
  2734  0018DC  6E16               	movwf	(___fldiv@a+3)^0,c
  2735  0018DE  C038  F001         	movff	BH1750_read_word@value,___xxtofl@val
  2736  0018E2  C039  F002         	movff	BH1750_read_word@value+1,___xxtofl@val+1
  2737  0018E6  C03A  F003         	movff	BH1750_read_word@value+2,___xxtofl@val+2
  2738  0018EA  C03B  F004         	movff	BH1750_read_word@value+3,___xxtofl@val+3
  2739  0018EE  0E00               	movlw	0
  2740  0018F0  EC2F  F008         	call	___xxtofl
  2741  0018F4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2742  0018F8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2743  0018FC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2744  001900  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2745  001904  EC17  F004         	call	___fldiv	;wreg free
  2746  001908  C00F  F028         	movff	?___fldiv,___fltol@f1
  2747  00190C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  2748  001910  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  2749  001914  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  2750  001918  EC05  F00B         	call	___fltol	;wreg free
  2751  00191C  C028  F038         	movff	?___fltol,BH1750_read_word@value
  2752  001920  C029  F039         	movff	?___fltol+1,BH1750_read_word@value+1
  2753  001924  C02A  F03A         	movff	?___fltol+2,BH1750_read_word@value+2
  2754  001928  C02B  F03B         	movff	?___fltol+3,BH1750_read_word@value+3
  2755  00192C                     
  2756                           ;./bh1750.h: 56:     return value;
  2757  00192C  C038  F032         	movff	BH1750_read_word@value,?_BH1750_read_word
  2758  001930  C039  F033         	movff	BH1750_read_word@value+1,?_BH1750_read_word+1
  2759  001934  C03A  F034         	movff	BH1750_read_word@value+2,?_BH1750_read_word+2
  2760  001938  C03B  F035         	movff	BH1750_read_word@value+3,?_BH1750_read_word+3
  2761  00193C  0012               	return		;funcret
  2762  00193E                     __end_of_BH1750_read_word:
  2763                           	opt callstack 0
  2764                           
  2765 ;; *************** function _i2c_recibe_datoACK *****************
  2766 ;; Defined at:
  2767 ;;		line 103 in file "./I2C.h"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  a               1    wreg     unsigned char 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  a               1    1[COMRAM] unsigned char 
  2772 ;;  datoleido       1    2[COMRAM] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      unsigned char 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0
  2783 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2785 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2786 ;;Total ram usage:        2 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		_i2c_espera
  2791 ;; This function is called by:
  2792 ;;		_BH1750_read_word
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text16
  2797  001C54                     __ptext16:
  2798                           	opt callstack 0
  2799  001C54                     _i2c_recibe_datoACK:
  2800                           	opt callstack 27
  2801                           
  2802                           ;incstack = 0
  2803                           ;i2c_recibe_datoACK@a stored from wreg
  2804  001C54  6E02               	movwf	i2c_recibe_datoACK@a^0,c
  2805  001C56                     
  2806                           ;./I2C.h: 105:     T_UBYTE datoleido;;./I2C.h: 108:     i2c_espera();
  2807  001C56  EC41  F00E         	call	_i2c_espera	;wreg free
  2808  001C5A                     
  2809                           ;./I2C.h: 109:     SSPCON2bits.RCEN = 1;
  2810  001C5A  86C5               	bsf	197,3,c	;volatile
  2811                           
  2812                           ;./I2C.h: 111:     i2c_espera();
  2813  001C5C  EC41  F00E         	call	_i2c_espera	;wreg free
  2814  001C60                     
  2815                           ;./I2C.h: 112:     datoleido = SSPBUF;
  2816  001C60  CFC9 F003          	movff	4041,i2c_recibe_datoACK@datoleido	;volatile
  2817                           
  2818                           ;./I2C.h: 115:     i2c_espera();
  2819  001C64  EC41  F00E         	call	_i2c_espera	;wreg free
  2820  001C68                     
  2821                           ;./I2C.h: 117:     ACKDT = (a) ? 0 : 1;
  2822  001C68  5002               	movf	i2c_recibe_datoACK@a^0,w,c
  2823  001C6A  B4D8               	btfsc	status,2,c
  2824  001C6C  EF3A  F00E         	goto	u1411
  2825  001C70  EF3D  F00E         	goto	u1410
  2826  001C74                     u1411:
  2827  001C74  8AC5               	bsf	4037,5,c	;volatile
  2828  001C76  EF3E  F00E         	goto	u1425
  2829  001C7A                     u1410:
  2830  001C7A  9AC5               	bcf	4037,5,c	;volatile
  2831  001C7C                     u1425:
  2832  001C7C                     
  2833                           ;./I2C.h: 118:     ACKEN = 1;
  2834  001C7C  88C5               	bsf	4037,4,c	;volatile
  2835  001C7E                     
  2836                           ;./I2C.h: 120:     return datoleido;
  2837  001C7E  5003               	movf	i2c_recibe_datoACK@datoleido^0,w,c
  2838  001C80  0012               	return		;funcret
  2839  001C82                     __end_of_i2c_recibe_datoACK:
  2840                           	opt callstack 0
  2841                           
  2842 ;; *************** function ___xxtofl *****************
  2843 ;; Defined at:
  2844 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  sign            1    wreg     unsigned char 
  2847 ;;  val             4    0[COMRAM] long 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  sign            1    8[COMRAM] unsigned char 
  2850 ;;  arg             4   10[COMRAM] unsigned long 
  2851 ;;  exp             1    9[COMRAM] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  4    0[COMRAM] unsigned char 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2861 ;;      Params:         4       0       0       0       0       0       0       0       0
  2862 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2863 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2864 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2865 ;;Total ram usage:       14 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_BH1750_read_word
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text17
  2875  00105E                     __ptext17:
  2876                           	opt callstack 0
  2877  00105E                     ___xxtofl:
  2878                           	opt callstack 28
  2879                           
  2880                           ;incstack = 0
  2881                           ;___xxtofl@sign stored from wreg
  2882  00105E  6E09               	movwf	___xxtofl@sign^0,c
  2883  001060  5009               	movf	___xxtofl@sign^0,w,c
  2884  001062  B4D8               	btfsc	status,2,c
  2885  001064  EF36  F008         	goto	u1771
  2886  001068  EF38  F008         	goto	u1770
  2887  00106C                     u1771:
  2888  00106C  EF5A  F008         	goto	l840
  2889  001070                     u1770:
  2890  001070  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2891  001072  EF3F  F008         	goto	u1780
  2892  001076  EF3D  F008         	goto	u1781
  2893  00107A                     u1781:
  2894  00107A  EF5A  F008         	goto	l840
  2895  00107E                     u1780:
  2896  00107E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2897  001082  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2898  001086  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2899  00108A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2900  00108E  1E05               	comf	??___xxtofl^0,f,c
  2901  001090  1E06               	comf	(??___xxtofl+1)^0,f,c
  2902  001092  1E07               	comf	(??___xxtofl+2)^0,f,c
  2903  001094  1E08               	comf	(??___xxtofl+3)^0,f,c
  2904  001096  2A05               	incf	??___xxtofl^0,f,c
  2905  001098  0E00               	movlw	0
  2906  00109A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2907  00109C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2908  00109E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2909  0010A0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2910  0010A4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2911  0010A8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2912  0010AC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2913  0010B0  EF62  F008         	goto	l2055
  2914  0010B4                     l840:
  2915  0010B4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2916  0010B8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2917  0010BC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2918  0010C0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2919  0010C4                     l2055:
  2920  0010C4  5001               	movf	___xxtofl@val^0,w,c
  2921  0010C6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2922  0010C8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2923  0010CA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2924  0010CC  A4D8               	btfss	status,2,c
  2925  0010CE  EF6B  F008         	goto	u1791
  2926  0010D2  EF6D  F008         	goto	u1790
  2927  0010D6                     u1791:
  2928  0010D6  EF77  F008         	goto	l2061
  2929  0010DA                     u1790:
  2930  0010DA  0E00               	movlw	0
  2931  0010DC  6E01               	movwf	?___xxtofl^0,c
  2932  0010DE  0E00               	movlw	0
  2933  0010E0  6E02               	movwf	(?___xxtofl+1)^0,c
  2934  0010E2  0E00               	movlw	0
  2935  0010E4  6E03               	movwf	(?___xxtofl+2)^0,c
  2936  0010E6  0E00               	movlw	0
  2937  0010E8  6E04               	movwf	(?___xxtofl+3)^0,c
  2938  0010EA  EF08  F009         	goto	l843
  2939  0010EE                     l2061:
  2940  0010EE  0E96               	movlw	150
  2941  0010F0  6E0A               	movwf	___xxtofl@exp^0,c
  2942  0010F2  EF81  F008         	goto	l2065
  2943  0010F6                     l2063:
  2944  0010F6  2A0A               	incf	___xxtofl@exp^0,f,c
  2945  0010F8  90D8               	bcf	status,0,c
  2946  0010FA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2947  0010FC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2948  0010FE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2949  001100  320B               	rrcf	___xxtofl@arg^0,f,c
  2950  001102                     l2065:
  2951  001102  0E00               	movlw	0
  2952  001104  140B               	andwf	___xxtofl@arg^0,w,c
  2953  001106  6E05               	movwf	??___xxtofl^0,c
  2954  001108  0E00               	movlw	0
  2955  00110A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2956  00110C  6E06               	movwf	(??___xxtofl+1)^0,c
  2957  00110E  0E00               	movlw	0
  2958  001110  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2959  001112  6E07               	movwf	(??___xxtofl+2)^0,c
  2960  001114  0EFE               	movlw	254
  2961  001116  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2962  001118  6E08               	movwf	(??___xxtofl+3)^0,c
  2963  00111A  5005               	movf	??___xxtofl^0,w,c
  2964  00111C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2965  00111E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2966  001120  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2967  001122  A4D8               	btfss	status,2,c
  2968  001124  EF96  F008         	goto	u1801
  2969  001128  EF98  F008         	goto	u1800
  2970  00112C                     u1801:
  2971  00112C  EF7B  F008         	goto	l2063
  2972  001130                     u1800:
  2973  001130  EFA6  F008         	goto	l847
  2974  001134                     l2067:
  2975  001134  2A0A               	incf	___xxtofl@exp^0,f,c
  2976  001136  0E01               	movlw	1
  2977  001138  260B               	addwf	___xxtofl@arg^0,f,c
  2978  00113A  0E00               	movlw	0
  2979  00113C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2980  00113E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2981  001140  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2982  001142  90D8               	bcf	status,0,c
  2983  001144  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2984  001146  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2985  001148  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2986  00114A  320B               	rrcf	___xxtofl@arg^0,f,c
  2987  00114C                     l847:
  2988  00114C  0E00               	movlw	0
  2989  00114E  140B               	andwf	___xxtofl@arg^0,w,c
  2990  001150  6E05               	movwf	??___xxtofl^0,c
  2991  001152  0E00               	movlw	0
  2992  001154  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2993  001156  6E06               	movwf	(??___xxtofl+1)^0,c
  2994  001158  0E00               	movlw	0
  2995  00115A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2996  00115C  6E07               	movwf	(??___xxtofl+2)^0,c
  2997  00115E  0EFF               	movlw	255
  2998  001160  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2999  001162  6E08               	movwf	(??___xxtofl+3)^0,c
  3000  001164  5005               	movf	??___xxtofl^0,w,c
  3001  001166  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3002  001168  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3003  00116A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3004  00116C  A4D8               	btfss	status,2,c
  3005  00116E  EFBB  F008         	goto	u1811
  3006  001172  EFBD  F008         	goto	u1810
  3007  001176                     u1811:
  3008  001176  EF9A  F008         	goto	l2067
  3009  00117A                     u1810:
  3010  00117A  EFC5  F008         	goto	l2075
  3011  00117E                     l2073:
  3012  00117E  060A               	decf	___xxtofl@exp^0,f,c
  3013  001180  90D8               	bcf	status,0,c
  3014  001182  360B               	rlcf	___xxtofl@arg^0,f,c
  3015  001184  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3016  001186  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3017  001188  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3018  00118A                     l2075:
  3019  00118A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3020  00118C  EFCA  F008         	goto	u1821
  3021  001190  EFCC  F008         	goto	u1820
  3022  001194                     u1821:
  3023  001194  EFD4  F008         	goto	l854
  3024  001198                     u1820:
  3025  001198  0E02               	movlw	2
  3026  00119A  600A               	cpfslt	___xxtofl@exp^0,c
  3027  00119C  EFD2  F008         	goto	u1831
  3028  0011A0  EFD4  F008         	goto	u1830
  3029  0011A4                     u1831:
  3030  0011A4  EFBF  F008         	goto	l2073
  3031  0011A8                     u1830:
  3032  0011A8                     l854:
  3033  0011A8  B00A               	btfsc	___xxtofl@exp^0,0,c
  3034  0011AA  EFD9  F008         	goto	u1841
  3035  0011AE  EFDB  F008         	goto	u1840
  3036  0011B2                     u1841:
  3037  0011B2  EFDC  F008         	goto	l2081
  3038  0011B6                     u1840:
  3039  0011B6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3040  0011B8                     l2081:
  3041  0011B8  90D8               	bcf	status,0,c
  3042  0011BA  320A               	rrcf	___xxtofl@exp^0,f,c
  3043  0011BC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3044  0011C0  6A06               	clrf	(??___xxtofl+1)^0,c
  3045  0011C2  6A07               	clrf	(??___xxtofl+2)^0,c
  3046  0011C4  6A08               	clrf	(??___xxtofl+3)^0,c
  3047  0011C6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3048  0011CA  6A07               	clrf	(??___xxtofl+2)^0,c
  3049  0011CC  6A06               	clrf	(??___xxtofl+1)^0,c
  3050  0011CE  6A05               	clrf	??___xxtofl^0,c
  3051  0011D0  5005               	movf	??___xxtofl^0,w,c
  3052  0011D2  120B               	iorwf	___xxtofl@arg^0,f,c
  3053  0011D4  5006               	movf	(??___xxtofl+1)^0,w,c
  3054  0011D6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3055  0011D8  5007               	movf	(??___xxtofl+2)^0,w,c
  3056  0011DA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3057  0011DC  5008               	movf	(??___xxtofl+3)^0,w,c
  3058  0011DE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3059  0011E0  5009               	movf	___xxtofl@sign^0,w,c
  3060  0011E2  B4D8               	btfsc	status,2,c
  3061  0011E4  EFF6  F008         	goto	u1851
  3062  0011E8  EFF8  F008         	goto	u1850
  3063  0011EC                     u1851:
  3064  0011EC  EF00  F009         	goto	l2091
  3065  0011F0                     u1850:
  3066  0011F0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3067  0011F2  EFFF  F008         	goto	u1860
  3068  0011F6  EFFD  F008         	goto	u1861
  3069  0011FA                     u1861:
  3070  0011FA  EF00  F009         	goto	l2091
  3071  0011FE                     u1860:
  3072  0011FE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3073  001200                     l2091:
  3074  001200  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3075  001204  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3076  001208  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3077  00120C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3078  001210                     l843:
  3079  001210  0012               	return		;funcret
  3080  001212                     __end_of___xxtofl:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function ___fltol *****************
  3084 ;; Defined at:
  3085 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  f1              4   39[COMRAM] unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  exp1            1   48[COMRAM] unsigned char 
  3090 ;;  sign1           1   47[COMRAM] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  4   39[COMRAM] long 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3100 ;;      Params:         4       0       0       0       0       0       0       0       0
  3101 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3102 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3103 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3104 ;;Total ram usage:       10 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_BH1750_read_word
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text18
  3114  00160A                     __ptext18:
  3115                           	opt callstack 0
  3116  00160A                     ___fltol:
  3117                           	opt callstack 28
  3118  00160A  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3119  00160C  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3120  00160E  6E31               	movwf	___fltol@exp1^0,c
  3121  001610  5031               	movf	___fltol@exp1^0,w,c
  3122  001612  A4D8               	btfss	status,2,c
  3123  001614  EF0E  F00B         	goto	u1701
  3124  001618  EF10  F00B         	goto	u1700
  3125  00161C                     u1701:
  3126  00161C  EF1A  F00B         	goto	l2011
  3127  001620                     u1700:
  3128  001620                     l2007:
  3129  001620  0E00               	movlw	0
  3130  001622  6E28               	movwf	?___fltol^0,c
  3131  001624  0E00               	movlw	0
  3132  001626  6E29               	movwf	(?___fltol+1)^0,c
  3133  001628  0E00               	movlw	0
  3134  00162A  6E2A               	movwf	(?___fltol+2)^0,c
  3135  00162C  0E00               	movlw	0
  3136  00162E  6E2B               	movwf	(?___fltol+3)^0,c
  3137  001630  EF87  F00B         	goto	l482
  3138  001634                     l2011:
  3139  001634  C028  F02C         	movff	___fltol@f1,??___fltol
  3140  001638  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3141  00163C  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3142  001640  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3143  001644  0E20               	movlw	32
  3144  001646  EF2A  F00B         	goto	u1710
  3145  00164A                     u1715:
  3146  00164A  90D8               	bcf	status,0,c
  3147  00164C  322F               	rrcf	(??___fltol+3)^0,f,c
  3148  00164E  322E               	rrcf	(??___fltol+2)^0,f,c
  3149  001650  322D               	rrcf	(??___fltol+1)^0,f,c
  3150  001652  322C               	rrcf	??___fltol^0,f,c
  3151  001654                     u1710:
  3152  001654  2EE8               	decfsz	wreg,f,c
  3153  001656  EF25  F00B         	goto	u1715
  3154  00165A  502C               	movf	??___fltol^0,w,c
  3155  00165C  6E30               	movwf	___fltol@sign1^0,c
  3156  00165E  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3157  001660  0EFF               	movlw	255
  3158  001662  1628               	andwf	___fltol@f1^0,f,c
  3159  001664  0EFF               	movlw	255
  3160  001666  1629               	andwf	(___fltol@f1+1)^0,f,c
  3161  001668  0EFF               	movlw	255
  3162  00166A  162A               	andwf	(___fltol@f1+2)^0,f,c
  3163  00166C  0E00               	movlw	0
  3164  00166E  162B               	andwf	(___fltol@f1+3)^0,f,c
  3165  001670  0E96               	movlw	150
  3166  001672  5E31               	subwf	___fltol@exp1^0,f,c
  3167  001674  BE31               	btfsc	___fltol@exp1^0,7,c
  3168  001676  EF41  F00B         	goto	u1720
  3169  00167A  EF3F  F00B         	goto	u1721
  3170  00167E                     u1721:
  3171  00167E  EF57  F00B         	goto	l2031
  3172  001682                     u1720:
  3173  001682  5031               	movf	___fltol@exp1^0,w,c
  3174  001684  0A80               	xorlw	128
  3175  001686  0F97               	addlw	151
  3176  001688  B0D8               	btfsc	status,0,c
  3177  00168A  EF49  F00B         	goto	u1731
  3178  00168E  EF4B  F00B         	goto	u1730
  3179  001692                     u1731:
  3180  001692  EF4D  F00B         	goto	l2027
  3181  001696                     u1730:
  3182  001696  EF10  F00B         	goto	l2007
  3183  00169A                     l2027:
  3184  00169A  90D8               	bcf	status,0,c
  3185  00169C  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3186  00169E  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3187  0016A0  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3188  0016A2  3228               	rrcf	___fltol@f1^0,f,c
  3189  0016A4  3E31               	incfsz	___fltol@exp1^0,f,c
  3190  0016A6  EF4D  F00B         	goto	l2027
  3191  0016AA  EF6F  F00B         	goto	l2041
  3192  0016AE                     l2031:
  3193  0016AE  0E1F               	movlw	31
  3194  0016B0  6431               	cpfsgt	___fltol@exp1^0,c
  3195  0016B2  EF5D  F00B         	goto	u1741
  3196  0016B6  EF5F  F00B         	goto	u1740
  3197  0016BA                     u1741:
  3198  0016BA  EF67  F00B         	goto	l2039
  3199  0016BE                     u1740:
  3200  0016BE  EF10  F00B         	goto	l2007
  3201  0016C2                     l2037:
  3202  0016C2  90D8               	bcf	status,0,c
  3203  0016C4  3628               	rlcf	___fltol@f1^0,f,c
  3204  0016C6  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3205  0016C8  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3206  0016CA  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3207  0016CC  0631               	decf	___fltol@exp1^0,f,c
  3208  0016CE                     l2039:
  3209  0016CE  5031               	movf	___fltol@exp1^0,w,c
  3210  0016D0  A4D8               	btfss	status,2,c
  3211  0016D2  EF6D  F00B         	goto	u1751
  3212  0016D6  EF6F  F00B         	goto	u1750
  3213  0016DA                     u1751:
  3214  0016DA  EF61  F00B         	goto	l2037
  3215  0016DE                     u1750:
  3216  0016DE                     l2041:
  3217  0016DE  5030               	movf	___fltol@sign1^0,w,c
  3218  0016E0  B4D8               	btfsc	status,2,c
  3219  0016E2  EF75  F00B         	goto	u1761
  3220  0016E6  EF77  F00B         	goto	u1760
  3221  0016EA                     u1761:
  3222  0016EA  EF7F  F00B         	goto	l2045
  3223  0016EE                     u1760:
  3224  0016EE  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3225  0016F0  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3226  0016F2  1E29               	comf	(___fltol@f1+1)^0,f,c
  3227  0016F4  6C28               	negf	___fltol@f1^0,c
  3228  0016F6  0E00               	movlw	0
  3229  0016F8  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3230  0016FA  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3231  0016FC  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3232  0016FE                     l2045:
  3233  0016FE  C028  F028         	movff	___fltol@f1,?___fltol
  3234  001702  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3235  001706  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3236  00170A  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3237  00170E                     l482:
  3238  00170E  0012               	return		;funcret
  3239  001710                     __end_of___fltol:
  3240                           	opt callstack 0
  3241                           
  3242 ;; *************** function ___fldiv *****************
  3243 ;; Defined at:
  3244 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  b               4   14[COMRAM] long 
  3247 ;;  a               4   18[COMRAM] long 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  grs             4   33[COMRAM] unsigned long 
  3250 ;;  rem             4   26[COMRAM] unsigned long 
  3251 ;;  new_exp         2   31[COMRAM] short 
  3252 ;;  aexp            1   38[COMRAM] unsigned char 
  3253 ;;  bexp            1   37[COMRAM] unsigned char 
  3254 ;;  sign            1   30[COMRAM] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  4   14[COMRAM] unsigned char 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3264 ;;      Params:         8       0       0       0       0       0       0       0       0
  3265 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3266 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3267 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3268 ;;Total ram usage:       25 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_BH1750_read_word
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text19
  3278  00082E                     __ptext19:
  3279                           	opt callstack 0
  3280  00082E                     ___fldiv:
  3281                           	opt callstack 28
  3282  00082E  5012               	movf	(___fldiv@b+3)^0,w,c
  3283  000830  0B80               	andlw	128
  3284  000832  6E1F               	movwf	___fldiv@sign^0,c
  3285  000834  5012               	movf	(___fldiv@b+3)^0,w,c
  3286  000836  2412               	addwf	(___fldiv@b+3)^0,w,c
  3287  000838  6E26               	movwf	___fldiv@bexp^0,c
  3288  00083A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3289  00083C  EF22  F004         	goto	u1471
  3290  000840  EF24  F004         	goto	u1470
  3291  000844                     u1471:
  3292  000844  EF25  F004         	goto	l1873
  3293  000848                     u1470:
  3294  000848  8026               	bsf	___fldiv@bexp^0,0,c
  3295  00084A                     l1873:
  3296  00084A  5026               	movf	___fldiv@bexp^0,w,c
  3297  00084C  B4D8               	btfsc	status,2,c
  3298  00084E  EF2B  F004         	goto	u1481
  3299  000852  EF2D  F004         	goto	u1480
  3300  000856                     u1481:
  3301  000856  EF42  F004         	goto	l1883
  3302  00085A                     u1480:
  3303  00085A  2826               	incf	___fldiv@bexp^0,w,c
  3304  00085C  A4D8               	btfss	status,2,c
  3305  00085E  EF33  F004         	goto	u1491
  3306  000862  EF35  F004         	goto	u1490
  3307  000866                     u1491:
  3308  000866  EF3D  F004         	goto	l1879
  3309  00086A                     u1490:
  3310  00086A  0E00               	movlw	0
  3311  00086C  6E0F               	movwf	___fldiv@b^0,c
  3312  00086E  0E00               	movlw	0
  3313  000870  6E10               	movwf	(___fldiv@b+1)^0,c
  3314  000872  0E00               	movlw	0
  3315  000874  6E11               	movwf	(___fldiv@b+2)^0,c
  3316  000876  0E00               	movlw	0
  3317  000878  6E12               	movwf	(___fldiv@b+3)^0,c
  3318  00087A                     l1879:
  3319  00087A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3320  00087C  0E00               	movlw	0
  3321  00087E  6E12               	movwf	(___fldiv@b+3)^0,c
  3322  000880  EF4A  F004         	goto	l1885
  3323  000884                     l1883:
  3324  000884  0E00               	movlw	0
  3325  000886  6E0F               	movwf	___fldiv@b^0,c
  3326  000888  0E00               	movlw	0
  3327  00088A  6E10               	movwf	(___fldiv@b+1)^0,c
  3328  00088C  0E00               	movlw	0
  3329  00088E  6E11               	movwf	(___fldiv@b+2)^0,c
  3330  000890  0E00               	movlw	0
  3331  000892  6E12               	movwf	(___fldiv@b+3)^0,c
  3332  000894                     l1885:
  3333  000894  5016               	movf	(___fldiv@a+3)^0,w,c
  3334  000896  0B80               	andlw	128
  3335  000898  1A1F               	xorwf	___fldiv@sign^0,f,c
  3336  00089A  5016               	movf	(___fldiv@a+3)^0,w,c
  3337  00089C  2416               	addwf	(___fldiv@a+3)^0,w,c
  3338  00089E  6E27               	movwf	___fldiv@aexp^0,c
  3339  0008A0  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3340  0008A2  EF55  F004         	goto	u1501
  3341  0008A6  EF57  F004         	goto	u1500
  3342  0008AA                     u1501:
  3343  0008AA  EF58  F004         	goto	l1893
  3344  0008AE                     u1500:
  3345  0008AE  8027               	bsf	___fldiv@aexp^0,0,c
  3346  0008B0                     l1893:
  3347  0008B0  5027               	movf	___fldiv@aexp^0,w,c
  3348  0008B2  B4D8               	btfsc	status,2,c
  3349  0008B4  EF5E  F004         	goto	u1511
  3350  0008B8  EF60  F004         	goto	u1510
  3351  0008BC                     u1511:
  3352  0008BC  EF75  F004         	goto	l1903
  3353  0008C0                     u1510:
  3354  0008C0  2827               	incf	___fldiv@aexp^0,w,c
  3355  0008C2  A4D8               	btfss	status,2,c
  3356  0008C4  EF66  F004         	goto	u1521
  3357  0008C8  EF68  F004         	goto	u1520
  3358  0008CC                     u1521:
  3359  0008CC  EF70  F004         	goto	l1899
  3360  0008D0                     u1520:
  3361  0008D0  0E00               	movlw	0
  3362  0008D2  6E13               	movwf	___fldiv@a^0,c
  3363  0008D4  0E00               	movlw	0
  3364  0008D6  6E14               	movwf	(___fldiv@a+1)^0,c
  3365  0008D8  0E00               	movlw	0
  3366  0008DA  6E15               	movwf	(___fldiv@a+2)^0,c
  3367  0008DC  0E00               	movlw	0
  3368  0008DE  6E16               	movwf	(___fldiv@a+3)^0,c
  3369  0008E0                     l1899:
  3370  0008E0  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3371  0008E2  0E00               	movlw	0
  3372  0008E4  6E16               	movwf	(___fldiv@a+3)^0,c
  3373  0008E6  EF7D  F004         	goto	l1905
  3374  0008EA                     l1903:
  3375  0008EA  0E00               	movlw	0
  3376  0008EC  6E13               	movwf	___fldiv@a^0,c
  3377  0008EE  0E00               	movlw	0
  3378  0008F0  6E14               	movwf	(___fldiv@a+1)^0,c
  3379  0008F2  0E00               	movlw	0
  3380  0008F4  6E15               	movwf	(___fldiv@a+2)^0,c
  3381  0008F6  0E00               	movlw	0
  3382  0008F8  6E16               	movwf	(___fldiv@a+3)^0,c
  3383  0008FA                     l1905:
  3384  0008FA  5013               	movf	___fldiv@a^0,w,c
  3385  0008FC  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3386  0008FE  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3387  000900  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3388  000902  A4D8               	btfss	status,2,c
  3389  000904  EF86  F004         	goto	u1531
  3390  000908  EF88  F004         	goto	u1530
  3391  00090C                     u1531:
  3392  00090C  EFA0  F004         	goto	l1917
  3393  000910                     u1530:
  3394  000910  0E00               	movlw	0
  3395  000912  6E0F               	movwf	___fldiv@b^0,c
  3396  000914  0E00               	movlw	0
  3397  000916  6E10               	movwf	(___fldiv@b+1)^0,c
  3398  000918  0E00               	movlw	0
  3399  00091A  6E11               	movwf	(___fldiv@b+2)^0,c
  3400  00091C  0E00               	movlw	0
  3401  00091E  6E12               	movwf	(___fldiv@b+3)^0,c
  3402  000920  0E80               	movlw	128
  3403  000922  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3404  000924  0E7F               	movlw	127
  3405  000926  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3406  000928                     l1911:
  3407  000928  501F               	movf	___fldiv@sign^0,w,c
  3408  00092A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3409  00092C  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3410  000930  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3411  000934  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3412  000938  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3413  00093C  EFE3  F005         	goto	l767
  3414  000940                     l1917:
  3415  000940  5026               	movf	___fldiv@bexp^0,w,c
  3416  000942  A4D8               	btfss	status,2,c
  3417  000944  EFA6  F004         	goto	u1541
  3418  000948  EFA8  F004         	goto	u1540
  3419  00094C                     u1541:
  3420  00094C  EFB2  F004         	goto	l1925
  3421  000950                     u1540:
  3422  000950  0E00               	movlw	0
  3423  000952  6E0F               	movwf	?___fldiv^0,c
  3424  000954  0E00               	movlw	0
  3425  000956  6E10               	movwf	(?___fldiv+1)^0,c
  3426  000958  0E00               	movlw	0
  3427  00095A  6E11               	movwf	(?___fldiv+2)^0,c
  3428  00095C  0E00               	movlw	0
  3429  00095E  6E12               	movwf	(?___fldiv+3)^0,c
  3430  000960  EFE3  F005         	goto	l767
  3431  000964                     l1925:
  3432  000964  5027               	movf	___fldiv@aexp^0,w,c
  3433  000966  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3434  00096A  6A18               	clrf	(??___fldiv+1)^0,c
  3435  00096C  5E17               	subwf	??___fldiv^0,f,c
  3436  00096E  0E00               	movlw	0
  3437  000970  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3438  000972  0E7F               	movlw	127
  3439  000974  2417               	addwf	??___fldiv^0,w,c
  3440  000976  6E20               	movwf	___fldiv@new_exp^0,c
  3441  000978  0E00               	movlw	0
  3442  00097A  2018               	addwfc	(??___fldiv+1)^0,w,c
  3443  00097C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3444  00097E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3445  000982  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3446  000986  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3447  00098A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3448  00098E  0E00               	movlw	0
  3449  000990  6E0F               	movwf	___fldiv@b^0,c
  3450  000992  0E00               	movlw	0
  3451  000994  6E10               	movwf	(___fldiv@b+1)^0,c
  3452  000996  0E00               	movlw	0
  3453  000998  6E11               	movwf	(___fldiv@b+2)^0,c
  3454  00099A  0E00               	movlw	0
  3455  00099C  6E12               	movwf	(___fldiv@b+3)^0,c
  3456  00099E  0E00               	movlw	0
  3457  0009A0  6E22               	movwf	___fldiv@grs^0,c
  3458  0009A2  0E00               	movlw	0
  3459  0009A4  6E23               	movwf	(___fldiv@grs+1)^0,c
  3460  0009A6  0E00               	movlw	0
  3461  0009A8  6E24               	movwf	(___fldiv@grs+2)^0,c
  3462  0009AA  0E00               	movlw	0
  3463  0009AC  6E25               	movwf	(___fldiv@grs+3)^0,c
  3464  0009AE  0E00               	movlw	0
  3465  0009B0  6E27               	movwf	___fldiv@aexp^0,c
  3466  0009B2  EF13  F005         	goto	l769
  3467  0009B6                     l1935:
  3468  0009B6  5027               	movf	___fldiv@aexp^0,w,c
  3469  0009B8  B4D8               	btfsc	status,2,c
  3470  0009BA  EFE1  F004         	goto	u1551
  3471  0009BE  EFE3  F004         	goto	u1550
  3472  0009C2                     u1551:
  3473  0009C2  EFFA  F004         	goto	l1943
  3474  0009C6                     u1550:
  3475  0009C6  90D8               	bcf	status,0,c
  3476  0009C8  361B               	rlcf	___fldiv@rem^0,f,c
  3477  0009CA  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3478  0009CC  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3479  0009CE  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3480  0009D0  90D8               	bcf	status,0,c
  3481  0009D2  360F               	rlcf	___fldiv@b^0,f,c
  3482  0009D4  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3483  0009D6  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3484  0009D8  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3485  0009DA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3486  0009DC  EFF2  F004         	goto	u1561
  3487  0009E0  EFF4  F004         	goto	u1560
  3488  0009E4                     u1561:
  3489  0009E4  EFF5  F004         	goto	l772
  3490  0009E8                     u1560:
  3491  0009E8  800F               	bsf	___fldiv@b^0,0,c
  3492  0009EA                     l772:
  3493  0009EA  90D8               	bcf	status,0,c
  3494  0009EC  3622               	rlcf	___fldiv@grs^0,f,c
  3495  0009EE  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3496  0009F0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3497  0009F2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3498  0009F4                     l1943:
  3499  0009F4  5013               	movf	___fldiv@a^0,w,c
  3500  0009F6  5C1B               	subwf	___fldiv@rem^0,w,c
  3501  0009F8  5014               	movf	(___fldiv@a+1)^0,w,c
  3502  0009FA  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3503  0009FC  5015               	movf	(___fldiv@a+2)^0,w,c
  3504  0009FE  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3505  000A00  5016               	movf	(___fldiv@a+3)^0,w,c
  3506  000A02  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3507  000A04  A0D8               	btfss	status,0,c
  3508  000A06  EF07  F005         	goto	u1571
  3509  000A0A  EF09  F005         	goto	u1570
  3510  000A0E                     u1571:
  3511  000A0E  EF12  F005         	goto	l1949
  3512  000A12                     u1570:
  3513  000A12  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3514  000A14  5013               	movf	___fldiv@a^0,w,c
  3515  000A16  5E1B               	subwf	___fldiv@rem^0,f,c
  3516  000A18  5014               	movf	(___fldiv@a+1)^0,w,c
  3517  000A1A  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3518  000A1C  5015               	movf	(___fldiv@a+2)^0,w,c
  3519  000A1E  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3520  000A20  5016               	movf	(___fldiv@a+3)^0,w,c
  3521  000A22  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3522  000A24                     l1949:
  3523  000A24  2A27               	incf	___fldiv@aexp^0,f,c
  3524  000A26                     l769:
  3525  000A26  0E19               	movlw	25
  3526  000A28  6427               	cpfsgt	___fldiv@aexp^0,c
  3527  000A2A  EF19  F005         	goto	u1581
  3528  000A2E  EF1B  F005         	goto	u1580
  3529  000A32                     u1581:
  3530  000A32  EFDB  F004         	goto	l1935
  3531  000A36                     u1580:
  3532  000A36  501B               	movf	___fldiv@rem^0,w,c
  3533  000A38  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3534  000A3A  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3535  000A3C  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3536  000A3E  B4D8               	btfsc	status,2,c
  3537  000A40  EF24  F005         	goto	u1591
  3538  000A44  EF26  F005         	goto	u1590
  3539  000A48                     u1591:
  3540  000A48  EF3E  F005         	goto	l1961
  3541  000A4C                     u1590:
  3542  000A4C  8022               	bsf	___fldiv@grs^0,0,c
  3543  000A4E  EF3E  F005         	goto	l1961
  3544  000A52                     l1955:
  3545  000A52  90D8               	bcf	status,0,c
  3546  000A54  360F               	rlcf	___fldiv@b^0,f,c
  3547  000A56  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3548  000A58  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3549  000A5A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3550  000A5C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3551  000A5E  EF33  F005         	goto	u1601
  3552  000A62  EF35  F005         	goto	u1600
  3553  000A66                     u1601:
  3554  000A66  EF36  F005         	goto	l778
  3555  000A6A                     u1600:
  3556  000A6A  800F               	bsf	___fldiv@b^0,0,c
  3557  000A6C                     l778:
  3558  000A6C  90D8               	bcf	status,0,c
  3559  000A6E  3622               	rlcf	___fldiv@grs^0,f,c
  3560  000A70  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3561  000A72  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3562  000A74  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3563  000A76  0620               	decf	___fldiv@new_exp^0,f,c
  3564  000A78  A0D8               	btfss	status,0,c
  3565  000A7A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3566  000A7C                     l1961:
  3567  000A7C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3568  000A7E  EF43  F005         	goto	u1611
  3569  000A82  EF45  F005         	goto	u1610
  3570  000A86                     u1611:
  3571  000A86  EF29  F005         	goto	l1955
  3572  000A8A                     u1610:
  3573  000A8A  0E00               	movlw	0
  3574  000A8C  6E27               	movwf	___fldiv@aexp^0,c
  3575  000A8E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3576  000A90  EF4C  F005         	goto	u1621
  3577  000A94  EF4E  F005         	goto	u1620
  3578  000A98                     u1621:
  3579  000A98  EF72  F005         	goto	l780
  3580  000A9C                     u1620:
  3581  000A9C  0EFF               	movlw	255
  3582  000A9E  1422               	andwf	___fldiv@grs^0,w,c
  3583  000AA0  6E17               	movwf	??___fldiv^0,c
  3584  000AA2  0EFF               	movlw	255
  3585  000AA4  1423               	andwf	(___fldiv@grs+1)^0,w,c
  3586  000AA6  6E18               	movwf	(??___fldiv+1)^0,c
  3587  000AA8  0EFF               	movlw	255
  3588  000AAA  1424               	andwf	(___fldiv@grs+2)^0,w,c
  3589  000AAC  6E19               	movwf	(??___fldiv+2)^0,c
  3590  000AAE  0E7F               	movlw	127
  3591  000AB0  1425               	andwf	(___fldiv@grs+3)^0,w,c
  3592  000AB2  6E1A               	movwf	(??___fldiv+3)^0,c
  3593  000AB4  5017               	movf	??___fldiv^0,w,c
  3594  000AB6  1018               	iorwf	(??___fldiv+1)^0,w,c
  3595  000AB8  1019               	iorwf	(??___fldiv+2)^0,w,c
  3596  000ABA  101A               	iorwf	(??___fldiv+3)^0,w,c
  3597  000ABC  B4D8               	btfsc	status,2,c
  3598  000ABE  EF63  F005         	goto	u1631
  3599  000AC2  EF65  F005         	goto	u1630
  3600  000AC6                     u1631:
  3601  000AC6  EF69  F005         	goto	l781
  3602  000ACA                     u1630:
  3603  000ACA                     l1969:
  3604  000ACA  0E01               	movlw	1
  3605  000ACC  6E27               	movwf	___fldiv@aexp^0,c
  3606  000ACE  EF72  F005         	goto	l780
  3607  000AD2                     l781:
  3608  000AD2  A00F               	btfss	___fldiv@b^0,0,c
  3609  000AD4  EF6E  F005         	goto	u1641
  3610  000AD8  EF70  F005         	goto	u1640
  3611  000ADC                     u1641:
  3612  000ADC  EF72  F005         	goto	l780
  3613  000AE0                     u1640:
  3614  000AE0  EF65  F005         	goto	l1969
  3615  000AE4                     l780:
  3616  000AE4  5027               	movf	___fldiv@aexp^0,w,c
  3617  000AE6  B4D8               	btfsc	status,2,c
  3618  000AE8  EF78  F005         	goto	u1651
  3619  000AEC  EF7A  F005         	goto	u1650
  3620  000AF0                     u1651:
  3621  000AF0  EF9E  F005         	goto	l1981
  3622  000AF4                     u1650:
  3623  000AF4  0E01               	movlw	1
  3624  000AF6  260F               	addwf	___fldiv@b^0,f,c
  3625  000AF8  0E00               	movlw	0
  3626  000AFA  2210               	addwfc	(___fldiv@b+1)^0,f,c
  3627  000AFC  2211               	addwfc	(___fldiv@b+2)^0,f,c
  3628  000AFE  2212               	addwfc	(___fldiv@b+3)^0,f,c
  3629  000B00  A012               	btfss	(___fldiv@b+3)^0,0,c
  3630  000B02  EF85  F005         	goto	u1661
  3631  000B06  EF87  F005         	goto	u1660
  3632  000B0A                     u1661:
  3633  000B0A  EF9E  F005         	goto	l1981
  3634  000B0E                     u1660:
  3635  000B0E  C00F  F017         	movff	___fldiv@b,??___fldiv
  3636  000B12  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3637  000B16  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3638  000B1A  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3639  000B1E  341A               	rlcf	(??___fldiv+3)^0,w,c
  3640  000B20  321A               	rrcf	(??___fldiv+3)^0,f,c
  3641  000B22  3219               	rrcf	(??___fldiv+2)^0,f,c
  3642  000B24  3218               	rrcf	(??___fldiv+1)^0,f,c
  3643  000B26  3217               	rrcf	??___fldiv^0,f,c
  3644  000B28  C017  F00F         	movff	??___fldiv,___fldiv@b
  3645  000B2C  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3646  000B30  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3647  000B34  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3648  000B38  4A20               	infsnz	___fldiv@new_exp^0,f,c
  3649  000B3A  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  3650  000B3C                     l1981:
  3651  000B3C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3652  000B3E  EFA9  F005         	goto	u1671
  3653  000B42  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3654  000B44  E108               	bnz	u1670
  3655  000B46  2820               	incf	___fldiv@new_exp^0,w,c
  3656  000B48  A0D8               	btfss	status,0,c
  3657  000B4A  EFA9  F005         	goto	u1671
  3658  000B4E  EFAB  F005         	goto	u1670
  3659  000B52                     u1671:
  3660  000B52  EFB6  F005         	goto	l1985
  3661  000B56                     u1670:
  3662  000B56  0E00               	movlw	0
  3663  000B58  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3664  000B5A  6820               	setf	___fldiv@new_exp^0,c
  3665  000B5C  0E00               	movlw	0
  3666  000B5E  6E0F               	movwf	___fldiv@b^0,c
  3667  000B60  0E00               	movlw	0
  3668  000B62  6E10               	movwf	(___fldiv@b+1)^0,c
  3669  000B64  0E00               	movlw	0
  3670  000B66  6E11               	movwf	(___fldiv@b+2)^0,c
  3671  000B68  0E00               	movlw	0
  3672  000B6A  6E12               	movwf	(___fldiv@b+3)^0,c
  3673  000B6C                     l1985:
  3674  000B6C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3675  000B6E  EFC3  F005         	goto	u1680
  3676  000B72  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3677  000B74  E106               	bnz	u1681
  3678  000B76  0420               	decf	___fldiv@new_exp^0,w,c
  3679  000B78  B0D8               	btfsc	status,0,c
  3680  000B7A  EFC1  F005         	goto	u1681
  3681  000B7E  EFC3  F005         	goto	u1680
  3682  000B82                     u1681:
  3683  000B82  EFD1  F005         	goto	l1989
  3684  000B86                     u1680:
  3685  000B86  0E00               	movlw	0
  3686  000B88  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3687  000B8A  0E00               	movlw	0
  3688  000B8C  6E20               	movwf	___fldiv@new_exp^0,c
  3689  000B8E  0E00               	movlw	0
  3690  000B90  6E0F               	movwf	___fldiv@b^0,c
  3691  000B92  0E00               	movlw	0
  3692  000B94  6E10               	movwf	(___fldiv@b+1)^0,c
  3693  000B96  0E00               	movlw	0
  3694  000B98  6E11               	movwf	(___fldiv@b+2)^0,c
  3695  000B9A  0E00               	movlw	0
  3696  000B9C  6E12               	movwf	(___fldiv@b+3)^0,c
  3697  000B9E  0E00               	movlw	0
  3698  000BA0  6E1F               	movwf	___fldiv@sign^0,c
  3699  000BA2                     l1989:
  3700  000BA2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  3701  000BA6  A026               	btfss	___fldiv@bexp^0,0,c
  3702  000BA8  EFD8  F005         	goto	u1691
  3703  000BAC  EFDA  F005         	goto	u1690
  3704  000BB0                     u1691:
  3705  000BB0  EFDD  F005         	goto	l1995
  3706  000BB4                     u1690:
  3707  000BB4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3708  000BB6  EFDE  F005         	goto	l1997
  3709  000BBA                     l1995:
  3710  000BBA  9E11               	bcf	(___fldiv@b+2)^0,7,c
  3711  000BBC                     l1997:
  3712  000BBC  90D8               	bcf	status,0,c
  3713  000BBE  3026               	rrcf	___fldiv@bexp^0,w,c
  3714  000BC0  6E12               	movwf	(___fldiv@b+3)^0,c
  3715  000BC2  EF94  F004         	goto	l1911
  3716  000BC6                     l767:
  3717  000BC6  0012               	return		;funcret
  3718  000BC8                     __end_of___fldiv:
  3719                           	opt callstack 0
  3720                           
  3721 ;; *************** function _UART_printf *****************
  3722 ;; Defined at:
  3723 ;;		line 47 in file "./UART.h"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  3726 ;;		 -> main@buffer(30), STR_1(21), 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3738 ;;      Params:         2       0       0       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3741 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3742 ;;Total ram usage:        2 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    1
  3745 ;; This function calls:
  3746 ;;		_UART_write
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text20
  3753  001AA0                     __ptext20:
  3754                           	opt callstack 0
  3755  001AA0                     _UART_printf:
  3756                           	opt callstack 29
  3757  001AA0                     
  3758                           ;./UART.h: 48:     while (*cadena) {
  3759  001AA0  EF66  F00D         	goto	l2199
  3760  001AA4                     l2195:
  3761                           
  3762                           ;./UART.h: 49:         UART_write(*cadena++);
  3763  001AA4  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  3764  001AA8  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3765  001AAC  6AF8               	clrf	tblptru,c
  3766  001AAE  0E07               	movlw	(high __ramtop+-1)
  3767  001AB0  64F7               	cpfsgt	tblptrh,c
  3768  001AB2  D003               	bra	u1957
  3769  001AB4  0008               	tblrd		*
  3770  001AB6  50F5               	movf	tablat,w,c
  3771  001AB8  D005               	bra	u1950
  3772  001ABA                     u1957:
  3773  001ABA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3774  001ABE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3775  001AC2  50E7               	movf	indf1,w,c
  3776  001AC4                     u1950:
  3777  001AC4  EC76  F00E         	call	_UART_write
  3778  001AC8  4A02               	infsnz	UART_printf@cadena^0,f,c
  3779  001ACA  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  3780  001ACC                     l2199:
  3781                           
  3782                           ;./UART.h: 48:     while (*cadena) {
  3783  001ACC  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  3784  001AD0  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3785  001AD4  6AF8               	clrf	tblptru,c
  3786  001AD6  0E07               	movlw	(high __ramtop+-1)
  3787  001AD8  64F7               	cpfsgt	tblptrh,c
  3788  001ADA  D003               	bra	u1967
  3789  001ADC  0008               	tblrd		*
  3790  001ADE  50F5               	movf	tablat,w,c
  3791  001AE0  D005               	bra	u1960
  3792  001AE2                     u1967:
  3793  001AE2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3794  001AE6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3795  001AEA  50E7               	movf	indf1,w,c
  3796  001AEC                     u1960:
  3797  001AEC  0900               	iorlw	0
  3798  001AEE  A4D8               	btfss	status,2,c
  3799  001AF0  EF7C  F00D         	goto	u1971
  3800  001AF4  EF7E  F00D         	goto	u1970
  3801  001AF8                     u1971:
  3802  001AF8  EF52  F00D         	goto	l2195
  3803  001AFC                     u1970:
  3804  001AFC  0012               	return		;funcret
  3805  001AFE                     __end_of_UART_printf:
  3806                           	opt callstack 0
  3807                           
  3808 ;; *************** function _UART_write *****************
  3809 ;; Defined at:
  3810 ;;		line 42 in file "./UART.h"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  dato            1    wreg     unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  dato            1    0[COMRAM] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        1 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_UART_printf
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text21
  3838  001CEC                     __ptext21:
  3839                           	opt callstack 0
  3840  001CEC                     _UART_write:
  3841                           	opt callstack 29
  3842                           
  3843                           ;incstack = 0
  3844                           ;UART_write@dato stored from wreg
  3845  001CEC  6E01               	movwf	UART_write@dato^0,c
  3846  001CEE                     
  3847                           ;./UART.h: 43:     TXREG = dato;
  3848  001CEE  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  3849  001CF2                     l54:
  3850  001CF2  A2AC               	btfss	172,1,c	;volatile
  3851  001CF4  EF7E  F00E         	goto	u1871
  3852  001CF8  EF80  F00E         	goto	u1870
  3853  001CFC                     u1871:
  3854  001CFC  EF79  F00E         	goto	l54
  3855  001D00                     u1870:
  3856  001D00  0012               	return		;funcret
  3857  001D02                     __end_of_UART_write:
  3858                           	opt callstack 0
  3859                           
  3860 ;; *************** function _UART_init *****************
  3861 ;; Defined at:
  3862 ;;		line 13 in file "./UART.h"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  BAUD            4   14[COMRAM] long 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  frecuenciaCr    4    0        long 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, status,2, status,0, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3876 ;;      Params:         4       0       0       0       0       0       0       0       0
  3877 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3879 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3880 ;;Total ram usage:       12 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    1
  3883 ;; This function calls:
  3884 ;;		___aldiv
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text22
  3891  0019CE                     __ptext22:
  3892                           	opt callstack 0
  3893  0019CE                     _UART_init:
  3894                           	opt callstack 29
  3895  0019CE                     
  3896                           ;./UART.h: 16:     TRISC6 = 0;
  3897  0019CE  9C94               	bcf	3988,6,c	;volatile
  3898  0019D0                     
  3899                           ;./UART.h: 17:     TRISC7 = 1;
  3900  0019D0  8E94               	bsf	3988,7,c	;volatile
  3901  0019D2                     
  3902                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  3903  0019D2  0E10               	movlw	16
  3904  0019D4  6E05               	movwf	___aldiv@divisor^0,c
  3905  0019D6  0E00               	movlw	0
  3906  0019D8  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3907  0019DA  0E00               	movlw	0
  3908  0019DC  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3909  0019DE  0E00               	movlw	0
  3910  0019E0  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3911  0019E2  0E00               	movlw	0
  3912  0019E4  6E01               	movwf	___aldiv@dividend^0,c
  3913  0019E6  0E09               	movlw	9
  3914  0019E8  6E02               	movwf	(___aldiv@dividend+1)^0,c
  3915  0019EA  0E3D               	movlw	61
  3916  0019EC  6E03               	movwf	(___aldiv@dividend+2)^0,c
  3917  0019EE  0E00               	movlw	0
  3918  0019F0  6E04               	movwf	(___aldiv@dividend+3)^0,c
  3919  0019F2  EC7F  F00A         	call	___aldiv	;wreg free
  3920  0019F6  C001  F017         	movff	?___aldiv,_UART_init$1077
  3921  0019FA  C002  F018         	movff	?___aldiv+1,_UART_init$1077+1
  3922  0019FE  C003  F019         	movff	?___aldiv+2,_UART_init$1077+2
  3923  001A02  C004  F01A         	movff	?___aldiv+3,_UART_init$1077+3
  3924  001A06                     
  3925                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  3926  001A06  C017  F001         	movff	_UART_init$1077,___aldiv@dividend
  3927  001A0A  C018  F002         	movff	_UART_init$1077+1,___aldiv@dividend+1
  3928  001A0E  C019  F003         	movff	_UART_init$1077+2,___aldiv@dividend+2
  3929  001A12  C01A  F004         	movff	_UART_init$1077+3,___aldiv@dividend+3
  3930  001A16  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  3931  001A1A  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  3932  001A1E  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  3933  001A22  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  3934  001A26  EC7F  F00A         	call	___aldiv	;wreg free
  3935  001A2A  0401               	decf	?___aldiv^0,w,c
  3936  001A2C  6EAF               	movwf	175,c	;volatile
  3937  001A2E                     
  3938                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
  3939  001A2E  84AC               	bsf	172,2,c	;volatile
  3940  001A30                     
  3941                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
  3942  001A30  98AC               	bcf	172,4,c	;volatile
  3943  001A32                     
  3944                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
  3945  001A32  8EAB               	bsf	171,7,c	;volatile
  3946  001A34                     
  3947                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
  3948  001A34  9CAC               	bcf	172,6,c	;volatile
  3949  001A36                     
  3950                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
  3951  001A36  8AAC               	bsf	172,5,c	;volatile
  3952  001A38                     
  3953                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
  3954  001A38  9CAB               	bcf	171,6,c	;volatile
  3955  001A3A                     
  3956                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
  3957  001A3A  88AB               	bsf	171,4,c	;volatile
  3958  001A3C  0012               	return		;funcret
  3959  001A3E                     __end_of_UART_init:
  3960                           	opt callstack 0
  3961                           
  3962 ;; *************** function ___aldiv *****************
  3963 ;; Defined at:
  3964 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  dividend        4    0[COMRAM] long 
  3967 ;;  divisor         4    4[COMRAM] long 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  quotient        4   10[COMRAM] long 
  3970 ;;  sign            1    9[COMRAM] unsigned char 
  3971 ;;  counter         1    8[COMRAM] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  4    0[COMRAM] long 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3981 ;;      Params:         8       0       0       0       0       0       0       0       0
  3982 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3984 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3985 ;;Total ram usage:       14 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_UART_init
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text23
  3995  0014FE                     __ptext23:
  3996                           	opt callstack 0
  3997  0014FE                     ___aldiv:
  3998                           	opt callstack 29
  3999  0014FE  0E00               	movlw	0
  4000  001500  6E0A               	movwf	___aldiv@sign^0,c
  4001  001502  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  4002  001504  EF88  F00A         	goto	u1890
  4003  001508  EF86  F00A         	goto	u1891
  4004  00150C                     u1891:
  4005  00150C  EF92  F00A         	goto	l2133
  4006  001510                     u1890:
  4007  001510  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  4008  001512  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  4009  001514  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  4010  001516  6C05               	negf	___aldiv@divisor^0,c
  4011  001518  0E00               	movlw	0
  4012  00151A  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  4013  00151C  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  4014  00151E  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  4015  001520  0E01               	movlw	1
  4016  001522  6E0A               	movwf	___aldiv@sign^0,c
  4017  001524                     l2133:
  4018  001524  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  4019  001526  EF99  F00A         	goto	u1900
  4020  00152A  EF97  F00A         	goto	u1901
  4021  00152E                     u1901:
  4022  00152E  EFA3  F00A         	goto	l2139
  4023  001532                     u1900:
  4024  001532  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  4025  001534  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  4026  001536  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  4027  001538  6C01               	negf	___aldiv@dividend^0,c
  4028  00153A  0E00               	movlw	0
  4029  00153C  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  4030  00153E  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  4031  001540  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  4032  001542  0E01               	movlw	1
  4033  001544  1A0A               	xorwf	___aldiv@sign^0,f,c
  4034  001546                     l2139:
  4035  001546  0E00               	movlw	0
  4036  001548  6E0B               	movwf	___aldiv@quotient^0,c
  4037  00154A  0E00               	movlw	0
  4038  00154C  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  4039  00154E  0E00               	movlw	0
  4040  001550  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  4041  001552  0E00               	movlw	0
  4042  001554  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  4043  001556  5005               	movf	___aldiv@divisor^0,w,c
  4044  001558  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  4045  00155A  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  4046  00155C  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  4047  00155E  B4D8               	btfsc	status,2,c
  4048  001560  EFB4  F00A         	goto	u1911
  4049  001564  EFB6  F00A         	goto	u1910
  4050  001568                     u1911:
  4051  001568  EFEC  F00A         	goto	l2161
  4052  00156C                     u1910:
  4053  00156C  0E01               	movlw	1
  4054  00156E  6E09               	movwf	___aldiv@counter^0,c
  4055  001570  EFC0  F00A         	goto	l2147
  4056  001574                     l2145:
  4057  001574  90D8               	bcf	status,0,c
  4058  001576  3605               	rlcf	___aldiv@divisor^0,f,c
  4059  001578  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  4060  00157A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  4061  00157C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  4062  00157E  2A09               	incf	___aldiv@counter^0,f,c
  4063  001580                     l2147:
  4064  001580  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  4065  001582  EFC5  F00A         	goto	u1921
  4066  001586  EFC7  F00A         	goto	u1920
  4067  00158A                     u1921:
  4068  00158A  EFBA  F00A         	goto	l2145
  4069  00158E                     u1920:
  4070  00158E                     l2149:
  4071  00158E  90D8               	bcf	status,0,c
  4072  001590  360B               	rlcf	___aldiv@quotient^0,f,c
  4073  001592  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  4074  001594  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  4075  001596  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  4076  001598  5005               	movf	___aldiv@divisor^0,w,c
  4077  00159A  5C01               	subwf	___aldiv@dividend^0,w,c
  4078  00159C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4079  00159E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  4080  0015A0  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4081  0015A2  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  4082  0015A4  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4083  0015A6  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  4084  0015A8  A0D8               	btfss	status,0,c
  4085  0015AA  EFD9  F00A         	goto	u1931
  4086  0015AE  EFDB  F00A         	goto	u1930
  4087  0015B2                     u1931:
  4088  0015B2  EFE4  F00A         	goto	l2157
  4089  0015B6                     u1930:
  4090  0015B6  5005               	movf	___aldiv@divisor^0,w,c
  4091  0015B8  5E01               	subwf	___aldiv@dividend^0,f,c
  4092  0015BA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  4093  0015BC  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  4094  0015BE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  4095  0015C0  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  4096  0015C2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  4097  0015C4  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  4098  0015C6  800B               	bsf	___aldiv@quotient^0,0,c
  4099  0015C8                     l2157:
  4100  0015C8  90D8               	bcf	status,0,c
  4101  0015CA  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  4102  0015CC  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  4103  0015CE  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  4104  0015D0  3205               	rrcf	___aldiv@divisor^0,f,c
  4105  0015D2  2E09               	decfsz	___aldiv@counter^0,f,c
  4106  0015D4  EFC7  F00A         	goto	l2149
  4107  0015D8                     l2161:
  4108  0015D8  500A               	movf	___aldiv@sign^0,w,c
  4109  0015DA  B4D8               	btfsc	status,2,c
  4110  0015DC  EFF2  F00A         	goto	u1941
  4111  0015E0  EFF4  F00A         	goto	u1940
  4112  0015E4                     u1941:
  4113  0015E4  EFFC  F00A         	goto	l2165
  4114  0015E8                     u1940:
  4115  0015E8  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  4116  0015EA  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  4117  0015EC  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  4118  0015EE  6C0B               	negf	___aldiv@quotient^0,c
  4119  0015F0  0E00               	movlw	0
  4120  0015F2  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  4121  0015F4  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  4122  0015F6  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  4123  0015F8                     l2165:
  4124  0015F8  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  4125  0015FC  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  4126  001600  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  4127  001604  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  4128  001608  0012               	return		;funcret
  4129  00160A                     __end_of___aldiv:
  4130                           	opt callstack 0
  4131                           
  4132 ;; *************** function _BH1750_init *****************
  4133 ;; Defined at:
  4134 ;;		line 30 in file "./bh1750.h"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0, cstack
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4148 ;;      Params:         0       0       0       0       0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4150 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4151 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4152 ;;Total ram usage:        1 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    3
  4155 ;; This function calls:
  4156 ;;		_BH1750_write
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text24
  4163  001D02                     __ptext24:
  4164                           	opt callstack 0
  4165  001D02                     _BH1750_init:
  4166                           	opt callstack 27
  4167  001D02                     
  4168                           ;./bh1750.h: 31:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4169  001D02  0E82               	movlw	130
  4170  001D04  6E04               	movwf	??_BH1750_init^0,c
  4171  001D06  0EDE               	movlw	222
  4172  001D08                     u2007:
  4173  001D08  2EE8               	decfsz	wreg,f,c
  4174  001D0A  D7FE               	bra	u2007
  4175  001D0C  2E04               	decfsz	??_BH1750_init^0,f,c
  4176  001D0E  D7FC               	bra	u2007
  4177  001D10                     
  4178                           ;./bh1750.h: 32:     BH1750_write(0x00);
  4179  001D10  0E00               	movlw	0
  4180  001D12  EC54  F00E         	call	_BH1750_write
  4181  001D16  0012               	return		;funcret
  4182  001D18                     __end_of_BH1750_init:
  4183                           	opt callstack 0
  4184                           
  4185 ;; *************** function _BH1750_write *****************
  4186 ;; Defined at:
  4187 ;;		line 35 in file "./bh1750.h"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  cmd             1    wreg     unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  cmd             1    2[COMRAM] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0
  4202 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4204 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4205 ;;Total ram usage:        1 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    2
  4208 ;; This function calls:
  4209 ;;		_i2c_detener
  4210 ;;		_i2c_envia_dato
  4211 ;;		_i2c_inicia_com
  4212 ;; This function is called by:
  4213 ;;		_BH1750_init
  4214 ;;		_get_lux_value
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text25
  4219  001CA8                     __ptext25:
  4220                           	opt callstack 0
  4221  001CA8                     _BH1750_write:
  4222                           	opt callstack 27
  4223                           
  4224                           ;incstack = 0
  4225                           ;BH1750_write@cmd stored from wreg
  4226  001CA8  6E03               	movwf	BH1750_write@cmd^0,c
  4227  001CAA                     
  4228                           ;./bh1750.h: 36:     i2c_inicia_com();
  4229  001CAA  EC92  F00E         	call	_i2c_inicia_com	;wreg free
  4230                           
  4231                           ;./bh1750.h: 37:     i2c_envia_dato(0x46);
  4232  001CAE  0E46               	movlw	70
  4233  001CB0  EC8C  F00E         	call	_i2c_envia_dato
  4234                           
  4235                           ;./bh1750.h: 38:     i2c_envia_dato(cmd);
  4236  001CB4  5003               	movf	BH1750_write@cmd^0,w,c
  4237  001CB6  EC8C  F00E         	call	_i2c_envia_dato
  4238                           
  4239                           ;./bh1750.h: 39:     i2c_detener();
  4240  001CBA  EC96  F00E         	call	_i2c_detener	;wreg free
  4241  001CBE  0012               	return		;funcret
  4242  001CC0                     __end_of_BH1750_write:
  4243                           	opt callstack 0
  4244                           
  4245 ;; *************** function _i2c_inicia_com *****************
  4246 ;; Defined at:
  4247 ;;		line 37 in file "./I2C.h"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4264 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    1
  4268 ;; This function calls:
  4269 ;;		_i2c_espera
  4270 ;; This function is called by:
  4271 ;;		_BH1750_write
  4272 ;;		_BH1750_read_word
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text26
  4277  001D24                     __ptext26:
  4278                           	opt callstack 0
  4279  001D24                     _i2c_inicia_com:
  4280                           	opt callstack 27
  4281  001D24                     
  4282                           ;./I2C.h: 38:     i2c_espera();
  4283  001D24  EC41  F00E         	call	_i2c_espera	;wreg free
  4284  001D28                     
  4285                           ;./I2C.h: 39:     SSPCON2bits.SEN = 1;
  4286  001D28  80C5               	bsf	197,0,c	;volatile
  4287  001D2A  0012               	return		;funcret
  4288  001D2C                     __end_of_i2c_inicia_com:
  4289                           	opt callstack 0
  4290                           
  4291 ;; *************** function _i2c_envia_dato *****************
  4292 ;; Defined at:
  4293 ;;		line 66 in file "./I2C.h"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  dato            1    wreg     unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  dato            1    1[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      unsigned char 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4307 ;;      Params:         0       0       0       0       0       0       0       0       0
  4308 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4310 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4311 ;;Total ram usage:        1 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    1
  4314 ;; This function calls:
  4315 ;;		_i2c_espera
  4316 ;; This function is called by:
  4317 ;;		_BH1750_write
  4318 ;;		_BH1750_read_word
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text27
  4323  001D18                     __ptext27:
  4324                           	opt callstack 0
  4325  001D18                     _i2c_envia_dato:
  4326                           	opt callstack 27
  4327                           
  4328                           ;incstack = 0
  4329                           ;i2c_envia_dato@dato stored from wreg
  4330  001D18  6E02               	movwf	i2c_envia_dato@dato^0,c
  4331  001D1A                     
  4332                           ;./I2C.h: 67:     i2c_espera();
  4333  001D1A  EC41  F00E         	call	_i2c_espera	;wreg free
  4334  001D1E                     
  4335                           ;./I2C.h: 68:     SSPBUF = dato;
  4336  001D1E  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  4337  001D22  0012               	return		;funcret
  4338  001D24                     __end_of_i2c_envia_dato:
  4339                           	opt callstack 0
  4340                           
  4341 ;; *************** function _i2c_detener *****************
  4342 ;; Defined at:
  4343 ;;		line 55 in file "./I2C.h"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    1
  4364 ;; This function calls:
  4365 ;;		_i2c_espera
  4366 ;; This function is called by:
  4367 ;;		_BH1750_write
  4368 ;;		_BH1750_read_word
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text28
  4373  001D2C                     __ptext28:
  4374                           	opt callstack 0
  4375  001D2C                     _i2c_detener:
  4376                           	opt callstack 27
  4377  001D2C                     
  4378                           ;./I2C.h: 56:     i2c_espera();
  4379  001D2C  EC41  F00E         	call	_i2c_espera	;wreg free
  4380  001D30                     
  4381                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  4382  001D30  84C5               	bsf	197,2,c	;volatile
  4383  001D32  0012               	return		;funcret
  4384  001D34                     __end_of_i2c_detener:
  4385                           	opt callstack 0
  4386                           
  4387 ;; *************** function _i2c_espera *****************
  4388 ;; Defined at:
  4389 ;;		line 29 in file "./I2C.h"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0
  4404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4405 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4406 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4407 ;;Total ram usage:        1 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_i2c_inicia_com
  4413 ;;		_i2c_detener
  4414 ;;		_i2c_envia_dato
  4415 ;;		_i2c_recibe_datoACK
  4416 ;;		_i2c_reinicia_com
  4417 ;;		_i2c_recibe_dato
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text29
  4422  001C82                     __ptext29:
  4423                           	opt callstack 0
  4424  001C82                     _i2c_espera:
  4425                           	opt callstack 27
  4426  001C82                     l1729:
  4427  001C82  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  4428  001C86  0E1F               	movlw	31
  4429  001C88  1601               	andwf	??_i2c_espera^0,f,c
  4430  001C8A  A4D8               	btfss	status,2,c
  4431  001C8C  EF4A  F00E         	goto	u1241
  4432  001C90  EF4C  F00E         	goto	u1240
  4433  001C94                     u1241:
  4434  001C94  EF41  F00E         	goto	l1729
  4435  001C98                     u1240:
  4436  001C98  B4C7               	btfsc	199,2,c	;volatile
  4437  001C9A  EF51  F00E         	goto	u1251
  4438  001C9E  EF53  F00E         	goto	u1250
  4439  001CA2                     u1251:
  4440  001CA2  EF41  F00E         	goto	l1729
  4441  001CA6                     u1250:
  4442  001CA6  0012               	return		;funcret
  4443  001CA8                     __end_of_i2c_espera:
  4444                           	opt callstack 0
  4445                           
  4446                           	psect	rparam
  4447  0000                     tosu	equ	0xFFF
  4448                           tosh	equ	0xFFE
  4449                           tosl	equ	0xFFD
  4450                           stkptr	equ	0xFFC
  4451                           pclatu	equ	0xFFB
  4452                           pclath	equ	0xFFA
  4453                           pcl	equ	0xFF9
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           prodh	equ	0xFF4
  4459                           prodl	equ	0xFF3
  4460                           indf0	equ	0xFEF
  4461                           postinc0	equ	0xFEE
  4462                           postdec0	equ	0xFED
  4463                           preinc0	equ	0xFEC
  4464                           plusw0	equ	0xFEB
  4465                           fsr0h	equ	0xFEA
  4466                           fsr0l	equ	0xFE9
  4467                           wreg	equ	0xFE8
  4468                           indf1	equ	0xFE7
  4469                           postinc1	equ	0xFE6
  4470                           postdec1	equ	0xFE5
  4471                           preinc1	equ	0xFE4
  4472                           plusw1	equ	0xFE3
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           bsr	equ	0xFE0
  4476                           indf2	equ	0xFDF
  4477                           postinc2	equ	0xFDE
  4478                           postdec2	equ	0xFDD
  4479                           preinc2	equ	0xFDC
  4480                           plusw2	equ	0xFDB
  4481                           fsr2h	equ	0xFDA
  4482                           fsr2l	equ	0xFD9
  4483                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     46      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S815_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _get_lux_value->_BH1750_read_word
    _BH1750_read_word->___fltol
    _i2c_recibe_datoACK->_i2c_espera
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _UART_printf->_UART_write
    _UART_init->___aldiv
    _BH1750_init->_BH1750_write
    _BH1750_write->_i2c_envia_dato
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0    9873
                                             10 BANK0     36    36      0
                        _BH1750_init
                          _UART_init
                        _UART_printf
                      _get_lux_value
                        _i2c_iniciar
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    6456
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_lux_value                                       10     6      4    2332
                                             59 COMRAM    10     6      4
                   _BH1750_read_word
                       _BH1750_write
 ---------------------------------------------------------------------------------
 (2) _BH1750_read_word                                    10     6      4    2242
                                             49 COMRAM    10     6      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                 _i2c_recibe_datoACK
 ---------------------------------------------------------------------------------
 (3) _i2c_recibe_datoACK                                   2     2      0      45
                                              1 COMRAM     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     0      2     219
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _BH1750_init                                          1     1      0      44
                                              3 COMRAM     1     1      0
                       _BH1750_write
 ---------------------------------------------------------------------------------
 (2) _BH1750_write                                         1     1      0      44
                                              2 COMRAM     1     1      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BH1750_init
     _BH1750_write
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _UART_init
     ___aldiv
   _UART_printf
     _UART_write
   _get_lux_value
     _BH1750_read_word
       ___fldiv
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_datoACK
         _i2c_espera
     _BH1750_write
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _i2c_iniciar
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B5      20        0.0%
DATA                 0      0      B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 16 01:50:41 2020

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                 ___fldiv@sign 001F  
                         l45 1A3C                           l54 1CF2                           l63 1AFC  
                         l72 1CA6                           l81 1D32                           l57 1D00  
                         l90 1C80                           l66 1CEA                           l75 1D2A  
                         l84 1D22                           l93 1D16                           l96 1CBE  
                         l99 193C                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l102 1B98                          l140 1862                          l142 189E  
                        l150 0C70                          l312 14FC                          l137 1820  
                        l148 0C68                          l181 1A96                          l182 1A9E  
                        l175 105C                          l264 1608                          l168 0EA8  
                        l482 170E                          l299 1398                          l840 10B4  
                        l843 1210                          l780 0AE4                          l772 09EA  
                        l860 1C14                          l781 0AD2                          l854 11A8  
                        l767 0BC6                          l847 114C                          l863 1C1C  
                        l769 0A26                          l778 0A6C                          l890 1B4E  
                        l875 17D8                          l883 1BDC                          l893 1D34  
                        l899 1C52                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
               __CFG_BOR$OFF 000000                          _abs 1BDE                          _pad 17DA  
             ?_get_lux_value 003C                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               ___fltol@exp1 0031                 __CFG_WDT$OFF 000000                         l2011 1634  
                       ?_abs 0013                         l2021 1682                         l2013 165E  
                       l2005 160A                         l2101 18A8                         l2031 16AE  
                       l2015 1660                         l2007 1620                         l2111 18C4  
                       l2103 18AC                         l2041 16DE                         l2017 1670  
                       l2113 192C                         l2105 18B2                         l2201 1CD6  
                       l2121 1A54                         l2131 1520                         l2043 16EE  
                       l2027 169A                         l2019 1674                         l2051 1070  
                       l2107 18B8                         l2211 1B52                         l2203 1CDA  
                       l2123 1A7A                         l2205 1D02                         l2141 1556  
                       l2133 1524                         l2125 14FE                         l2045 16FE  
                       l2037 16C2                         l2029 16A4                         l2061 10EE  
                       l2053 107E                         l2109 18C0                         l2221 1B88  
                       l2213 1B58                         l2117 1A3E                         l2207 1D10  
                       l2151 1598                         l2143 156C                         l2135 1532  
                       l2127 1502                         l2039 16CE                         l2071 1142  
                       l2063 10F6                         l2055 10C4                         l2215 1B5E  
                       l2119 1A46                         l2231 1B20                         l2153 15B6  
                       l2145 1574                         l2161 15D8                         l2137 1542  
                       l2129 1510                         l2081 11B8                         l2073 117E  
                       l2065 1102                         l2057 10DA                         l2049 1060  
                       l2217 1B72                         l2209 1B52                         l2233 1B3C  
                       l2225 1AFE                         l2163 15E8                         l2155 15C6  
                       l2147 1580                         l2139 1546                         l2171 19CE  
                       l2091 1200                         l2083 11BC                         l2075 118A  
                       l2067 1134                         l2219 1B82                         l1603 1B9A  
                       l1611 1C1E                         l2227 1B10                         l2165 15F8  
                       l2157 15C8                         l2149 158E                         l2181 1A30  
                       l2173 19D0                         l2085 11E0                         l2077 1198  
                       l2069 1136                         l1701 13DE                         l1605 1BA6  
                       l1613 1C2A                         l1621 17DA                         l2229 1B18  
                       l2261 1962                         l2253 193E                         l2159 15D2  
                       l2191 1A3A                         l2183 1A32                         l2175 19D2  
                       l2095 1CEE                         l2087 11F0                         l2079 11B6  
                       l1711 1446                         l1703 13FE                         l1607 1BB8  
                       l1615 1C2E                         l1631 182C                         l1623 17EA  
                       l2263 1966                         l2255 193E                         l1801 1D30  
                       l2097 1CAA                         l2185 1A34                         l2177 1A06  
                       l2169 19CE                         l2193 1AA0                         l2089 11FE  
                       l1721 14BC                         l1713 1474                         l1705 141C  
                       l1609 1BBC                         l1617 1C46                         l1633 1840  
                       l1625 17FE                         l2265 197C                         l2257 1952  
                       l1731 1C98                         l1803 1D1A                         l2187 1A36  
                       l2179 1A2E                         l2195 1AA4                         l1811 1C56  
                       l2099 18A0                         l1651 1224                         l1723 14DC  
                       l1715 1494                         l1707 1424                         l1643 1BDE  
                       l1635 1844                         l1627 180C                         l2267 19A0  
                       l2259 195E                         l1805 1D1E                         l2189 1A38  
                       l2197 1AC8                         l1901 08E2                         l1821 1C7E  
                       l1813 1C5A                         l1661 127A                         l1653 1244  
                       l1717 14A6                         l1709 1438                         l1645 1BF8  
                       l1637 1872                         l1629 1818                         l1741 0C40  
                       l1733 0BC8                         l2269 19AC                         l1727 1C82  
                       l1807 1D22                         l2199 1ACC                         l1911 0928  
                       l1903 08EA                         l1815 1C60                         l1671 12CE  
                       l1663 1286                         l1655 1248                         l1647 1212  
                       l1719 14AC                         l1591 1722                         l1639 1886  
                       l1751 0C98                         l1743 0C42                         l1735 0BE8  
                       l1831 0EEE                         l1729 1C82                         l1921 0950  
                       l1913 092C                         l1905 08FA                         l1817 1C68  
                       l1681 1342                         l1673 12E0                         l1665 12A4  
                       l1657 1256                         l1649 1216                         l1593 1734  
                       l1761 0D36                         l1753 0C9E                         l1745 0C5C  
                       l1737 0C10                         l1833 0EF2                         l1825 0EAA  
                       l1931 099E                         l1907 0910                         l1819 1C7C  
                       l1675 130E                         l1667 12AC                         l1683 1348  
                       l1659 1276                         l1691 139A                         l1595 173E  
                       l1771 0DDE                         l1763 0D3C                         l1755 0CA6  
                       l1747 0C78                         l1739 0C30                         l1843 0FBA  
                       l1835 0F16                         l1827 0ECE                         l1941 09E8  
                       l1933 09AE                         l1925 0964                         l1909 0920  
                       l1917 0940                         l1685 1358                         l1677 132E  
                       l1669 12C0                         l1693 139E                         l1597 175C  
                       l1589 1710                         l1781 0E44                         l1773 0DF8  
                       l1765 0D42                         l1757 0CAE                         l1749 0C8A  
                       l1861 104A                         l1845 0FDE                         l1853 100C  
                       l1837 0F3A                         l1829 0EDC                         l1951 0A36  
                       l1943 09F4                         l1935 09B6                         l1927 097E  
                       l1919 0950                         l1871 0848                         l1687 1378  
                       l1679 1330                         l1695 13AC                         l1599 1792  
                       l1783 0E4A                         l1791 0E80                         l1775 0E12  
                       l1759 0CB4                         l1767 0DA6                         l1855 101A  
                       l1847 0FEC                         l1839 0F82                         l1953 0A4C  
                       l1961 0A7C                         l1945 0A12                         l1937 09C6  
                       l1929 098E                         l1881 087C                         l1873 084A  
                       l1697 13CC                         l1785 0E5C                         l1769 0DC0  
                       l1777 0E22                         l1849 1000                         l1795 1D24  
                       l1963 0A8A                         l1955 0A52                         l1947 0A14  
                       l1939 09DA                         l1891 08AE                         l1875 085A  
                       l1883 0884                         l1867 082E                         l1699 13D0  
                       l1787 0E68                         l1779 0E34                         l1859 1026  
                       l1797 1D28                         l1973 0AF4                         l1981 0B3C  
                       l1965 0A8E                         l1957 0A5C                         l1949 0A24  
                       l1893 08B0                         l1885 0894                         l1877 086A  
                       l1869 083A                         l1789 0E70                         ?_pad 0011  
                       l1799 1D2C                         l1991 0BA6                         l1983 0B56  
                       l1975 0B00                         l1967 0A9C                         l1959 0A6A  
                       l1895 08C0                         l1887 089A                         l1879 087A  
                       l1993 0BB4                         l1985 0B6C                         l1977 0B0E  
                       l1969 0ACA                         l1897 08D0                         l1889 08A0  
                       l1995 0BBA                         l1987 0B86                         l1979 0B38  
                       l1899 08E0                         l1997 0BBC                         l1989 0BA2  
                       STR_1 0818                         STR_2 0801                         u1000 1722  
                       u1001 171E                         u1010 1734                         u1011 1730  
                       u1100 1BF8                         u1020 175C                         u1101 1BF4  
                       u1021 1758                         u1110 1224                         u1030 1792  
                       u1111 1220                         u1031 178E                         u1120 1256  
                       u1200 141C                         u1040 1BDC                         u1121 1252  
                       u1201 1418                         u1041 1BD8                         u1210 1446  
                       u1050 1C46                         u1131 1280                         u1211 1442  
                       u1051 1C42                         u1140 12A4                         u1220 1474  
                       u1060 17EA                         u1300 0C5C                         u1141 12A0  
                       u1221 1470                         u1061 17E6                         u1301 0C58  
                       u1150 12CE                         u1230 14BC                         u1070 180C  
                       u1310 0C8A                         u2007 1D08                         u1151 12CA  
                       u1231 14B8                         u1071 1808                         u1311 0C86  
                       u1240 1C98                         u1160 130E                         u1080 1862  
                       u1400 0E5C                         u1320 0C98                         u1241 1C94  
                       u1161 130A                         u1081 185E                         u1401 0E58  
                       u1321 0C94                         u1250 1CA6                         u1410 1C7A  
                       u1170 1358                         u1090 1872                         u1330 0DC0  
                       u1251 1CA2                         u1411 1C74                         u1171 1354  
                       u1091 186E                         u1331 0DBC                         u1500 08AE  
                       u1180 13AC                         u1340 0DDE                         u1260 0BF8  
                       u1501 08AA                         u1181 13A8                         u1341 0DDA  
                       u1261 0BF2                         u1510 08C0                         u1190 13DE  
                       u1350 0DF8                         u1270 0BFA                         u1430 0ECE  
                       u1511 08BC                         u1191 13DA                         u1351 0DF4  
                       u1431 0ECA                         u1600 0A6A                         u1520 08D0  
                       u1360 0E12                         u1280 0C10                         u1440 0F16  
                       u1601 0A66                         u1521 08CC                         u1425 1C7C  
                       u1361 0E0E                         u1281 0C0C                         u1441 0F12  
                       u1610 0A8A                         u1530 0910                         u1370 0E22  
                       u1290 0C40                         u1450 0F3A                         u1611 0A86  
                       u1531 090C                         u1371 0E1E                         u1291 0C3C  
                       u1451 0F36                         u1620 0A9C                         u1540 0950  
                       u1700 1620                         u1380 0E34                         u1460 0FDE  
                       u1621 0A98                         u1541 094C                         u1701 161C  
                       u1381 0E30                         u1461 0FDA                         u1630 0ACA  
                       u1550 09C6                         u1470 0848                         u1710 1654  
                       u1390 0E44                         u1631 0AC6                         u1551 09C2  
                       u1471 0844                         u1391 0E40                         u1640 0AE0  
                       u1560 09E8                         u1480 085A                         u1720 1682  
                       u1800 1130                         u1641 0ADC                         u1561 09E4  
                       u1481 0856                         u1721 167E                         u1801 112C  
                       u1650 0AF4                         u1570 0A12                         u1490 086A  
                       u1730 1696                         u1810 117A                         u1651 0AF0  
                       u1571 0A0E                         u1491 0866                         u1731 1692  
                       u1715 164A                         u1811 1176                         u1900 1532  
                       u1660 0B0E                         u1580 0A36                         u1740 16BE  
                       u1820 1198                         u1901 152E                         u1661 0B0A  
                       u1581 0A32                         u1741 16BA                         u1821 1194  
                       u1910 156C                         u1670 0B56                         u1590 0A4C  
                       u1750 16DE                         u1830 11A8                         u1911 1568  
                       u1671 0B52                         u1591 0A48                         u1751 16DA  
                       u1831 11A4                         u1920 158E                         u1680 0B86  
                       u1760 16EE                         u1840 11B6                         u1921 158A  
                       u1681 0B82                         u1761 16EA                         u1841 11B2  
                       u1930 15B6                         u1690 0BB4                         u1850 11F0  
                       u1770 1070                         u1931 15B2                         u1691 0BB0  
                       u1851 11EC                         u1771 106C                         u1940 15E8  
                       u1860 11FE                         u1780 107E                         u1941 15E4  
                       u1861 11FA                         u1781 107A                         u1870 1D00  
                       u1950 1AC4                         u1790 10DA                         u1871 1CFC  
                       u1791 10D6                         u1960 1AEC                         u1880 1A96  
                       u1881 1A92                         u1890 1510                         u1970 1AFC  
                       u1891 150C                         u1971 1AF8                         u1957 1ABA  
                       u1967 1AE2                         u1987 19B8                         _RCIF 007CF5  
                       u1997 1B78                ??_i2c_detener 0002                         abs@a 0013  
                       _dbuf 0096                         _main 193E                         _dtoa 0BC8  
                       _prec 0092                         _nout 008E                         pad@i 0018  
                       pad@p 0015                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf1 000FE7                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 001A                         fsr2l 000FD9                ??_i2c_iniciar 0001  
                       start 0000                __CFG_IESO$OFF 000000              ___fldiv@new_exp 0020  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000                        ??_abs 0015  
                      ??_pad 0017               _i2c_envia_dato 1D18                __CFG_PLLDIV$1 000000  
             _i2c_inicia_com 1D24     __end_of_BH1750_read_word 193E               __CFG_CCP2MX$ON 000000  
              ___fltol@sign1 0030              __end_of___aldiv 160A              __end_of___aodiv 139A  
                      ?_main 0001                        ?_dtoa 001C              __end_of___aomod 14FE  
                      _ACKEN 007E2C                        _ACKDT 007E2D              __end_of___fldiv 0BC8  
            __end_of___fltol 1710                        _RCREG 000FAE                 vfpfcnvrt@fmt 0042  
                      _SPBRG 000FAF                __CFG_USBDIV$1 000000                        _TXREG 000FAD  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000           __size_of_UART_init 0070  
                      _flags 0094                        _fputc 1710                        _fputs 1B9A  
                ?_UART_write 0001                        pad@fp 0011                        _width 0090  
                      _putch 1D34                        dtoa@d 001E                        dtoa@i 003E  
                      dtoa@n 0036                        dtoa@p 0030                        dtoa@s 0034  
                      dtoa@w 0032                        tablat 000FF5                        status 000FD8  
            __end_of_sprintf 1B50               __CFG_ICPRT$OFF 000000                   _i2c_espera 1C82  
            __initialization 1CC0  i2c_recibe_datoACK@datoleido 0003          __end_of_i2c_detener 1D34  
     __end_of_i2c_envia_dato 1D24                 __end_of_main 19CE                 __end_of_dtoa 0EAA  
     __end_of_i2c_inicia_com 1D2C          __end_of_i2c_iniciar 1CEC                       ??_main 006A  
                     ??_dtoa 0026              ??_get_lux_value 0040                __activetblptr 000002  
         i2c_envia_dato@dato 0002  __size_of_i2c_recibe_datoACK 002E                       ?_fputc 0001  
                     ?_fputs 000A                       ?_putch 0001                       _SSPADD 000FC8  
                     _TRISC6 007CA6                       _TRISC7 007CA7                       _SSPBUF 000FC9  
           __end_of___xxtofl 1212               __CFG_XINST$OFF 000000                ??_BH1750_init 0004  
               vfprintf@cfmt 0056              ?_i2c_envia_dato 0001                    ??___aldiv 0009  
                  ??___aodiv 0011                    ??___aomod 0011            __end_of_UART_init 1A3E  
                  ??___fldiv 0017                    ??___fltol 002C              ?_i2c_inicia_com 0001  
        __size_of_UART_write 0016                 ?_UART_printf 0002                       clear_0 1CC6  
              main@luzMedida 008A                       pad@buf 0013                       dtoa@fp 001C  
                     _strlen 1C1E                       fputc@c 0001                       fputs@c 000E  
                     fputs@i 000F                       fputs@s 000A                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                     putch@c 0001            get_lux_value@mode 0041             __end_of_vfprintf 1AA0  
                  ??_sprintf 0060                 ___xxtofl@arg 000B                 ___xxtofl@exp 000A  
               ___xxtofl@val 0001                   __accesstop 0060      __end_of__initialization 1CCC  
            __CFG_PBADEN$OFF 000000              __CFG_FOSC$XT_XT 000000                  _i2c_detener 1D2C  
              ___rparam_used 000001                   ___fltol@f1 0028                  _i2c_iniciar 1CD6  
                ?_i2c_espera 0001               __pcstackCOMRAM 0001                __end_of_fputc 17DA  
              __end_of_fputs 1BDE                __end_of_putch 1D36          __end_of_BH1750_init 1D18  
                    ??_fputc 0005                      ??_fputs 000E                      ??_putch 0001  
                 __pbssBANK0 008E                ?_BH1750_write 0001                      _ACKSTAT 007E2E  
          ?_BH1750_read_word 0032                      ?_strlen 0001           ??_BH1750_read_word 0036  
                  ?___xxtofl 0001           __size_of_vfpfcnvrt 01B4          __size_of_i2c_espera 0026  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                 ??_UART_write 0001  
                    _SSPSTAT 000FC7              __CFG_VREGEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000                  _BH1750_init 1D02               ??_BH1750_write 0003  
                    ___aldiv 14FE                      ___aodiv 1212                      ___aomod 139A  
                    ___fldiv 082E                      ___fltol 160A                    ?_vfprintf 0050  
               __psmallconst 0800              __CFG_STVREN$OFF 000000                      __pcinit 1CC0  
                    __ramtop 0800           __end_of_UART_write 1D02                      __ptext0 193E  
                    __ptext1 1AFE                      __ptext2 1A3E                      __ptext3 0EAA  
                    __ptext4 0BC8                      __ptext5 17DA                      __ptext6 1C1E  
                    __ptext7 1B9A                      __ptext8 1710                      __ptext9 1D34  
            __size_of_strlen 0036         __size_of_UART_printf 005E                 __size_of_abs 0040  
        i2c_recibe_datoACK@a 0002                 __size_of_pad 00C6                   ??___xxtofl 0005  
           ___aldiv@dividend 0001           BH1750_read_word@hb 0036           BH1750_read_word@lb 0037  
                    _sprintf 1AFE         end_of_initialization 1CCC                      fputc@fp 0003  
      BH1750_read_word@value 0038                __Lmediumconst 0000                      fputs@fp 000C  
           ??_i2c_envia_dato 0002             ??_i2c_inicia_com 0002            __end_of_vfpfcnvrt 105E  
                  _RCSTAbits 000FAB             ___aldiv@quotient 000B                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
                 ??_vfprintf 0056                      strlen@a 0003                      strlen@s 0001  
                  _UART_init 19CE   __end_of_i2c_recibe_datoACK 1C82        __end_of_get_lux_value 1B9A  
              ___xxtofl@sign 0009                    _TRISBbits 000F93                  ___fldiv@grs 0022  
                ___fldiv@rem 001B               _UART_init$1077 0017                 ?_i2c_detener 0001  
                 main@buffer 006C                    _TXSTAbits 000FAC                 ?_i2c_iniciar 0001  
               ??_i2c_espera 0001                  vfpfcnvrt@ap 0044                  vfpfcnvrt@fp 0040  
                vfpfcnvrt@ll 0048                   ?_UART_init 000F               __end_of_strlen 1C54  
        start_initialization 1CC0                  __end_of_abs 1C1E                  __end_of_pad 18A0  
       __end_of_BH1750_write 1CC0           __end_of_i2c_espera 1CA8                  vfprintf@fmt 0052  
     get_lux_value@lux_value 0042             __CFG_LPT1OSC$OFF 000000                     ??_strlen 0003  
                  ___fldiv@a 0013                    ___fldiv@b 000F                __pcstackBANK0 0060  
           ___aodiv@dividend 0001            __size_of___xxtofl 01B4    __size_of_BH1750_read_word 009E  
          UART_printf@cadena 0002                 ?_BH1750_init 0001                     ?___aldiv 0001  
                   ?___aodiv 0001                     ?___aomod 0001                     ?___fldiv 000F  
           ___aodiv@quotient 0013                     ?___fltol 0028                  ??_UART_init 0013  
          __size_of_vfprintf 0062                  __smallconst 0800                     ?_sprintf 0058  
             __size_of_fputc 00CA               __size_of_fputs 0044               __size_of_putch 0002  
            ___aldiv@divisor 0005              ___aldiv@counter 0009         __size_of_i2c_detener 0008  
       __size_of_i2c_iniciar 0016             __CFG_WDTPS$32768 000000                ??_UART_printf 0004  
                  _vfpfcnvrt 0EAA        __size_of_BH1750_write 0018               UART_write@dato 0001  
         _i2c_recibe_datoACK 1C54                     __Hrparam 0000                UART_init@BAUD 000F  
                 vfprintf@ap 0054                     __Lrparam 0000                   vfprintf@fp 0050  
        ?_i2c_recibe_datoACK 0001                 _BH1750_write 1CA8             __size_of___aldiv 010C  
           __size_of___aodiv 0188             __size_of___aomod 0164             __size_of___fldiv 039A  
           __size_of___fltol 0106                   ?_vfpfcnvrt 0040              ___aodiv@divisor 0009  
            ___aodiv@counter 0011                   sprintf@fmt 005A                     ___xxtofl 105E  
        __end_of_UART_printf 1AFE                     _dtoa$354 002E         ??_i2c_recibe_datoACK 0002  
                   __ptext10 1BDE                     __ptext11 139A                     __ptext20 1AA0  
                   __ptext12 1212                     __ptext21 1CEC                     __ptext13 1CD6  
                   __ptext22 19CE                     __ptext14 1B50                     __ptext23 14FE  
                   __ptext15 18A0                     __ptext24 1D02                     __ptext16 1C54  
                   __ptext25 1CA8                     __ptext17 105E                     __ptext26 1D24  
                   __ptext18 160A                     __ptext27 1D18                     __ptext19 082E  
                   __ptext28 1D2C                     __ptext29 1C82             __size_of_sprintf 0052  
           _BH1750_read_word 18A0                __size_of_main 0090                __size_of_dtoa 02E2  
     __size_of_get_lux_value 004A         __size_of_BH1750_init 0016                     _vfprintf 1A3E  
    __size_of_i2c_envia_dato 000C      __size_of_i2c_inicia_com 0008             ___aomod@dividend 0001  
      __CFG_CPUDIV$OSC1_PLL2 000000                    sprintf@ap 0062              ___aomod@divisor 0009  
                ??_vfpfcnvrt 0046              ___aomod@counter 0011                  _UART_printf 1AA0  
                   sprintf@f 0064                     sprintf@s 0058                 ___aldiv@sign 000A  
              _get_lux_value 1B50                  _SSPCON2bits 000FC5                   _UART_write 1CEC  
               ___aodiv@sign 0012              BH1750_write@cmd 0003                 ___aomod@sign 0012  
