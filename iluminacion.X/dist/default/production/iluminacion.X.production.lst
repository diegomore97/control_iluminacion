

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 01 20:27:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 2.10
    89                           ; Generated 31/07/2019 GMT
    90                           ; 
    91                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F4550 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  0039AC                     __pidataBANK0:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for stoa@F1139
   128  0039AC  28                 	db	40
   129  0039AD  6E                 	db	110
   130  0039AE  75                 	db	117
   131  0039AF  6C                 	db	108
   132  0039B0  6C                 	db	108
   133  0039B1  29                 	db	41
   134  0039B2  00                 	db	0
   135                           
   136                           ;initializer for _setPoint
   137  0039B3  0064               	dw	100
   138  0039B5  0000               	dw	0
   139                           
   140                           ;initializer for _VALOR_TIMER0
   141  0039B7  6769               	dw	26473
   142                           
   143                           ;initializer for _VALOR_TIMER0UART
   144  0039B9  6769               	dw	26473
   145  0000                     _TMR0	set	4054
   146  0000                     _T0CONbits	set	4053
   147  0000                     _T0CON	set	4053
   148  0000                     _INTCONbits	set	4082
   149  0000                     _PIE1bits	set	3997
   150  0000                     _PR2	set	4043
   151  0000                     _CCP2CON	set	4026
   152  0000                     _CCPR2L	set	4027
   153  0000                     _CCP1CON	set	4029
   154  0000                     _CCPR1L	set	4030
   155  0000                     _SSPBUF	set	4041
   156  0000                     _SSPCON2bits	set	4037
   157  0000                     _SSPADD	set	4040
   158  0000                     _SSPCON2	set	4037
   159  0000                     _SSPCON1	set	4038
   160  0000                     _SSPSTAT	set	4039
   161  0000                     _TRISBbits	set	3987
   162  0000                     _TXREG	set	4013
   163  0000                     _RCREG	set	4014
   164  0000                     _PIR1bits	set	3998
   165  0000                     _RCSTAbits	set	4011
   166  0000                     _TXSTAbits	set	4012
   167  0000                     _SPBRG	set	4015
   168  0000                     _TRISCbits	set	3988
   169  0000                     _TMR2ON	set	32338
   170  0000                     _CCP2M2	set	32210
   171  0000                     _CCP2M3	set	32211
   172  0000                     _TRISC1	set	31905
   173  0000                     _CCP1M2	set	32234
   174  0000                     _CCP1M3	set	32235
   175  0000                     _TRISC2	set	31906
   176  0000                     _T2CKPS1	set	32337
   177  0000                     _T2CKPS0	set	32336
   178  0000                     _ACKEN	set	32300
   179  0000                     _ACKDT	set	32301
   180  0000                     _ACKSTAT	set	32302
   181                           
   182                           	psect	mediumconst
   183  007C98                     __pmediumconst:
   184                           	opt callstack 0
   185  007C98  00                 	db	0
   186  007C99  0D                 	db	13
   187  007C9A  0A                 	db	10
   188  007C9B  20                 	db	32
   189  007C9C  33                 	db	51	;'3'
   190  007C9D  2E                 	db	46
   191  007C9E  20                 	db	32
   192  007C9F  50                 	db	80	;'P'
   193  007CA0  72                 	db	114	;'r'
   194  007CA1  6F                 	db	111	;'o'
   195  007CA2  67                 	db	103	;'g'
   196  007CA3  72                 	db	114	;'r'
   197  007CA4  61                 	db	97	;'a'
   198  007CA5  6D                 	db	109	;'m'
   199  007CA6  61                 	db	97	;'a'
   200  007CA7  72                 	db	114	;'r'
   201  007CA8  20                 	db	32
   202  007CA9  74                 	db	116	;'t'
   203  007CAA  69                 	db	105	;'i'
   204  007CAB  65                 	db	101	;'e'
   205  007CAC  6D                 	db	109	;'m'
   206  007CAD  70                 	db	112	;'p'
   207  007CAE  6F                 	db	111	;'o'
   208  007CAF  20                 	db	32
   209  007CB0  64                 	db	100	;'d'
   210  007CB1  65                 	db	101	;'e'
   211  007CB2  20                 	db	32
   212  007CB3  49                 	db	73	;'I'
   213  007CB4  6C                 	db	108	;'l'
   214  007CB5  75                 	db	117	;'u'
   215  007CB6  6D                 	db	109	;'m'
   216  007CB7  69                 	db	105	;'i'
   217  007CB8  6E                 	db	110	;'n'
   218  007CB9  61                 	db	97	;'a'
   219  007CBA  63                 	db	99	;'c'
   220  007CBB  69                 	db	105	;'i'
   221  007CBC  6F                 	db	111	;'o'
   222  007CBD  6E                 	db	110	;'n'
   223  007CBE  20                 	db	32
   224  007CBF  65                 	db	101	;'e'
   225  007CC0  6E                 	db	110	;'n'
   226  007CC1  20                 	db	32
   227  007CC2  75                 	db	117	;'u'
   228  007CC3  6E                 	db	110	;'n'
   229  007CC4  20                 	db	32
   230  007CC5  68                 	db	104	;'h'
   231  007CC6  6F                 	db	111	;'o'
   232  007CC7  72                 	db	114	;'r'
   233  007CC8  61                 	db	97	;'a'
   234  007CC9  72                 	db	114	;'r'
   235  007CCA  69                 	db	105	;'i'
   236  007CCB  6F                 	db	111	;'o'
   237  007CCC  20                 	db	32
   238  007CCD  0D                 	db	13
   239  007CCE  0A                 	db	10
   240  007CCF  00                 	db	0
   241  007CD0                     STR_22:
   242  007CD0  0D                 	db	13
   243  007CD1  0A                 	db	10
   244  007CD2  54                 	db	84	;'T'
   245  007CD3  20                 	db	32
   246  007CD4  3D                 	db	61	;'='
   247  007CD5  20                 	db	32
   248  007CD6  4D                 	db	77	;'M'
   249  007CD7  49                 	db	73	;'I'
   250  007CD8  4E                 	db	78	;'N'
   251  007CD9  55                 	db	85	;'U'
   252  007CDA  54                 	db	84	;'T'
   253  007CDB  4F                 	db	79	;'O'
   254  007CDC  53                 	db	83	;'S'
   255  007CDD  20                 	db	32
   256  007CDE  51                 	db	81	;'Q'
   257  007CDF  55                 	db	85	;'U'
   258  007CE0  45                 	db	69	;'E'
   259  007CE1  20                 	db	32
   260  007CE2  44                 	db	68	;'D'
   261  007CE3  55                 	db	85	;'U'
   262  007CE4  52                 	db	82	;'R'
   263  007CE5  41                 	db	65	;'A'
   264  007CE6  52                 	db	82	;'R'
   265  007CE7  41                 	db	65	;'A'
   266  007CE8  20                 	db	32
   267  007CE9  4C                 	db	76	;'L'
   268  007CEA  41                 	db	65	;'A'
   269  007CEB  20                 	db	32
   270  007CEC  49                 	db	73	;'I'
   271  007CED  4C                 	db	76	;'L'
   272  007CEE  55                 	db	85	;'U'
   273  007CEF  4D                 	db	77	;'M'
   274  007CF0  49                 	db	73	;'I'
   275  007CF1  4E                 	db	78	;'N'
   276  007CF2  41                 	db	65	;'A'
   277  007CF3  43                 	db	67	;'C'
   278  007CF4  49                 	db	73	;'I'
   279  007CF5  4F                 	db	79	;'O'
   280  007CF6  4E                 	db	78	;'N'
   281  007CF7  0D                 	db	13
   282  007CF8  0A                 	db	10
   283  007CF9  00                 	db	0
   284  007CFA                     STR_23:
   285  007CFA  0D                 	db	13
   286  007CFB  0A                 	db	10
   287  007CFC  44                 	db	68	;'D'
   288  007CFD  20                 	db	32
   289  007CFE  3D                 	db	61	;'='
   290  007CFF  20                 	db	32
   291  007D00  44                 	db	68	;'D'
   292  007D01  49                 	db	73	;'I'
   293  007D02  41                 	db	65	;'A'
   294  007D03  53                 	db	83	;'S'
   295  007D04  20                 	db	32
   296  007D05  51                 	db	81	;'Q'
   297  007D06  55                 	db	85	;'U'
   298  007D07  45                 	db	69	;'E'
   299  007D08  20                 	db	32
   300  007D09  45                 	db	69	;'E'
   301  007D0A  4E                 	db	78	;'N'
   302  007D0B  20                 	db	32
   303  007D0C  4C                 	db	76	;'L'
   304  007D0D  4F                 	db	79	;'O'
   305  007D0E  53                 	db	83	;'S'
   306  007D0F  20                 	db	32
   307  007D10  51                 	db	81	;'Q'
   308  007D11  55                 	db	85	;'U'
   309  007D12  45                 	db	69	;'E'
   310  007D13  20                 	db	32
   311  007D14  53                 	db	83	;'S'
   312  007D15  45                 	db	69	;'E'
   313  007D16  20                 	db	32
   314  007D17  49                 	db	73	;'I'
   315  007D18  4C                 	db	76	;'L'
   316  007D19  55                 	db	85	;'U'
   317  007D1A  4D                 	db	77	;'M'
   318  007D1B  49                 	db	73	;'I'
   319  007D1C  4E                 	db	78	;'N'
   320  007D1D  41                 	db	65	;'A'
   321  007D1E  52                 	db	82	;'R'
   322  007D1F  41                 	db	65	;'A'
   323  007D20  0D                 	db	13
   324  007D21  0A                 	db	10
   325  007D22  00                 	db	0
   326  007D23  0D                 	db	13
   327  007D24  0A                 	db	10
   328  007D25  20                 	db	32
   329  007D26  32                 	db	50	;'2'
   330  007D27  2E                 	db	46
   331  007D28  20                 	db	32
   332  007D29  41                 	db	65	;'A'
   333  007D2A  73                 	db	115	;'s'
   334  007D2B  69                 	db	105	;'i'
   335  007D2C  67                 	db	103	;'g'
   336  007D2D  6E                 	db	110	;'n'
   337  007D2E  61                 	db	97	;'a'
   338  007D2F  72                 	db	114	;'r'
   339  007D30  20                 	db	32
   340  007D31  48                 	db	72	;'H'
   341  007D32  6F                 	db	111	;'o'
   342  007D33  72                 	db	114	;'r'
   343  007D34  61                 	db	97	;'a'
   344  007D35  72                 	db	114	;'r'
   345  007D36  69                 	db	105	;'i'
   346  007D37  6F                 	db	111	;'o'
   347  007D38  73                 	db	115	;'s'
   348  007D39  20                 	db	32
   349  007D3A  70                 	db	112	;'p'
   350  007D3B  61                 	db	97	;'a'
   351  007D3C  72                 	db	114	;'r'
   352  007D3D  61                 	db	97	;'a'
   353  007D3E  20                 	db	32
   354  007D3F  49                 	db	73	;'I'
   355  007D40  6C                 	db	108	;'l'
   356  007D41  75                 	db	117	;'u'
   357  007D42  6D                 	db	109	;'m'
   358  007D43  69                 	db	105	;'i'
   359  007D44  6E                 	db	110	;'n'
   360  007D45  61                 	db	97	;'a'
   361  007D46  72                 	db	114	;'r'
   362  007D47  20                 	db	32
   363  007D48  0D                 	db	13
   364  007D49  0A                 	db	10
   365  007D4A  00                 	db	0
   366  007D4B                     STR_16:
   367  007D4B  48                 	db	72	;'H'
   368  007D4C  4F                 	db	79	;'O'
   369  007D4D  52                 	db	82	;'R'
   370  007D4E  41                 	db	65	;'A'
   371  007D4F  20                 	db	32
   372  007D50  3D                 	db	61	;'='
   373  007D51  20                 	db	32
   374  007D52  25                 	db	37
   375  007D53  30                 	db	48	;'0'
   376  007D54  2E                 	db	46
   377  007D55  32                 	db	50	;'2'
   378  007D56  64                 	db	100	;'d'
   379  007D57  3A                 	db	58	;':'
   380  007D58  25                 	db	37
   381  007D59  30                 	db	48	;'0'
   382  007D5A  2E                 	db	46
   383  007D5B  32                 	db	50	;'2'
   384  007D5C  64                 	db	100	;'d'
   385  007D5D  20                 	db	32
   386  007D5E  7C                 	db	124
   387  007D5F  20                 	db	32
   388  007D60  44                 	db	68	;'D'
   389  007D61  49                 	db	73	;'I'
   390  007D62  41                 	db	65	;'A'
   391  007D63  20                 	db	32
   392  007D64  3D                 	db	61	;'='
   393  007D65  20                 	db	32
   394  007D66  4D                 	db	77	;'M'
   395  007D67  49                 	db	73	;'I'
   396  007D68  45                 	db	69	;'E'
   397  007D69  52                 	db	82	;'R'
   398  007D6A  43                 	db	67	;'C'
   399  007D6B  4F                 	db	79	;'O'
   400  007D6C  4C                 	db	76	;'L'
   401  007D6D  45                 	db	69	;'E'
   402  007D6E  53                 	db	83	;'S'
   403  007D6F  0D                 	db	13
   404  007D70  0A                 	db	10
   405  007D71  00                 	db	0
   406  007D72                     STR_1:
   407  007D72  0D                 	db	13
   408  007D73  0A                 	db	10
   409  007D74  20                 	db	32
   410  007D75  49                 	db	73	;'I'
   411  007D76  6E                 	db	110	;'n'
   412  007D77  67                 	db	103	;'g'
   413  007D78  72                 	db	114	;'r'
   414  007D79  65                 	db	101	;'e'
   415  007D7A  73                 	db	115	;'s'
   416  007D7B  61                 	db	97	;'a'
   417  007D7C  20                 	db	32
   418  007D7D  75                 	db	117	;'u'
   419  007D7E  6E                 	db	110	;'n'
   420  007D7F  61                 	db	97	;'a'
   421  007D80  20                 	db	32
   422  007D81  6F                 	db	111	;'o'
   423  007D82  70                 	db	112	;'p'
   424  007D83  63                 	db	99	;'c'
   425  007D84  69                 	db	105	;'i'
   426  007D85  6F                 	db	111	;'o'
   427  007D86  6E                 	db	110	;'n'
   428  007D87  20                 	db	32
   429  007D88  61                 	db	97	;'a'
   430  007D89  20                 	db	32
   431  007D8A  52                 	db	82	;'R'
   432  007D8B  65                 	db	101	;'e'
   433  007D8C  61                 	db	97	;'a'
   434  007D8D  6C                 	db	108	;'l'
   435  007D8E  69                 	db	105	;'i'
   436  007D8F  7A                 	db	122	;'z'
   437  007D90  61                 	db	97	;'a'
   438  007D91  72                 	db	114	;'r'
   439  007D92  3A                 	db	58	;':'
   440  007D93  20                 	db	32
   441  007D94  0D                 	db	13
   442  007D95  0A                 	db	10
   443  007D96  00                 	db	0
   444  007D97                     STR_13:
   445  007D97  48                 	db	72	;'H'
   446  007D98  4F                 	db	79	;'O'
   447  007D99  52                 	db	82	;'R'
   448  007D9A  41                 	db	65	;'A'
   449  007D9B  20                 	db	32
   450  007D9C  3D                 	db	61	;'='
   451  007D9D  20                 	db	32
   452  007D9E  25                 	db	37
   453  007D9F  30                 	db	48	;'0'
   454  007DA0  2E                 	db	46
   455  007DA1  32                 	db	50	;'2'
   456  007DA2  64                 	db	100	;'d'
   457  007DA3  3A                 	db	58	;':'
   458  007DA4  25                 	db	37
   459  007DA5  30                 	db	48	;'0'
   460  007DA6  2E                 	db	46
   461  007DA7  32                 	db	50	;'2'
   462  007DA8  64                 	db	100	;'d'
   463  007DA9  20                 	db	32
   464  007DAA  7C                 	db	124
   465  007DAB  20                 	db	32
   466  007DAC  44                 	db	68	;'D'
   467  007DAD  49                 	db	73	;'I'
   468  007DAE  41                 	db	65	;'A'
   469  007DAF  20                 	db	32
   470  007DB0  3D                 	db	61	;'='
   471  007DB1  20                 	db	32
   472  007DB2  44                 	db	68	;'D'
   473  007DB3  4F                 	db	79	;'O'
   474  007DB4  4D                 	db	77	;'M'
   475  007DB5  49                 	db	73	;'I'
   476  007DB6  4E                 	db	78	;'N'
   477  007DB7  47                 	db	71	;'G'
   478  007DB8  4F                 	db	79	;'O'
   479  007DB9  0D                 	db	13
   480  007DBA  0A                 	db	10
   481  007DBB  00                 	db	0
   482  007DBC                     STR_18:
   483  007DBC  48                 	db	72	;'H'
   484  007DBD  4F                 	db	79	;'O'
   485  007DBE  52                 	db	82	;'R'
   486  007DBF  41                 	db	65	;'A'
   487  007DC0  20                 	db	32
   488  007DC1  3D                 	db	61	;'='
   489  007DC2  20                 	db	32
   490  007DC3  25                 	db	37
   491  007DC4  30                 	db	48	;'0'
   492  007DC5  2E                 	db	46
   493  007DC6  32                 	db	50	;'2'
   494  007DC7  64                 	db	100	;'d'
   495  007DC8  3A                 	db	58	;':'
   496  007DC9  25                 	db	37
   497  007DCA  30                 	db	48	;'0'
   498  007DCB  2E                 	db	46
   499  007DCC  32                 	db	50	;'2'
   500  007DCD  64                 	db	100	;'d'
   501  007DCE  20                 	db	32
   502  007DCF  7C                 	db	124
   503  007DD0  20                 	db	32
   504  007DD1  44                 	db	68	;'D'
   505  007DD2  49                 	db	73	;'I'
   506  007DD3  41                 	db	65	;'A'
   507  007DD4  20                 	db	32
   508  007DD5  3D                 	db	61	;'='
   509  007DD6  20                 	db	32
   510  007DD7  56                 	db	86	;'V'
   511  007DD8  49                 	db	73	;'I'
   512  007DD9  45                 	db	69	;'E'
   513  007DDA  52                 	db	82	;'R'
   514  007DDB  4E                 	db	78	;'N'
   515  007DDC  45                 	db	69	;'E'
   516  007DDD  53                 	db	83	;'S'
   517  007DDE  0D                 	db	13
   518  007DDF  0A                 	db	10
   519  007DE0  00                 	db	0
   520  007DE1                     STR_24:
   521  007DE1  20                 	db	32
   522  007DE2  20                 	db	32
   523  007DE3  20                 	db	32
   524  007DE4  20                 	db	32
   525  007DE5  20                 	db	32
   526  007DE6  20                 	db	32
   527  007DE7  20                 	db	32
   528  007DE8  20                 	db	32
   529  007DE9  20                 	db	32
   530  007DEA  20                 	db	32
   531  007DEB  20                 	db	32
   532  007DEC  20                 	db	32
   533  007DED  20                 	db	32
   534  007DEE  20                 	db	32
   535  007DEF  20                 	db	32
   536  007DF0  20                 	db	32
   537  007DF1  20                 	db	32
   538  007DF2  20                 	db	32
   539  007DF3  20                 	db	32
   540  007DF4  20                 	db	32
   541  007DF5  20                 	db	32
   542  007DF6  20                 	db	32
   543  007DF7  20                 	db	32
   544  007DF8  20                 	db	32
   545  007DF9  20                 	db	32
   546  007DFA  20                 	db	32
   547  007DFB  20                 	db	32
   548  007DFC  44                 	db	68	;'D'
   549  007DFD  4C                 	db	76	;'L'
   550  007DFE  4D                 	db	77	;'M'
   551  007DFF  49                 	db	73	;'I'
   552  007E00  4A                 	db	74	;'J'
   553  007E01  56                 	db	86	;'V'
   554  007E02  53                 	db	83	;'S'
   555  007E03  0D                 	db	13
   556  007E04  0A                 	db	10
   557  007E05  00                 	db	0
   558  007E06  0D                 	db	13
   559  007E07  0A                 	db	10
   560  007E08  20                 	db	32
   561  007E09  38                 	db	56	;'8'
   562  007E0A  2E                 	db	46
   563  007E0B  20                 	db	32
   564  007E0C  43                 	db	67	;'C'
   565  007E0D  61                 	db	97	;'a'
   566  007E0E  72                 	db	114	;'r'
   567  007E0F  67                 	db	103	;'g'
   568  007E10  61                 	db	97	;'a'
   569  007E11  72                 	db	114	;'r'
   570  007E12  20                 	db	32
   571  007E13  64                 	db	100	;'d'
   572  007E14  61                 	db	97	;'a'
   573  007E15  74                 	db	116	;'t'
   574  007E16  6F                 	db	111	;'o'
   575  007E17  73                 	db	115	;'s'
   576  007E18  20                 	db	32
   577  007E19  64                 	db	100	;'d'
   578  007E1A  65                 	db	101	;'e'
   579  007E1B  20                 	db	32
   580  007E1C  6C                 	db	108	;'l'
   581  007E1D  61                 	db	97	;'a'
   582  007E1E  20                 	db	32
   583  007E1F  6D                 	db	109	;'m'
   584  007E20  65                 	db	101	;'e'
   585  007E21  6D                 	db	109	;'m'
   586  007E22  6F                 	db	111	;'o'
   587  007E23  72                 	db	114	;'r'
   588  007E24  69                 	db	105	;'i'
   589  007E25  61                 	db	97	;'a'
   590  007E26  20                 	db	32
   591  007E27  0D                 	db	13
   592  007E28  0A                 	db	10
   593  007E29  00                 	db	0
   594  007E2A                     STR_19:
   595  007E2A  48                 	db	72	;'H'
   596  007E2B  4F                 	db	79	;'O'
   597  007E2C  52                 	db	82	;'R'
   598  007E2D  41                 	db	65	;'A'
   599  007E2E  20                 	db	32
   600  007E2F  3D                 	db	61	;'='
   601  007E30  20                 	db	32
   602  007E31  25                 	db	37
   603  007E32  30                 	db	48	;'0'
   604  007E33  2E                 	db	46
   605  007E34  32                 	db	50	;'2'
   606  007E35  64                 	db	100	;'d'
   607  007E36  3A                 	db	58	;':'
   608  007E37  25                 	db	37
   609  007E38  30                 	db	48	;'0'
   610  007E39  2E                 	db	46
   611  007E3A  32                 	db	50	;'2'
   612  007E3B  64                 	db	100	;'d'
   613  007E3C  20                 	db	32
   614  007E3D  7C                 	db	124
   615  007E3E  20                 	db	32
   616  007E3F  44                 	db	68	;'D'
   617  007E40  49                 	db	73	;'I'
   618  007E41  41                 	db	65	;'A'
   619  007E42  20                 	db	32
   620  007E43  3D                 	db	61	;'='
   621  007E44  20                 	db	32
   622  007E45  53                 	db	83	;'S'
   623  007E46  41                 	db	65	;'A'
   624  007E47  42                 	db	66	;'B'
   625  007E48  41                 	db	65	;'A'
   626  007E49  44                 	db	68	;'D'
   627  007E4A  4F                 	db	79	;'O'
   628  007E4B  0D                 	db	13
   629  007E4C  0A                 	db	10
   630  007E4D  00                 	db	0
   631  007E4E                     STR_15:
   632  007E4E  48                 	db	72	;'H'
   633  007E4F  4F                 	db	79	;'O'
   634  007E50  52                 	db	82	;'R'
   635  007E51  41                 	db	65	;'A'
   636  007E52  20                 	db	32
   637  007E53  3D                 	db	61	;'='
   638  007E54  20                 	db	32
   639  007E55  25                 	db	37
   640  007E56  30                 	db	48	;'0'
   641  007E57  2E                 	db	46
   642  007E58  32                 	db	50	;'2'
   643  007E59  64                 	db	100	;'d'
   644  007E5A  3A                 	db	58	;':'
   645  007E5B  25                 	db	37
   646  007E5C  30                 	db	48	;'0'
   647  007E5D  2E                 	db	46
   648  007E5E  32                 	db	50	;'2'
   649  007E5F  64                 	db	100	;'d'
   650  007E60  20                 	db	32
   651  007E61  7C                 	db	124
   652  007E62  20                 	db	32
   653  007E63  44                 	db	68	;'D'
   654  007E64  49                 	db	73	;'I'
   655  007E65  41                 	db	65	;'A'
   656  007E66  20                 	db	32
   657  007E67  3D                 	db	61	;'='
   658  007E68  20                 	db	32
   659  007E69  4D                 	db	77	;'M'
   660  007E6A  41                 	db	65	;'A'
   661  007E6B  52                 	db	82	;'R'
   662  007E6C  54                 	db	84	;'T'
   663  007E6D  45                 	db	69	;'E'
   664  007E6E  53                 	db	83	;'S'
   665  007E6F  0D                 	db	13
   666  007E70  0A                 	db	10
   667  007E71  00                 	db	0
   668  007E72                     STR_17:
   669  007E72  48                 	db	72	;'H'
   670  007E73  4F                 	db	79	;'O'
   671  007E74  52                 	db	82	;'R'
   672  007E75  41                 	db	65	;'A'
   673  007E76  20                 	db	32
   674  007E77  3D                 	db	61	;'='
   675  007E78  20                 	db	32
   676  007E79  25                 	db	37
   677  007E7A  30                 	db	48	;'0'
   678  007E7B  2E                 	db	46
   679  007E7C  32                 	db	50	;'2'
   680  007E7D  64                 	db	100	;'d'
   681  007E7E  3A                 	db	58	;':'
   682  007E7F  25                 	db	37
   683  007E80  30                 	db	48	;'0'
   684  007E81  2E                 	db	46
   685  007E82  32                 	db	50	;'2'
   686  007E83  64                 	db	100	;'d'
   687  007E84  20                 	db	32
   688  007E85  7C                 	db	124
   689  007E86  20                 	db	32
   690  007E87  44                 	db	68	;'D'
   691  007E88  49                 	db	73	;'I'
   692  007E89  41                 	db	65	;'A'
   693  007E8A  20                 	db	32
   694  007E8B  3D                 	db	61	;'='
   695  007E8C  20                 	db	32
   696  007E8D  4A                 	db	74	;'J'
   697  007E8E  55                 	db	85	;'U'
   698  007E8F  45                 	db	69	;'E'
   699  007E90  56                 	db	86	;'V'
   700  007E91  45                 	db	69	;'E'
   701  007E92  53                 	db	83	;'S'
   702  007E93  0D                 	db	13
   703  007E94  0A                 	db	10
   704  007E95  00                 	db	0
   705  007E96                     STR_14:
   706  007E96  48                 	db	72	;'H'
   707  007E97  4F                 	db	79	;'O'
   708  007E98  52                 	db	82	;'R'
   709  007E99  41                 	db	65	;'A'
   710  007E9A  20                 	db	32
   711  007E9B  3D                 	db	61	;'='
   712  007E9C  20                 	db	32
   713  007E9D  25                 	db	37
   714  007E9E  30                 	db	48	;'0'
   715  007E9F  2E                 	db	46
   716  007EA0  32                 	db	50	;'2'
   717  007EA1  64                 	db	100	;'d'
   718  007EA2  3A                 	db	58	;':'
   719  007EA3  25                 	db	37
   720  007EA4  30                 	db	48	;'0'
   721  007EA5  2E                 	db	46
   722  007EA6  32                 	db	50	;'2'
   723  007EA7  64                 	db	100	;'d'
   724  007EA8  20                 	db	32
   725  007EA9  7C                 	db	124
   726  007EAA  20                 	db	32
   727  007EAB  44                 	db	68	;'D'
   728  007EAC  49                 	db	73	;'I'
   729  007EAD  41                 	db	65	;'A'
   730  007EAE  20                 	db	32
   731  007EAF  3D                 	db	61	;'='
   732  007EB0  20                 	db	32
   733  007EB1  4C                 	db	76	;'L'
   734  007EB2  55                 	db	85	;'U'
   735  007EB3  4E                 	db	78	;'N'
   736  007EB4  45                 	db	69	;'E'
   737  007EB5  53                 	db	83	;'S'
   738  007EB6  0D                 	db	13
   739  007EB7  0A                 	db	10
   740  007EB8  00                 	db	0
   741  007EB9  0D                 	db	13
   742  007EBA  0A                 	db	10
   743  007EBB  20                 	db	32
   744  007EBC  35                 	db	53	;'5'
   745  007EBD  2E                 	db	46
   746  007EBE  20                 	db	32
   747  007EBF  4D                 	db	77	;'M'
   748  007EC0  6F                 	db	111	;'o'
   749  007EC1  73                 	db	115	;'s'
   750  007EC2  74                 	db	116	;'t'
   751  007EC3  72                 	db	114	;'r'
   752  007EC4  61                 	db	97	;'a'
   753  007EC5  72                 	db	114	;'r'
   754  007EC6  20                 	db	32
   755  007EC7  76                 	db	118	;'v'
   756  007EC8  61                 	db	97	;'a'
   757  007EC9  6C                 	db	108	;'l'
   758  007ECA  6F                 	db	111	;'o'
   759  007ECB  72                 	db	114	;'r'
   760  007ECC  65                 	db	101	;'e'
   761  007ECD  73                 	db	115	;'s'
   762  007ECE  20                 	db	32
   763  007ECF  73                 	db	115	;'s'
   764  007ED0  65                 	db	101	;'e'
   765  007ED1  6E                 	db	110	;'n'
   766  007ED2  73                 	db	115	;'s'
   767  007ED3  6F                 	db	111	;'o'
   768  007ED4  72                 	db	114	;'r'
   769  007ED5  65                 	db	101	;'e'
   770  007ED6  73                 	db	115	;'s'
   771  007ED7  20                 	db	32
   772  007ED8  0D                 	db	13
   773  007ED9  0A                 	db	10
   774  007EDA  00                 	db	0
   775  007EDB  0D                 	db	13
   776  007EDC  0A                 	db	10
   777  007EDD  20                 	db	32
   778  007EDE  34                 	db	52	;'4'
   779  007EDF  2E                 	db	46
   780  007EE0  20                 	db	32
   781  007EE1  44                 	db	68	;'D'
   782  007EE2  61                 	db	97	;'a'
   783  007EE3  6D                 	db	109	;'m'
   784  007EE4  65                 	db	101	;'e'
   785  007EE5  20                 	db	32
   786  007EE6  64                 	db	100	;'d'
   787  007EE7  61                 	db	97	;'a'
   788  007EE8  74                 	db	116	;'t'
   789  007EE9  6F                 	db	111	;'o'
   790  007EEA  73                 	db	115	;'s'
   791  007EEB  20                 	db	32
   792  007EEC  64                 	db	100	;'d'
   793  007EED  65                 	db	101	;'e'
   794  007EEE  6C                 	db	108	;'l'
   795  007EEF  20                 	db	32
   796  007EF0  73                 	db	115	;'s'
   797  007EF1  69                 	db	105	;'i'
   798  007EF2  73                 	db	115	;'s'
   799  007EF3  74                 	db	116	;'t'
   800  007EF4  65                 	db	101	;'e'
   801  007EF5  6D                 	db	109	;'m'
   802  007EF6  61                 	db	97	;'a'
   803  007EF7  20                 	db	32
   804  007EF8  0D                 	db	13
   805  007EF9  0A                 	db	10
   806  007EFA  00                 	db	0
   807  007EFB                     STR_21:
   808  007EFB  0D                 	db	13
   809  007EFC  0A                 	db	10
   810  007EFD  52                 	db	82	;'R'
   811  007EFE  20                 	db	32
   812  007EFF  3D                 	db	61	;'='
   813  007F00  20                 	db	32
   814  007F01  49                 	db	73	;'I'
   815  007F02  4C                 	db	76	;'L'
   816  007F03  55                 	db	85	;'U'
   817  007F04  4D                 	db	77	;'M'
   818  007F05  49                 	db	73	;'I'
   819  007F06  4E                 	db	78	;'N'
   820  007F07  41                 	db	65	;'A'
   821  007F08  52                 	db	82	;'R'
   822  007F09  28                 	db	40
   823  007F0A  20                 	db	32
   824  007F0B  31                 	db	49	;'1'
   825  007F0C  20                 	db	32
   826  007F0D  53                 	db	83	;'S'
   827  007F0E  49                 	db	73	;'I'
   828  007F0F  20                 	db	32
   829  007F10  7C                 	db	124
   830  007F11  20                 	db	32
   831  007F12  30                 	db	48	;'0'
   832  007F13  20                 	db	32
   833  007F14  4E                 	db	78	;'N'
   834  007F15  4F                 	db	79	;'O'
   835  007F16  29                 	db	41
   836  007F17  0D                 	db	13
   837  007F18  0A                 	db	10
   838  007F19  00                 	db	0
   839  007F1A  0D                 	db	13
   840  007F1B  0A                 	db	10
   841  007F1C  20                 	db	32
   842  007F1D  31                 	db	49	;'1'
   843  007F1E  2E                 	db	46
   844  007F1F  20                 	db	32
   845  007F20  46                 	db	70	;'F'
   846  007F21  69                 	db	105	;'i'
   847  007F22  6A                 	db	106	;'j'
   848  007F23  61                 	db	97	;'a'
   849  007F24  72                 	db	114	;'r'
   850  007F25  20                 	db	32
   851  007F26  48                 	db	72	;'H'
   852  007F27  6F                 	db	111	;'o'
   853  007F28  72                 	db	114	;'r'
   854  007F29  61                 	db	97	;'a'
   855  007F2A  20                 	db	32
   856  007F2B  41                 	db	65	;'A'
   857  007F2C  63                 	db	99	;'c'
   858  007F2D  74                 	db	116	;'t'
   859  007F2E  75                 	db	117	;'u'
   860  007F2F  61                 	db	97	;'a'
   861  007F30  6C                 	db	108	;'l'
   862  007F31  20                 	db	32
   863  007F32  0D                 	db	13
   864  007F33  0A                 	db	10
   865  007F34  00                 	db	0
   866  007F35  0D                 	db	13
   867  007F36  0A                 	db	10
   868  007F37  20                 	db	32
   869  007F38  37                 	db	55	;'7'
   870  007F39  2E                 	db	46
   871  007F3A  20                 	db	32
   872  007F3B  46                 	db	70	;'F'
   873  007F3C  69                 	db	105	;'i'
   874  007F3D  6A                 	db	106	;'j'
   875  007F3E  61                 	db	97	;'a'
   876  007F3F  72                 	db	114	;'r'
   877  007F40  20                 	db	32
   878  007F41  44                 	db	68	;'D'
   879  007F42  69                 	db	105	;'i'
   880  007F43  61                 	db	97	;'a'
   881  007F44  20                 	db	32
   882  007F45  41                 	db	65	;'A'
   883  007F46  63                 	db	99	;'c'
   884  007F47  74                 	db	116	;'t'
   885  007F48  75                 	db	117	;'u'
   886  007F49  61                 	db	97	;'a'
   887  007F4A  6C                 	db	108	;'l'
   888  007F4B  20                 	db	32
   889  007F4C  0D                 	db	13
   890  007F4D  0A                 	db	10
   891  007F4E  00                 	db	0
   892  007F4F  0D                 	db	13
   893  007F50  0A                 	db	10
   894  007F51  20                 	db	32
   895  007F52  36                 	db	54	;'6'
   896  007F53  2E                 	db	46
   897  007F54  20                 	db	32
   898  007F55  41                 	db	65	;'A'
   899  007F56  73                 	db	115	;'s'
   900  007F57  69                 	db	105	;'i'
   901  007F58  67                 	db	103	;'g'
   902  007F59  6E                 	db	110	;'n'
   903  007F5A  61                 	db	97	;'a'
   904  007F5B  72                 	db	114	;'r'
   905  007F5C  20                 	db	32
   906  007F5D  53                 	db	83	;'S'
   907  007F5E  65                 	db	101	;'e'
   908  007F5F  74                 	db	116	;'t'
   909  007F60  70                 	db	112	;'p'
   910  007F61  6F                 	db	111	;'o'
   911  007F62  69                 	db	105	;'i'
   912  007F63  6E                 	db	110	;'n'
   913  007F64  74                 	db	116	;'t'
   914  007F65  0D                 	db	13
   915  007F66  0A                 	db	10
   916  007F67  00                 	db	0
   917  007F68                     STR_25:
   918  007F68  48                 	db	72	;'H'
   919  007F69  3A                 	db	58	;':'
   920  007F6A  25                 	db	37
   921  007F6B  32                 	db	50	;'2'
   922  007F6C  64                 	db	100	;'d'
   923  007F6D  7C                 	db	124
   924  007F6E  52                 	db	82	;'R'
   925  007F6F  3A                 	db	58	;':'
   926  007F70  25                 	db	37
   927  007F71  64                 	db	100	;'d'
   928  007F72  7C                 	db	124
   929  007F73  54                 	db	84	;'T'
   930  007F74  3A                 	db	58	;':'
   931  007F75  25                 	db	37
   932  007F76  32                 	db	50	;'2'
   933  007F77  64                 	db	100	;'d'
   934  007F78  7C                 	db	124
   935  007F79  44                 	db	68	;'D'
   936  007F7A  3A                 	db	58	;':'
   937  007F7B  25                 	db	37
   938  007F7C  73                 	db	115	;'s'
   939  007F7D  0D                 	db	13
   940  007F7E  0A                 	db	10
   941  007F7F  00                 	db	0
   942  007F80                     STR_26:
   943  007F80  0D                 	db	13
   944  007F81  4C                 	db	76	;'L'
   945  007F82  75                 	db	117	;'u'
   946  007F83  7A                 	db	122	;'z'
   947  007F84  20                 	db	32
   948  007F85  6D                 	db	109	;'m'
   949  007F86  65                 	db	101	;'e'
   950  007F87  64                 	db	100	;'d'
   951  007F88  69                 	db	105	;'i'
   952  007F89  64                 	db	100	;'d'
   953  007F8A  61                 	db	97	;'a'
   954  007F8B  3A                 	db	58	;':'
   955  007F8C  20                 	db	32
   956  007F8D  25                 	db	37
   957  007F8E  64                 	db	100	;'d'
   958  007F8F  20                 	db	32
   959  007F90  6C                 	db	108	;'l'
   960  007F91  75                 	db	117	;'u'
   961  007F92  78                 	db	120	;'x'
   962  007F93  73                 	db	115	;'s'
   963  007F94  0A                 	db	10
   964  007F95  0D                 	db	13
   965  007F96  00                 	db	0
   966  007F97                     STR_30:
   967  007F97  0D                 	db	13
   968  007F98  0A                 	db	10
   969  007F99  53                 	db	83	;'S'
   970  007F9A  69                 	db	105	;'i'
   971  007F9B  73                 	db	115	;'s'
   972  007F9C  74                 	db	116	;'t'
   973  007F9D  65                 	db	101	;'e'
   974  007F9E  6D                 	db	109	;'m'
   975  007F9F  61                 	db	97	;'a'
   976  007FA0  20                 	db	32
   977  007FA1  49                 	db	73	;'I'
   978  007FA2  6E                 	db	110	;'n'
   979  007FA3  69                 	db	105	;'i'
   980  007FA4  63                 	db	99	;'c'
   981  007FA5  69                 	db	105	;'i'
   982  007FA6  61                 	db	97	;'a'
   983  007FA7  64                 	db	100	;'d'
   984  007FA8  6F                 	db	111	;'o'
   985  007FA9  0A                 	db	10
   986  007FAA  0D                 	db	13
   987  007FAB  00                 	db	0
   988  007FAC                     STR_12:
   989  007FAC  0D                 	db	13
   990  007FAD  0A                 	db	10
   991  007FAE  53                 	db	83	;'S'
   992  007FAF  65                 	db	101	;'e'
   993  007FB0  74                 	db	116	;'t'
   994  007FB1  70                 	db	112	;'p'
   995  007FB2  6F                 	db	111	;'o'
   996  007FB3  69                 	db	105	;'i'
   997  007FB4  6E                 	db	110	;'n'
   998  007FB5  74                 	db	116	;'t'
   999  007FB6  20                 	db	32
  1000  007FB7  3D                 	db	61	;'='
  1001  007FB8  20                 	db	32
  1002  007FB9  25                 	db	37
  1003  007FBA  64                 	db	100	;'d'
  1004  007FBB  20                 	db	32
  1005  007FBC  7C                 	db	124
  1006  007FBD  20                 	db	32
  1007  007FBE  00                 	db	0
  1008  007FBF  41                 	db	65	;'A'
  1009  007FC0  54                 	db	84	;'T'
  1010  007FC1  2B                 	db	43
  1011  007FC2  4E                 	db	78	;'N'
  1012  007FC3  41                 	db	65	;'A'
  1013  007FC4  4D                 	db	77	;'M'
  1014  007FC5  45                 	db	69	;'E'
  1015  007FC6  53                 	db	83	;'S'
  1016  007FC7  4D                 	db	77	;'M'
  1017  007FC8  41                 	db	65	;'A'
  1018  007FC9  52                 	db	82	;'R'
  1019  007FCA  54                 	db	84	;'T'
  1020  007FCB  48                 	db	72	;'H'
  1021  007FCC  4F                 	db	79	;'O'
  1022  007FCD  4D                 	db	77	;'M'
  1023  007FCE  45                 	db	69	;'E'
  1024  007FCF  00                 	db	0
  1025  007FD0  0D                 	db	13
  1026  007FD1  0A                 	db	10
  1027  007FD2  20                 	db	32
  1028  007FD3  4F                 	db	79	;'O'
  1029  007FD4  70                 	db	112	;'p'
  1030  007FD5  63                 	db	99	;'c'
  1031  007FD6  69                 	db	105	;'i'
  1032  007FD7  6F                 	db	111	;'o'
  1033  007FD8  6E                 	db	110	;'n'
  1034  007FD9  3A                 	db	58	;':'
  1035  007FDA  20                 	db	32
  1036  007FDB  20                 	db	32
  1037  007FDC  0D                 	db	13
  1038  007FDD  00                 	db	0
  1039  007FDE                     STR_20:
  1040  007FDE  0D                 	db	13
  1041  007FDF  0A                 	db	10
  1042  007FE0  48                 	db	72	;'H'
  1043  007FE1  20                 	db	32
  1044  007FE2  3D                 	db	61	;'='
  1045  007FE3  20                 	db	32
  1046  007FE4  48                 	db	72	;'H'
  1047  007FE5  4F                 	db	79	;'O'
  1048  007FE6  52                 	db	82	;'R'
  1049  007FE7  41                 	db	65	;'A'
  1050  007FE8  0D                 	db	13
  1051  007FE9  0A                 	db	10
  1052  007FEA  00                 	db	0
  1053  007FEB  41                 	db	65	;'A'
  1054  007FEC  54                 	db	84	;'T'
  1055  007FED  2B                 	db	43
  1056  007FEE  50                 	db	80	;'P'
  1057  007FEF  49                 	db	73	;'I'
  1058  007FF0  4E                 	db	78	;'N'
  1059  007FF1  32                 	db	50	;'2'
  1060  007FF2  35                 	db	53	;'5'
  1061  007FF3  30                 	db	48	;'0'
  1062  007FF4  31                 	db	49	;'1'
  1063  007FF5  00                 	db	0
  1064  007FF6  41                 	db	65	;'A'
  1065  007FF7  54                 	db	84	;'T'
  1066  007FF8  2B                 	db	43
  1067  007FF9  42                 	db	66	;'B'
  1068  007FFA  41                 	db	65	;'A'
  1069  007FFB  55                 	db	85	;'U'
  1070  007FFC  44                 	db	68	;'D'
  1071  007FFD  34                 	db	52	;'4'
  1072  007FFE  00                 	db	0
  1073  0000                     
  1074                           ; #config settings
  1075  007FFF  00                 	db	0	; dummy byte at the end
  1076  0000                     
  1077                           	psect	cinit
  1078  003394                     __pcinit:
  1079                           	opt callstack 0
  1080  003394                     start_initialization:
  1081                           	opt callstack 0
  1082  003394                     __initialization:
  1083                           	opt callstack 0
  1084                           
  1085                           ; Initialize objects allocated to BANK0 (15 bytes)
  1086                           ; load TBLPTR registers with __pidataBANK0
  1087  003394  0EAC               	movlw	low __pidataBANK0
  1088  003396  6EF6               	movwf	tblptrl,c
  1089  003398  0E39               	movlw	high __pidataBANK0
  1090  00339A  6EF7               	movwf	tblptrh,c
  1091  00339C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1092  00339E  6EF8               	movwf	tblptru,c
  1093  0033A0  EE00  F0D7         	lfsr	0,__pdataBANK0
  1094  0033A4  EE10 F00F          	lfsr	1,15
  1095  0033A8                     copy_data0:
  1096  0033A8  0009               	tblrd		*+
  1097  0033AA  CFF5 FFEE          	movff	tablat,postinc0
  1098  0033AE  50E5               	movf	postdec1,w,c
  1099  0033B0  50E1               	movf	fsr1l,w,c
  1100  0033B2  E1FA               	bnz	copy_data0
  1101                           
  1102                           ; Clear objects allocated to BIGRAM (288 bytes)
  1103  0033B4  EE01  F052         	lfsr	0,__pbssBIGRAM
  1104  0033B8  EE11 F020          	lfsr	1,288
  1105  0033BC                     clear_0:
  1106  0033BC  6AEE               	clrf	postinc0,c
  1107  0033BE  50E5               	movf	postdec1,w,c
  1108  0033C0  50E1               	movf	fsr1l,w,c
  1109  0033C2  E1FC               	bnz	clear_0
  1110  0033C4  50E2               	movf	fsr1h,w,c
  1111  0033C6  E1FA               	bnz	clear_0
  1112                           
  1113                           ; Clear objects allocated to BANK1 (82 bytes)
  1114  0033C8  EE01  F000         	lfsr	0,__pbssBANK1
  1115  0033CC  0E52               	movlw	82
  1116  0033CE                     clear_1:
  1117  0033CE  6AEE               	clrf	postinc0,c
  1118  0033D0  06E8               	decf	wreg,f,c
  1119  0033D2  E1FD               	bnz	clear_1
  1120                           
  1121                           ; Clear objects allocated to BANK0 (49 bytes)
  1122  0033D4  EE00  F0A6         	lfsr	0,__pbssBANK0
  1123  0033D8  0E31               	movlw	49
  1124  0033DA                     clear_2:
  1125  0033DA  6AEE               	clrf	postinc0,c
  1126  0033DC  06E8               	decf	wreg,f,c
  1127  0033DE  E1FD               	bnz	clear_2
  1128  0033E0                     end_of_initialization:
  1129                           	opt callstack 0
  1130  0033E0                     __end_of__initialization:
  1131                           	opt callstack 0
  1132  0033E0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1133  0033E2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1134  0033E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1135  0033E6  6EF8               	movwf	tblptru,c
  1136  0033E8  0100               	movlb	0
  1137  0033EA  EF8C  F017         	goto	_main	;jump to C main() function
  1138                           
  1139                           	psect	bssBANK0
  1140  0000A6                     __pbssBANK0:
  1141                           	opt callstack 0
  1142  0000A6                     PID@difAnt:
  1143                           	opt callstack 0
  1144  0000A6                     	ds	4
  1145  0000AA                     PID@D:
  1146                           	opt callstack 0
  1147  0000AA                     	ds	4
  1148  0000AE                     PID@I:
  1149                           	opt callstack 0
  1150  0000AE                     	ds	4
  1151  0000B2                     PID@P:
  1152                           	opt callstack 0
  1153  0000B2                     	ds	4
  1154  0000B6                     _luzMedida:
  1155                           	opt callstack 0
  1156  0000B6                     	ds	4
  1157  0000BA                     _nout:
  1158                           	opt callstack 0
  1159  0000BA                     	ds	2
  1160  0000BC                     _width:
  1161                           	opt callstack 0
  1162  0000BC                     	ds	2
  1163  0000BE                     _prec:
  1164                           	opt callstack 0
  1165  0000BE                     	ds	2
  1166  0000C0                     _flags:
  1167                           	opt callstack 0
  1168  0000C0                     	ds	2
  1169  0000C2                     _minutosTranscurridos:
  1170                           	opt callstack 0
  1171  0000C2                     	ds	2
  1172  0000C4                     _minutosIluminar:
  1173                           	opt callstack 0
  1174  0000C4                     	ds	2
  1175  0000C6                     _contInterrupciones:
  1176                           	opt callstack 0
  1177  0000C6                     	ds	2
  1178  0000C8                     _peticionLecturaSensores:
  1179                           	opt callstack 0
  1180  0000C8                     	ds	1
  1181  0000C9                     _iluminando:
  1182                           	opt callstack 0
  1183  0000C9                     	ds	1
  1184  0000CA                     _flagIluminado:
  1185                           	opt callstack 0
  1186  0000CA                     	ds	1
  1187  0000CB                     _tempHora:
  1188                           	opt callstack 0
  1189  0000CB                     	ds	1
  1190  0000CC                     _overflowTimer:
  1191                           	opt callstack 0
  1192  0000CC                     	ds	1
  1193  0000CD                     _datoRecibido:
  1194                           	opt callstack 0
  1195  0000CD                     	ds	1
  1196  0000CE                     _diaActual:
  1197                           	opt callstack 0
  1198  0000CE                     	ds	1
  1199  0000CF                     _segundos:
  1200                           	opt callstack 0
  1201  0000CF                     	ds	1
  1202  0000D0                     _minutos:
  1203                           	opt callstack 0
  1204  0000D0                     	ds	1
  1205  0000D1                     _hora:
  1206                           	opt callstack 0
  1207  0000D1                     	ds	1
  1208  0000D2                     _reiniciarPID:
  1209                           	opt callstack 0
  1210  0000D2                     	ds	1
  1211  0000D3                     _esperandoDatos:
  1212                           	opt callstack 0
  1213  0000D3                     	ds	1
  1214  0000D4                     _esperaDatoConcluida:
  1215                           	opt callstack 0
  1216  0000D4                     	ds	1
  1217  0000D5                     _byteUart:
  1218                           	opt callstack 0
  1219  0000D5                     	ds	1
  1220  0000D6                     _tiempoInactividadTrans:
  1221                           	opt callstack 0
  1222  0000D6                     	ds	1
  1223                           
  1224                           	psect	dataBANK0
  1225  0000D7                     __pdataBANK0:
  1226                           	opt callstack 0
  1227  0000D7                     stoa@F1139:
  1228                           	opt callstack 0
  1229  0000D7                     	ds	7
  1230  0000DE                     _setPoint:
  1231                           	opt callstack 0
  1232  0000DE                     	ds	4
  1233  0000E2                     _VALOR_TIMER0:
  1234                           	opt callstack 0
  1235  0000E2                     	ds	2
  1236  0000E4                     _VALOR_TIMER0UART:
  1237                           	opt callstack 0
  1238  0000E4                     	ds	2
  1239                           
  1240                           	psect	bssBANK1
  1241  000100                     __pbssBANK1:
  1242                           	opt callstack 0
  1243  000100                     _buffer:
  1244                           	opt callstack 0
  1245  000100                     	ds	50
  1246  000132                     _dbuf:
  1247                           	opt callstack 0
  1248  000132                     	ds	32
  1249                           
  1250                           	psect	bssBIGRAM
  1251  000152                     __pbssBIGRAM:
  1252                           	opt callstack 0
  1253  000152                     _horarios:
  1254                           	opt callstack 0
  1255  000152                     	ds	288
  1256                           
  1257                           	psect	cstackBANK0
  1258  000060                     __pcstackBANK0:
  1259                           	opt callstack 0
  1260  000060                     ?_vfprintf:
  1261                           	opt callstack 0
  1262  000060                     dameValorLux@modo:
  1263                           	opt callstack 0
  1264  000060                     vfprintf@fp:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x0
  1268  000060                     	ds	1
  1269  000061                     dameValorLux@valorLux:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 4 bytes @ 0x1
  1273  000061                     	ds	1
  1274  000062                     vfprintf@fmt:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x2
  1278  000062                     	ds	2
  1279  000064                     vfprintf@ap:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x4
  1283  000064                     	ds	2
  1284  000066                     ?_sprintf:
  1285                           	opt callstack 0
  1286  000066                     sprintf@s:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x6
  1290  000066                     	ds	2
  1291  000068                     sprintf@fmt:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x8
  1295  000068                     	ds	12
  1296  000074                     sprintf@ap:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x14
  1300  000074                     	ds	2
  1301  000076                     sprintf@f:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 6 bytes @ 0x16
  1305  000076                     	ds	6
  1306  00007C                     dameDatosSistema@bufferHorario:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 30 bytes @ 0x1C
  1310  00007C                     	ds	30
  1311  00009A                     _dameDatosSistema$1630:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x3A
  1315  00009A                     	ds	2
  1316  00009C                     _dameDatosSistema$1631:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x3C
  1320  00009C                     	ds	2
  1321  00009E                     _dameDatosSistema$1632:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x3E
  1325  00009E                     	ds	2
  1326  0000A0                     _dameDatosSistema$1633:
  1327                           	opt callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x40
  1330  0000A0                     	ds	2
  1331  0000A2                     dameDatosSistema@i:
  1332                           	opt callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x42
  1335  0000A2                     	ds	2
  1336  0000A4                     ??_sistemaPrincipal:
  1337                           
  1338                           ; 1 bytes @ 0x44
  1339  0000A4                     	ds	2
  1340                           
  1341                           	psect	cstackCOMRAM
  1342  000001                     __pcstackCOMRAM:
  1343                           	opt callstack 0
  1344  000001                     ??_i2c_espera:
  1345  000001                     ??_configPwm:
  1346  000001                     ??_convertirDato:
  1347  000001                     ?_strlen:
  1348                           	opt callstack 0
  1349  000001                     ?_isdigit:
  1350                           	opt callstack 0
  1351  000001                     ?_isspace:
  1352                           	opt callstack 0
  1353  000001                     ?_horaIluminar:
  1354                           	opt callstack 0
  1355  000001                     ?___wmul:
  1356                           	opt callstack 0
  1357  000001                     ?___awdiv:
  1358                           	opt callstack 0
  1359  000001                     ?___awmod:
  1360                           	opt callstack 0
  1361  000001                     ?___lmul:
  1362                           	opt callstack 0
  1363  000001                     ?___xxtofl:
  1364                           	opt callstack 0
  1365  000001                     ?___aodiv:
  1366                           	opt callstack 0
  1367  000001                     ?___aomod:
  1368                           	opt callstack 0
  1369  000001                     UART_write@dato:
  1370                           	opt callstack 0
  1371  000001                     limpiarBuffer@i:
  1372                           	opt callstack 0
  1373  000001                     ___wmul@multiplier:
  1374                           	opt callstack 0
  1375  000001                     ___awdiv@dividend:
  1376                           	opt callstack 0
  1377  000001                     ___awmod@dividend:
  1378                           	opt callstack 0
  1379  000001                     isdigit@c:
  1380                           	opt callstack 0
  1381  000001                     isspace@c:
  1382                           	opt callstack 0
  1383  000001                     fputc@c:
  1384                           	opt callstack 0
  1385  000001                     strlen@s:
  1386                           	opt callstack 0
  1387  000001                     ___lmul@multiplier:
  1388                           	opt callstack 0
  1389  000001                     ___xxtofl@val:
  1390                           	opt callstack 0
  1391  000001                     ___aodiv@dividend:
  1392                           	opt callstack 0
  1393  000001                     ___aomod@dividend:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 8 bytes @ 0x0
  1397  000001                     	ds	1
  1398  000002                     i2c_envia_dato@dato:
  1399                           	opt callstack 0
  1400  000002                     i2c_recibe_dato@datoleido:
  1401                           	opt callstack 0
  1402  000002                     i2c_recibe_datoACK@a:
  1403                           	opt callstack 0
  1404  000002                     convertirDato@dato:
  1405                           	opt callstack 0
  1406  000002                     UART_printf@cadena:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x1
  1410  000002                     	ds	1
  1411  000003                     ??_isdigit:
  1412  000003                     ??_isspace:
  1413  000003                     ??_horaIluminar:
  1414  000003                     i2c_recibe_datoACK@datoleido:
  1415                           	opt callstack 0
  1416  000003                     bh1750_escribir@comando:
  1417                           	opt callstack 0
  1418  000003                     configPwm@channel:
  1419                           	opt callstack 0
  1420  000003                     escribe_rtc@dato:
  1421                           	opt callstack 0
  1422  000003                     leer_rtc@direccion:
  1423                           	opt callstack 0
  1424  000003                     convertirDato@datoR:
  1425                           	opt callstack 0
  1426  000003                     leer_eeprom@direccion:
  1427                           	opt callstack 0
  1428  000003                     ___wmul@multiplicand:
  1429                           	opt callstack 0
  1430  000003                     ___awdiv@divisor:
  1431                           	opt callstack 0
  1432  000003                     ___awmod@divisor:
  1433                           	opt callstack 0
  1434  000003                     fputc@fp:
  1435                           	opt callstack 0
  1436  000003                     strlen@a:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x2
  1440  000003                     	ds	1
  1441  000004                     ??_bh1750_iniciar:
  1442  000004                     escribe_rtc@direccion:
  1443                           	opt callstack 0
  1444  000004                     leer_rtc@dato:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 1 bytes @ 0x3
  1448  000004                     	ds	1
  1449  000005                     ??_fputc:
  1450  000005                     ??_leer_eeprom:
  1451  000005                     ??___xxtofl:
  1452  000005                     ___awdiv@counter:
  1453                           	opt callstack 0
  1454  000005                     ___awmod@counter:
  1455                           	opt callstack 0
  1456  000005                     ___wmul@product:
  1457                           	opt callstack 0
  1458  000005                     ___lmul@multiplicand:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 4 bytes @ 0x4
  1462  000005                     	ds	1
  1463  000006                     _horaIluminar$589:
  1464                           	opt callstack 0
  1465  000006                     leer_eeprom@dato:
  1466                           	opt callstack 0
  1467  000006                     ___awdiv@sign:
  1468                           	opt callstack 0
  1469  000006                     ___awmod@sign:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x5
  1473  000006                     	ds	1
  1474  000007                     ??_leeHorariosMemoria:
  1475  000007                     _isspace$1304:
  1476                           	opt callstack 0
  1477  000007                     escribe_eeprom@direccion:
  1478                           	opt callstack 0
  1479  000007                     ___awdiv@quotient:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x6
  1483  000007                     	ds	1
  1484  000008                     ?_atoi:
  1485                           	opt callstack 0
  1486  000008                     atoi@s:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x7
  1490  000008                     	ds	1
  1491  000009                     escribe_eeprom@dato:
  1492                           	opt callstack 0
  1493  000009                     leeHorariosMemoria@caracterLeido:
  1494                           	opt callstack 0
  1495  000009                     ___xxtofl@sign:
  1496                           	opt callstack 0
  1497  000009                     ___lmul@product:
  1498                           	opt callstack 0
  1499  000009                     ___aodiv@divisor:
  1500                           	opt callstack 0
  1501  000009                     ___aomod@divisor:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 8 bytes @ 0x8
  1505  000009                     	ds	1
  1506  00000A                     ??_atoi:
  1507  00000A                     ??_escribe_eeprom:
  1508  00000A                     ?_stoa:
  1509                           	opt callstack 0
  1510  00000A                     ___xxtofl@exp:
  1511                           	opt callstack 0
  1512  00000A                     leeHorariosMemoria@j:
  1513                           	opt callstack 0
  1514  00000A                     stoa@fp:
  1515                           	opt callstack 0
  1516  00000A                     fputs@s:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x9
  1520  00000A                     	ds	1
  1521  00000B                     ??_escribeHorariosMemoria:
  1522  00000B                     ___xxtofl@arg:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 4 bytes @ 0xA
  1526  00000B                     	ds	1
  1527  00000C                     leeHorariosMemoria@contMemoria:
  1528                           	opt callstack 0
  1529  00000C                     stoa@s:
  1530                           	opt callstack 0
  1531  00000C                     fputs@fp:
  1532                           	opt callstack 0
  1533                           
  1534                           ; 2 bytes @ 0xB
  1535  00000C                     	ds	1
  1536  00000D                     ?_getValue:
  1537                           	opt callstack 0
  1538  00000D                     ?___aldiv:
  1539                           	opt callstack 0
  1540  00000D                     escribeHorariosMemoria@j:
  1541                           	opt callstack 0
  1542  00000D                     getValue@numCharacters:
  1543                           	opt callstack 0
  1544  00000D                     ___aldiv@dividend:
  1545                           	opt callstack 0
  1546                           
  1547                           ; 4 bytes @ 0xC
  1548  00000D                     	ds	1
  1549  00000E                     ??_stoa:
  1550  00000E                     fputs@c:
  1551                           	opt callstack 0
  1552  00000E                     leeHorariosMemoria@i:
  1553                           	opt callstack 0
  1554  00000E                     atoi@neg:
  1555                           	opt callstack 0
  1556                           
  1557                           ; 2 bytes @ 0xD
  1558  00000E                     	ds	1
  1559  00000F                     ?___fldiv:
  1560                           	opt callstack 0
  1561  00000F                     escribeHorariosMemoria@contMemoria:
  1562                           	opt callstack 0
  1563  00000F                     fputs@i:
  1564                           	opt callstack 0
  1565  00000F                     ___fldiv@b:
  1566                           	opt callstack 0
  1567  00000F                     stoa@nuls:
  1568                           	opt callstack 0
  1569                           
  1570                           ; 7 bytes @ 0xE
  1571  00000F                     	ds	1
  1572  000010                     _atoi$1286:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 2 bytes @ 0xF
  1576  000010                     	ds	1
  1577  000011                     ??_getValue:
  1578  000011                     ?_pad:
  1579                           	opt callstack 0
  1580  000011                     ___aodiv@counter:
  1581                           	opt callstack 0
  1582  000011                     ___aomod@counter:
  1583                           	opt callstack 0
  1584  000011                     escribeHorariosMemoria@i:
  1585                           	opt callstack 0
  1586  000011                     pad@fp:
  1587                           	opt callstack 0
  1588  000011                     ___aldiv@divisor:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 4 bytes @ 0x10
  1592  000011                     	ds	1
  1593  000012                     ___aodiv@sign:
  1594                           	opt callstack 0
  1595  000012                     ___aomod@sign:
  1596                           	opt callstack 0
  1597  000012                     _atoi$1288:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x11
  1601  000012                     	ds	1
  1602  000013                     ?_abs:
  1603                           	opt callstack 0
  1604  000013                     pad@buf:
  1605                           	opt callstack 0
  1606  000013                     abs@a:
  1607                           	opt callstack 0
  1608  000013                     ___fldiv@a:
  1609                           	opt callstack 0
  1610  000013                     ___aodiv@quotient:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 8 bytes @ 0x12
  1614  000013                     	ds	1
  1615  000014                     _atoi$1287:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 1 bytes @ 0x13
  1619  000014                     	ds	1
  1620  000015                     ??_abs:
  1621  000015                     getValue@datoIncorrecto:
  1622                           	opt callstack 0
  1623  000015                     ___aldiv@counter:
  1624                           	opt callstack 0
  1625  000015                     pad@p:
  1626                           	opt callstack 0
  1627  000015                     atoi@n:
  1628                           	opt callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x14
  1631  000015                     	ds	1
  1632  000016                     ___aldiv@sign:
  1633                           	opt callstack 0
  1634  000016                     getValue@i:
  1635                           	opt callstack 0
  1636  000016                     stoa@i:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x15
  1640  000016                     	ds	1
  1641  000017                     ??___fldiv:
  1642  000017                     ??_pad:
  1643  000017                     ___aldiv@quotient:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 4 bytes @ 0x16
  1647  000017                     	ds	1
  1648  000018                     getValue@i_697:
  1649                           	opt callstack 0
  1650  000018                     pad@i:
  1651                           	opt callstack 0
  1652  000018                     stoa@w:
  1653                           	opt callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x17
  1656  000018                     	ds	2
  1657  00001A                     getValue@i_698:
  1658                           	opt callstack 0
  1659  00001A                     pad@w:
  1660                           	opt callstack 0
  1661  00001A                     stoa@cp:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x19
  1665  00001A                     	ds	1
  1666  00001B                     ?_map:
  1667                           	opt callstack 0
  1668  00001B                     UART_init@BAUD:
  1669                           	opt callstack 0
  1670  00001B                     map@x:
  1671                           	opt callstack 0
  1672  00001B                     ___fldiv@rem:
  1673                           	opt callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x1A
  1676  00001B                     	ds	1
  1677  00001C                     ?_dtoa:
  1678                           	opt callstack 0
  1679  00001C                     getValue@i_699:
  1680                           	opt callstack 0
  1681  00001C                     dtoa@fp:
  1682                           	opt callstack 0
  1683  00001C                     stoa@p:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x1B
  1687  00001C                     	ds	2
  1688  00001E                     stoa@l:
  1689                           	opt callstack 0
  1690  00001E                     getValue@dato:
  1691                           	opt callstack 0
  1692  00001E                     dtoa@d:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 8 bytes @ 0x1D
  1696  00001E                     	ds	1
  1697  00001F                     ___fldiv@sign:
  1698                           	opt callstack 0
  1699  00001F                     map@in_min:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 4 bytes @ 0x1E
  1703  00001F                     	ds	1
  1704  000020                     ___fldiv@new_exp:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x1F
  1708  000020                     	ds	2
  1709  000022                     getValue@Rx:
  1710                           	opt callstack 0
  1711  000022                     ___fldiv@grs:
  1712                           	opt callstack 0
  1713                           
  1714                           ; 4 bytes @ 0x21
  1715  000022                     	ds	1
  1716  000023                     ??_asignarHorarios:
  1717  000023                     ??_setTiempoIluminar:
  1718  000023                     setRtc@direccion:
  1719                           	opt callstack 0
  1720  000023                     map@in_max:
  1721                           	opt callstack 0
  1722  000023                     asignarSetPoint@setPointTemp:
  1723                           	opt callstack 0
  1724  000023                     _UART_init$1629:
  1725                           	opt callstack 0
  1726                           
  1727                           ; 4 bytes @ 0x22
  1728  000023                     	ds	1
  1729  000024                     setRtc@seteado:
  1730                           	opt callstack 0
  1731  000024                     setTiempoIluminar@tiempoIluminar:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 1 bytes @ 0x23
  1735  000024                     	ds	1
  1736  000025                     setRtc@datoRtc:
  1737                           	opt callstack 0
  1738  000025                     setTiempoIluminar@hora:
  1739                           	opt callstack 0
  1740  000025                     asignarHorarios@i:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x24
  1744  000025                     	ds	1
  1745  000026                     ??_dtoa:
  1746  000026                     setRtc@dato:
  1747                           	opt callstack 0
  1748  000026                     ___fldiv@bexp:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x25
  1752  000026                     	ds	1
  1753  000027                     asignarHorarios@diaIluminar:
  1754                           	opt callstack 0
  1755  000027                     ___fldiv@aexp:
  1756                           	opt callstack 0
  1757  000027                     map@out_min:
  1758                           	opt callstack 0
  1759                           
  1760                           ; 4 bytes @ 0x26
  1761  000027                     	ds	1
  1762  000028                     ?___flmul:
  1763                           	opt callstack 0
  1764  000028                     asignarHorarios@hora:
  1765                           	opt callstack 0
  1766  000028                     ___flmul@b:
  1767                           	opt callstack 0
  1768                           
  1769                           ; 4 bytes @ 0x27
  1770  000028                     	ds	1
  1771  000029                     asignarHorarios@Rx:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 1 bytes @ 0x28
  1775  000029                     	ds	2
  1776  00002B                     map@out_max:
  1777                           	opt callstack 0
  1778                           
  1779                           ; 4 bytes @ 0x2A
  1780  00002B                     	ds	1
  1781  00002C                     ___flmul@a:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 4 bytes @ 0x2B
  1785  00002C                     	ds	2
  1786  00002E                     _dtoa$801:
  1787                           	opt callstack 0
  1788                           
  1789                           ; 2 bytes @ 0x2D
  1790  00002E                     	ds	1
  1791  00002F                     
  1792                           ; 1 bytes @ 0x2E
  1793  00002F                     	ds	1
  1794  000030                     ??___flmul:
  1795  000030                     dtoa@p:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x2F
  1799  000030                     	ds	2
  1800  000032                     dtoa@w:
  1801                           	opt callstack 0
  1802                           
  1803                           ; 2 bytes @ 0x31
  1804  000032                     	ds	2
  1805  000034                     ___flmul@sign:
  1806                           	opt callstack 0
  1807  000034                     dtoa@s:
  1808                           	opt callstack 0
  1809                           
  1810                           ; 2 bytes @ 0x33
  1811  000034                     	ds	1
  1812  000035                     ___flmul@grs:
  1813                           	opt callstack 0
  1814                           
  1815                           ; 4 bytes @ 0x34
  1816  000035                     	ds	1
  1817  000036                     dtoa@n:
  1818                           	opt callstack 0
  1819                           
  1820                           ; 8 bytes @ 0x35
  1821  000036                     	ds	3
  1822  000039                     ___flmul@aexp:
  1823                           	opt callstack 0
  1824                           
  1825                           ; 1 bytes @ 0x38
  1826  000039                     	ds	1
  1827  00003A                     ___flmul@bexp:
  1828                           	opt callstack 0
  1829                           
  1830                           ; 1 bytes @ 0x39
  1831  00003A                     	ds	1
  1832  00003B                     ___flmul@prod:
  1833                           	opt callstack 0
  1834                           
  1835                           ; 4 bytes @ 0x3A
  1836  00003B                     	ds	3
  1837  00003E                     dtoa@i:
  1838                           	opt callstack 0
  1839                           
  1840                           ; 2 bytes @ 0x3D
  1841  00003E                     	ds	1
  1842  00003F                     ___flmul@temp:
  1843                           	opt callstack 0
  1844                           
  1845                           ; 2 bytes @ 0x3E
  1846  00003F                     	ds	1
  1847  000040                     ?_vfpfcnvrt:
  1848                           	opt callstack 0
  1849  000040                     vfpfcnvrt@fp:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 2 bytes @ 0x3F
  1853  000040                     	ds	1
  1854  000041                     ?___fltol:
  1855                           	opt callstack 0
  1856  000041                     ___fltol@f1:
  1857                           	opt callstack 0
  1858                           
  1859                           ; 4 bytes @ 0x40
  1860  000041                     	ds	1
  1861  000042                     vfpfcnvrt@fmt:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 2 bytes @ 0x41
  1865  000042                     	ds	2
  1866  000044                     vfpfcnvrt@ap:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 2 bytes @ 0x43
  1870  000044                     	ds	1
  1871  000045                     ??___fltol:
  1872                           
  1873                           ; 1 bytes @ 0x44
  1874  000045                     	ds	1
  1875  000046                     ??_vfpfcnvrt:
  1876                           
  1877                           ; 1 bytes @ 0x45
  1878  000046                     	ds	3
  1879  000049                     ___fltol@sign1:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x48
  1883  000049                     	ds	1
  1884  00004A                     ___fltol@exp1:
  1885                           	opt callstack 0
  1886  00004A                     vfpfcnvrt@ll:
  1887                           	opt callstack 0
  1888                           
  1889                           ; 8 bytes @ 0x49
  1890  00004A                     	ds	1
  1891  00004B                     ?_bh1750_leer:
  1892                           	opt callstack 0
  1893  00004B                     pwmDuty@cicloTrabajo:
  1894                           	opt callstack 0
  1895                           
  1896                           ; 2 bytes @ 0x4A
  1897  00004B                     	ds	2
  1898  00004D                     pwmDuty@channel:
  1899                           	opt callstack 0
  1900                           
  1901                           ; 1 bytes @ 0x4C
  1902  00004D                     	ds	1
  1903  00004E                     ??_pwmDuty:
  1904                           
  1905                           ; 1 bytes @ 0x4D
  1906  00004E                     	ds	1
  1907  00004F                     ??_bh1750_leer:
  1908                           
  1909                           ; 1 bytes @ 0x4E
  1910  00004F                     	ds	2
  1911  000051                     bh1750_leer@lb:
  1912                           	opt callstack 0
  1913                           
  1914                           ; 1 bytes @ 0x50
  1915  000051                     	ds	1
  1916  000052                     bh1750_leer@hb:
  1917                           	opt callstack 0
  1918  000052                     vfpfcnvrt@cp:
  1919                           	opt callstack 0
  1920                           
  1921                           ; 2 bytes @ 0x51
  1922  000052                     	ds	1
  1923  000053                     bh1750_leer@valor:
  1924                           	opt callstack 0
  1925  000053                     pwmDuty@duty:
  1926                           	opt callstack 0
  1927                           
  1928                           ; 4 bytes @ 0x52
  1929  000053                     	ds	1
  1930  000054                     vfpfcnvrt@done:
  1931                           	opt callstack 0
  1932                           
  1933                           ; 2 bytes @ 0x53
  1934  000054                     	ds	2
  1935  000056                     _vfpfcnvrt$827:
  1936                           	opt callstack 0
  1937                           
  1938                           ; 2 bytes @ 0x55
  1939  000056                     	ds	1
  1940  000057                     ??_inicializarObjetos:
  1941  000057                     ??_sistemaIluminado:
  1942  000057                     ?_dameValorLux:
  1943                           	opt callstack 0
  1944                           
  1945                           ; 4 bytes @ 0x56
  1946  000057                     	ds	1
  1947  000058                     _vfpfcnvrt$828:
  1948                           	opt callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x57
  1951  000058                     	ds	1
  1952  000059                     inicializarObjetos@j:
  1953                           	opt callstack 0
  1954                           
  1955                           ; 2 bytes @ 0x58
  1956  000059                     	ds	1
  1957  00005A                     vfprintf@cfmt:
  1958                           	opt callstack 0
  1959                           
  1960                           ; 2 bytes @ 0x59
  1961  00005A                     	ds	1
  1962  00005B                     ??_dameValorLux:
  1963  00005B                     inicializarObjetos@i_592:
  1964                           	opt callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x5A
  1967  00005B                     	ds	1
  1968  00005C                     ??_dameDatosSistema:
  1969  00005C                     
  1970                           ; 1 bytes @ 0x5B
  1971  00005C                     	ds	1
  1972  00005D                     inicializarObjetos@i:
  1973                           	opt callstack 0
  1974                           
  1975                           ; 2 bytes @ 0x5C
  1976  00005D                     	ds	1
  1977  00005E                     sistemaPrincipal@opcion:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 1 bytes @ 0x5D
  1981  00005E                     	ds	1
  1982  00005F                     
  1983                           ; 1 bytes @ 0x5E
  1984 ;;
  1985 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1986 ;;
  1987 ;; *************** function _main *****************
  1988 ;; Defined at:
  1989 ;;		line 42 in file "main.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2003 ;;      Params:         0       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels required when called:   11
  2009 ;; This function calls:
  2010 ;;		_UART_init
  2011 ;;		_UART_printf
  2012 ;;		_bh1750_iniciar
  2013 ;;		_configPwm
  2014 ;;		_i2c_iniciar
  2015 ;;		_inicializarObjetos
  2016 ;;		_sistemaIluminado
  2017 ;;		_sistemaPrincipal
  2018 ;; This function is called by:
  2019 ;;		Startup code after reset
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text0
  2024  002F18                     __ptext0:
  2025                           	opt callstack 0
  2026  002F18                     _main:
  2027                           	opt callstack 20
  2028  002F18                     
  2029                           ;main.c: 44:     UART_init(9600);
  2030  002F18  0E80               	movlw	128
  2031  002F1A  6E1B               	movwf	UART_init@BAUD^0,c
  2032  002F1C  0E25               	movlw	37
  2033  002F1E  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2034  002F20  0E00               	movlw	0
  2035  002F22  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2036  002F24  0E00               	movlw	0
  2037  002F26  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2038  002F28  ECCC  F018         	call	_UART_init	;wreg free
  2039  002F2C                     
  2040                           ;main.c: 45:     i2c_iniciar();
  2041  002F2C  ECB8  F01C         	call	_i2c_iniciar	;wreg free
  2042  002F30                     
  2043                           ;main.c: 46:     bh1750_iniciar();
  2044  002F30  ECC3  F01C         	call	_bh1750_iniciar	;wreg free
  2045  002F34                     
  2046                           ;main.c: 47:     configPwm(1);
  2047  002F34  0E01               	movlw	1
  2048  002F36  EC9B  F01A         	call	_configPwm
  2049  002F3A                     
  2050                           ;main.c: 48:     inicializarObjetos();
  2051  002F3A  EC52  F010         	call	_inicializarObjetos	;wreg free
  2052  002F3E                     
  2053                           ;main.c: 52:     INTCONbits.GIE = 1;
  2054  002F3E  8EF2               	bsf	242,7,c	;volatile
  2055  002F40                     
  2056                           ;main.c: 53:     INTCONbits.PEIE = 1;
  2057  002F40  8CF2               	bsf	242,6,c	;volatile
  2058  002F42                     
  2059                           ;main.c: 54:     INTCONbits.TMR0IE = 1;
  2060  002F42  8AF2               	bsf	242,5,c	;volatile
  2061  002F44                     
  2062                           ;main.c: 56:     PIE1bits.RCIE = 1;
  2063  002F44  8A9D               	bsf	157,5,c	;volatile
  2064  002F46                     
  2065                           ;main.c: 58:     T0CON = 0b00000111;
  2066  002F46  0E07               	movlw	7
  2067  002F48  6ED5               	movwf	213,c	;volatile
  2068  002F4A                     
  2069                           ;main.c: 60:     TMR0 = VALOR_TIMER0;
  2070  002F4A  C0E2  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2071  002F4E  C0E3  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2072  002F52                     
  2073                           ;main.c: 62:     INTCONbits.TMR0IF = 1;
  2074  002F52  84F2               	bsf	242,2,c	;volatile
  2075  002F54                     
  2076                           ;main.c: 65:     T0CONbits.TMR0ON = 1;
  2077  002F54  8ED5               	bsf	213,7,c	;volatile
  2078  002F56                     
  2079                           ;main.c: 69:     UART_printf("\r\nSistema Iniciado\n\r");
  2080  002F56  0E97               	movlw	low STR_30
  2081  002F58  6E02               	movwf	UART_printf@cadena^0,c
  2082  002F5A  0E7F               	movlw	high STR_30
  2083  002F5C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2084  002F5E  EC9B  F019         	call	_UART_printf	;wreg free
  2085  002F62                     l5243:
  2086                           
  2087                           ;main.c: 73:         if (datoRecibido) {
  2088  002F62  0100               	movlb	0	; () banked
  2089  002F64  51CD               	movf	_datoRecibido& (0+255),w,b
  2090  002F66  B4D8               	btfsc	status,2,c
  2091  002F68  EFB8  F017         	goto	u4531
  2092  002F6C  EFBA  F017         	goto	u4530
  2093  002F70                     u4531:
  2094  002F70  EFC1  F017         	goto	l5251
  2095  002F74                     u4530:
  2096  002F74                     
  2097                           ; BSR set to: 0
  2098                           ;main.c: 75:             datoRecibido = 0;
  2099  002F74  0E00               	movlw	0
  2100  002F76  6FCD               	movwf	_datoRecibido& (0+255),b
  2101  002F78                     
  2102                           ; BSR set to: 0
  2103                           ;main.c: 76:             byteUart -= 48;
  2104  002F78  0E30               	movlw	48
  2105  002F7A  5FD5               	subwf	_byteUart& (0+255),f,b
  2106  002F7C                     
  2107                           ; BSR set to: 0
  2108                           ;main.c: 77:             sistemaPrincipal(byteUart);
  2109  002F7C  51D5               	movf	_byteUart& (0+255),w,b
  2110  002F7E  EC3A  F017         	call	_sistemaPrincipal
  2111  002F82                     l5251:
  2112                           
  2113                           ;main.c: 81:         if (overflowTimer) {
  2114  002F82  0100               	movlb	0	; () banked
  2115  002F84  51CC               	movf	_overflowTimer& (0+255),w,b
  2116  002F86  B4D8               	btfsc	status,2,c
  2117  002F88  EFC8  F017         	goto	u4541
  2118  002F8C  EFCA  F017         	goto	u4540
  2119  002F90                     u4541:
  2120  002F90  EFB1  F017         	goto	l5243
  2121  002F94                     u4540:
  2122  002F94                     
  2123                           ; BSR set to: 0
  2124                           ;main.c: 83:             esperandoDatos = 0;
  2125  002F94  0E00               	movlw	0
  2126  002F96  6FD3               	movwf	_esperandoDatos& (0+255),b
  2127                           
  2128                           ;main.c: 84:             overflowTimer = 0;
  2129  002F98  0E00               	movlw	0
  2130  002F9A  6FCC               	movwf	_overflowTimer& (0+255),b
  2131  002F9C                     
  2132                           ; BSR set to: 0
  2133                           ;main.c: 85:             sistemaIluminado();
  2134  002F9C  ECC5  F013         	call	_sistemaIluminado	;wreg free
  2135  002FA0  EFB1  F017         	goto	l5243
  2136  002FA4  EF07  F000         	goto	start
  2137  002FA8                     __end_of_main:
  2138                           	opt callstack 0
  2139                           
  2140 ;; *************** function _sistemaPrincipal *****************
  2141 ;; Defined at:
  2142 ;;		line 364 in file "./AUTOMATIZADOR.h"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  opcion          1    wreg     unsigned char 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  opcion          1   93[COMRAM] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0
  2157 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2158 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2159 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2160 ;;Total ram usage:        3 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:   10
  2163 ;; This function calls:
  2164 ;;		_asignarHorarios
  2165 ;;		_asignarSetPoint
  2166 ;;		_dameDatosSistema
  2167 ;;		_fijaDiaRtc
  2168 ;;		_fijaHoraRtc
  2169 ;;		_leeHorariosMemoria
  2170 ;;		_mostrarDatosSensores
  2171 ;;		_setTiempoIluminar
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text1
  2178  002E74                     __ptext1:
  2179                           	opt callstack 0
  2180  002E74                     _sistemaPrincipal:
  2181                           	opt callstack 20
  2182                           
  2183                           ;incstack = 0
  2184                           ;sistemaPrincipal@opcion stored from wreg
  2185  002E74  6E5E               	movwf	sistemaPrincipal@opcion^0,c
  2186  002E76                     
  2187                           ;./AUTOMATIZADOR.h: 366:     PIE1bits.RCIE = 0;
  2188  002E76  9A9D               	bcf	157,5,c	;volatile
  2189                           
  2190                           ;./AUTOMATIZADOR.h: 368:     switch (opcion) {
  2191  002E78  EF5C  F017         	goto	l5101
  2192  002E7C                     l5085:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;./AUTOMATIZADOR.h: 371:             fijaHoraRtc();
  2196  002E7C  EC72  F01B         	call	_fijaHoraRtc	;wreg free
  2197                           
  2198                           ;./AUTOMATIZADOR.h: 372:             break;
  2199  002E80  EF8A  F017         	goto	l332
  2200  002E84                     l5087:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;./AUTOMATIZADOR.h: 375:             asignarHorarios();
  2204  002E84  EC23  F013         	call	_asignarHorarios	;wreg free
  2205                           
  2206                           ;./AUTOMATIZADOR.h: 376:             break;
  2207  002E88  EF8A  F017         	goto	l332
  2208  002E8C                     l5089:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;./AUTOMATIZADOR.h: 379:             setTiempoIluminar();
  2212  002E8C  EC16  F018         	call	_setTiempoIluminar	;wreg free
  2213                           
  2214                           ;./AUTOMATIZADOR.h: 380:             break;
  2215  002E90  EF8A  F017         	goto	l332
  2216  002E94                     l5091:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;./AUTOMATIZADOR.h: 383:             dameDatosSistema();
  2220  002E94  EC4F  F009         	call	_dameDatosSistema	;wreg free
  2221                           
  2222                           ;./AUTOMATIZADOR.h: 384:             break;
  2223  002E98  EF8A  F017         	goto	l332
  2224  002E9C                     l5093:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;./AUTOMATIZADOR.h: 387:             mostrarDatosSensores();
  2228  002E9C  EC73  F01A         	call	_mostrarDatosSensores	;wreg free
  2229                           
  2230                           ;./AUTOMATIZADOR.h: 388:             break;
  2231  002EA0  EF8A  F017         	goto	l332
  2232  002EA4                     l5095:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;./AUTOMATIZADOR.h: 391:             asignarSetPoint();
  2236  002EA4  ECEA  F01A         	call	_asignarSetPoint	;wreg free
  2237  002EA8                     l338:
  2238                           
  2239                           ;./AUTOMATIZADOR.h: 394:             fijaDiaRtc();
  2240  002EA8  EC76  F01C         	call	_fijaDiaRtc	;wreg free
  2241                           
  2242                           ;./AUTOMATIZADOR.h: 395:             break;
  2243  002EAC  EF8A  F017         	goto	l332
  2244  002EB0                     l5097:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;./AUTOMATIZADOR.h: 398:             leeHorariosMemoria();
  2248  002EB0  EC0F  F011         	call	_leeHorariosMemoria	;wreg free
  2249                           
  2250                           ;./AUTOMATIZADOR.h: 399:             break;
  2251  002EB4  EF8A  F017         	goto	l332
  2252  002EB8                     l5101:
  2253  002EB8  505E               	movf	sistemaPrincipal@opcion^0,w,c
  2254  002EBA  0100               	movlb	0	; () banked
  2255  002EBC  6FA4               	movwf	??_sistemaPrincipal& (0+255),b
  2256  002EBE  6BA5               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  2257                           
  2258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2259                           ; Switch size 1, requested type "simple"
  2260                           ; Number of cases is 1, Range of values is 0 to 0
  2261                           ; switch strategies available:
  2262                           ; Name         Instructions Cycles
  2263                           ; simple_byte            4     3 (average)
  2264                           ;	Chosen strategy is simple_byte
  2265  002EC0  51A5               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  2266  002EC2  0A00               	xorlw	0	; case 0
  2267  002EC4  B4D8               	btfsc	status,2,c
  2268  002EC6  EF67  F017         	goto	l5507
  2269  002ECA  EF8A  F017         	goto	l332
  2270  002ECE                     l5507:
  2271                           
  2272                           ; BSR set to: 0
  2273                           ; Switch size 1, requested type "simple"
  2274                           ; Number of cases is 8, Range of values is 1 to 8
  2275                           ; switch strategies available:
  2276                           ; Name         Instructions Cycles
  2277                           ; simple_byte           25    13 (average)
  2278                           ;	Chosen strategy is simple_byte
  2279  002ECE  51A4               	movf	??_sistemaPrincipal& (0+255),w,b
  2280  002ED0  0A01               	xorlw	1	; case 1
  2281  002ED2  B4D8               	btfsc	status,2,c
  2282  002ED4  EF3E  F017         	goto	l5085
  2283  002ED8  0A03               	xorlw	3	; case 2
  2284  002EDA  B4D8               	btfsc	status,2,c
  2285  002EDC  EF42  F017         	goto	l5087
  2286  002EE0  0A01               	xorlw	1	; case 3
  2287  002EE2  B4D8               	btfsc	status,2,c
  2288  002EE4  EF46  F017         	goto	l5089
  2289  002EE8  0A07               	xorlw	7	; case 4
  2290  002EEA  B4D8               	btfsc	status,2,c
  2291  002EEC  EF4A  F017         	goto	l5091
  2292  002EF0  0A01               	xorlw	1	; case 5
  2293  002EF2  B4D8               	btfsc	status,2,c
  2294  002EF4  EF4E  F017         	goto	l5093
  2295  002EF8  0A03               	xorlw	3	; case 6
  2296  002EFA  B4D8               	btfsc	status,2,c
  2297  002EFC  EF52  F017         	goto	l5095
  2298  002F00  0A01               	xorlw	1	; case 7
  2299  002F02  B4D8               	btfsc	status,2,c
  2300  002F04  EF54  F017         	goto	l338
  2301  002F08  0A0F               	xorlw	15	; case 8
  2302  002F0A  B4D8               	btfsc	status,2,c
  2303  002F0C  EF58  F017         	goto	l5097
  2304  002F10  EF8A  F017         	goto	l332
  2305  002F14                     l332:
  2306                           
  2307                           ;./AUTOMATIZADOR.h: 408:     PIE1bits.RCIE = 1;
  2308  002F14  8A9D               	bsf	157,5,c	;volatile
  2309  002F16  0012               	return		;funcret
  2310  002F18                     __end_of_sistemaPrincipal:
  2311                           	opt callstack 0
  2312                           
  2313 ;; *************** function _setTiempoIluminar *****************
  2314 ;; Defined at:
  2315 ;;		line 316 in file "./AUTOMATIZADOR.h"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;		None
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  hora            1   36[COMRAM] unsigned char 
  2320 ;;  tiempoIlumin    1   35[COMRAM] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2330 ;;      Params:         0       0       0       0       0       0       0       0       0
  2331 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2332 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2333 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2334 ;;Total ram usage:        3 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    5
  2337 ;; This function calls:
  2338 ;;		_UART_write
  2339 ;;		_escribeHorariosMemoria
  2340 ;;		_getValue
  2341 ;; This function is called by:
  2342 ;;		_sistemaPrincipal
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text2
  2347  00302C                     __ptext2:
  2348                           	opt callstack 0
  2349  00302C                     _setTiempoIluminar:
  2350                           	opt callstack 24
  2351  00302C                     
  2352                           ;./AUTOMATIZADOR.h: 318:     T_UBYTE hora;;./AUTOMATIZADOR.h: 319:     T_UBYTE tiempoIlu
      +                          minar;;./AUTOMATIZADOR.h: 324:     hora = getValue(2);
  2353  00302C  0E00               	movlw	0
  2354  00302E  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  2355  003030  0E02               	movlw	2
  2356  003032  6E0D               	movwf	getValue@numCharacters^0,c
  2357  003034  EC09  F000         	call	_getValue	;wreg free
  2358  003038  500D               	movf	?_getValue^0,w,c
  2359  00303A  6E25               	movwf	setTiempoIluminar@hora^0,c
  2360  00303C                     
  2361                           ;./AUTOMATIZADOR.h: 326:     if (hora != '@') {
  2362  00303C  0E40               	movlw	64
  2363  00303E  1825               	xorwf	setTiempoIluminar@hora^0,w,c
  2364  003040  B4D8               	btfsc	status,2,c
  2365  003042  EF25  F018         	goto	u4321
  2366  003046  EF27  F018         	goto	u4320
  2367  00304A                     u4321:
  2368  00304A  EF55  F018         	goto	l324
  2369  00304E                     u4320:
  2370  00304E                     
  2371                           ;./AUTOMATIZADOR.h: 329:         tiempoIluminar = getValue(2);
  2372  00304E  0E00               	movlw	0
  2373  003050  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  2374  003052  0E02               	movlw	2
  2375  003054  6E0D               	movwf	getValue@numCharacters^0,c
  2376  003056  EC09  F000         	call	_getValue	;wreg free
  2377  00305A  500D               	movf	?_getValue^0,w,c
  2378  00305C  6E24               	movwf	setTiempoIluminar@tiempoIluminar^0,c
  2379  00305E                     
  2380                           ;./AUTOMATIZADOR.h: 331:         if (tiempoIluminar != '@') {
  2381  00305E  0E40               	movlw	64
  2382  003060  1824               	xorwf	setTiempoIluminar@tiempoIluminar^0,w,c
  2383  003062  B4D8               	btfsc	status,2,c
  2384  003064  EF36  F018         	goto	u4331
  2385  003068  EF38  F018         	goto	u4330
  2386  00306C                     u4331:
  2387  00306C  EF55  F018         	goto	l324
  2388  003070                     u4330:
  2389  003070                     
  2390                           ;./AUTOMATIZADOR.h: 337:             horarios[hora].tiempoIluminar = tiempoIluminar;
  2391  003070  5025               	movf	setTiempoIluminar@hora^0,w,c
  2392  003072  0D0C               	mullw	12
  2393  003074  0E5D               	movlw	low (_horarios+11)
  2394  003076  24F3               	addwf	243,w,c
  2395  003078  6ED9               	movwf	fsr2l,c
  2396  00307A  0E01               	movlw	high (_horarios+11)
  2397  00307C  20F4               	addwfc	prodh,w,c
  2398  00307E  6EDA               	movwf	fsr2h,c
  2399  003080  C024  FFDF         	movff	setTiempoIluminar@tiempoIluminar,indf2
  2400                           
  2401                           ;./AUTOMATIZADOR.h: 338:             minutosIluminar = horarios[hora].tiempoIluminar;
  2402  003084  5025               	movf	setTiempoIluminar@hora^0,w,c
  2403  003086  0D0C               	mullw	12
  2404  003088  0E5D               	movlw	low (_horarios+11)
  2405  00308A  24F3               	addwf	243,w,c
  2406  00308C  6ED9               	movwf	fsr2l,c
  2407  00308E  0E01               	movlw	high (_horarios+11)
  2408  003090  20F4               	addwfc	prodh,w,c
  2409  003092  6EDA               	movwf	fsr2h,c
  2410  003094  50DF               	movf	indf2,w,c
  2411  003096  6E23               	movwf	??_setTiempoIluminar^0,c
  2412  003098  5023               	movf	??_setTiempoIluminar^0,w,c
  2413  00309A  0100               	movlb	0	; () banked
  2414  00309C  6FC4               	movwf	_minutosIluminar& (0+255),b
  2415  00309E  6BC5               	clrf	(_minutosIluminar+1)& (0+255),b
  2416  0030A0                     
  2417                           ; BSR set to: 0
  2418                           ;./AUTOMATIZADOR.h: 340:             escribeHorariosMemoria();
  2419  0030A0  EC78  F012         	call	_escribeHorariosMemoria	;wreg free
  2420  0030A4                     
  2421                           ;./AUTOMATIZADOR.h: 342:             UART_write('E');
  2422  0030A4  0E45               	movlw	69
  2423  0030A6  ECAD  F01C         	call	_UART_write
  2424  0030AA                     l324:
  2425  0030AA  0012               	return		;funcret
  2426  0030AC                     __end_of_setTiempoIluminar:
  2427                           	opt callstack 0
  2428                           
  2429 ;; *************** function _mostrarDatosSensores *****************
  2430 ;; Defined at:
  2431 ;;		line 533 in file "./AUTOMATIZADOR.h"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    9
  2452 ;; This function calls:
  2453 ;;		_UART_printf
  2454 ;;		_UART_write
  2455 ;;		_dameValorLux
  2456 ;;		_sprintf
  2457 ;; This function is called by:
  2458 ;;		_sistemaPrincipal
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text3
  2463  0034E6                     __ptext3:
  2464                           	opt callstack 0
  2465  0034E6                     _mostrarDatosSensores:
  2466                           	opt callstack 20
  2467  0034E6                     
  2468                           ;./AUTOMATIZADOR.h: 535:     luzMedida = dameValorLux(0x10);
  2469  0034E6  0E10               	movlw	16
  2470  0034E8  ECC3  F01A         	call	_dameValorLux
  2471  0034EC  C057  F0B6         	movff	?_dameValorLux,_luzMedida
  2472  0034F0  C058  F0B7         	movff	?_dameValorLux+1,_luzMedida+1
  2473  0034F4  C059  F0B8         	movff	?_dameValorLux+2,_luzMedida+2
  2474  0034F8  C05A  F0B9         	movff	?_dameValorLux+3,_luzMedida+3
  2475  0034FC                     
  2476                           ;./AUTOMATIZADOR.h: 536:     sprintf(buffer, "\rLuz medida: %d luxs\n\r", luzMedida);
  2477  0034FC  0E00               	movlw	low _buffer
  2478  0034FE  0100               	movlb	0	; () banked
  2479  003500  6F66               	movwf	sprintf@s& (0+255),b
  2480  003502  0E01               	movlw	high _buffer
  2481  003504  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2482  003506  0E80               	movlw	low STR_26
  2483  003508  6F68               	movwf	sprintf@fmt& (0+255),b
  2484  00350A  0E7F               	movlw	high STR_26
  2485  00350C  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2486  00350E  C0B6  F06A         	movff	_luzMedida,?_sprintf+4
  2487  003512  C0B7  F06B         	movff	_luzMedida+1,?_sprintf+5
  2488  003516  C0B8  F06C         	movff	_luzMedida+2,?_sprintf+6
  2489  00351A  C0B9  F06D         	movff	_luzMedida+3,?_sprintf+7
  2490  00351E  EC21  F01A         	call	_sprintf	;wreg free
  2491  003522                     
  2492                           ;./AUTOMATIZADOR.h: 537:     UART_printf(buffer);
  2493  003522  0E00               	movlw	low _buffer
  2494  003524  6E02               	movwf	UART_printf@cadena^0,c
  2495  003526  0E01               	movlw	high _buffer
  2496  003528  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2497  00352A  EC9B  F019         	call	_UART_printf	;wreg free
  2498  00352E                     
  2499                           ;./AUTOMATIZADOR.h: 539:     UART_write('&');
  2500  00352E  0E26               	movlw	38
  2501  003530  ECAD  F01C         	call	_UART_write
  2502  003534  0012               	return		;funcret
  2503  003536                     __end_of_mostrarDatosSensores:
  2504                           	opt callstack 0
  2505                           
  2506 ;; *************** function _dameValorLux *****************
  2507 ;; Defined at:
  2508 ;;		line 56 in file "./bh1750.h"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  modo            1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  modo            1    0[BANK0 ] unsigned char 
  2513 ;;  valorLux        4    1[BANK0 ] unsigned long 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  4   86[COMRAM] unsigned long 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2523 ;;      Params:         4       0       0       0       0       0       0       0       0
  2524 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2526 ;;      Totals:         5       5       0       0       0       0       0       0       0
  2527 ;;Total ram usage:       10 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    4
  2530 ;; This function calls:
  2531 ;;		_bh1750_escribir
  2532 ;;		_bh1750_leer
  2533 ;; This function is called by:
  2534 ;;		_mostrarDatosSensores
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text4
  2539  003586                     __ptext4:
  2540                           	opt callstack 0
  2541  003586                     _dameValorLux:
  2542                           	opt callstack 24
  2543                           
  2544                           ;incstack = 0
  2545                           ;dameValorLux@modo stored from wreg
  2546  003586  0100               	movlb	0	; () banked
  2547  003588  6F60               	movwf	dameValorLux@modo& (0+255),b
  2548  00358A                     
  2549                           ;./bh1750.h: 58:     bh1750_escribir(0x01);
  2550  00358A  0E01               	movlw	1
  2551  00358C  ECA1  F01C         	call	_bh1750_escribir
  2552  003590                     
  2553                           ;./bh1750.h: 59:     bh1750_escribir(modo);
  2554  003590  0100               	movlb	0	; () banked
  2555  003592  5160               	movf	dameValorLux@modo& (0+255),w,b
  2556  003594  ECA1  F01C         	call	_bh1750_escribir
  2557  003598                     
  2558                           ;./bh1750.h: 60:     valorLux = bh1750_leer();
  2559  003598  EC84  F016         	call	_bh1750_leer	;wreg free
  2560  00359C  C04B  F061         	movff	?_bh1750_leer,dameValorLux@valorLux
  2561  0035A0  C04C  F062         	movff	?_bh1750_leer+1,dameValorLux@valorLux+1
  2562  0035A4  C04D  F063         	movff	?_bh1750_leer+2,dameValorLux@valorLux+2
  2563  0035A8  C04E  F064         	movff	?_bh1750_leer+3,dameValorLux@valorLux+3
  2564  0035AC                     
  2565                           ;./bh1750.h: 61:     _delay((unsigned long)((180)*(4000000/4000.0)));
  2566  0035AC  0EEA               	movlw	234
  2567  0035AE  6E5B               	movwf	??_dameValorLux^0,c
  2568  0035B0  0EC3               	movlw	195
  2569  0035B2                     u4557:
  2570  0035B2  2EE8               	decfsz	wreg,f,c
  2571  0035B4  D7FE               	bra	u4557
  2572  0035B6  2E5B               	decfsz	??_dameValorLux^0,f,c
  2573  0035B8  D7FC               	bra	u4557
  2574  0035BA  F000               	nop	
  2575  0035BC                     
  2576                           ;./bh1750.h: 62:     bh1750_escribir(0x00);
  2577  0035BC  0E00               	movlw	0
  2578  0035BE  ECA1  F01C         	call	_bh1750_escribir
  2579  0035C2                     
  2580                           ;./bh1750.h: 64:     return valorLux;
  2581  0035C2  C061  F057         	movff	dameValorLux@valorLux,?_dameValorLux
  2582  0035C6  C062  F058         	movff	dameValorLux@valorLux+1,?_dameValorLux+1
  2583  0035CA  C063  F059         	movff	dameValorLux@valorLux+2,?_dameValorLux+2
  2584  0035CE  C064  F05A         	movff	dameValorLux@valorLux+3,?_dameValorLux+3
  2585  0035D2  0012               	return		;funcret
  2586  0035D4                     __end_of_dameValorLux:
  2587                           	opt callstack 0
  2588                           
  2589 ;; *************** function _bh1750_leer *****************
  2590 ;; Defined at:
  2591 ;;		line 39 in file "./bh1750.h"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  valor           4   82[COMRAM] unsigned long 
  2596 ;;  hb              1   81[COMRAM] unsigned char 
  2597 ;;  lb              1   80[COMRAM] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  4   74[COMRAM] unsigned long 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2607 ;;      Params:         4       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2610 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:       12 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    3
  2614 ;; This function calls:
  2615 ;;		___fldiv
  2616 ;;		___fltol
  2617 ;;		___xxtofl
  2618 ;;		_i2c_detener
  2619 ;;		_i2c_envia_dato
  2620 ;;		_i2c_inicia_com
  2621 ;;		_i2c_recibe_datoACK
  2622 ;; This function is called by:
  2623 ;;		_dameValorLux
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text5
  2628  002D08                     __ptext5:
  2629                           	opt callstack 0
  2630  002D08                     _bh1750_leer:
  2631                           	opt callstack 24
  2632  002D08                     
  2633                           ;./bh1750.h: 41:     T_UBYTE lb = 0;
  2634  002D08  0E00               	movlw	0
  2635  002D0A  6E51               	movwf	bh1750_leer@lb^0,c
  2636                           
  2637                           ;./bh1750.h: 42:     T_UBYTE hb = 0;
  2638  002D0C  0E00               	movlw	0
  2639  002D0E  6E52               	movwf	bh1750_leer@hb^0,c
  2640  002D10                     
  2641                           ;./bh1750.h: 44:     i2c_inicia_com();
  2642  002D10  ECE8  F01C         	call	_i2c_inicia_com	;wreg free
  2643  002D14                     
  2644                           ;./bh1750.h: 45:     i2c_envia_dato(0x47);
  2645  002D14  0E47               	movlw	71
  2646  002D16  ECDE  F01C         	call	_i2c_envia_dato
  2647  002D1A                     
  2648                           ;./bh1750.h: 46:     hb = i2c_recibe_datoACK(1);
  2649  002D1A  0E01               	movlw	1
  2650  002D1C  ECFE  F01B         	call	_i2c_recibe_datoACK
  2651  002D20  6E52               	movwf	bh1750_leer@hb^0,c
  2652  002D22                     
  2653                           ;./bh1750.h: 47:     lb = i2c_recibe_datoACK(0);
  2654  002D22  0E00               	movlw	0
  2655  002D24  ECFE  F01B         	call	_i2c_recibe_datoACK
  2656  002D28  6E51               	movwf	bh1750_leer@lb^0,c
  2657  002D2A                     
  2658                           ;./bh1750.h: 48:     i2c_detener();
  2659  002D2A  ECEC  F01C         	call	_i2c_detener	;wreg free
  2660  002D2E                     
  2661                           ;./bh1750.h: 50:     valor = (hb <<8 ) + lb;
  2662  002D2E  5051               	movf	bh1750_leer@lb^0,w,c
  2663  002D30  C052  F04F         	movff	bh1750_leer@hb,??_bh1750_leer
  2664  002D34  6A50               	clrf	(??_bh1750_leer+1)^0,c
  2665  002D36  C04F  F050         	movff	??_bh1750_leer,??_bh1750_leer+1
  2666  002D3A  6A4F               	clrf	??_bh1750_leer^0,c
  2667  002D3C  264F               	addwf	??_bh1750_leer^0,f,c
  2668  002D3E  0E00               	movlw	0
  2669  002D40  2250               	addwfc	(??_bh1750_leer+1)^0,f,c
  2670  002D42  C04F  F053         	movff	??_bh1750_leer,bh1750_leer@valor
  2671  002D46  C050  F054         	movff	??_bh1750_leer+1,bh1750_leer@valor+1
  2672  002D4A  0E00               	movlw	0
  2673  002D4C  BE54               	btfsc	(bh1750_leer@valor+1)^0,7,c
  2674  002D4E  0EFF               	movlw	-1
  2675  002D50  6E55               	movwf	(bh1750_leer@valor+2)^0,c
  2676  002D52  6E56               	movwf	(bh1750_leer@valor+3)^0,c
  2677  002D54                     
  2678                           ;./bh1750.h: 51:     valor /= 1.2;
  2679  002D54  0E9A               	movlw	154
  2680  002D56  6E13               	movwf	___fldiv@a^0,c
  2681  002D58  0E99               	movlw	153
  2682  002D5A  6E14               	movwf	(___fldiv@a+1)^0,c
  2683  002D5C  0E99               	movlw	153
  2684  002D5E  6E15               	movwf	(___fldiv@a+2)^0,c
  2685  002D60  0E3F               	movlw	63
  2686  002D62  6E16               	movwf	(___fldiv@a+3)^0,c
  2687  002D64  C053  F001         	movff	bh1750_leer@valor,___xxtofl@val
  2688  002D68  C054  F002         	movff	bh1750_leer@valor+1,___xxtofl@val+1
  2689  002D6C  C055  F003         	movff	bh1750_leer@valor+2,___xxtofl@val+2
  2690  002D70  C056  F004         	movff	bh1750_leer@valor+3,___xxtofl@val+3
  2691  002D74  0E00               	movlw	0
  2692  002D76  EC29  F00D         	call	___xxtofl
  2693  002D7A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2694  002D7E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2695  002D82  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2696  002D86  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2697  002D8A  EC82  F007         	call	___fldiv	;wreg free
  2698  002D8E  C00F  F041         	movff	?___fldiv,___fltol@f1
  2699  002D92  C010  F042         	movff	?___fldiv+1,___fltol@f1+1
  2700  002D96  C011  F043         	movff	?___fldiv+2,___fltol@f1+2
  2701  002D9A  C012  F044         	movff	?___fldiv+3,___fltol@f1+3
  2702  002D9E  ECD7  F014         	call	___fltol	;wreg free
  2703  002DA2  C041  F053         	movff	?___fltol,bh1750_leer@valor
  2704  002DA6  C042  F054         	movff	?___fltol+1,bh1750_leer@valor+1
  2705  002DAA  C043  F055         	movff	?___fltol+2,bh1750_leer@valor+2
  2706  002DAE  C044  F056         	movff	?___fltol+3,bh1750_leer@valor+3
  2707  002DB2                     
  2708                           ;./bh1750.h: 53:     return valor;
  2709  002DB2  C053  F04B         	movff	bh1750_leer@valor,?_bh1750_leer
  2710  002DB6  C054  F04C         	movff	bh1750_leer@valor+1,?_bh1750_leer+1
  2711  002DBA  C055  F04D         	movff	bh1750_leer@valor+2,?_bh1750_leer+2
  2712  002DBE  C056  F04E         	movff	bh1750_leer@valor+3,?_bh1750_leer+3
  2713  002DC2  0012               	return		;funcret
  2714  002DC4                     __end_of_bh1750_leer:
  2715                           	opt callstack 0
  2716                           
  2717 ;; *************** function _i2c_recibe_datoACK *****************
  2718 ;; Defined at:
  2719 ;;		line 103 in file "./I2C.h"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  a               1    wreg     unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  a               1    1[COMRAM] unsigned char 
  2724 ;;  datoleido       1    2[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      unsigned char 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0
  2735 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2737 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2738 ;;Total ram usage:        2 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    2
  2741 ;; This function calls:
  2742 ;;		_i2c_espera
  2743 ;; This function is called by:
  2744 ;;		_bh1750_leer
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text6
  2749  0037FC                     __ptext6:
  2750                           	opt callstack 0
  2751  0037FC                     _i2c_recibe_datoACK:
  2752                           	opt callstack 24
  2753                           
  2754                           ;incstack = 0
  2755                           ;i2c_recibe_datoACK@a stored from wreg
  2756  0037FC  6E02               	movwf	i2c_recibe_datoACK@a^0,c
  2757  0037FE                     
  2758                           ;./I2C.h: 105:     T_UBYTE datoleido;;./I2C.h: 108:     i2c_espera();
  2759  0037FE  EC53  F01C         	call	_i2c_espera	;wreg free
  2760  003802                     
  2761                           ;./I2C.h: 109:     SSPCON2bits.RCEN = 1;
  2762  003802  86C5               	bsf	197,3,c	;volatile
  2763                           
  2764                           ;./I2C.h: 111:     i2c_espera();
  2765  003804  EC53  F01C         	call	_i2c_espera	;wreg free
  2766  003808                     
  2767                           ;./I2C.h: 112:     datoleido = SSPBUF;
  2768  003808  CFC9 F003          	movff	4041,i2c_recibe_datoACK@datoleido	;volatile
  2769                           
  2770                           ;./I2C.h: 115:     i2c_espera();
  2771  00380C  EC53  F01C         	call	_i2c_espera	;wreg free
  2772  003810                     
  2773                           ;./I2C.h: 117:     ACKDT = (a) ? 0 : 1;
  2774  003810  5002               	movf	i2c_recibe_datoACK@a^0,w,c
  2775  003812  B4D8               	btfsc	status,2,c
  2776  003814  EF0E  F01C         	goto	u2931
  2777  003818  EF11  F01C         	goto	u2930
  2778  00381C                     u2931:
  2779  00381C  8AC5               	bsf	4037,5,c	;volatile
  2780  00381E  EF12  F01C         	goto	u2945
  2781  003822                     u2930:
  2782  003822  9AC5               	bcf	4037,5,c	;volatile
  2783  003824                     u2945:
  2784  003824                     
  2785                           ;./I2C.h: 118:     ACKEN = 1;
  2786  003824  88C5               	bsf	4037,4,c	;volatile
  2787  003826                     
  2788                           ;./I2C.h: 120:     return datoleido;
  2789  003826  5003               	movf	i2c_recibe_datoACK@datoleido^0,w,c
  2790  003828  0012               	return		;funcret
  2791  00382A                     __end_of_i2c_recibe_datoACK:
  2792                           	opt callstack 0
  2793                           
  2794 ;; *************** function _leeHorariosMemoria *****************
  2795 ;; Defined at:
  2796 ;;		line 187 in file "./AUTOMATIZADOR.h"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  j               2    9[COMRAM] int 
  2801 ;;  i               2   13[COMRAM] int 
  2802 ;;  contMemoria     2   11[COMRAM] int 
  2803 ;;  caracterLeid    1    8[COMRAM] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0
  2814 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2815 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2816 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2817 ;;Total ram usage:        9 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    4
  2820 ;; This function calls:
  2821 ;;		_UART_write
  2822 ;;		___wmul
  2823 ;;		_leer_eeprom
  2824 ;; This function is called by:
  2825 ;;		_sistemaPrincipal
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text7
  2830  00221E                     __ptext7:
  2831                           	opt callstack 0
  2832  00221E                     _leeHorariosMemoria:
  2833                           	opt callstack 25
  2834  00221E                     
  2835                           ;./AUTOMATIZADOR.h: 189:     T_INT contMemoria = 0;
  2836  00221E  0E00               	movlw	0
  2837  002220  6E0D               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  2838  002222  0E00               	movlw	0
  2839  002224  6E0C               	movwf	leeHorariosMemoria@contMemoria^0,c
  2840  002226                     
  2841                           ;./AUTOMATIZADOR.h: 190:     T_UBYTE caracterLeido;;./AUTOMATIZADOR.h: 192:     caracter
      +                          Leido = leer_eeprom(contMemoria++);
  2842  002226  0E00               	movlw	0
  2843  002228  6E04               	movwf	(leer_eeprom@direccion+1)^0,c
  2844  00222A  0E00               	movlw	0
  2845  00222C  6E03               	movwf	leer_eeprom@direccion^0,c
  2846  00222E  EC91  F01B         	call	_leer_eeprom	;wreg free
  2847  002232  6E09               	movwf	leeHorariosMemoria@caracterLeido^0,c
  2848  002234  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  2849  002236  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  2850  002238                     
  2851                           ;./AUTOMATIZADOR.h: 194:     if (caracterLeido == 'T') {
  2852  002238  0E54               	movlw	84
  2853  00223A  1809               	xorwf	leeHorariosMemoria@caracterLeido^0,w,c
  2854  00223C  A4D8               	btfss	status,2,c
  2855  00223E  EF23  F011         	goto	u4221
  2856  002242  EF25  F011         	goto	u4220
  2857  002246                     u4221:
  2858  002246  EFC2  F011         	goto	l4855
  2859  00224A                     u4220:
  2860  00224A                     
  2861                           ;./AUTOMATIZADOR.h: 196:         for (T_INT i = 0; i < 24; i++) {
  2862  00224A  0E00               	movlw	0
  2863  00224C  6E0F               	movwf	(leeHorariosMemoria@i+1)^0,c
  2864  00224E  0E00               	movlw	0
  2865  002250  6E0E               	movwf	leeHorariosMemoria@i^0,c
  2866  002252                     l4827:
  2867                           
  2868                           ;./AUTOMATIZADOR.h: 197:             horarios[i].hora = leer_eeprom(contMemoria++);
  2869  002252  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  2870  002256  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  2871  00225A  0E00               	movlw	0
  2872  00225C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2873  00225E  0E0C               	movlw	12
  2874  002260  6E03               	movwf	___wmul@multiplicand^0,c
  2875  002262  EC40  F01C         	call	___wmul	;wreg free
  2876  002266  0E52               	movlw	low _horarios
  2877  002268  2401               	addwf	?___wmul^0,w,c
  2878  00226A  6ED9               	movwf	fsr2l,c
  2879  00226C  0E01               	movlw	high _horarios
  2880  00226E  2002               	addwfc	(?___wmul+1)^0,w,c
  2881  002270  6EDA               	movwf	fsr2h,c
  2882  002272  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  2883  002276  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  2884  00227A  EC91  F01B         	call	_leer_eeprom	;wreg free
  2885  00227E  6EDF               	movwf	indf2,c
  2886  002280  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  2887  002282  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  2888  002284                     
  2889                           ;./AUTOMATIZADOR.h: 199:             for (T_INT j = 0; j < 7; j++) {
  2890  002284  0E00               	movlw	0
  2891  002286  6E0B               	movwf	(leeHorariosMemoria@j+1)^0,c
  2892  002288  0E00               	movlw	0
  2893  00228A  6E0A               	movwf	leeHorariosMemoria@j^0,c
  2894  00228C                     l4837:
  2895                           
  2896                           ;./AUTOMATIZADOR.h: 200:                 horarios[i].dias[j] = leer_eeprom(contMemoria++
      +                          );
  2897  00228C  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  2898  002290  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  2899  002294  0E00               	movlw	0
  2900  002296  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2901  002298  0E0C               	movlw	12
  2902  00229A  6E03               	movwf	___wmul@multiplicand^0,c
  2903  00229C  EC40  F01C         	call	___wmul	;wreg free
  2904  0022A0  0E52               	movlw	low _horarios
  2905  0022A2  6E07               	movwf	??_leeHorariosMemoria^0,c
  2906  0022A4  0E01               	movlw	high _horarios
  2907  0022A6  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  2908  0022A8  0E01               	movlw	1
  2909  0022AA  2607               	addwf	??_leeHorariosMemoria^0,f,c
  2910  0022AC  0E00               	movlw	0
  2911  0022AE  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  2912  0022B0  5001               	movf	?___wmul^0,w,c
  2913  0022B2  2607               	addwf	??_leeHorariosMemoria^0,f,c
  2914  0022B4  5002               	movf	(?___wmul+1)^0,w,c
  2915  0022B6  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  2916  0022B8  500A               	movf	leeHorariosMemoria@j^0,w,c
  2917  0022BA  2407               	addwf	??_leeHorariosMemoria^0,w,c
  2918  0022BC  6ED9               	movwf	fsr2l,c
  2919  0022BE  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  2920  0022C0  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
  2921  0022C2  6EDA               	movwf	fsr2h,c
  2922  0022C4  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  2923  0022C8  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  2924  0022CC  EC91  F01B         	call	_leer_eeprom	;wreg free
  2925  0022D0  6EDF               	movwf	indf2,c
  2926  0022D2  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  2927  0022D4  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  2928  0022D6                     
  2929                           ;./AUTOMATIZADOR.h: 201:             }
  2930  0022D6  4A0A               	infsnz	leeHorariosMemoria@j^0,f,c
  2931  0022D8  2A0B               	incf	(leeHorariosMemoria@j+1)^0,f,c
  2932  0022DA  BE0B               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
  2933  0022DC  EF79  F011         	goto	u4231
  2934  0022E0  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  2935  0022E2  E109               	bnz	u4230
  2936  0022E4  0E07               	movlw	7
  2937  0022E6  5C0A               	subwf	leeHorariosMemoria@j^0,w,c
  2938  0022E8  A0D8               	btfss	status,0,c
  2939  0022EA  EF79  F011         	goto	u4231
  2940  0022EE  EF7B  F011         	goto	u4230
  2941  0022F2                     u4231:
  2942  0022F2  EF46  F011         	goto	l4837
  2943  0022F6                     u4230:
  2944  0022F6                     
  2945                           ;./AUTOMATIZADOR.h: 203:             horarios[i].iluminar = leer_eeprom(contMemoria++);
  2946  0022F6  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  2947  0022FA  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  2948  0022FE  0E00               	movlw	0
  2949  002300  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2950  002302  0E0C               	movlw	12
  2951  002304  6E03               	movwf	___wmul@multiplicand^0,c
  2952  002306  EC40  F01C         	call	___wmul	;wreg free
  2953  00230A  0E5B               	movlw	low (_horarios+9)
  2954  00230C  2401               	addwf	?___wmul^0,w,c
  2955  00230E  6ED9               	movwf	fsr2l,c
  2956  002310  0E01               	movlw	high (_horarios+9)
  2957  002312  2002               	addwfc	(?___wmul+1)^0,w,c
  2958  002314  6EDA               	movwf	fsr2h,c
  2959  002316  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  2960  00231A  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  2961  00231E  EC91  F01B         	call	_leer_eeprom	;wreg free
  2962  002322  6EDF               	movwf	indf2,c
  2963  002324  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  2964  002326  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  2965  002328                     
  2966                           ;./AUTOMATIZADOR.h: 204:             horarios[i].tiempoIluminar = leer_eeprom(contMemori
      +                          a++);
  2967  002328  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  2968  00232C  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  2969  002330  0E00               	movlw	0
  2970  002332  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2971  002334  0E0C               	movlw	12
  2972  002336  6E03               	movwf	___wmul@multiplicand^0,c
  2973  002338  EC40  F01C         	call	___wmul	;wreg free
  2974  00233C  0E5D               	movlw	low (_horarios+11)
  2975  00233E  2401               	addwf	?___wmul^0,w,c
  2976  002340  6ED9               	movwf	fsr2l,c
  2977  002342  0E01               	movlw	high (_horarios+11)
  2978  002344  2002               	addwfc	(?___wmul+1)^0,w,c
  2979  002346  6EDA               	movwf	fsr2h,c
  2980  002348  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  2981  00234C  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  2982  002350  EC91  F01B         	call	_leer_eeprom	;wreg free
  2983  002354  6EDF               	movwf	indf2,c
  2984  002356  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  2985  002358  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  2986                           
  2987                           ;./AUTOMATIZADOR.h: 205:         }
  2988  00235A  4A0E               	infsnz	leeHorariosMemoria@i^0,f,c
  2989  00235C  2A0F               	incf	(leeHorariosMemoria@i+1)^0,f,c
  2990  00235E  BE0F               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  2991  002360  EFBB  F011         	goto	u4241
  2992  002364  500F               	movf	(leeHorariosMemoria@i+1)^0,w,c
  2993  002366  E109               	bnz	u4240
  2994  002368  0E18               	movlw	24
  2995  00236A  5C0E               	subwf	leeHorariosMemoria@i^0,w,c
  2996  00236C  A0D8               	btfss	status,0,c
  2997  00236E  EFBB  F011         	goto	u4241
  2998  002372  EFBD  F011         	goto	u4240
  2999  002376                     u4241:
  3000  002376  EF29  F011         	goto	l4827
  3001  00237A                     u4240:
  3002  00237A                     
  3003                           ;./AUTOMATIZADOR.h: 208:         UART_write('E');
  3004  00237A  0E45               	movlw	69
  3005  00237C  ECAD  F01C         	call	_UART_write
  3006                           
  3007                           ;./AUTOMATIZADOR.h: 210:     } else {
  3008  002380  EFC5  F011         	goto	l297
  3009  002384                     l4855:
  3010                           
  3011                           ;./AUTOMATIZADOR.h: 212:         UART_write('@');
  3012  002384  0E40               	movlw	64
  3013  002386  ECAD  F01C         	call	_UART_write
  3014  00238A                     l297:
  3015  00238A  0012               	return		;funcret
  3016  00238C                     __end_of_leeHorariosMemoria:
  3017                           	opt callstack 0
  3018                           
  3019 ;; *************** function _leer_eeprom *****************
  3020 ;; Defined at:
  3021 ;;		line 151 in file "./AUTOMATIZADOR.h"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  direccion       2    2[COMRAM] unsigned short 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  dato            1    5[COMRAM] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      unsigned char 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3035 ;;      Params:         2       0       0       0       0       0       0       0       0
  3036 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3037 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3038 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3039 ;;Total ram usage:        4 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    3
  3042 ;; This function calls:
  3043 ;;		_i2c_detener
  3044 ;;		_i2c_envia_dato
  3045 ;;		_i2c_inicia_com
  3046 ;;		_i2c_recibe_dato
  3047 ;;		_i2c_reinicia_com
  3048 ;; This function is called by:
  3049 ;;		_leeHorariosMemoria
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text8
  3054  003722                     __ptext8:
  3055                           	opt callstack 0
  3056  003722                     _leer_eeprom:
  3057                           	opt callstack 25
  3058  003722                     
  3059                           ;./AUTOMATIZADOR.h: 153:     T_UBYTE dato;;./AUTOMATIZADOR.h: 155:     i2c_inicia_com();
  3060  003722  ECE8  F01C         	call	_i2c_inicia_com	;wreg free
  3061                           
  3062                           ;./AUTOMATIZADOR.h: 156:     i2c_envia_dato(0xAE);
  3063  003726  0EAE               	movlw	174
  3064  003728  ECDE  F01C         	call	_i2c_envia_dato
  3065                           
  3066                           ;./AUTOMATIZADOR.h: 157:     i2c_envia_dato(direccion >> 8);
  3067  00372C  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  3068  00372E  ECDE  F01C         	call	_i2c_envia_dato
  3069                           
  3070                           ;./AUTOMATIZADOR.h: 158:     i2c_envia_dato(direccion);
  3071  003732  5003               	movf	leer_eeprom@direccion^0,w,c
  3072  003734  ECDE  F01C         	call	_i2c_envia_dato
  3073                           
  3074                           ;./AUTOMATIZADOR.h: 159:     i2c_reinicia_com();
  3075  003738  ECE4  F01C         	call	_i2c_reinicia_com	;wreg free
  3076                           
  3077                           ;./AUTOMATIZADOR.h: 160:     i2c_envia_dato(0xAF);
  3078  00373C  0EAF               	movlw	175
  3079  00373E  ECDE  F01C         	call	_i2c_envia_dato
  3080                           
  3081                           ;./AUTOMATIZADOR.h: 161:     dato = i2c_recibe_dato();
  3082  003742  EC94  F01C         	call	_i2c_recibe_dato	;wreg free
  3083  003746  6E06               	movwf	leer_eeprom@dato^0,c
  3084                           
  3085                           ;./AUTOMATIZADOR.h: 162:     i2c_detener();
  3086  003748  ECEC  F01C         	call	_i2c_detener	;wreg free
  3087  00374C                     
  3088                           ;./AUTOMATIZADOR.h: 163:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3089  00374C  0E0D               	movlw	13
  3090  00374E  6E05               	movwf	??_leer_eeprom^0,c
  3091  003750  0EFC               	movlw	252
  3092  003752                     u4567:
  3093  003752  2EE8               	decfsz	wreg,f,c
  3094  003754  D7FE               	bra	u4567
  3095  003756  2E05               	decfsz	??_leer_eeprom^0,f,c
  3096  003758  D7FC               	bra	u4567
  3097  00375A                     
  3098                           ;./AUTOMATIZADOR.h: 165:     return dato;
  3099  00375A  5006               	movf	leer_eeprom@dato^0,w,c
  3100  00375C  0012               	return		;funcret
  3101  00375E                     __end_of_leer_eeprom:
  3102                           	opt callstack 0
  3103                           
  3104 ;; *************** function _fijaHoraRtc *****************
  3105 ;; Defined at:
  3106 ;;		line 231 in file "./AUTOMATIZADOR.h"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3120 ;;      Params:         0       0       0       0       0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3123 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    5
  3127 ;; This function calls:
  3128 ;;		_UART_write
  3129 ;;		_escribe_rtc
  3130 ;;		_setRtc
  3131 ;; This function is called by:
  3132 ;;		_sistemaPrincipal
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text9
  3137  0036E4                     __ptext9:
  3138                           	opt callstack 0
  3139  0036E4                     _fijaHoraRtc:
  3140                           	opt callstack 24
  3141  0036E4                     
  3142                           ;./AUTOMATIZADOR.h: 239:     if (setRtc(0x02)) {
  3143  0036E4  0E02               	movlw	2
  3144  0036E6  EC93  F018         	call	_setRtc
  3145  0036EA  0900               	iorlw	0
  3146  0036EC  B4D8               	btfsc	status,2,c
  3147  0036EE  EF7B  F01B         	goto	u4251
  3148  0036F2  EF7D  F01B         	goto	u4250
  3149  0036F6                     u4251:
  3150  0036F6  EF90  F01B         	goto	l305
  3151  0036FA                     u4250:
  3152  0036FA                     
  3153                           ;./AUTOMATIZADOR.h: 241:         if (setRtc(0x01)) {
  3154  0036FA  0E01               	movlw	1
  3155  0036FC  EC93  F018         	call	_setRtc
  3156  003700  0900               	iorlw	0
  3157  003702  B4D8               	btfsc	status,2,c
  3158  003704  EF86  F01B         	goto	u4261
  3159  003708  EF88  F01B         	goto	u4260
  3160  00370C                     u4261:
  3161  00370C  EF90  F01B         	goto	l305
  3162  003710                     u4260:
  3163  003710                     
  3164                           ;./AUTOMATIZADOR.h: 243:             escribe_rtc(0x00, 0);
  3165  003710  0E00               	movlw	0
  3166  003712  6E03               	movwf	escribe_rtc@dato^0,c
  3167  003714  0E00               	movlw	0
  3168  003716  EC85  F01C         	call	_escribe_rtc
  3169  00371A                     
  3170                           ;./AUTOMATIZADOR.h: 244:             UART_write('E');
  3171  00371A  0E45               	movlw	69
  3172  00371C  ECAD  F01C         	call	_UART_write
  3173  003720                     l305:
  3174  003720  0012               	return		;funcret
  3175  003722                     __end_of_fijaHoraRtc:
  3176                           	opt callstack 0
  3177                           
  3178 ;; *************** function _fijaDiaRtc *****************
  3179 ;; Defined at:
  3180 ;;		line 109 in file "./AUTOMATIZADOR.h"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3194 ;;      Params:         0       0       0       0       0       0       0       0       0
  3195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3197 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3198 ;;Total ram usage:        0 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    5
  3201 ;; This function calls:
  3202 ;;		_UART_write
  3203 ;;		_setRtc
  3204 ;; This function is called by:
  3205 ;;		_sistemaPrincipal
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text10
  3210  0038EC                     __ptext10:
  3211                           	opt callstack 0
  3212  0038EC                     _fijaDiaRtc:
  3213                           	opt callstack 24
  3214  0038EC                     
  3215                           ;./AUTOMATIZADOR.h: 113:     if (setRtc(0x03)) {
  3216  0038EC  0E03               	movlw	3
  3217  0038EE  EC93  F018         	call	_setRtc
  3218  0038F2  0900               	iorlw	0
  3219  0038F4  B4D8               	btfsc	status,2,c
  3220  0038F6  EF7F  F01C         	goto	u4211
  3221  0038FA  EF81  F01C         	goto	u4210
  3222  0038FE                     u4211:
  3223  0038FE  EF84  F01C         	goto	l271
  3224  003902                     u4210:
  3225  003902                     
  3226                           ;./AUTOMATIZADOR.h: 115:         UART_write('E');
  3227  003902  0E45               	movlw	69
  3228  003904  ECAD  F01C         	call	_UART_write
  3229  003908                     l271:
  3230  003908  0012               	return		;funcret
  3231  00390A                     __end_of_fijaDiaRtc:
  3232                           	opt callstack 0
  3233                           
  3234 ;; *************** function _setRtc *****************
  3235 ;; Defined at:
  3236 ;;		line 120 in file "./AUTOMATIZADOR.h"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  direccion       1    wreg     unsigned char 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  direccion       1   34[COMRAM] unsigned char 
  3241 ;;  dato            1   37[COMRAM] unsigned char 
  3242 ;;  datoRtc         1   36[COMRAM] unsigned char 
  3243 ;;  seteado         1   35[COMRAM] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      unsigned char 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3253 ;;      Params:         0       0       0       0       0       0       0       0       0
  3254 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3256 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3257 ;;Total ram usage:        4 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    4
  3260 ;; This function calls:
  3261 ;;		___awdiv
  3262 ;;		___awmod
  3263 ;;		_escribe_rtc
  3264 ;;		_getValue
  3265 ;; This function is called by:
  3266 ;;		_fijaDiaRtc
  3267 ;;		_fijaHoraRtc
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text11
  3272  003126                     __ptext11:
  3273                           	opt callstack 0
  3274  003126                     _setRtc:
  3275                           	opt callstack 24
  3276                           
  3277                           ;incstack = 0
  3278                           ;setRtc@direccion stored from wreg
  3279  003126  6E23               	movwf	setRtc@direccion^0,c
  3280  003128                     
  3281                           ;./AUTOMATIZADOR.h: 123:     T_UBYTE seteado = 0;
  3282  003128  0E00               	movlw	0
  3283  00312A  6E24               	movwf	setRtc@seteado^0,c
  3284                           
  3285                           ;./AUTOMATIZADOR.h: 124:     T_UBYTE datoRtc = 0;
  3286  00312C  0E00               	movlw	0
  3287  00312E  6E25               	movwf	setRtc@datoRtc^0,c
  3288  003130                     
  3289                           ;./AUTOMATIZADOR.h: 126:     dato = getValue(2);
  3290  003130  0E00               	movlw	0
  3291  003132  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  3292  003134  0E02               	movlw	2
  3293  003136  6E0D               	movwf	getValue@numCharacters^0,c
  3294  003138  EC09  F000         	call	_getValue	;wreg free
  3295  00313C  500D               	movf	?_getValue^0,w,c
  3296  00313E  6E26               	movwf	setRtc@dato^0,c
  3297  003140                     
  3298                           ;./AUTOMATIZADOR.h: 128:     if (dato != '@') {
  3299  003140  0E40               	movlw	64
  3300  003142  1826               	xorwf	setRtc@dato^0,w,c
  3301  003144  B4D8               	btfsc	status,2,c
  3302  003146  EFA7  F018         	goto	u3921
  3303  00314A  EFA9  F018         	goto	u3920
  3304  00314E                     u3921:
  3305  00314E  EFCA  F018         	goto	l4567
  3306  003152                     u3920:
  3307  003152                     
  3308                           ;./AUTOMATIZADOR.h: 130:         datoRtc = ((dato / 10) & 0x0F) << 4;
  3309  003152  C026  F001         	movff	setRtc@dato,___awdiv@dividend
  3310  003156  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3311  003158  0E00               	movlw	0
  3312  00315A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3313  00315C  0E0A               	movlw	10
  3314  00315E  6E03               	movwf	___awdiv@divisor^0,c
  3315  003160  EC22  F016         	call	___awdiv	;wreg free
  3316  003164  0E0F               	movlw	15
  3317  003166  1601               	andwf	?___awdiv^0,f,c
  3318  003168  3801               	swapf	?___awdiv^0,w,c
  3319  00316A  0BF0               	andlw	240
  3320  00316C  6E25               	movwf	setRtc@datoRtc^0,c
  3321                           
  3322                           ;./AUTOMATIZADOR.h: 131:         datoRtc |= (dato % 10) & 0x0F;
  3323  00316E  C026  F001         	movff	setRtc@dato,___awmod@dividend
  3324  003172  6A02               	clrf	(___awmod@dividend+1)^0,c
  3325  003174  0E00               	movlw	0
  3326  003176  6E04               	movwf	(___awmod@divisor+1)^0,c
  3327  003178  0E0A               	movlw	10
  3328  00317A  6E03               	movwf	___awmod@divisor^0,c
  3329  00317C  ECE2  F016         	call	___awmod	;wreg free
  3330  003180  5001               	movf	?___awmod^0,w,c
  3331  003182  0B0F               	andlw	15
  3332  003184  1225               	iorwf	setRtc@datoRtc^0,f,c
  3333                           
  3334                           ;./AUTOMATIZADOR.h: 132:         escribe_rtc(direccion, datoRtc);
  3335  003186  C025  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  3336  00318A  5023               	movf	setRtc@direccion^0,w,c
  3337  00318C  EC85  F01C         	call	_escribe_rtc
  3338  003190                     
  3339                           ;./AUTOMATIZADOR.h: 133:         seteado = 1;
  3340  003190  0E01               	movlw	1
  3341  003192  6E24               	movwf	setRtc@seteado^0,c
  3342  003194                     l4567:
  3343                           
  3344                           ;./AUTOMATIZADOR.h: 136:     return seteado;
  3345  003194  5024               	movf	setRtc@seteado^0,w,c
  3346  003196  0012               	return		;funcret
  3347  003198                     __end_of_setRtc:
  3348                           	opt callstack 0
  3349                           
  3350 ;; *************** function _escribe_rtc *****************
  3351 ;; Defined at:
  3352 ;;		line 2 in file "./RTC.h"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  direccion       1    wreg     unsigned char 
  3355 ;;  dato            1    2[COMRAM] unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  direccion       1    3[COMRAM] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3367 ;;      Params:         1       0       0       0       0       0       0       0       0
  3368 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3370 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    3
  3374 ;; This function calls:
  3375 ;;		_i2c_detener
  3376 ;;		_i2c_envia_dato
  3377 ;;		_i2c_inicia_com
  3378 ;; This function is called by:
  3379 ;;		_setRtc
  3380 ;;		_fijaHoraRtc
  3381 ;;		_setRtcDefault
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text12
  3386  00390A                     __ptext12:
  3387                           	opt callstack 0
  3388  00390A                     _escribe_rtc:
  3389                           	opt callstack 24
  3390                           
  3391                           ;incstack = 0
  3392                           ;escribe_rtc@direccion stored from wreg
  3393  00390A  6E04               	movwf	escribe_rtc@direccion^0,c
  3394  00390C                     
  3395                           ;./RTC.h: 3:     i2c_inicia_com();
  3396  00390C  ECE8  F01C         	call	_i2c_inicia_com	;wreg free
  3397                           
  3398                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  3399  003910  0ED0               	movlw	208
  3400  003912  ECDE  F01C         	call	_i2c_envia_dato
  3401                           
  3402                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  3403  003916  5004               	movf	escribe_rtc@direccion^0,w,c
  3404  003918  ECDE  F01C         	call	_i2c_envia_dato
  3405                           
  3406                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  3407  00391C  5003               	movf	escribe_rtc@dato^0,w,c
  3408  00391E  ECDE  F01C         	call	_i2c_envia_dato
  3409                           
  3410                           ;./RTC.h: 7:     i2c_detener();
  3411  003922  ECEC  F01C         	call	_i2c_detener	;wreg free
  3412  003926  0012               	return		;funcret
  3413  003928                     __end_of_escribe_rtc:
  3414                           	opt callstack 0
  3415                           
  3416 ;; *************** function ___awmod *****************
  3417 ;; Defined at:
  3418 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  dividend        2    0[COMRAM] int 
  3421 ;;  divisor         2    2[COMRAM] int 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  sign            1    5[COMRAM] unsigned char 
  3424 ;;  counter         1    4[COMRAM] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  2    0[COMRAM] int 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3434 ;;      Params:         4       0       0       0       0       0       0       0       0
  3435 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3437 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3438 ;;Total ram usage:        6 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_setRtc
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text13
  3449  002DC4                     __ptext13:
  3450                           	opt callstack 0
  3451  002DC4                     ___awmod:
  3452                           	opt callstack 26
  3453  002DC4  0E00               	movlw	0
  3454  002DC6  6E06               	movwf	___awmod@sign^0,c
  3455  002DC8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3456  002DCA  EFEB  F016         	goto	u3830
  3457  002DCE  EFE9  F016         	goto	u3831
  3458  002DD2                     u3831:
  3459  002DD2  EFF1  F016         	goto	l4485
  3460  002DD6                     u3830:
  3461  002DD6  6C01               	negf	___awmod@dividend^0,c
  3462  002DD8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3463  002DDA  B0D8               	btfsc	status,0,c
  3464  002DDC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3465  002DDE  0E01               	movlw	1
  3466  002DE0  6E06               	movwf	___awmod@sign^0,c
  3467  002DE2                     l4485:
  3468  002DE2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3469  002DE4  EFF8  F016         	goto	u3840
  3470  002DE8  EFF6  F016         	goto	u3841
  3471  002DEC                     u3841:
  3472  002DEC  EFFC  F016         	goto	l4489
  3473  002DF0                     u3840:
  3474  002DF0  6C03               	negf	___awmod@divisor^0,c
  3475  002DF2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3476  002DF4  B0D8               	btfsc	status,0,c
  3477  002DF6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3478  002DF8                     l4489:
  3479  002DF8  5003               	movf	___awmod@divisor^0,w,c
  3480  002DFA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3481  002DFC  B4D8               	btfsc	status,2,c
  3482  002DFE  EF03  F017         	goto	u3851
  3483  002E02  EF05  F017         	goto	u3850
  3484  002E06                     u3851:
  3485  002E06  EF29  F017         	goto	l4505
  3486  002E0A                     u3850:
  3487  002E0A  0E01               	movlw	1
  3488  002E0C  6E05               	movwf	___awmod@counter^0,c
  3489  002E0E  EF0D  F017         	goto	l4495
  3490  002E12                     l4493:
  3491  002E12  90D8               	bcf	status,0,c
  3492  002E14  3603               	rlcf	___awmod@divisor^0,f,c
  3493  002E16  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3494  002E18  2A05               	incf	___awmod@counter^0,f,c
  3495  002E1A                     l4495:
  3496  002E1A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3497  002E1C  EF12  F017         	goto	u3861
  3498  002E20  EF14  F017         	goto	u3860
  3499  002E24                     u3861:
  3500  002E24  EF09  F017         	goto	l4493
  3501  002E28                     u3860:
  3502  002E28                     l4497:
  3503  002E28  5003               	movf	___awmod@divisor^0,w,c
  3504  002E2A  5C01               	subwf	___awmod@dividend^0,w,c
  3505  002E2C  5004               	movf	(___awmod@divisor+1)^0,w,c
  3506  002E2E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3507  002E30  A0D8               	btfss	status,0,c
  3508  002E32  EF1D  F017         	goto	u3871
  3509  002E36  EF1F  F017         	goto	u3870
  3510  002E3A                     u3871:
  3511  002E3A  EF23  F017         	goto	l4501
  3512  002E3E                     u3870:
  3513  002E3E  5003               	movf	___awmod@divisor^0,w,c
  3514  002E40  5E01               	subwf	___awmod@dividend^0,f,c
  3515  002E42  5004               	movf	(___awmod@divisor+1)^0,w,c
  3516  002E44  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3517  002E46                     l4501:
  3518  002E46  90D8               	bcf	status,0,c
  3519  002E48  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3520  002E4A  3203               	rrcf	___awmod@divisor^0,f,c
  3521  002E4C  2E05               	decfsz	___awmod@counter^0,f,c
  3522  002E4E  EF14  F017         	goto	l4497
  3523  002E52                     l4505:
  3524  002E52  5006               	movf	___awmod@sign^0,w,c
  3525  002E54  B4D8               	btfsc	status,2,c
  3526  002E56  EF2F  F017         	goto	u3881
  3527  002E5A  EF31  F017         	goto	u3880
  3528  002E5E                     u3881:
  3529  002E5E  EF35  F017         	goto	l4509
  3530  002E62                     u3880:
  3531  002E62  6C01               	negf	___awmod@dividend^0,c
  3532  002E64  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3533  002E66  B0D8               	btfsc	status,0,c
  3534  002E68  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3535  002E6A                     l4509:
  3536  002E6A  C001  F001         	movff	___awmod@dividend,?___awmod
  3537  002E6E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3538  002E72  0012               	return		;funcret
  3539  002E74                     __end_of___awmod:
  3540                           	opt callstack 0
  3541                           
  3542 ;; *************** function ___awdiv *****************
  3543 ;; Defined at:
  3544 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  dividend        2    0[COMRAM] int 
  3547 ;;  divisor         2    2[COMRAM] int 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  quotient        2    6[COMRAM] int 
  3550 ;;  sign            1    5[COMRAM] unsigned char 
  3551 ;;  counter         1    4[COMRAM] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    0[COMRAM] int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3561 ;;      Params:         4       0       0       0       0       0       0       0       0
  3562 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3564 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3565 ;;Total ram usage:        8 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_setRtc
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text14
  3576  002C44                     __ptext14:
  3577                           	opt callstack 0
  3578  002C44                     ___awdiv:
  3579                           	opt callstack 26
  3580  002C44  0E00               	movlw	0
  3581  002C46  6E06               	movwf	___awdiv@sign^0,c
  3582  002C48  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3583  002C4A  EF2B  F016         	goto	u3770
  3584  002C4E  EF29  F016         	goto	u3771
  3585  002C52                     u3771:
  3586  002C52  EF31  F016         	goto	l4441
  3587  002C56                     u3770:
  3588  002C56  6C03               	negf	___awdiv@divisor^0,c
  3589  002C58  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3590  002C5A  B0D8               	btfsc	status,0,c
  3591  002C5C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3592  002C5E  0E01               	movlw	1
  3593  002C60  6E06               	movwf	___awdiv@sign^0,c
  3594  002C62                     l4441:
  3595  002C62  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3596  002C64  EF38  F016         	goto	u3780
  3597  002C68  EF36  F016         	goto	u3781
  3598  002C6C                     u3781:
  3599  002C6C  EF3E  F016         	goto	l4447
  3600  002C70                     u3780:
  3601  002C70  6C01               	negf	___awdiv@dividend^0,c
  3602  002C72  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3603  002C74  B0D8               	btfsc	status,0,c
  3604  002C76  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3605  002C78  0E01               	movlw	1
  3606  002C7A  1A06               	xorwf	___awdiv@sign^0,f,c
  3607  002C7C                     l4447:
  3608  002C7C  0E00               	movlw	0
  3609  002C7E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3610  002C80  0E00               	movlw	0
  3611  002C82  6E07               	movwf	___awdiv@quotient^0,c
  3612  002C84  5003               	movf	___awdiv@divisor^0,w,c
  3613  002C86  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3614  002C88  B4D8               	btfsc	status,2,c
  3615  002C8A  EF49  F016         	goto	u3791
  3616  002C8E  EF4B  F016         	goto	u3790
  3617  002C92                     u3791:
  3618  002C92  EF73  F016         	goto	l4469
  3619  002C96                     u3790:
  3620  002C96  0E01               	movlw	1
  3621  002C98  6E05               	movwf	___awdiv@counter^0,c
  3622  002C9A  EF53  F016         	goto	l4455
  3623  002C9E                     l4453:
  3624  002C9E  90D8               	bcf	status,0,c
  3625  002CA0  3603               	rlcf	___awdiv@divisor^0,f,c
  3626  002CA2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3627  002CA4  2A05               	incf	___awdiv@counter^0,f,c
  3628  002CA6                     l4455:
  3629  002CA6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3630  002CA8  EF58  F016         	goto	u3801
  3631  002CAC  EF5A  F016         	goto	u3800
  3632  002CB0                     u3801:
  3633  002CB0  EF4F  F016         	goto	l4453
  3634  002CB4                     u3800:
  3635  002CB4                     l4457:
  3636  002CB4  90D8               	bcf	status,0,c
  3637  002CB6  3607               	rlcf	___awdiv@quotient^0,f,c
  3638  002CB8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3639  002CBA  5003               	movf	___awdiv@divisor^0,w,c
  3640  002CBC  5C01               	subwf	___awdiv@dividend^0,w,c
  3641  002CBE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3642  002CC0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3643  002CC2  A0D8               	btfss	status,0,c
  3644  002CC4  EF66  F016         	goto	u3811
  3645  002CC8  EF68  F016         	goto	u3810
  3646  002CCC                     u3811:
  3647  002CCC  EF6D  F016         	goto	l4465
  3648  002CD0                     u3810:
  3649  002CD0  5003               	movf	___awdiv@divisor^0,w,c
  3650  002CD2  5E01               	subwf	___awdiv@dividend^0,f,c
  3651  002CD4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3652  002CD6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3653  002CD8  8007               	bsf	___awdiv@quotient^0,0,c
  3654  002CDA                     l4465:
  3655  002CDA  90D8               	bcf	status,0,c
  3656  002CDC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3657  002CDE  3203               	rrcf	___awdiv@divisor^0,f,c
  3658  002CE0  2E05               	decfsz	___awdiv@counter^0,f,c
  3659  002CE2  EF5A  F016         	goto	l4457
  3660  002CE6                     l4469:
  3661  002CE6  5006               	movf	___awdiv@sign^0,w,c
  3662  002CE8  B4D8               	btfsc	status,2,c
  3663  002CEA  EF79  F016         	goto	u3821
  3664  002CEE  EF7B  F016         	goto	u3820
  3665  002CF2                     u3821:
  3666  002CF2  EF7F  F016         	goto	l4473
  3667  002CF6                     u3820:
  3668  002CF6  6C07               	negf	___awdiv@quotient^0,c
  3669  002CF8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3670  002CFA  B0D8               	btfsc	status,0,c
  3671  002CFC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3672  002CFE                     l4473:
  3673  002CFE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3674  002D02  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3675  002D06  0012               	return		;funcret
  3676  002D08                     __end_of___awdiv:
  3677                           	opt callstack 0
  3678                           
  3679 ;; *************** function _dameDatosSistema *****************
  3680 ;; Defined at:
  3681 ;;		line 460 in file "./AUTOMATIZADOR.h"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  i               2   66[BANK0 ] int 
  3686 ;;  bufferHorari   30   28[BANK0 ] unsigned char [30]
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0
  3697 ;;      Locals:         0      40       0       0       0       0       0       0       0
  3698 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3699 ;;      Totals:         2      40       0       0       0       0       0       0       0
  3700 ;;Total ram usage:       42 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    9
  3703 ;; This function calls:
  3704 ;;		_UART_printf
  3705 ;;		_UART_write
  3706 ;;		___wmul
  3707 ;;		_limpiarBuffer
  3708 ;;		_sprintf
  3709 ;; This function is called by:
  3710 ;;		_sistemaPrincipal
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text15
  3715  00129E                     __ptext15:
  3716                           	opt callstack 0
  3717  00129E                     _dameDatosSistema:
  3718                           	opt callstack 20
  3719  00129E                     
  3720                           ;./AUTOMATIZADOR.h: 462:     T_BYTE bufferHorario[30];;./AUTOMATIZADOR.h: 466:     sprin
      +                          tf(buffer, "\r\nSetpoint = %d | ", setPoint);
  3721  00129E  0E00               	movlw	low _buffer
  3722  0012A0  0100               	movlb	0	; () banked
  3723  0012A2  6F66               	movwf	sprintf@s& (0+255),b
  3724  0012A4  0E01               	movlw	high _buffer
  3725  0012A6  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3726  0012A8  0EAC               	movlw	low STR_12
  3727  0012AA  6F68               	movwf	sprintf@fmt& (0+255),b
  3728  0012AC  0E7F               	movlw	high STR_12
  3729  0012AE  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3730  0012B0  C0DE  F06A         	movff	_setPoint,?_sprintf+4
  3731  0012B4  C0DF  F06B         	movff	_setPoint+1,?_sprintf+5
  3732  0012B8  C0E0  F06C         	movff	_setPoint+2,?_sprintf+6
  3733  0012BC  C0E1  F06D         	movff	_setPoint+3,?_sprintf+7
  3734  0012C0  EC21  F01A         	call	_sprintf	;wreg free
  3735  0012C4                     
  3736                           ;./AUTOMATIZADOR.h: 467:     UART_printf(buffer);
  3737  0012C4  0E00               	movlw	low _buffer
  3738  0012C6  6E02               	movwf	UART_printf@cadena^0,c
  3739  0012C8  0E01               	movlw	high _buffer
  3740  0012CA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3741  0012CC  EC9B  F019         	call	_UART_printf	;wreg free
  3742                           
  3743                           ;./AUTOMATIZADOR.h: 469:         switch (diaActual) {
  3744  0012D0  EFE8  F009         	goto	l4949
  3745  0012D4                     l4933:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;./AUTOMATIZADOR.h: 471:             sprintf(buffer, "HORA = %0.2d:%0.2d | DIA = DOMINGO
      +                          \r\n", hora, minutos);
  3749  0012D4  0E00               	movlw	low _buffer
  3750  0012D6  6F66               	movwf	sprintf@s& (0+255),b
  3751  0012D8  0E01               	movlw	high _buffer
  3752  0012DA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3753  0012DC  0E97               	movlw	low STR_13
  3754  0012DE  6F68               	movwf	sprintf@fmt& (0+255),b
  3755  0012E0  0E7D               	movlw	high STR_13
  3756  0012E2  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3757  0012E4  C0D1  F06A         	movff	_hora,?_sprintf+4
  3758  0012E8  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3759  0012EA  C0D0  F06C         	movff	_minutos,?_sprintf+6
  3760  0012EE  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3761  0012F0  EC21  F01A         	call	_sprintf	;wreg free
  3762                           
  3763                           ;./AUTOMATIZADOR.h: 472:             break;
  3764  0012F4  EF12  F00A         	goto	l4951
  3765  0012F8                     l4935:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;./AUTOMATIZADOR.h: 475:             sprintf(buffer, "HORA = %0.2d:%0.2d | DIA = LUNES\r
      +                          \n", hora, minutos);
  3769  0012F8  0E00               	movlw	low _buffer
  3770  0012FA  6F66               	movwf	sprintf@s& (0+255),b
  3771  0012FC  0E01               	movlw	high _buffer
  3772  0012FE  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3773  001300  0E96               	movlw	low STR_14
  3774  001302  6F68               	movwf	sprintf@fmt& (0+255),b
  3775  001304  0E7E               	movlw	high STR_14
  3776  001306  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3777  001308  C0D1  F06A         	movff	_hora,?_sprintf+4
  3778  00130C  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3779  00130E  C0D0  F06C         	movff	_minutos,?_sprintf+6
  3780  001312  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3781  001314  EC21  F01A         	call	_sprintf	;wreg free
  3782                           
  3783                           ;./AUTOMATIZADOR.h: 476:             break;
  3784  001318  EF12  F00A         	goto	l4951
  3785  00131C                     l4937:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;./AUTOMATIZADOR.h: 479:             sprintf(buffer, "HORA = %0.2d:%0.2d | DIA = MARTES\
      +                          r\n", hora, minutos);
  3789  00131C  0E00               	movlw	low _buffer
  3790  00131E  6F66               	movwf	sprintf@s& (0+255),b
  3791  001320  0E01               	movlw	high _buffer
  3792  001322  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3793  001324  0E4E               	movlw	low STR_15
  3794  001326  6F68               	movwf	sprintf@fmt& (0+255),b
  3795  001328  0E7E               	movlw	high STR_15
  3796  00132A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3797  00132C  C0D1  F06A         	movff	_hora,?_sprintf+4
  3798  001330  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3799  001332  C0D0  F06C         	movff	_minutos,?_sprintf+6
  3800  001336  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3801  001338  EC21  F01A         	call	_sprintf	;wreg free
  3802                           
  3803                           ;./AUTOMATIZADOR.h: 480:             break;
  3804  00133C  EF12  F00A         	goto	l4951
  3805  001340                     l4939:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;./AUTOMATIZADOR.h: 483:             sprintf(buffer, "HORA = %0.2d:%0.2d | DIA = MIERCOL
      +                          ES\r\n", hora, minutos);
  3809  001340  0E00               	movlw	low _buffer
  3810  001342  6F66               	movwf	sprintf@s& (0+255),b
  3811  001344  0E01               	movlw	high _buffer
  3812  001346  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3813  001348  0E4B               	movlw	low STR_16
  3814  00134A  6F68               	movwf	sprintf@fmt& (0+255),b
  3815  00134C  0E7D               	movlw	high STR_16
  3816  00134E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3817  001350  C0D1  F06A         	movff	_hora,?_sprintf+4
  3818  001354  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3819  001356  C0D0  F06C         	movff	_minutos,?_sprintf+6
  3820  00135A  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3821  00135C  EC21  F01A         	call	_sprintf	;wreg free
  3822                           
  3823                           ;./AUTOMATIZADOR.h: 484:             break;
  3824  001360  EF12  F00A         	goto	l4951
  3825  001364                     l4941:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;./AUTOMATIZADOR.h: 487:             sprintf(buffer, "HORA = %0.2d:%0.2d | DIA = JUEVES\
      +                          r\n", hora, minutos);
  3829  001364  0E00               	movlw	low _buffer
  3830  001366  6F66               	movwf	sprintf@s& (0+255),b
  3831  001368  0E01               	movlw	high _buffer
  3832  00136A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3833  00136C  0E72               	movlw	low STR_17
  3834  00136E  6F68               	movwf	sprintf@fmt& (0+255),b
  3835  001370  0E7E               	movlw	high STR_17
  3836  001372  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3837  001374  C0D1  F06A         	movff	_hora,?_sprintf+4
  3838  001378  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3839  00137A  C0D0  F06C         	movff	_minutos,?_sprintf+6
  3840  00137E  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3841  001380  EC21  F01A         	call	_sprintf	;wreg free
  3842                           
  3843                           ;./AUTOMATIZADOR.h: 488:             break;
  3844  001384  EF12  F00A         	goto	l4951
  3845  001388                     l4943:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;./AUTOMATIZADOR.h: 491:             sprintf(buffer, "HORA = %0.2d:%0.2d | DIA = VIERNES
      +                          \r\n", hora, minutos);
  3849  001388  0E00               	movlw	low _buffer
  3850  00138A  6F66               	movwf	sprintf@s& (0+255),b
  3851  00138C  0E01               	movlw	high _buffer
  3852  00138E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3853  001390  0EBC               	movlw	low STR_18
  3854  001392  6F68               	movwf	sprintf@fmt& (0+255),b
  3855  001394  0E7D               	movlw	high STR_18
  3856  001396  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3857  001398  C0D1  F06A         	movff	_hora,?_sprintf+4
  3858  00139C  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3859  00139E  C0D0  F06C         	movff	_minutos,?_sprintf+6
  3860  0013A2  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3861  0013A4  EC21  F01A         	call	_sprintf	;wreg free
  3862                           
  3863                           ;./AUTOMATIZADOR.h: 492:             break;
  3864  0013A8  EF12  F00A         	goto	l4951
  3865  0013AC                     l4945:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;./AUTOMATIZADOR.h: 495:             sprintf(buffer, "HORA = %0.2d:%0.2d | DIA = SABADO\
      +                          r\n", hora, minutos);
  3869  0013AC  0E00               	movlw	low _buffer
  3870  0013AE  6F66               	movwf	sprintf@s& (0+255),b
  3871  0013B0  0E01               	movlw	high _buffer
  3872  0013B2  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3873  0013B4  0E2A               	movlw	low STR_19
  3874  0013B6  6F68               	movwf	sprintf@fmt& (0+255),b
  3875  0013B8  0E7E               	movlw	high STR_19
  3876  0013BA  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3877  0013BC  C0D1  F06A         	movff	_hora,?_sprintf+4
  3878  0013C0  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3879  0013C2  C0D0  F06C         	movff	_minutos,?_sprintf+6
  3880  0013C6  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3881  0013C8  EC21  F01A         	call	_sprintf	;wreg free
  3882                           
  3883                           ;./AUTOMATIZADOR.h: 496:             break;
  3884  0013CC  EF12  F00A         	goto	l4951
  3885  0013D0                     l4949:
  3886  0013D0  0100               	movlb	0	; () banked
  3887  0013D2  51CE               	movf	_diaActual& (0+255),w,b
  3888  0013D4  6E5C               	movwf	??_dameDatosSistema^0,c
  3889  0013D6  6A5D               	clrf	(??_dameDatosSistema+1)^0,c
  3890                           
  3891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3892                           ; Switch size 1, requested type "simple"
  3893                           ; Number of cases is 1, Range of values is 0 to 0
  3894                           ; switch strategies available:
  3895                           ; Name         Instructions Cycles
  3896                           ; simple_byte            4     3 (average)
  3897                           ;	Chosen strategy is simple_byte
  3898  0013D8  505D               	movf	(??_dameDatosSistema+1)^0,w,c
  3899  0013DA  0A00               	xorlw	0	; case 0
  3900  0013DC  B4D8               	btfsc	status,2,c
  3901  0013DE  EFF3  F009         	goto	l5509
  3902  0013E2  EF12  F00A         	goto	l4951
  3903  0013E6                     l5509:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ; Switch size 1, requested type "simple"
  3907                           ; Number of cases is 7, Range of values is 1 to 7
  3908                           ; switch strategies available:
  3909                           ; Name         Instructions Cycles
  3910                           ; simple_byte           22    12 (average)
  3911                           ;	Chosen strategy is simple_byte
  3912  0013E6  505C               	movf	??_dameDatosSistema^0,w,c
  3913  0013E8  0A01               	xorlw	1	; case 1
  3914  0013EA  B4D8               	btfsc	status,2,c
  3915  0013EC  EF6A  F009         	goto	l4933
  3916  0013F0  0A03               	xorlw	3	; case 2
  3917  0013F2  B4D8               	btfsc	status,2,c
  3918  0013F4  EF7C  F009         	goto	l4935
  3919  0013F8  0A01               	xorlw	1	; case 3
  3920  0013FA  B4D8               	btfsc	status,2,c
  3921  0013FC  EF8E  F009         	goto	l4937
  3922  001400  0A07               	xorlw	7	; case 4
  3923  001402  B4D8               	btfsc	status,2,c
  3924  001404  EFA0  F009         	goto	l4939
  3925  001408  0A01               	xorlw	1	; case 5
  3926  00140A  B4D8               	btfsc	status,2,c
  3927  00140C  EFB2  F009         	goto	l4941
  3928  001410  0A03               	xorlw	3	; case 6
  3929  001412  B4D8               	btfsc	status,2,c
  3930  001414  EFC4  F009         	goto	l4943
  3931  001418  0A01               	xorlw	1	; case 7
  3932  00141A  B4D8               	btfsc	status,2,c
  3933  00141C  EFD6  F009         	goto	l4945
  3934  001420  EF12  F00A         	goto	l4951
  3935  001424                     l4951:
  3936                           
  3937                           ;./AUTOMATIZADOR.h: 503:     UART_printf(buffer);
  3938  001424  0E00               	movlw	low _buffer
  3939  001426  6E02               	movwf	UART_printf@cadena^0,c
  3940  001428  0E01               	movlw	high _buffer
  3941  00142A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3942  00142C  EC9B  F019         	call	_UART_printf	;wreg free
  3943                           
  3944                           ;./AUTOMATIZADOR.h: 505:     UART_printf("\r\nH = HORA\r\n");
  3945  001430  0EDE               	movlw	low STR_20
  3946  001432  6E02               	movwf	UART_printf@cadena^0,c
  3947  001434  0E7F               	movlw	high STR_20
  3948  001436  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3949  001438  EC9B  F019         	call	_UART_printf	;wreg free
  3950                           
  3951                           ;./AUTOMATIZADOR.h: 506:     UART_printf("\r\nR = ILUMINAR( 1 SI | 0 NO)\r\n");
  3952  00143C  0EFB               	movlw	low STR_21
  3953  00143E  6E02               	movwf	UART_printf@cadena^0,c
  3954  001440  0E7E               	movlw	high STR_21
  3955  001442  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3956  001444  EC9B  F019         	call	_UART_printf	;wreg free
  3957                           
  3958                           ;./AUTOMATIZADOR.h: 507:     UART_printf("\r\nT = MINUTOS QUE DURARA LA ILUMINACION\r\n"
      +                          );
  3959  001448  0ED0               	movlw	low STR_22
  3960  00144A  6E02               	movwf	UART_printf@cadena^0,c
  3961  00144C  0E7C               	movlw	high STR_22
  3962  00144E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3963  001450  EC9B  F019         	call	_UART_printf	;wreg free
  3964                           
  3965                           ;./AUTOMATIZADOR.h: 508:     UART_printf("\r\nD = DIAS QUE EN LOS QUE SE ILUMINARA\r\n")
      +                          ;
  3966  001454  0EFA               	movlw	low STR_23
  3967  001456  6E02               	movwf	UART_printf@cadena^0,c
  3968  001458  0E7C               	movlw	high STR_23
  3969  00145A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3970  00145C  EC9B  F019         	call	_UART_printf	;wreg free
  3971                           
  3972                           ;./AUTOMATIZADOR.h: 510:     UART_printf("                           DLMIJVS\r\n");
  3973  001460  0EE1               	movlw	low STR_24
  3974  001462  6E02               	movwf	UART_printf@cadena^0,c
  3975  001464  0E7D               	movlw	high STR_24
  3976  001466  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3977  001468  EC9B  F019         	call	_UART_printf	;wreg free
  3978  00146C                     
  3979                           ;./AUTOMATIZADOR.h: 513:     for (T_INT i = 0; i < 24; i++) {
  3980  00146C  0E00               	movlw	0
  3981  00146E  0100               	movlb	0	; () banked
  3982  001470  6FA3               	movwf	(dameDatosSistema@i+1)& (0+255),b
  3983  001472  0E00               	movlw	0
  3984  001474  6FA2               	movwf	dameDatosSistema@i& (0+255),b
  3985  001476                     l4959:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;./AUTOMATIZADOR.h: 515:         if (horarios[i].iluminar) {
  3989  001476  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  3990  00147A  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  3991  00147E  0E00               	movlw	0
  3992  001480  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3993  001482  0E0C               	movlw	12
  3994  001484  6E03               	movwf	___wmul@multiplicand^0,c
  3995  001486  EC40  F01C         	call	___wmul	;wreg free
  3996  00148A  0E5B               	movlw	low (_horarios+9)
  3997  00148C  2401               	addwf	?___wmul^0,w,c
  3998  00148E  6ED9               	movwf	fsr2l,c
  3999  001490  0E01               	movlw	high (_horarios+9)
  4000  001492  2002               	addwfc	(?___wmul+1)^0,w,c
  4001  001494  6EDA               	movwf	fsr2h,c
  4002  001496  50DF               	movf	indf2,w,c
  4003  001498  B4D8               	btfsc	status,2,c
  4004  00149A  EF51  F00A         	goto	u4341
  4005  00149E  EF53  F00A         	goto	u4340
  4006  0014A2                     u4341:
  4007  0014A2  EFC6  F00A         	goto	l4969
  4008  0014A6                     u4340:
  4009  0014A6                     
  4010                           ;./AUTOMATIZADOR.h: 517:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4011  0014A6  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4012  0014AA  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4013  0014AE  0E00               	movlw	0
  4014  0014B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4015  0014B2  0E0C               	movlw	12
  4016  0014B4  6E03               	movwf	___wmul@multiplicand^0,c
  4017  0014B6  EC40  F01C         	call	___wmul	;wreg free
  4018  0014BA  0E52               	movlw	low _horarios
  4019  0014BC  2401               	addwf	?___wmul^0,w,c
  4020  0014BE  6ED9               	movwf	fsr2l,c
  4021  0014C0  0E01               	movlw	high _horarios
  4022  0014C2  2002               	addwfc	(?___wmul+1)^0,w,c
  4023  0014C4  6EDA               	movwf	fsr2h,c
  4024  0014C6  50DF               	movf	indf2,w,c
  4025  0014C8  6E5C               	movwf	??_dameDatosSistema^0,c
  4026  0014CA  505C               	movf	??_dameDatosSistema^0,w,c
  4027  0014CC  0100               	movlb	0	; () banked
  4028  0014CE  6F9A               	movwf	_dameDatosSistema$1630& (0+255),b
  4029  0014D0  6B9B               	clrf	(_dameDatosSistema$1630+1)& (0+255),b
  4030                           
  4031                           ;./AUTOMATIZADOR.h: 517:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4032  0014D2  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4033  0014D6  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4034  0014DA  0E00               	movlw	0
  4035  0014DC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4036  0014DE  0E0C               	movlw	12
  4037  0014E0  6E03               	movwf	___wmul@multiplicand^0,c
  4038  0014E2  EC40  F01C         	call	___wmul	;wreg free
  4039  0014E6  0E5B               	movlw	low (_horarios+9)
  4040  0014E8  2401               	addwf	?___wmul^0,w,c
  4041  0014EA  6ED9               	movwf	fsr2l,c
  4042  0014EC  0E01               	movlw	high (_horarios+9)
  4043  0014EE  2002               	addwfc	(?___wmul+1)^0,w,c
  4044  0014F0  6EDA               	movwf	fsr2h,c
  4045  0014F2  50DF               	movf	indf2,w,c
  4046  0014F4  6E5C               	movwf	??_dameDatosSistema^0,c
  4047  0014F6  505C               	movf	??_dameDatosSistema^0,w,c
  4048  0014F8  0100               	movlb	0	; () banked
  4049  0014FA  6F9C               	movwf	_dameDatosSistema$1631& (0+255),b
  4050  0014FC  6B9D               	clrf	(_dameDatosSistema$1631+1)& (0+255),b
  4051                           
  4052                           ;./AUTOMATIZADOR.h: 517:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4053  0014FE  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4054  001502  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4055  001506  0E00               	movlw	0
  4056  001508  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4057  00150A  0E0C               	movlw	12
  4058  00150C  6E03               	movwf	___wmul@multiplicand^0,c
  4059  00150E  EC40  F01C         	call	___wmul	;wreg free
  4060  001512  0E5D               	movlw	low (_horarios+11)
  4061  001514  2401               	addwf	?___wmul^0,w,c
  4062  001516  6ED9               	movwf	fsr2l,c
  4063  001518  0E01               	movlw	high (_horarios+11)
  4064  00151A  2002               	addwfc	(?___wmul+1)^0,w,c
  4065  00151C  6EDA               	movwf	fsr2h,c
  4066  00151E  50DF               	movf	indf2,w,c
  4067  001520  6E5C               	movwf	??_dameDatosSistema^0,c
  4068  001522  505C               	movf	??_dameDatosSistema^0,w,c
  4069  001524  0100               	movlb	0	; () banked
  4070  001526  6F9E               	movwf	_dameDatosSistema$1632& (0+255),b
  4071  001528  6B9F               	clrf	(_dameDatosSistema$1632+1)& (0+255),b
  4072  00152A                     
  4073                           ; BSR set to: 0
  4074                           ;./AUTOMATIZADOR.h: 517:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4075  00152A  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4076  00152E  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4077  001532  0E00               	movlw	0
  4078  001534  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4079  001536  0E0C               	movlw	12
  4080  001538  6E03               	movwf	___wmul@multiplicand^0,c
  4081  00153A  EC40  F01C         	call	___wmul	;wreg free
  4082  00153E  0E53               	movlw	low (_horarios+1)
  4083  001540  2401               	addwf	?___wmul^0,w,c
  4084  001542  0100               	movlb	0	; () banked
  4085  001544  6FA0               	movwf	_dameDatosSistema$1633& (0+255),b
  4086  001546  0E01               	movlw	high (_horarios+1)
  4087  001548  2002               	addwfc	(?___wmul+1)^0,w,c
  4088  00154A  6FA1               	movwf	(_dameDatosSistema$1633+1)& (0+255),b
  4089  00154C                     
  4090                           ; BSR set to: 0
  4091                           ;./AUTOMATIZADOR.h: 517:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4092  00154C  0E7C               	movlw	low dameDatosSistema@bufferHorario
  4093  00154E  6F66               	movwf	sprintf@s& (0+255),b
  4094  001550  0E00               	movlw	high dameDatosSistema@bufferHorario
  4095  001552  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4096  001554  0E68               	movlw	low STR_25
  4097  001556  6F68               	movwf	sprintf@fmt& (0+255),b
  4098  001558  0E7F               	movlw	high STR_25
  4099  00155A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4100  00155C  C09A  F06A         	movff	_dameDatosSistema$1630,?_sprintf+4
  4101  001560  C09B  F06B         	movff	_dameDatosSistema$1630+1,?_sprintf+5
  4102  001564  C09C  F06C         	movff	_dameDatosSistema$1631,?_sprintf+6
  4103  001568  C09D  F06D         	movff	_dameDatosSistema$1631+1,?_sprintf+7
  4104  00156C  C09E  F06E         	movff	_dameDatosSistema$1632,?_sprintf+8
  4105  001570  C09F  F06F         	movff	_dameDatosSistema$1632+1,?_sprintf+9
  4106  001574  C0A0  F070         	movff	_dameDatosSistema$1633,?_sprintf+10
  4107  001578  C0A1  F071         	movff	_dameDatosSistema$1633+1,?_sprintf+11
  4108  00157C  EC21  F01A         	call	_sprintf	;wreg free
  4109  001580                     
  4110                           ;./AUTOMATIZADOR.h: 521:             UART_printf(bufferHorario);
  4111  001580  0E7C               	movlw	low dameDatosSistema@bufferHorario
  4112  001582  6E02               	movwf	UART_printf@cadena^0,c
  4113  001584  0E00               	movlw	high dameDatosSistema@bufferHorario
  4114  001586  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4115  001588  EC9B  F019         	call	_UART_printf	;wreg free
  4116  00158C                     l4969:
  4117                           
  4118                           ;./AUTOMATIZADOR.h: 525:     }
  4119  00158C  0100               	movlb	0	; () banked
  4120  00158E  4BA2               	infsnz	dameDatosSistema@i& (0+255),f,b
  4121  001590  2BA3               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  4122  001592                     
  4123                           ; BSR set to: 0
  4124  001592  BFA3               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  4125  001594  EFD5  F00A         	goto	u4351
  4126  001598  51A3               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  4127  00159A  E109               	bnz	u4350
  4128  00159C  0E18               	movlw	24
  4129  00159E  5DA2               	subwf	dameDatosSistema@i& (0+255),w,b
  4130  0015A0  A0D8               	btfss	status,0,c
  4131  0015A2  EFD5  F00A         	goto	u4351
  4132  0015A6  EFD7  F00A         	goto	u4350
  4133  0015AA                     u4351:
  4134  0015AA  EF3B  F00A         	goto	l4959
  4135  0015AE                     u4350:
  4136  0015AE                     
  4137                           ; BSR set to: 0
  4138                           ;./AUTOMATIZADOR.h: 527:     limpiarBuffer();
  4139  0015AE  EC52  F01B         	call	_limpiarBuffer	;wreg free
  4140  0015B2                     
  4141                           ;./AUTOMATIZADOR.h: 529:     UART_write('&');
  4142  0015B2  0E26               	movlw	38
  4143  0015B4  ECAD  F01C         	call	_UART_write
  4144  0015B8  0012               	return		;funcret
  4145  0015BA                     __end_of_dameDatosSistema:
  4146                           	opt callstack 0
  4147                           
  4148 ;; *************** function _sprintf *****************
  4149 ;; Defined at:
  4150 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  s               2    6[BANK0 ] PTR unsigned char 
  4153 ;;		 -> dameDatosSistema@bufferHorario(30), buffer(50), 
  4154 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  4155 ;;		 -> STR_26(23), STR_25(24), STR_19(36), STR_18(37), 
  4156 ;;		 -> STR_17(36), STR_16(39), STR_15(36), STR_14(35), 
  4157 ;;		 -> STR_13(37), STR_12(19), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  f               6   22[BANK0 ] struct _IO_FILE
  4160 ;;  ap              2   20[BANK0 ] PTR void [1]
  4161 ;;		 -> ?_sprintf(2), 
  4162 ;;  ret             2    0        int 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    6[BANK0 ] int 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4172 ;;      Params:         0      12       0       0       0       0       0       0       0
  4173 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4175 ;;      Totals:         0      22       0       0       0       0       0       0       0
  4176 ;;Total ram usage:       22 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    8
  4179 ;; This function calls:
  4180 ;;		_vfprintf
  4181 ;; This function is called by:
  4182 ;;		_dameDatosSistema
  4183 ;;		_mostrarDatosSensores
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text16
  4188  003442                     __ptext16:
  4189                           	opt callstack 0
  4190  003442                     _sprintf:
  4191                           	opt callstack 20
  4192  003442  0E6A               	movlw	low (?_sprintf+4)
  4193  003444  0100               	movlb	0	; () banked
  4194  003446  6F74               	movwf	sprintf@ap& (0+255),b
  4195  003448  0E00               	movlw	high (?_sprintf+4)
  4196  00344A  6F75               	movwf	(sprintf@ap+1)& (0+255),b
  4197  00344C  C066  F076         	movff	sprintf@s,sprintf@f
  4198  003450  C067  F077         	movff	sprintf@s+1,sprintf@f+1
  4199  003454                     
  4200                           ; BSR set to: 0
  4201  003454  0E00               	movlw	0
  4202  003456  6F79               	movwf	(sprintf@f+3)& (0+255),b
  4203  003458  0E00               	movlw	0
  4204  00345A  6F78               	movwf	(sprintf@f+2)& (0+255),b
  4205  00345C                     
  4206                           ; BSR set to: 0
  4207  00345C  0E00               	movlw	0
  4208  00345E  6F7B               	movwf	(sprintf@f+5)& (0+255),b
  4209  003460  0E00               	movlw	0
  4210  003462  6F7A               	movwf	(sprintf@f+4)& (0+255),b
  4211  003464                     
  4212                           ; BSR set to: 0
  4213  003464  0E76               	movlw	low sprintf@f
  4214  003466  6F60               	movwf	vfprintf@fp& (0+255),b
  4215  003468  0E00               	movlw	high sprintf@f
  4216  00346A  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  4217  00346C  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  4218  003470  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4219  003474  0E74               	movlw	low sprintf@ap
  4220  003476  6F64               	movwf	vfprintf@ap& (0+255),b
  4221  003478  0E00               	movlw	high sprintf@ap
  4222  00347A  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  4223  00347C  EC39  F019         	call	_vfprintf	;wreg free
  4224  003480  0100               	movlb	0	; () banked
  4225  003482  5178               	movf	(sprintf@f+2)& (0+255),w,b
  4226  003484  2566               	addwf	sprintf@s& (0+255),w,b
  4227  003486  6ED9               	movwf	fsr2l,c
  4228  003488  5179               	movf	(sprintf@f+3)& (0+255),w,b
  4229  00348A  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  4230  00348C  6EDA               	movwf	fsr2h,c
  4231  00348E  0E00               	movlw	0
  4232  003490  6EDF               	movwf	indf2,c
  4233  003492                     
  4234                           ; BSR set to: 0
  4235  003492  0012               	return		;funcret
  4236  003494                     __end_of_sprintf:
  4237                           	opt callstack 0
  4238                           
  4239 ;; *************** function _vfprintf *****************
  4240 ;; Defined at:
  4241 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4244 ;;		 -> sprintf@f(6), 
  4245 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4246 ;;		 -> STR_26(23), STR_25(24), STR_19(36), STR_18(37), 
  4247 ;;		 -> STR_17(36), STR_16(39), STR_15(36), STR_14(35), 
  4248 ;;		 -> STR_13(37), STR_12(19), 
  4249 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4250 ;;		 -> sprintf@ap(2), 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  4253 ;;		 -> STR_26(23), STR_25(24), STR_19(36), STR_18(37), 
  4254 ;;		 -> STR_17(36), STR_16(39), STR_15(36), STR_14(35), 
  4255 ;;		 -> STR_13(37), STR_12(19), 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2    0[BANK0 ] int 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4265 ;;      Params:         0       6       0       0       0       0       0       0       0
  4266 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4268 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4269 ;;Total ram usage:        8 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    7
  4272 ;; This function calls:
  4273 ;;		_vfpfcnvrt
  4274 ;; This function is called by:
  4275 ;;		_sprintf
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text17
  4280  003272                     __ptext17:
  4281                           	opt callstack 0
  4282  003272                     _vfprintf:
  4283                           	opt callstack 20
  4284  003272                     
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4286  003272  C062  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  4287  003276  C063  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4288  00327A                     
  4289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4290  00327A  0E00               	movlw	0
  4291  00327C  0100               	movlb	0	; () banked
  4292  00327E  6FBB               	movwf	(_nout+1)& (0+255),b
  4293  003280  0E00               	movlw	0
  4294  003282  6FBA               	movwf	_nout& (0+255),b
  4295                           
  4296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4297  003284  EF57  F019         	goto	l4387
  4298  003288                     l4385:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4302  003288  C060  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  4303  00328C  C061  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4304  003290  0E5A               	movlw	low vfprintf@cfmt
  4305  003292  6E42               	movwf	vfpfcnvrt@fmt^0,c
  4306  003294  0E00               	movlw	high vfprintf@cfmt
  4307  003296  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4308  003298  C064  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  4309  00329C  C065  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4310  0032A0  ECE5  F002         	call	_vfpfcnvrt	;wreg free
  4311  0032A4  5040               	movf	?_vfpfcnvrt^0,w,c
  4312  0032A6  0100               	movlb	0	; () banked
  4313  0032A8  27BA               	addwf	_nout& (0+255),f,b
  4314  0032AA  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  4315  0032AC  23BB               	addwfc	(_nout+1)& (0+255),f,b
  4316  0032AE                     l4387:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4320  0032AE  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  4321  0032B2  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4322  0032B6                     	if	0	;tblptru may be non-zero
  4323  0032B6                     	endif
  4324  0032B6                     	if	0	;tblptru may be non-zero
  4325  0032B6                     	endif
  4326  0032B6  0008               	tblrd		*
  4327  0032B8  50F5               	movf	tablat,w,c
  4328  0032BA  0900               	iorlw	0
  4329  0032BC  A4D8               	btfss	status,2,c
  4330  0032BE  EF63  F019         	goto	u3701
  4331  0032C2  EF65  F019         	goto	u3700
  4332  0032C6                     u3701:
  4333  0032C6  EF44  F019         	goto	l4385
  4334  0032CA                     u3700:
  4335  0032CA                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4338  0032CA  C0BA  F060         	movff	_nout,?_vfprintf
  4339  0032CE  C0BB  F061         	movff	_nout+1,?_vfprintf+1
  4340  0032D2                     
  4341                           ; BSR set to: 0
  4342  0032D2  0012               	return		;funcret
  4343  0032D4                     __end_of_vfprintf:
  4344                           	opt callstack 0
  4345                           
  4346 ;; *************** function _vfpfcnvrt *****************
  4347 ;; Defined at:
  4348 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4351 ;;		 -> sprintf@f(6), 
  4352 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  4353 ;;		 -> vfprintf@cfmt(2), 
  4354 ;;  ap              2   67[COMRAM] PTR PTR void 
  4355 ;;		 -> sprintf@ap(2), 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  ll              8   73[COMRAM] long long 
  4358 ;;  llu             8    0        unsigned long long 
  4359 ;;  f               4    0        unsigned long long 
  4360 ;;  vp              3    0        PTR void 
  4361 ;;  ct              3    0        unsigned char [3]
  4362 ;;  done            2   83[COMRAM] int 
  4363 ;;  cp              2   81[COMRAM] PTR unsigned char 
  4364 ;;		 -> ?_sprintf(2), horarios(288), 
  4365 ;;  i               2    0        int 
  4366 ;;  c               1    0        unsigned char 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  2   63[COMRAM] int 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4376 ;;      Params:         6       0       0       0       0       0       0       0       0
  4377 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4378 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4379 ;;      Totals:        26       0       0       0       0       0       0       0       0
  4380 ;;Total ram usage:       26 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    6
  4383 ;; This function calls:
  4384 ;;		_atoi
  4385 ;;		_dtoa
  4386 ;;		_fputc
  4387 ;;		_isdigit
  4388 ;;		_stoa
  4389 ;; This function is called by:
  4390 ;;		_vfprintf
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text18
  4395  0005CA                     __ptext18:
  4396                           	opt callstack 0
  4397  0005CA                     _vfpfcnvrt:
  4398                           	opt callstack 20
  4399  0005CA                     
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4401  0005CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4402  0005CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4403  0005D2  CFDE FFF6          	movff	postinc2,tblptrl
  4404  0005D6  CFDD FFF7          	movff	postdec2,tblptrh
  4405  0005DA                     	if	0	;tblptru may be non-zero
  4406  0005DA                     	endif
  4407  0005DA                     	if	0	;tblptru may be non-zero
  4408  0005DA                     	endif
  4409  0005DA  0008               	tblrd		*
  4410  0005DC  50F5               	movf	tablat,w,c
  4411  0005DE  0A25               	xorlw	37
  4412  0005E0  A4D8               	btfss	status,2,c
  4413  0005E2  EFF5  F002         	goto	u2951
  4414  0005E6  EFF7  F002         	goto	u2950
  4415  0005EA                     u2951:
  4416  0005EA  EF51  F005         	goto	l3893
  4417  0005EE                     u2950:
  4418  0005EE                     
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4420  0005EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4421  0005F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4422  0005F6  2ADE               	incf	postinc2,f,c
  4423  0005F8  0E00               	movlw	0
  4424  0005FA  22DD               	addwfc	postdec2,f,c
  4425  0005FC                     
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4427  0005FC  0E00               	movlw	0
  4428  0005FE  0100               	movlb	0	; () banked
  4429  000600  6FBD               	movwf	(_width+1)& (0+255),b
  4430  000602  0E00               	movlw	0
  4431  000604  6FBC               	movwf	_width& (0+255),b
  4432  000606  C0BC  F0C0         	movff	_width,_flags
  4433  00060A  C0BD  F0C1         	movff	_width+1,_flags+1
  4434  00060E                     
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4437  00060E  69BE               	setf	_prec& (0+255),b
  4438  000610  69BF               	setf	(_prec+1)& (0+255),b
  4439  000612                     
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4442  000612  0E00               	movlw	0
  4443  000614  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  4444  000616  0E00               	movlw	0
  4445  000618  6E54               	movwf	vfpfcnvrt@done^0,c
  4446                           
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4448  00061A  EF5A  F003         	goto	l3817
  4449  00061E                     l3791:
  4450                           
  4451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4452  00061E  0100               	movlb	0	; () banked
  4453  000620  81C0               	bsf	_flags& (0+255),0,b
  4454  000622                     l3793:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4458  000622  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4459  000626  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4460  00062A  2ADE               	incf	postinc2,f,c
  4461  00062C  0E00               	movlw	0
  4462  00062E  22DD               	addwfc	postdec2,f,c
  4463                           
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4465  000630  EF5A  F003         	goto	l3817
  4466  000634                     l3795:
  4467                           
  4468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4469  000634  0100               	movlb	0	; () banked
  4470  000636  83C0               	bsf	_flags& (0+255),1,b
  4471  000638  EF11  F003         	goto	l3793
  4472  00063C                     l3799:
  4473                           
  4474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4475  00063C  0100               	movlb	0	; () banked
  4476  00063E  85C0               	bsf	_flags& (0+255),2,b
  4477  000640  EF11  F003         	goto	l3793
  4478  000644                     l3803:
  4479                           
  4480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4481  000644  0100               	movlb	0	; () banked
  4482  000646  87C0               	bsf	_flags& (0+255),3,b
  4483  000648  EF11  F003         	goto	l3793
  4484  00064C                     l3807:
  4485                           
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4487  00064C  0100               	movlb	0	; () banked
  4488  00064E  89C0               	bsf	_flags& (0+255),4,b
  4489  000650  EF11  F003         	goto	l3793
  4490  000654                     l3811:
  4491                           
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4493  000654  0E00               	movlw	0
  4494  000656  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  4495  000658  0E01               	movlw	1
  4496  00065A  6E54               	movwf	vfpfcnvrt@done^0,c
  4497                           
  4498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4499  00065C  EF5A  F003         	goto	l3817
  4500  000660                     l3815:
  4501  000660  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4502  000664  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4503  000668  CFDE FFF6          	movff	postinc2,tblptrl
  4504  00066C  CFDD FFF7          	movff	postdec2,tblptrh
  4505  000670                     	if	0	;tblptru may be non-zero
  4506  000670                     	endif
  4507  000670                     	if	0	;tblptru may be non-zero
  4508  000670                     	endif
  4509  000670  0008               	tblrd		*
  4510  000672  50F5               	movf	tablat,w,c
  4511  000674  6E46               	movwf	??_vfpfcnvrt^0,c
  4512  000676  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  4513                           
  4514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4515                           ; Switch size 1, requested type "simple"
  4516                           ; Number of cases is 1, Range of values is 0 to 0
  4517                           ; switch strategies available:
  4518                           ; Name         Instructions Cycles
  4519                           ; simple_byte            4     3 (average)
  4520                           ;	Chosen strategy is simple_byte
  4521  000678  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4522  00067A  0A00               	xorlw	0	; case 0
  4523  00067C  B4D8               	btfsc	status,2,c
  4524  00067E  EF43  F003         	goto	l5511
  4525  000682  EF2A  F003         	goto	l3811
  4526  000686                     l5511:
  4527                           
  4528                           ; Switch size 1, requested type "simple"
  4529                           ; Number of cases is 5, Range of values is 32 to 48
  4530                           ; switch strategies available:
  4531                           ; Name         Instructions Cycles
  4532                           ; simple_byte           16     9 (average)
  4533                           ;	Chosen strategy is simple_byte
  4534  000686  5046               	movf	??_vfpfcnvrt^0,w,c
  4535  000688  0A20               	xorlw	32	; case 32
  4536  00068A  B4D8               	btfsc	status,2,c
  4537  00068C  EF22  F003         	goto	l3803
  4538  000690  0A03               	xorlw	3	; case 35
  4539  000692  B4D8               	btfsc	status,2,c
  4540  000694  EF26  F003         	goto	l3807
  4541  000698  0A08               	xorlw	8	; case 43
  4542  00069A  B4D8               	btfsc	status,2,c
  4543  00069C  EF1E  F003         	goto	l3799
  4544  0006A0  0A06               	xorlw	6	; case 45
  4545  0006A2  B4D8               	btfsc	status,2,c
  4546  0006A4  EF0F  F003         	goto	l3791
  4547  0006A8  0A1D               	xorlw	29	; case 48
  4548  0006AA  B4D8               	btfsc	status,2,c
  4549  0006AC  EF1A  F003         	goto	l3795
  4550  0006B0  EF2A  F003         	goto	l3811
  4551  0006B4                     l3817:
  4552                           
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4554  0006B4  5054               	movf	vfpfcnvrt@done^0,w,c
  4555  0006B6  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  4556  0006B8  B4D8               	btfsc	status,2,c
  4557  0006BA  EF61  F003         	goto	u2961
  4558  0006BE  EF63  F003         	goto	u2960
  4559  0006C2                     u2961:
  4560  0006C2  EF30  F003         	goto	l3815
  4561  0006C6                     u2960:
  4562  0006C6                     
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4564  0006C6  0100               	movlb	0	; () banked
  4565  0006C8  A1C0               	btfss	_flags& (0+255),0,b
  4566  0006CA  EF69  F003         	goto	u2971
  4567  0006CE  EF6B  F003         	goto	u2970
  4568  0006D2                     u2971:
  4569  0006D2  EF6C  F003         	goto	l3821
  4570  0006D6                     u2970:
  4571  0006D6                     
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4574  0006D6  93C0               	bcf	_flags& (0+255),1,b
  4575  0006D8                     l3821:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4579  0006D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4580  0006DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4581  0006E0  CFDE FFF6          	movff	postinc2,tblptrl
  4582  0006E4  CFDD FFF7          	movff	postdec2,tblptrh
  4583  0006E8                     	if	0	;tblptru may be non-zero
  4584  0006E8                     	endif
  4585  0006E8                     	if	0	;tblptru may be non-zero
  4586  0006E8                     	endif
  4587  0006E8  0008               	tblrd		*
  4588  0006EA  50F5               	movf	tablat,w,c
  4589  0006EC  0A2A               	xorlw	42
  4590  0006EE  A4D8               	btfss	status,2,c
  4591  0006F0  EF7C  F003         	goto	u2981
  4592  0006F4  EF7E  F003         	goto	u2980
  4593  0006F8                     u2981:
  4594  0006F8  EFA7  F003         	goto	l3829
  4595  0006FC                     u2980:
  4596  0006FC                     
  4597                           ; BSR set to: 0
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4599  0006FC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4600  000700  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4601  000704  2ADE               	incf	postinc2,f,c
  4602  000706  0E00               	movlw	0
  4603  000708  22DD               	addwfc	postdec2,f,c
  4604                           
  4605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4606  00070A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4607  00070E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4608  000712  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4609  000716  0E02               	movlw	2
  4610  000718  26DE               	addwf	postinc2,f,c
  4611  00071A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4612  00071E  0E00               	movlw	0
  4613  000720  22DD               	addwfc	postdec2,f,c
  4614  000722  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4615  000726  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4616  00072A  CFDE F0BC          	movff	postinc2,_width
  4617  00072E  CFDD F0BD          	movff	postdec2,_width+1
  4618  000732                     
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4621  000732  BFBD               	btfsc	(_width+1)& (0+255),7,b
  4622  000734  EFA0  F003         	goto	u2990
  4623  000738  EF9E  F003         	goto	u2991
  4624  00073C                     u2991:
  4625  00073C  EFEA  F003         	goto	l3839
  4626  000740                     u2990:
  4627  000740                     
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4630  000740  81C0               	bsf	_flags& (0+255),0,b
  4631                           
  4632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4633  000742  6DBC               	negf	_width& (0+255),b
  4634  000744  1FBD               	comf	(_width+1)& (0+255),f,b
  4635  000746  B0D8               	btfsc	status,0,c
  4636  000748  2BBD               	incf	(_width+1)& (0+255),f,b
  4637  00074A  EFEA  F003         	goto	l3839
  4638  00074E                     l3829:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4642  00074E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4643  000752  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4644  000756  CFDE F008          	movff	postinc2,atoi@s
  4645  00075A  CFDD F009          	movff	postdec2,atoi@s+1
  4646  00075E  EC03  F00E         	call	_atoi	;wreg free
  4647  000762  C008  F0BC         	movff	?_atoi,_width
  4648  000766  C009  F0BD         	movff	?_atoi+1,_width+1
  4649                           
  4650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4651  00076A  EFBE  F003         	goto	l3833
  4652  00076E                     l3831:
  4653                           
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4655  00076E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4656  000772  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4657  000776  2ADE               	incf	postinc2,f,c
  4658  000778  0E00               	movlw	0
  4659  00077A  22DD               	addwfc	postdec2,f,c
  4660  00077C                     l3833:
  4661  00077C  0ED0               	movlw	208
  4662  00077E  6E46               	movwf	??_vfpfcnvrt^0,c
  4663  000780  0EFF               	movlw	255
  4664  000782  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4665  000784  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4666  000788  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4667  00078C  CFDE FFF6          	movff	postinc2,tblptrl
  4668  000790  CFDD FFF7          	movff	postdec2,tblptrh
  4669  000794                     	if	0	;tblptru may be non-zero
  4670  000794                     	endif
  4671  000794                     	if	0	;tblptru may be non-zero
  4672  000794                     	endif
  4673  000794  0008               	tblrd		*
  4674  000796  50F5               	movf	tablat,w,c
  4675  000798  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4676  00079A  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4677  00079C  5046               	movf	??_vfpfcnvrt^0,w,c
  4678  00079E  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4679  0007A0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4680  0007A2  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4681  0007A4  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4682  0007A6  E10A               	bnz	u3000
  4683  0007A8  0E0A               	movlw	10
  4684  0007AA  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4685  0007AC  A0D8               	btfss	status,0,c
  4686  0007AE  EFDB  F003         	goto	u3001
  4687  0007B2  EFDE  F003         	goto	u3000
  4688  0007B6                     u3001:
  4689  0007B6  0E01               	movlw	1
  4690  0007B8  EFDF  F003         	goto	u3010
  4691  0007BC                     u3000:
  4692  0007BC  0E00               	movlw	0
  4693  0007BE                     u3010:
  4694  0007BE  6E56               	movwf	_vfpfcnvrt$827^0,c
  4695  0007C0  6A57               	clrf	(_vfpfcnvrt$827+1)^0,c
  4696  0007C2  5056               	movf	_vfpfcnvrt$827^0,w,c
  4697  0007C4  1057               	iorwf	(_vfpfcnvrt$827+1)^0,w,c
  4698  0007C6  A4D8               	btfss	status,2,c
  4699  0007C8  EFE8  F003         	goto	u3021
  4700  0007CC  EFEA  F003         	goto	u3020
  4701  0007D0                     u3021:
  4702  0007D0  EFB7  F003         	goto	l3831
  4703  0007D4                     u3020:
  4704  0007D4                     l3839:
  4705                           
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4707  0007D4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4708  0007D8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4709  0007DC  CFDE FFF6          	movff	postinc2,tblptrl
  4710  0007E0  CFDD FFF7          	movff	postdec2,tblptrh
  4711  0007E4                     	if	0	;tblptru may be non-zero
  4712  0007E4                     	endif
  4713  0007E4                     	if	0	;tblptru may be non-zero
  4714  0007E4                     	endif
  4715  0007E4  0008               	tblrd		*
  4716  0007E6  50F5               	movf	tablat,w,c
  4717  0007E8  0A2E               	xorlw	46
  4718  0007EA  A4D8               	btfss	status,2,c
  4719  0007EC  EFFA  F003         	goto	u3031
  4720  0007F0  EFFC  F003         	goto	u3030
  4721  0007F4                     u3031:
  4722  0007F4  EF7A  F004         	goto	l3859
  4723  0007F8                     u3030:
  4724  0007F8                     
  4725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4726  0007F8  0E00               	movlw	0
  4727  0007FA  0100               	movlb	0	; () banked
  4728  0007FC  6FBF               	movwf	(_prec+1)& (0+255),b
  4729  0007FE  0E00               	movlw	0
  4730  000800  6FBE               	movwf	_prec& (0+255),b
  4731  000802                     
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4734  000802  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4735  000806  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4736  00080A  2ADE               	incf	postinc2,f,c
  4737  00080C  0E00               	movlw	0
  4738  00080E  22DD               	addwfc	postdec2,f,c
  4739  000810                     
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4742  000810  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4743  000814  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4744  000818  CFDE FFF6          	movff	postinc2,tblptrl
  4745  00081C  CFDD FFF7          	movff	postdec2,tblptrh
  4746  000820                     	if	0	;tblptru may be non-zero
  4747  000820                     	endif
  4748  000820                     	if	0	;tblptru may be non-zero
  4749  000820                     	endif
  4750  000820  0008               	tblrd		*
  4751  000822  50F5               	movf	tablat,w,c
  4752  000824  0A2A               	xorlw	42
  4753  000826  A4D8               	btfss	status,2,c
  4754  000828  EF18  F004         	goto	u3041
  4755  00082C  EF1A  F004         	goto	u3040
  4756  000830                     u3041:
  4757  000830  EF37  F004         	goto	l3849
  4758  000834                     u3040:
  4759  000834                     
  4760                           ; BSR set to: 0
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4762  000834  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4763  000838  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4764  00083C  2ADE               	incf	postinc2,f,c
  4765  00083E  0E00               	movlw	0
  4766  000840  22DD               	addwfc	postdec2,f,c
  4767                           
  4768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4769  000842  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4770  000846  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4771  00084A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4772  00084E  0E02               	movlw	2
  4773  000850  26DE               	addwf	postinc2,f,c
  4774  000852  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4775  000856  0E00               	movlw	0
  4776  000858  22DD               	addwfc	postdec2,f,c
  4777  00085A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4778  00085E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4779  000862  CFDE F0BE          	movff	postinc2,_prec
  4780  000866  CFDD F0BF          	movff	postdec2,_prec+1
  4781                           
  4782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4783  00086A  EF7A  F004         	goto	l3859
  4784  00086E                     l3849:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4788  00086E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4789  000872  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4790  000876  CFDE F008          	movff	postinc2,atoi@s
  4791  00087A  CFDD F009          	movff	postdec2,atoi@s+1
  4792  00087E  EC03  F00E         	call	_atoi	;wreg free
  4793  000882  C008  F0BE         	movff	?_atoi,_prec
  4794  000886  C009  F0BF         	movff	?_atoi+1,_prec+1
  4795                           
  4796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4797  00088A  EF4E  F004         	goto	l3853
  4798  00088E                     l3851:
  4799                           
  4800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4801  00088E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4802  000892  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4803  000896  2ADE               	incf	postinc2,f,c
  4804  000898  0E00               	movlw	0
  4805  00089A  22DD               	addwfc	postdec2,f,c
  4806  00089C                     l3853:
  4807  00089C  0ED0               	movlw	208
  4808  00089E  6E46               	movwf	??_vfpfcnvrt^0,c
  4809  0008A0  0EFF               	movlw	255
  4810  0008A2  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4811  0008A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4812  0008A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4813  0008AC  CFDE FFF6          	movff	postinc2,tblptrl
  4814  0008B0  CFDD FFF7          	movff	postdec2,tblptrh
  4815  0008B4                     	if	0	;tblptru may be non-zero
  4816  0008B4                     	endif
  4817  0008B4                     	if	0	;tblptru may be non-zero
  4818  0008B4                     	endif
  4819  0008B4  0008               	tblrd		*
  4820  0008B6  50F5               	movf	tablat,w,c
  4821  0008B8  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4822  0008BA  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4823  0008BC  5046               	movf	??_vfpfcnvrt^0,w,c
  4824  0008BE  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4825  0008C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4826  0008C2  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4827  0008C4  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4828  0008C6  E10A               	bnz	u3050
  4829  0008C8  0E0A               	movlw	10
  4830  0008CA  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4831  0008CC  A0D8               	btfss	status,0,c
  4832  0008CE  EF6B  F004         	goto	u3051
  4833  0008D2  EF6E  F004         	goto	u3050
  4834  0008D6                     u3051:
  4835  0008D6  0E01               	movlw	1
  4836  0008D8  EF6F  F004         	goto	u3060
  4837  0008DC                     u3050:
  4838  0008DC  0E00               	movlw	0
  4839  0008DE                     u3060:
  4840  0008DE  6E58               	movwf	_vfpfcnvrt$828^0,c
  4841  0008E0  6A59               	clrf	(_vfpfcnvrt$828+1)^0,c
  4842  0008E2  5058               	movf	_vfpfcnvrt$828^0,w,c
  4843  0008E4  1059               	iorwf	(_vfpfcnvrt$828+1)^0,w,c
  4844  0008E6  A4D8               	btfss	status,2,c
  4845  0008E8  EF78  F004         	goto	u3071
  4846  0008EC  EF7A  F004         	goto	u3070
  4847  0008F0                     u3071:
  4848  0008F0  EF47  F004         	goto	l3851
  4849  0008F4                     u3070:
  4850  0008F4                     l3859:
  4851                           
  4852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4853  0008F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4854  0008F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4855  0008FC  CFDE FFF6          	movff	postinc2,tblptrl
  4856  000900  CFDD FFF7          	movff	postdec2,tblptrh
  4857  000904                     	if	0	;tblptru may be non-zero
  4858  000904                     	endif
  4859  000904                     	if	0	;tblptru may be non-zero
  4860  000904                     	endif
  4861  000904  0008               	tblrd		*
  4862  000906  50F5               	movf	tablat,w,c
  4863  000908  0A64               	xorlw	100
  4864  00090A  B4D8               	btfsc	status,2,c
  4865  00090C  EF8A  F004         	goto	u3081
  4866  000910  EF8C  F004         	goto	u3080
  4867  000914                     u3081:
  4868  000914  EF9E  F004         	goto	l3863
  4869  000918                     u3080:
  4870  000918  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4871  00091C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4872  000920  CFDE FFF6          	movff	postinc2,tblptrl
  4873  000924  CFDD FFF7          	movff	postdec2,tblptrh
  4874  000928                     	if	0	;tblptru may be non-zero
  4875  000928                     	endif
  4876  000928                     	if	0	;tblptru may be non-zero
  4877  000928                     	endif
  4878  000928  0008               	tblrd		*
  4879  00092A  50F5               	movf	tablat,w,c
  4880  00092C  0A69               	xorlw	105
  4881  00092E  A4D8               	btfss	status,2,c
  4882  000930  EF9C  F004         	goto	u3091
  4883  000934  EF9E  F004         	goto	u3090
  4884  000938                     u3091:
  4885  000938  EFDE  F004         	goto	l3869
  4886  00093C                     u3090:
  4887  00093C                     l3863:
  4888                           
  4889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4890  00093C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4891  000940  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4892  000944  2ADE               	incf	postinc2,f,c
  4893  000946  0E00               	movlw	0
  4894  000948  22DD               	addwfc	postdec2,f,c
  4895                           
  4896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4897  00094A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4898  00094E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4899  000952  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4900  000956  0E02               	movlw	2
  4901  000958  26DE               	addwf	postinc2,f,c
  4902  00095A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4903  00095E  0E00               	movlw	0
  4904  000960  22DD               	addwfc	postdec2,f,c
  4905  000962  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4906  000966  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4907  00096A  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  4908  00096E  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  4909  000972  0E00               	movlw	0
  4910  000974  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4911  000976  0EFF               	movlw	-1
  4912  000978  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  4913  00097A  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  4914  00097C  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  4915  00097E  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  4916  000980  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  4917  000982  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  4918  000984                     
  4919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4920  000984  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4921  000988  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4922  00098C  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4923  000990  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4924  000994  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4925  000998  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4926  00099C  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4927  0009A0  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4928  0009A4  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4929  0009A8  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4930  0009AC  ECDD  F00A         	call	_dtoa	;wreg free
  4931  0009B0  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4932  0009B4  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4933  0009B8  EF6C  F005         	goto	l583
  4934  0009BC                     l3869:
  4935                           
  4936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4937  0009BC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4938  0009C0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4939  0009C4  CFDE FFF6          	movff	postinc2,tblptrl
  4940  0009C8  CFDD FFF7          	movff	postdec2,tblptrh
  4941  0009CC                     	if	0	;tblptru may be non-zero
  4942  0009CC                     	endif
  4943  0009CC                     	if	0	;tblptru may be non-zero
  4944  0009CC                     	endif
  4945  0009CC  0008               	tblrd		*
  4946  0009CE  50F5               	movf	tablat,w,c
  4947  0009D0  0A73               	xorlw	115
  4948  0009D2  A4D8               	btfss	status,2,c
  4949  0009D4  EFEE  F004         	goto	u3101
  4950  0009D8  EFF0  F004         	goto	u3100
  4951  0009DC                     u3101:
  4952  0009DC  EF1B  F005         	goto	l3877
  4953  0009E0                     u3100:
  4954  0009E0                     
  4955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4956  0009E0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4957  0009E4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4958  0009E8  2ADE               	incf	postinc2,f,c
  4959  0009EA  0E00               	movlw	0
  4960  0009EC  22DD               	addwfc	postdec2,f,c
  4961                           
  4962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4963  0009EE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4964  0009F2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4965  0009F6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4966  0009FA  0E02               	movlw	2
  4967  0009FC  26DE               	addwf	postinc2,f,c
  4968  0009FE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4969  000A02  0E00               	movlw	0
  4970  000A04  22DD               	addwfc	postdec2,f,c
  4971  000A06  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4972  000A0A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4973  000A0E  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  4974  000A12  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  4975  000A16                     
  4976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4977  000A16  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  4978  000A1A  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4979  000A1E  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  4980  000A22  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4981  000A26  EC8F  F00F         	call	_stoa	;wreg free
  4982  000A2A  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  4983  000A2E  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  4984  000A32  EF6C  F005         	goto	l583
  4985  000A36                     l3877:
  4986                           
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4988  000A36  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4989  000A3A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4990  000A3E  CFDE FFF6          	movff	postinc2,tblptrl
  4991  000A42  CFDD FFF7          	movff	postdec2,tblptrh
  4992  000A46                     	if	0	;tblptru may be non-zero
  4993  000A46                     	endif
  4994  000A46                     	if	0	;tblptru may be non-zero
  4995  000A46                     	endif
  4996  000A46  0008               	tblrd		*
  4997  000A48  50F5               	movf	tablat,w,c
  4998  000A4A  0A25               	xorlw	37
  4999  000A4C  A4D8               	btfss	status,2,c
  5000  000A4E  EF2B  F005         	goto	u3111
  5001  000A52  EF2D  F005         	goto	u3110
  5002  000A56                     u3111:
  5003  000A56  EF44  F005         	goto	l3887
  5004  000A5A                     u3110:
  5005  000A5A                     
  5006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5007  000A5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5008  000A5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5009  000A62  2ADE               	incf	postinc2,f,c
  5010  000A64  0E00               	movlw	0
  5011  000A66  22DD               	addwfc	postdec2,f,c
  5012  000A68                     
  5013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5014  000A68  0E00               	movlw	0
  5015  000A6A  6E02               	movwf	(fputc@c+1)^0,c
  5016  000A6C  0E25               	movlw	37
  5017  000A6E  6E01               	movwf	fputc@c^0,c
  5018  000A70  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5019  000A74  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5020  000A78  EC5A  F015         	call	_fputc	;wreg free
  5021  000A7C                     l3883:
  5022                           
  5023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5024  000A7C  0E00               	movlw	0
  5025  000A7E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5026  000A80  0E01               	movlw	1
  5027  000A82  6E40               	movwf	?_vfpfcnvrt^0,c
  5028  000A84  EF6C  F005         	goto	l583
  5029  000A88                     l3887:
  5030                           
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5032  000A88  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5033  000A8C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5034  000A90  2ADE               	incf	postinc2,f,c
  5035  000A92  0E00               	movlw	0
  5036  000A94  22DD               	addwfc	postdec2,f,c
  5037  000A96                     
  5038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5039  000A96  0E00               	movlw	0
  5040  000A98  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5041  000A9A  0E00               	movlw	0
  5042  000A9C  6E40               	movwf	?_vfpfcnvrt^0,c
  5043  000A9E  EF6C  F005         	goto	l583
  5044  000AA2                     l3893:
  5045                           
  5046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5047  000AA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5048  000AA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5049  000AAA  CFDE FFF6          	movff	postinc2,tblptrl
  5050  000AAE  CFDD FFF7          	movff	postdec2,tblptrh
  5051  000AB2                     	if	0	;tblptru may be non-zero
  5052  000AB2                     	endif
  5053  000AB2                     	if	0	;tblptru may be non-zero
  5054  000AB2                     	endif
  5055  000AB2  0008               	tblrd		*
  5056  000AB4  50F5               	movf	tablat,w,c
  5057  000AB6  6E01               	movwf	fputc@c^0,c
  5058  000AB8  6A02               	clrf	(fputc@c+1)^0,c
  5059  000ABA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5060  000ABE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5061  000AC2  EC5A  F015         	call	_fputc	;wreg free
  5062  000AC6                     
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5064  000AC6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  000ACA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  000ACE  2ADE               	incf	postinc2,f,c
  5067  000AD0  0E00               	movlw	0
  5068  000AD2  22DD               	addwfc	postdec2,f,c
  5069  000AD4  EF3E  F005         	goto	l3883
  5070  000AD8                     l583:
  5071  000AD8  0012               	return		;funcret
  5072  000ADA                     __end_of_vfpfcnvrt:
  5073                           	opt callstack 0
  5074                           
  5075 ;; *************** function _stoa *****************
  5076 ;; Defined at:
  5077 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5080 ;;		 -> sprintf@f(6), 
  5081 ;;  s               2   11[COMRAM] PTR unsigned char 
  5082 ;;		 -> ?_sprintf(2), horarios(288), 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5085 ;;  l               2   29[COMRAM] int 
  5086 ;;  p               2   27[COMRAM] int 
  5087 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5088 ;;		 -> ?_sprintf(2), stoa@nuls(7), horarios(288), 
  5089 ;;  w               2   23[COMRAM] int 
  5090 ;;  i               2   21[COMRAM] int 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  2    9[COMRAM] int 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5100 ;;      Params:         4       0       0       0       0       0       0       0       0
  5101 ;;      Locals:        17       0       0       0       0       0       0       0       0
  5102 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5103 ;;      Totals:        22       0       0       0       0       0       0       0       0
  5104 ;;Total ram usage:       22 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    3
  5107 ;; This function calls:
  5108 ;;		_fputc
  5109 ;;		_strlen
  5110 ;; This function is called by:
  5111 ;;		_vfpfcnvrt
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text19
  5116  001F1E                     __ptext19:
  5117                           	opt callstack 0
  5118  001F1E                     _stoa:
  5119                           	opt callstack 22
  5120  001F1E                     
  5121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5122  001F1E  EE20  F0D7         	lfsr	2,stoa@F1139
  5123  001F22  EE10  F00F         	lfsr	1,stoa@nuls
  5124  001F26  0E06               	movlw	6
  5125  001F28                     u2731:
  5126  001F28  CFDB FFE3          	movff	plusw2,plusw1
  5127  001F2C  06E8               	decf	wreg,f,c
  5128  001F2E  E2FC               	bc	u2731
  5129  001F30                     
  5130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  5131  001F30  C00C  F01A         	movff	stoa@s,stoa@cp
  5132  001F34  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5133  001F38                     
  5134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  5135  001F38  501A               	movf	stoa@cp^0,w,c
  5136  001F3A  101B               	iorwf	(stoa@cp+1)^0,w,c
  5137  001F3C  A4D8               	btfss	status,2,c
  5138  001F3E  EFA3  F00F         	goto	u2741
  5139  001F42  EFA5  F00F         	goto	u2740
  5140  001F46                     u2741:
  5141  001F46  EFA9  F00F         	goto	l3661
  5142  001F4A                     u2740:
  5143  001F4A                     
  5144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  5145  001F4A  0E0F               	movlw	low stoa@nuls
  5146  001F4C  6E1A               	movwf	stoa@cp^0,c
  5147  001F4E  0E00               	movlw	high stoa@nuls
  5148  001F50  6E1B               	movwf	(stoa@cp+1)^0,c
  5149  001F52                     l3661:
  5150                           
  5151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  5152  001F52  C01A  F001         	movff	stoa@cp,strlen@s
  5153  001F56  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5154  001F5A  ECCB  F01B         	call	_strlen	;wreg free
  5155  001F5E  C001  F01E         	movff	?_strlen,stoa@l
  5156  001F62  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5157  001F66                     
  5158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  5159  001F66  C0BE  F01C         	movff	_prec,stoa@p
  5160  001F6A  C0BF  F01D         	movff	_prec+1,stoa@p+1
  5161  001F6E                     
  5162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  5163  001F6E  BE1D               	btfsc	(stoa@p+1)^0,7,c
  5164  001F70  EFBC  F00F         	goto	u2751
  5165  001F74  EFBE  F00F         	goto	u2750
  5166  001F78                     u2751:
  5167  001F78  EFD3  F00F         	goto	l530
  5168  001F7C                     u2750:
  5169  001F7C  501E               	movf	stoa@l^0,w,c
  5170  001F7E  5C1C               	subwf	stoa@p^0,w,c
  5171  001F80  501D               	movf	(stoa@p+1)^0,w,c
  5172  001F82  0A80               	xorlw	128
  5173  001F84  6E0E               	movwf	??_stoa^0,c
  5174  001F86  501F               	movf	(stoa@l+1)^0,w,c
  5175  001F88  0A80               	xorlw	128
  5176  001F8A  580E               	subwfb	??_stoa^0,w,c
  5177  001F8C  A0D8               	btfss	status,0,c
  5178  001F8E  EFCB  F00F         	goto	u2761
  5179  001F92  EFCD  F00F         	goto	u2760
  5180  001F96                     u2761:
  5181  001F96  EFCF  F00F         	goto	l528
  5182  001F9A                     u2760:
  5183  001F9A  EFD3  F00F         	goto	l530
  5184  001F9E                     l528:
  5185  001F9E  C01C  F01E         	movff	stoa@p,stoa@l
  5186  001FA2  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5187  001FA6                     l530:
  5188                           
  5189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  5190  001FA6  C01E  F01C         	movff	stoa@l,stoa@p
  5191  001FAA  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5192                           
  5193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  5194  001FAE  C0BC  F018         	movff	_width,stoa@w
  5195  001FB2  C0BD  F019         	movff	_width+1,stoa@w+1
  5196                           
  5197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  5198  001FB6  0100               	movlb	0	; () banked
  5199  001FB8  B1C0               	btfsc	_flags& (0+255),0,b
  5200  001FBA  EFE1  F00F         	goto	u2771
  5201  001FBE  EFE3  F00F         	goto	u2770
  5202  001FC2                     u2771:
  5203  001FC2  EF00  F010         	goto	l3677
  5204  001FC6                     u2770:
  5205  001FC6  EFF1  F00F         	goto	l3675
  5206  001FCA                     l3671:
  5207                           
  5208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  5209  001FCA  0E00               	movlw	0
  5210  001FCC  6E02               	movwf	(fputc@c+1)^0,c
  5211  001FCE  0E20               	movlw	32
  5212  001FD0  6E01               	movwf	fputc@c^0,c
  5213  001FD2  C00A  F003         	movff	stoa@fp,fputc@fp
  5214  001FD6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5215  001FDA  EC5A  F015         	call	_fputc	;wreg free
  5216  001FDE                     
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  5218  001FDE  4A1E               	infsnz	stoa@l^0,f,c
  5219  001FE0  2A1F               	incf	(stoa@l+1)^0,f,c
  5220  001FE2                     l3675:
  5221                           
  5222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  5223  001FE2  5018               	movf	stoa@w^0,w,c
  5224  001FE4  5C1E               	subwf	stoa@l^0,w,c
  5225  001FE6  501F               	movf	(stoa@l+1)^0,w,c
  5226  001FE8  0A80               	xorlw	128
  5227  001FEA  6E0E               	movwf	??_stoa^0,c
  5228  001FEC  5019               	movf	(stoa@w+1)^0,w,c
  5229  001FEE  0A80               	xorlw	128
  5230  001FF0  580E               	subwfb	??_stoa^0,w,c
  5231  001FF2  A0D8               	btfss	status,0,c
  5232  001FF4  EFFE  F00F         	goto	u2781
  5233  001FF8  EF00  F010         	goto	u2780
  5234  001FFC                     u2781:
  5235  001FFC  EFE5  F00F         	goto	l3671
  5236  002000                     u2780:
  5237  002000                     l3677:
  5238                           
  5239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  5240  002000  0E00               	movlw	0
  5241  002002  6E17               	movwf	(stoa@i+1)^0,c
  5242  002004  0E00               	movlw	0
  5243  002006  6E16               	movwf	stoa@i^0,c
  5244                           
  5245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5246  002008  EF19  F010         	goto	l3685
  5247  00200C                     l3679:
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  5250  00200C  C01A  FFD9         	movff	stoa@cp,fsr2l
  5251  002010  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5252  002014  50DF               	movf	indf2,w,c
  5253  002016  6E0E               	movwf	??_stoa^0,c
  5254  002018  500E               	movf	??_stoa^0,w,c
  5255  00201A  6E01               	movwf	fputc@c^0,c
  5256  00201C  6A02               	clrf	(fputc@c+1)^0,c
  5257  00201E  C00A  F003         	movff	stoa@fp,fputc@fp
  5258  002022  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5259  002026  EC5A  F015         	call	_fputc	;wreg free
  5260  00202A                     
  5261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  5262  00202A  4A1A               	infsnz	stoa@cp^0,f,c
  5263  00202C  2A1B               	incf	(stoa@cp+1)^0,f,c
  5264  00202E                     
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  5266  00202E  4A16               	infsnz	stoa@i^0,f,c
  5267  002030  2A17               	incf	(stoa@i+1)^0,f,c
  5268  002032                     l3685:
  5269                           
  5270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5271  002032  501C               	movf	stoa@p^0,w,c
  5272  002034  5C16               	subwf	stoa@i^0,w,c
  5273  002036  5017               	movf	(stoa@i+1)^0,w,c
  5274  002038  0A80               	xorlw	128
  5275  00203A  6E0E               	movwf	??_stoa^0,c
  5276  00203C  501D               	movf	(stoa@p+1)^0,w,c
  5277  00203E  0A80               	xorlw	128
  5278  002040  580E               	subwfb	??_stoa^0,w,c
  5279  002042  A0D8               	btfss	status,0,c
  5280  002044  EF26  F010         	goto	u2791
  5281  002048  EF28  F010         	goto	u2790
  5282  00204C                     u2791:
  5283  00204C  EF06  F010         	goto	l3679
  5284  002050                     u2790:
  5285  002050                     
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  5287  002050  0100               	movlb	0	; () banked
  5288  002052  A1C0               	btfss	_flags& (0+255),0,b
  5289  002054  EF2E  F010         	goto	u2801
  5290  002058  EF30  F010         	goto	u2800
  5291  00205C                     u2801:
  5292  00205C  EF4D  F010         	goto	l540
  5293  002060                     u2800:
  5294  002060  EF3E  F010         	goto	l3693
  5295  002064                     l3689:
  5296                           
  5297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  5298  002064  0E00               	movlw	0
  5299  002066  6E02               	movwf	(fputc@c+1)^0,c
  5300  002068  0E20               	movlw	32
  5301  00206A  6E01               	movwf	fputc@c^0,c
  5302  00206C  C00A  F003         	movff	stoa@fp,fputc@fp
  5303  002070  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5304  002074  EC5A  F015         	call	_fputc	;wreg free
  5305  002078                     
  5306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  5307  002078  4A1E               	infsnz	stoa@l^0,f,c
  5308  00207A  2A1F               	incf	(stoa@l+1)^0,f,c
  5309  00207C                     l3693:
  5310                           
  5311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  5312  00207C  5018               	movf	stoa@w^0,w,c
  5313  00207E  5C1E               	subwf	stoa@l^0,w,c
  5314  002080  501F               	movf	(stoa@l+1)^0,w,c
  5315  002082  0A80               	xorlw	128
  5316  002084  6E0E               	movwf	??_stoa^0,c
  5317  002086  5019               	movf	(stoa@w+1)^0,w,c
  5318  002088  0A80               	xorlw	128
  5319  00208A  580E               	subwfb	??_stoa^0,w,c
  5320  00208C  A0D8               	btfss	status,0,c
  5321  00208E  EF4B  F010         	goto	u2811
  5322  002092  EF4D  F010         	goto	u2810
  5323  002096                     u2811:
  5324  002096  EF32  F010         	goto	l3689
  5325  00209A                     u2810:
  5326  00209A                     l540:
  5327                           
  5328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  5329  00209A  C01E  F00A         	movff	stoa@l,?_stoa
  5330  00209E  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5331  0020A2  0012               	return		;funcret
  5332  0020A4                     __end_of_stoa:
  5333                           	opt callstack 0
  5334                           
  5335 ;; *************** function _dtoa *****************
  5336 ;; Defined at:
  5337 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5340 ;;		 -> sprintf@f(6), 
  5341 ;;  d               8   29[COMRAM] long long 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  n               8   53[COMRAM] long long 
  5344 ;;  i               2   61[COMRAM] int 
  5345 ;;  s               2   51[COMRAM] int 
  5346 ;;  w               2   49[COMRAM] int 
  5347 ;;  p               2   47[COMRAM] int 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  2   27[COMRAM] int 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5357 ;;      Params:        10       0       0       0       0       0       0       0       0
  5358 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5359 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5360 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5361 ;;Total ram usage:       36 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    5
  5364 ;; This function calls:
  5365 ;;		___aodiv
  5366 ;;		___aomod
  5367 ;;		_abs
  5368 ;;		_pad
  5369 ;; This function is called by:
  5370 ;;		_vfpfcnvrt
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text20
  5375  0015BA                     __ptext20:
  5376                           	opt callstack 0
  5377  0015BA                     _dtoa:
  5378                           	opt callstack 20
  5379  0015BA                     
  5380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5381  0015BA  C01E  F036         	movff	dtoa@d,dtoa@n
  5382  0015BE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5383  0015C2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5384  0015C6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5385  0015CA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5386  0015CE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5387  0015D2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5388  0015D6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5389  0015DA                     
  5390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5391  0015DA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5392  0015DC  EFF2  F00A         	goto	u2581
  5393  0015E0  EFF5  F00A         	goto	u2580
  5394  0015E4                     u2581:
  5395  0015E4  0E01               	movlw	1
  5396  0015E6  EFF6  F00A         	goto	u2590
  5397  0015EA                     u2580:
  5398  0015EA  0E00               	movlw	0
  5399  0015EC                     u2590:
  5400  0015EC  6E34               	movwf	dtoa@s^0,c
  5401  0015EE  6A35               	clrf	(dtoa@s+1)^0,c
  5402                           
  5403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5404  0015F0  5034               	movf	dtoa@s^0,w,c
  5405  0015F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  5406  0015F4  B4D8               	btfsc	status,2,c
  5407  0015F6  EFFF  F00A         	goto	u2601
  5408  0015FA  EF01  F00B         	goto	u2600
  5409  0015FE                     u2601:
  5410  0015FE  EF11  F00B         	goto	l3597
  5411  001602                     u2600:
  5412  001602                     
  5413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5414  001602  1E3D               	comf	(dtoa@n+7)^0,f,c
  5415  001604  1E3C               	comf	(dtoa@n+6)^0,f,c
  5416  001606  1E3B               	comf	(dtoa@n+5)^0,f,c
  5417  001608  1E3A               	comf	(dtoa@n+4)^0,f,c
  5418  00160A  1E39               	comf	(dtoa@n+3)^0,f,c
  5419  00160C  1E38               	comf	(dtoa@n+2)^0,f,c
  5420  00160E  1E37               	comf	(dtoa@n+1)^0,f,c
  5421  001610  6C36               	negf	dtoa@n^0,c
  5422  001612  0E00               	movlw	0
  5423  001614  2237               	addwfc	(dtoa@n+1)^0,f,c
  5424  001616  2238               	addwfc	(dtoa@n+2)^0,f,c
  5425  001618  2239               	addwfc	(dtoa@n+3)^0,f,c
  5426  00161A  223A               	addwfc	(dtoa@n+4)^0,f,c
  5427  00161C  223B               	addwfc	(dtoa@n+5)^0,f,c
  5428  00161E  223C               	addwfc	(dtoa@n+6)^0,f,c
  5429  001620  223D               	addwfc	(dtoa@n+7)^0,f,c
  5430  001622                     l3597:
  5431                           
  5432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5433  001622  0100               	movlb	0	; () banked
  5434  001624  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  5435  001626  EF17  F00B         	goto	u2611
  5436  00162A  EF19  F00B         	goto	u2610
  5437  00162E                     u2611:
  5438  00162E  EF1A  F00B         	goto	l3601
  5439  001632                     u2610:
  5440  001632                     
  5441                           ; BSR set to: 0
  5442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5443  001632  93C0               	bcf	_flags& (0+255),1,b
  5444  001634                     l3601:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5448  001634  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  5449  001636  EF27  F00B         	goto	u2620
  5450  00163A  51BF               	movf	(_prec+1)& (0+255),w,b
  5451  00163C  E106               	bnz	u2621
  5452  00163E  05BE               	decf	_prec& (0+255),w,b
  5453  001640  B0D8               	btfsc	status,0,c
  5454  001642  EF25  F00B         	goto	u2621
  5455  001646  EF27  F00B         	goto	u2620
  5456  00164A                     u2621:
  5457  00164A  EF2D  F00B         	goto	l501
  5458  00164E                     u2620:
  5459  00164E                     
  5460                           ; BSR set to: 0
  5461  00164E  0E00               	movlw	0
  5462  001650  6E31               	movwf	(dtoa@p+1)^0,c
  5463  001652  0E01               	movlw	1
  5464  001654  6E30               	movwf	dtoa@p^0,c
  5465  001656  EF31  F00B         	goto	l503
  5466  00165A                     l501:
  5467                           
  5468                           ; BSR set to: 0
  5469  00165A  C0BE  F030         	movff	_prec,dtoa@p
  5470  00165E  C0BF  F031         	movff	_prec+1,dtoa@p+1
  5471  001662                     l503:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5475  001662  C0BC  F032         	movff	_width,dtoa@w
  5476  001666  C0BD  F033         	movff	_width+1,dtoa@w+1
  5477  00166A                     
  5478                           ; BSR set to: 0
  5479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5480  00166A  5034               	movf	dtoa@s^0,w,c
  5481  00166C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5482  00166E  A4D8               	btfss	status,2,c
  5483  001670  EF3C  F00B         	goto	u2631
  5484  001674  EF3E  F00B         	goto	u2630
  5485  001678                     u2631:
  5486  001678  EF45  F00B         	goto	l3609
  5487  00167C                     u2630:
  5488  00167C                     
  5489                           ; BSR set to: 0
  5490  00167C  A5C0               	btfss	_flags& (0+255),2,b
  5491  00167E  EF43  F00B         	goto	u2641
  5492  001682  EF45  F00B         	goto	u2640
  5493  001686                     u2641:
  5494  001686  EF48  F00B         	goto	l3611
  5495  00168A                     u2640:
  5496  00168A                     l3609:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5500  00168A  0632               	decf	dtoa@w^0,f,c
  5501  00168C  A0D8               	btfss	status,0,c
  5502  00168E  0633               	decf	(dtoa@w+1)^0,f,c
  5503  001690                     l3611:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5507  001690  0E00               	movlw	0
  5508  001692  6E3F               	movwf	(dtoa@i+1)^0,c
  5509  001694  0E1F               	movlw	31
  5510  001696  6E3E               	movwf	dtoa@i^0,c
  5511  001698                     
  5512                           ; BSR set to: 0
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5514  001698  0E00               	movlw	0
  5515  00169A  0101               	movlb	1	; () banked
  5516  00169C  6F51               	movwf	(_dbuf+31)& (0+255),b
  5517                           
  5518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5519  00169E  EFCD  F00B         	goto	l3625
  5520  0016A2                     l3615:
  5521                           
  5522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5523  0016A2  063E               	decf	dtoa@i^0,f,c
  5524  0016A4  A0D8               	btfss	status,0,c
  5525  0016A6  063F               	decf	(dtoa@i+1)^0,f,c
  5526  0016A8                     
  5527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5528  0016A8  0E32               	movlw	low _dbuf
  5529  0016AA  243E               	addwf	dtoa@i^0,w,c
  5530  0016AC  6ED9               	movwf	fsr2l,c
  5531  0016AE  0E01               	movlw	high _dbuf
  5532  0016B0  203F               	addwfc	(dtoa@i+1)^0,w,c
  5533  0016B2  6EDA               	movwf	fsr2h,c
  5534  0016B4  C036  F001         	movff	dtoa@n,___aomod@dividend
  5535  0016B8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5536  0016BC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5537  0016C0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5538  0016C4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5539  0016C8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5540  0016CC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5541  0016D0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5542  0016D4  0E0A               	movlw	10
  5543  0016D6  6E09               	movwf	___aomod@divisor^0,c
  5544  0016D8  0E00               	movlw	0
  5545  0016DA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5546  0016DC  0E00               	movlw	0
  5547  0016DE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5548  0016E0  0E00               	movlw	0
  5549  0016E2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5550  0016E4  0E00               	movlw	0
  5551  0016E6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5552  0016E8  0E00               	movlw	0
  5553  0016EA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5554  0016EC  0E00               	movlw	0
  5555  0016EE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5556  0016F0  0E00               	movlw	0
  5557  0016F2  6E10               	movwf	(___aomod@divisor+7)^0,c
  5558  0016F4  ECC6  F011         	call	___aomod	;wreg free
  5559  0016F8  C001  F026         	movff	?___aomod,??_dtoa
  5560  0016FC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5561  001700  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5562  001704  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5563  001708  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5564  00170C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5565  001710  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5566  001714  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5567  001718  C026  F013         	movff	??_dtoa,abs@a
  5568  00171C  C028  F014         	movff	??_dtoa+2,abs@a+1
  5569  001720  EC32  F01B         	call	_abs	;wreg free
  5570  001724  5013               	movf	?_abs^0,w,c
  5571  001726  0F30               	addlw	48
  5572  001728  6EDF               	movwf	indf2,c
  5573  00172A                     
  5574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5575  00172A  0630               	decf	dtoa@p^0,f,c
  5576  00172C  A0D8               	btfss	status,0,c
  5577  00172E  0631               	decf	(dtoa@p+1)^0,f,c
  5578  001730                     
  5579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5580  001730  0632               	decf	dtoa@w^0,f,c
  5581  001732  A0D8               	btfss	status,0,c
  5582  001734  0633               	decf	(dtoa@w+1)^0,f,c
  5583  001736                     
  5584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5585  001736  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5586  00173A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5587  00173E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5588  001742  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5589  001746  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5590  00174A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5591  00174E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5592  001752  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5593  001756  0E0A               	movlw	10
  5594  001758  6E09               	movwf	___aodiv@divisor^0,c
  5595  00175A  0E00               	movlw	0
  5596  00175C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5597  00175E  0E00               	movlw	0
  5598  001760  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5599  001762  0E00               	movlw	0
  5600  001764  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5601  001766  0E00               	movlw	0
  5602  001768  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5603  00176A  0E00               	movlw	0
  5604  00176C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5605  00176E  0E00               	movlw	0
  5606  001770  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5607  001772  0E00               	movlw	0
  5608  001774  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5609  001776  ECCB  F00E         	call	___aodiv	;wreg free
  5610  00177A  C001  F036         	movff	?___aodiv,dtoa@n
  5611  00177E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5612  001782  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5613  001786  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5614  00178A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5615  00178E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5616  001792  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5617  001796  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5618  00179A                     l3625:
  5619                           
  5620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5621  00179A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5622  00179C  EFD8  F00B         	goto	u2651
  5623  0017A0  503F               	movf	(dtoa@i+1)^0,w,c
  5624  0017A2  E108               	bnz	u2650
  5625  0017A4  043E               	decf	dtoa@i^0,w,c
  5626  0017A6  A0D8               	btfss	status,0,c
  5627  0017A8  EFD8  F00B         	goto	u2651
  5628  0017AC  EFDA  F00B         	goto	u2650
  5629  0017B0                     u2651:
  5630  0017B0  EF0B  F00C         	goto	l3635
  5631  0017B4                     u2650:
  5632  0017B4  5036               	movf	dtoa@n^0,w,c
  5633  0017B6  1037               	iorwf	(dtoa@n+1)^0,w,c
  5634  0017B8  1038               	iorwf	(dtoa@n+2)^0,w,c
  5635  0017BA  1039               	iorwf	(dtoa@n+3)^0,w,c
  5636  0017BC  103A               	iorwf	(dtoa@n+4)^0,w,c
  5637  0017BE  103B               	iorwf	(dtoa@n+5)^0,w,c
  5638  0017C0  103C               	iorwf	(dtoa@n+6)^0,w,c
  5639  0017C2  103D               	iorwf	(dtoa@n+7)^0,w,c
  5640  0017C4  A4D8               	btfss	status,2,c
  5641  0017C6  EFE7  F00B         	goto	u2661
  5642  0017CA  EFE9  F00B         	goto	u2660
  5643  0017CE                     u2661:
  5644  0017CE  EF51  F00B         	goto	l3615
  5645  0017D2                     u2660:
  5646  0017D2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5647  0017D4  EFF6  F00B         	goto	u2670
  5648  0017D8  5031               	movf	(dtoa@p+1)^0,w,c
  5649  0017DA  E106               	bnz	u2671
  5650  0017DC  0430               	decf	dtoa@p^0,w,c
  5651  0017DE  B0D8               	btfsc	status,0,c
  5652  0017E0  EFF4  F00B         	goto	u2671
  5653  0017E4  EFF6  F00B         	goto	u2670
  5654  0017E8                     u2671:
  5655  0017E8  EF51  F00B         	goto	l3615
  5656  0017EC                     u2670:
  5657  0017EC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5658  0017EE  EF01  F00C         	goto	u2681
  5659  0017F2  5033               	movf	(dtoa@w+1)^0,w,c
  5660  0017F4  E108               	bnz	u2680
  5661  0017F6  0432               	decf	dtoa@w^0,w,c
  5662  0017F8  A0D8               	btfss	status,0,c
  5663  0017FA  EF01  F00C         	goto	u2681
  5664  0017FE  EF03  F00C         	goto	u2680
  5665  001802                     u2681:
  5666  001802  EF0B  F00C         	goto	l3635
  5667  001806                     u2680:
  5668  001806  0100               	movlb	0	; () banked
  5669  001808  B3C0               	btfsc	_flags& (0+255),1,b
  5670  00180A  EF09  F00C         	goto	u2691
  5671  00180E  EF0B  F00C         	goto	u2690
  5672  001812                     u2691:
  5673  001812  EF51  F00B         	goto	l3615
  5674  001816                     u2690:
  5675  001816                     l3635:
  5676                           
  5677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5678  001816  5034               	movf	dtoa@s^0,w,c
  5679  001818  1035               	iorwf	(dtoa@s+1)^0,w,c
  5680  00181A  A4D8               	btfss	status,2,c
  5681  00181C  EF12  F00C         	goto	u2701
  5682  001820  EF14  F00C         	goto	u2700
  5683  001824                     u2701:
  5684  001824  EF1C  F00C         	goto	l3639
  5685  001828                     u2700:
  5686  001828  0100               	movlb	0	; () banked
  5687  00182A  A5C0               	btfss	_flags& (0+255),2,b
  5688  00182C  EF1A  F00C         	goto	u2711
  5689  001830  EF1C  F00C         	goto	u2710
  5690  001834                     u2711:
  5691  001834  EF3A  F00C         	goto	l3649
  5692  001838                     u2710:
  5693  001838                     l3639:
  5694                           
  5695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5696  001838  063E               	decf	dtoa@i^0,f,c
  5697  00183A  A0D8               	btfss	status,0,c
  5698  00183C  063F               	decf	(dtoa@i+1)^0,f,c
  5699  00183E                     
  5700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5701  00183E  5034               	movf	dtoa@s^0,w,c
  5702  001840  1035               	iorwf	(dtoa@s+1)^0,w,c
  5703  001842  A4D8               	btfss	status,2,c
  5704  001844  EF26  F00C         	goto	u2721
  5705  001848  EF28  F00C         	goto	u2720
  5706  00184C                     u2721:
  5707  00184C  EF2E  F00C         	goto	l3645
  5708  001850                     u2720:
  5709  001850  0E00               	movlw	0
  5710  001852  6E2F               	movwf	(_dtoa$801+1)^0,c
  5711  001854  0E2B               	movlw	43
  5712  001856  6E2E               	movwf	_dtoa$801^0,c
  5713  001858  EF32  F00C         	goto	l3647
  5714  00185C                     l3645:
  5715  00185C  0E00               	movlw	0
  5716  00185E  6E2F               	movwf	(_dtoa$801+1)^0,c
  5717  001860  0E2D               	movlw	45
  5718  001862  6E2E               	movwf	_dtoa$801^0,c
  5719  001864                     l3647:
  5720  001864  0E32               	movlw	low _dbuf
  5721  001866  243E               	addwf	dtoa@i^0,w,c
  5722  001868  6ED9               	movwf	fsr2l,c
  5723  00186A  0E01               	movlw	high _dbuf
  5724  00186C  203F               	addwfc	(dtoa@i+1)^0,w,c
  5725  00186E  6EDA               	movwf	fsr2h,c
  5726  001870  C02E  FFDF         	movff	_dtoa$801,indf2
  5727  001874                     l3649:
  5728                           
  5729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5730  001874  C01C  F011         	movff	dtoa@fp,pad@fp
  5731  001878  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5732  00187C  0E32               	movlw	low _dbuf
  5733  00187E  243E               	addwf	dtoa@i^0,w,c
  5734  001880  6E13               	movwf	pad@buf^0,c
  5735  001882  0E01               	movlw	high _dbuf
  5736  001884  203F               	addwfc	(dtoa@i+1)^0,w,c
  5737  001886  6E14               	movwf	(pad@buf+1)^0,c
  5738  001888  C032  F015         	movff	dtoa@w,pad@p
  5739  00188C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5740  001890  ECBF  F015         	call	_pad	;wreg free
  5741  001894  C011  F01C         	movff	?_pad,?_dtoa
  5742  001898  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5743  00189C  0012               	return		;funcret
  5744  00189E                     __end_of_dtoa:
  5745                           	opt callstack 0
  5746                           
  5747 ;; *************** function _pad *****************
  5748 ;; Defined at:
  5749 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5752 ;;		 -> sprintf@f(6), 
  5753 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5754 ;;		 -> dbuf(32), 
  5755 ;;  p               2   20[COMRAM] int 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  w               2   25[COMRAM] int 
  5758 ;;  i               2   23[COMRAM] int 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  2   16[COMRAM] int 
  5761 ;; Registers used:
  5762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5768 ;;      Params:         6       0       0       0       0       0       0       0       0
  5769 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5770 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5771 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5772 ;;Total ram usage:       11 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    4
  5775 ;; This function calls:
  5776 ;;		_fputc
  5777 ;;		_fputs
  5778 ;;		_strlen
  5779 ;; This function is called by:
  5780 ;;		_dtoa
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text21
  5785  002B7E                     __ptext21:
  5786                           	opt callstack 0
  5787  002B7E                     _pad:
  5788                           	opt callstack 20
  5789  002B7E                     
  5790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5791  002B7E  0100               	movlb	0	; () banked
  5792  002B80  A1C0               	btfss	_flags& (0+255),0,b
  5793  002B82  EFC5  F015         	goto	u2341
  5794  002B86  EFC7  F015         	goto	u2340
  5795  002B8A                     u2341:
  5796  002B8A  EFD1  F015         	goto	l3461
  5797  002B8E                     u2340:
  5798  002B8E                     
  5799                           ; BSR set to: 0
  5800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5801  002B8E  C013  F00A         	movff	pad@buf,fputs@s
  5802  002B92  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5803  002B96  C011  F00C         	movff	pad@fp,fputs@fp
  5804  002B9A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5805  002B9E  EC10  F01B         	call	_fputs	;wreg free
  5806  002BA2                     l3461:
  5807                           
  5808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5809  002BA2  BE16               	btfsc	(pad@p+1)^0,7,c
  5810  002BA4  EFD6  F015         	goto	u2351
  5811  002BA8  EFD8  F015         	goto	u2350
  5812  002BAC                     u2351:
  5813  002BAC  EFDE  F015         	goto	l3465
  5814  002BB0                     u2350:
  5815  002BB0  C015  F01A         	movff	pad@p,pad@w
  5816  002BB4  C016  F01B         	movff	pad@p+1,pad@w+1
  5817  002BB8  EFE2  F015         	goto	l490
  5818  002BBC                     l3465:
  5819  002BBC  0E00               	movlw	0
  5820  002BBE  6E1B               	movwf	(pad@w+1)^0,c
  5821  002BC0  0E00               	movlw	0
  5822  002BC2  6E1A               	movwf	pad@w^0,c
  5823  002BC4                     l490:
  5824                           
  5825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5826  002BC4  0E00               	movlw	0
  5827  002BC6  6E19               	movwf	(pad@i+1)^0,c
  5828  002BC8  0E00               	movlw	0
  5829  002BCA  6E18               	movwf	pad@i^0,c
  5830                           
  5831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5832  002BCC  EFF4  F015         	goto	l3471
  5833  002BD0                     l3467:
  5834                           
  5835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5836  002BD0  0E00               	movlw	0
  5837  002BD2  6E02               	movwf	(fputc@c+1)^0,c
  5838  002BD4  0E20               	movlw	32
  5839  002BD6  6E01               	movwf	fputc@c^0,c
  5840  002BD8  C011  F003         	movff	pad@fp,fputc@fp
  5841  002BDC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5842  002BE0  EC5A  F015         	call	_fputc	;wreg free
  5843  002BE4                     
  5844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5845  002BE4  4A18               	infsnz	pad@i^0,f,c
  5846  002BE6  2A19               	incf	(pad@i+1)^0,f,c
  5847  002BE8                     l3471:
  5848                           
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5850  002BE8  501A               	movf	pad@w^0,w,c
  5851  002BEA  5C18               	subwf	pad@i^0,w,c
  5852  002BEC  5019               	movf	(pad@i+1)^0,w,c
  5853  002BEE  0A80               	xorlw	128
  5854  002BF0  6E17               	movwf	??_pad^0,c
  5855  002BF2  501B               	movf	(pad@w+1)^0,w,c
  5856  002BF4  0A80               	xorlw	128
  5857  002BF6  5817               	subwfb	??_pad^0,w,c
  5858  002BF8  A0D8               	btfss	status,0,c
  5859  002BFA  EF01  F016         	goto	u2361
  5860  002BFE  EF03  F016         	goto	u2360
  5861  002C02                     u2361:
  5862  002C02  EFE8  F015         	goto	l3467
  5863  002C06                     u2360:
  5864  002C06                     
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5866  002C06  0100               	movlb	0	; () banked
  5867  002C08  B1C0               	btfsc	_flags& (0+255),0,b
  5868  002C0A  EF09  F016         	goto	u2371
  5869  002C0E  EF0B  F016         	goto	u2370
  5870  002C12                     u2371:
  5871  002C12  EF15  F016         	goto	l3475
  5872  002C16                     u2370:
  5873  002C16                     
  5874                           ; BSR set to: 0
  5875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5876  002C16  C013  F00A         	movff	pad@buf,fputs@s
  5877  002C1A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5878  002C1E  C011  F00C         	movff	pad@fp,fputs@fp
  5879  002C22  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5880  002C26  EC10  F01B         	call	_fputs	;wreg free
  5881  002C2A                     l3475:
  5882                           
  5883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5884  002C2A  C013  F001         	movff	pad@buf,strlen@s
  5885  002C2E  C014  F002         	movff	pad@buf+1,strlen@s+1
  5886  002C32  ECCB  F01B         	call	_strlen	;wreg free
  5887  002C36  501A               	movf	pad@w^0,w,c
  5888  002C38  2401               	addwf	?_strlen^0,w,c
  5889  002C3A  6E11               	movwf	?_pad^0,c
  5890  002C3C  501B               	movf	(pad@w+1)^0,w,c
  5891  002C3E  2002               	addwfc	(?_strlen+1)^0,w,c
  5892  002C40  6E12               	movwf	(?_pad+1)^0,c
  5893  002C42  0012               	return		;funcret
  5894  002C44                     __end_of_pad:
  5895                           	opt callstack 0
  5896                           
  5897 ;; *************** function _strlen *****************
  5898 ;; Defined at:
  5899 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5902 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5905 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  2    0[COMRAM] unsigned int 
  5908 ;; Registers used:
  5909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5915 ;;      Params:         2       0       0       0       0       0       0       0       0
  5916 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5918 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5919 ;;Total ram usage:        4 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    1
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_pad
  5926 ;;		_stoa
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text22
  5931  003796                     __ptext22:
  5932                           	opt callstack 0
  5933  003796                     _strlen:
  5934                           	opt callstack 23
  5935  003796  C001  F003         	movff	strlen@s,strlen@a
  5936  00379A  C002  F004         	movff	strlen@s+1,strlen@a+1
  5937  00379E  EFD3  F01B         	goto	l3451
  5938  0037A2                     l3449:
  5939  0037A2  4A01               	infsnz	strlen@s^0,f,c
  5940  0037A4  2A02               	incf	(strlen@s+1)^0,f,c
  5941  0037A6                     l3451:
  5942  0037A6  C001  FFD9         	movff	strlen@s,fsr2l
  5943  0037AA  C002  FFDA         	movff	strlen@s+1,fsr2h
  5944  0037AE  50DF               	movf	indf2,w,c
  5945  0037B0  A4D8               	btfss	status,2,c
  5946  0037B2  EFDD  F01B         	goto	u2331
  5947  0037B6  EFDF  F01B         	goto	u2330
  5948  0037BA                     u2331:
  5949  0037BA  EFD1  F01B         	goto	l3449
  5950  0037BE                     u2330:
  5951  0037BE  5003               	movf	strlen@a^0,w,c
  5952  0037C0  5C01               	subwf	strlen@s^0,w,c
  5953  0037C2  6E01               	movwf	?_strlen^0,c
  5954  0037C4  5004               	movf	(strlen@a+1)^0,w,c
  5955  0037C6  5802               	subwfb	(strlen@s+1)^0,w,c
  5956  0037C8  6E02               	movwf	(?_strlen+1)^0,c
  5957  0037CA  0012               	return		;funcret
  5958  0037CC                     __end_of_strlen:
  5959                           	opt callstack 0
  5960                           
  5961 ;; *************** function _fputs *****************
  5962 ;; Defined at:
  5963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5966 ;;		 -> dbuf(32), 
  5967 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5968 ;;		 -> sprintf@f(6), 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  i               2   14[COMRAM] int 
  5971 ;;  c               1   13[COMRAM] unsigned char 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  2    9[COMRAM] int 
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5981 ;;      Params:         4       0       0       0       0       0       0       0       0
  5982 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5984 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5985 ;;Total ram usage:        7 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    3
  5988 ;; This function calls:
  5989 ;;		_fputc
  5990 ;; This function is called by:
  5991 ;;		_pad
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text23
  5996  003620                     __ptext23:
  5997                           	opt callstack 0
  5998  003620                     _fputs:
  5999                           	opt callstack 20
  6000  003620  0E00               	movlw	0
  6001  003622  6E10               	movwf	(fputs@i+1)^0,c
  6002  003624  0E00               	movlw	0
  6003  003626  6E0F               	movwf	fputs@i^0,c
  6004  003628  EF21  F01B         	goto	l3445
  6005  00362C                     l3441:
  6006  00362C  C00E  F001         	movff	fputs@c,fputc@c
  6007  003630  6A02               	clrf	(fputc@c+1)^0,c
  6008  003632  C00C  F003         	movff	fputs@fp,fputc@fp
  6009  003636  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6010  00363A  EC5A  F015         	call	_fputc	;wreg free
  6011  00363E  4A0F               	infsnz	fputs@i^0,f,c
  6012  003640  2A10               	incf	(fputs@i+1)^0,f,c
  6013  003642                     l3445:
  6014  003642  500F               	movf	fputs@i^0,w,c
  6015  003644  240A               	addwf	fputs@s^0,w,c
  6016  003646  6ED9               	movwf	fsr2l,c
  6017  003648  5010               	movf	(fputs@i+1)^0,w,c
  6018  00364A  200B               	addwfc	(fputs@s+1)^0,w,c
  6019  00364C  6EDA               	movwf	fsr2h,c
  6020  00364E  50DF               	movf	indf2,w,c
  6021  003650  6E0E               	movwf	fputs@c^0,c
  6022  003652  500E               	movf	fputs@c^0,w,c
  6023  003654  A4D8               	btfss	status,2,c
  6024  003656  EF2F  F01B         	goto	u2321
  6025  00365A  EF31  F01B         	goto	u2320
  6026  00365E                     u2321:
  6027  00365E  EF16  F01B         	goto	l3441
  6028  003662                     u2320:
  6029  003662  0012               	return		;funcret
  6030  003664                     __end_of_fputs:
  6031                           	opt callstack 0
  6032                           
  6033 ;; *************** function _fputc *****************
  6034 ;; Defined at:
  6035 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  c               2    0[COMRAM] int 
  6038 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6039 ;;		 -> sprintf@f(6), 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  2    0[COMRAM] int 
  6044 ;; Registers used:
  6045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         4       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6054 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:        9 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    2
  6058 ;; This function calls:
  6059 ;;		_putch
  6060 ;; This function is called by:
  6061 ;;		_pad
  6062 ;;		_stoa
  6063 ;;		_vfpfcnvrt
  6064 ;;		_fputs
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text24
  6069  002AB4                     __ptext24:
  6070                           	opt callstack 0
  6071  002AB4                     _fputc:
  6072                           	opt callstack 22
  6073  002AB4  5003               	movf	fputc@fp^0,w,c
  6074  002AB6  1004               	iorwf	(fputc@fp+1)^0,w,c
  6075  002AB8  B4D8               	btfsc	status,2,c
  6076  002ABA  EF61  F015         	goto	u2281
  6077  002ABE  EF63  F015         	goto	u2280
  6078  002AC2                     u2281:
  6079  002AC2  EF6C  F015         	goto	l3429
  6080  002AC6                     u2280:
  6081  002AC6  5003               	movf	fputc@fp^0,w,c
  6082  002AC8  1004               	iorwf	(fputc@fp+1)^0,w,c
  6083  002ACA  A4D8               	btfss	status,2,c
  6084  002ACC  EF6A  F015         	goto	u2291
  6085  002AD0  EF6C  F015         	goto	u2290
  6086  002AD4                     u2291:
  6087  002AD4  EF71  F015         	goto	l3431
  6088  002AD8                     u2290:
  6089  002AD8                     l3429:
  6090  002AD8  5001               	movf	fputc@c^0,w,c
  6091  002ADA  ECF0  F01C         	call	_putch
  6092  002ADE  EFBE  F015         	goto	l1329
  6093  002AE2                     l3431:
  6094  002AE2  EE20 F004          	lfsr	2,4
  6095  002AE6  5003               	movf	fputc@fp^0,w,c
  6096  002AE8  26D9               	addwf	fsr2l,f,c
  6097  002AEA  5004               	movf	(fputc@fp+1)^0,w,c
  6098  002AEC  22DA               	addwfc	fsr2h,f,c
  6099  002AEE  50DE               	movf	postinc2,w,c
  6100  002AF0  10DE               	iorwf	postinc2,w,c
  6101  002AF2  B4D8               	btfsc	status,2,c
  6102  002AF4  EF7E  F015         	goto	u2301
  6103  002AF8  EF80  F015         	goto	u2300
  6104  002AFC                     u2301:
  6105  002AFC  EF9B  F015         	goto	l3435
  6106  002B00                     u2300:
  6107  002B00  EE20 F004          	lfsr	2,4
  6108  002B04  5003               	movf	fputc@fp^0,w,c
  6109  002B06  26D9               	addwf	fsr2l,f,c
  6110  002B08  5004               	movf	(fputc@fp+1)^0,w,c
  6111  002B0A  22DA               	addwfc	fsr2h,f,c
  6112  002B0C  EE10 F002          	lfsr	1,2
  6113  002B10  5003               	movf	fputc@fp^0,w,c
  6114  002B12  26E1               	addwf	fsr1l,f,c
  6115  002B14  5004               	movf	(fputc@fp+1)^0,w,c
  6116  002B16  22E2               	addwfc	fsr1h,f,c
  6117  002B18  50DE               	movf	postinc2,w,c
  6118  002B1A  5CE6               	subwf	postinc1,w,c
  6119  002B1C  50E6               	movf	postinc1,w,c
  6120  002B1E  0A80               	xorlw	128
  6121  002B20  6E09               	movwf	(??_fputc+4)^0,c
  6122  002B22  50DE               	movf	postinc2,w,c
  6123  002B24  0A80               	xorlw	128
  6124  002B26  5809               	subwfb	(??_fputc+4)^0,w,c
  6125  002B28  B0D8               	btfsc	status,0,c
  6126  002B2A  EF99  F015         	goto	u2311
  6127  002B2E  EF9B  F015         	goto	u2310
  6128  002B32                     u2311:
  6129  002B32  EFBE  F015         	goto	l1329
  6130  002B36                     u2310:
  6131  002B36                     l3435:
  6132  002B36  EE20 F002          	lfsr	2,2
  6133  002B3A  5003               	movf	fputc@fp^0,w,c
  6134  002B3C  26D9               	addwf	fsr2l,f,c
  6135  002B3E  5004               	movf	(fputc@fp+1)^0,w,c
  6136  002B40  22DA               	addwfc	fsr2h,f,c
  6137  002B42  CFDE F005          	movff	postinc2,??_fputc
  6138  002B46  CFDD F006          	movff	postdec2,??_fputc+1
  6139  002B4A  C003  FFD9         	movff	fputc@fp,fsr2l
  6140  002B4E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6141  002B52  CFDE F007          	movff	postinc2,??_fputc+2
  6142  002B56  CFDD F008          	movff	postdec2,??_fputc+3
  6143  002B5A  5005               	movf	??_fputc^0,w,c
  6144  002B5C  2407               	addwf	(??_fputc+2)^0,w,c
  6145  002B5E  6ED9               	movwf	fsr2l,c
  6146  002B60  5006               	movf	(??_fputc+1)^0,w,c
  6147  002B62  2008               	addwfc	(??_fputc+3)^0,w,c
  6148  002B64  6EDA               	movwf	fsr2h,c
  6149  002B66  C001  FFDF         	movff	fputc@c,indf2
  6150  002B6A  EE20 F002          	lfsr	2,2
  6151  002B6E  5003               	movf	fputc@fp^0,w,c
  6152  002B70  26D9               	addwf	fsr2l,f,c
  6153  002B72  5004               	movf	(fputc@fp+1)^0,w,c
  6154  002B74  22DA               	addwfc	fsr2h,f,c
  6155  002B76  2ADE               	incf	postinc2,f,c
  6156  002B78  0E00               	movlw	0
  6157  002B7A  22DD               	addwfc	postdec2,f,c
  6158  002B7C                     l1329:
  6159  002B7C  0012               	return		;funcret
  6160  002B7E                     __end_of_fputc:
  6161                           	opt callstack 0
  6162                           
  6163 ;; *************** function _putch *****************
  6164 ;; Defined at:
  6165 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  c               1    wreg     unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  c               1    0[COMRAM] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6179 ;;      Params:         0       0       0       0       0       0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6182 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6183 ;;Total ram usage:        0 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    1
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_fputc
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text25
  6194  0039E0                     __ptext25:
  6195                           	opt callstack 0
  6196  0039E0                     _putch:
  6197                           	opt callstack 22
  6198  0039E0  0012               	return		;funcret
  6199  0039E2                     __end_of_putch:
  6200                           	opt callstack 0
  6201                           
  6202 ;; *************** function _abs *****************
  6203 ;; Defined at:
  6204 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  a               2   18[COMRAM] int 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  2   18[COMRAM] int 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6218 ;;      Params:         2       0       0       0       0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6220 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6221 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6222 ;;Total ram usage:        4 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    1
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_dtoa
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text26
  6233  003664                     __ptext26:
  6234                           	opt callstack 0
  6235  003664                     _abs:
  6236                           	opt callstack 23
  6237  003664  BE14               	btfsc	(abs@a+1)^0,7,c
  6238  003666  EF3F  F01B         	goto	u2380
  6239  00366A  5014               	movf	(abs@a+1)^0,w,c
  6240  00366C  E106               	bnz	u2381
  6241  00366E  0413               	decf	abs@a^0,w,c
  6242  003670  B0D8               	btfsc	status,0,c
  6243  003672  EF3D  F01B         	goto	u2381
  6244  003676  EF3F  F01B         	goto	u2380
  6245  00367A                     u2381:
  6246  00367A  EF4D  F01B         	goto	l1269
  6247  00367E                     u2380:
  6248  00367E  C013  F015         	movff	abs@a,??_abs
  6249  003682  C014  F016         	movff	abs@a+1,??_abs+1
  6250  003686  1E15               	comf	??_abs^0,f,c
  6251  003688  1E16               	comf	(??_abs+1)^0,f,c
  6252  00368A  4A15               	infsnz	??_abs^0,f,c
  6253  00368C  2A16               	incf	(??_abs+1)^0,f,c
  6254  00368E  C015  F013         	movff	??_abs,?_abs
  6255  003692  C016  F014         	movff	??_abs+1,?_abs+1
  6256  003696  EF51  F01B         	goto	l1272
  6257  00369A                     l1269:
  6258  00369A  C013  F013         	movff	abs@a,?_abs
  6259  00369E  C014  F014         	movff	abs@a+1,?_abs+1
  6260  0036A2                     l1272:
  6261  0036A2  0012               	return		;funcret
  6262  0036A4                     __end_of_abs:
  6263                           	opt callstack 0
  6264                           
  6265 ;; *************** function ___aomod *****************
  6266 ;; Defined at:
  6267 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  dividend        8    0[COMRAM] long long 
  6270 ;;  divisor         8    8[COMRAM] long long 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  sign            1   17[COMRAM] unsigned char 
  6273 ;;  counter         1   16[COMRAM] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  8    0[COMRAM] long long 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2, status,0
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6283 ;;      Params:        16       0       0       0       0       0       0       0       0
  6284 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6286 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6287 ;;Total ram usage:       18 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    1
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_dtoa
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text27
  6298  00238C                     __ptext27:
  6299                           	opt callstack 0
  6300  00238C                     ___aomod:
  6301                           	opt callstack 23
  6302  00238C  0E00               	movlw	0
  6303  00238E  6E12               	movwf	___aomod@sign^0,c
  6304  002390  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6305  002392  EFCF  F011         	goto	u2480
  6306  002396  EFCD  F011         	goto	u2481
  6307  00239A                     u2481:
  6308  00239A  EFE1  F011         	goto	l3545
  6309  00239E                     u2480:
  6310  00239E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6311  0023A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6312  0023A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6313  0023A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6314  0023A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6315  0023A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6316  0023AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6317  0023AC  6C01               	negf	___aomod@dividend^0,c
  6318  0023AE  0E00               	movlw	0
  6319  0023B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6320  0023B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6321  0023B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6322  0023B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6323  0023B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6324  0023BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6325  0023BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6326  0023BE  0E01               	movlw	1
  6327  0023C0  6E12               	movwf	___aomod@sign^0,c
  6328  0023C2                     l3545:
  6329  0023C2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6330  0023C4  EFE8  F011         	goto	u2490
  6331  0023C8  EFE6  F011         	goto	u2491
  6332  0023CC                     u2491:
  6333  0023CC  EFF8  F011         	goto	l3549
  6334  0023D0                     u2490:
  6335  0023D0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6336  0023D2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6337  0023D4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6338  0023D6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6339  0023D8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6340  0023DA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6341  0023DC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6342  0023DE  6C09               	negf	___aomod@divisor^0,c
  6343  0023E0  0E00               	movlw	0
  6344  0023E2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6345  0023E4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6346  0023E6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6347  0023E8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6348  0023EA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6349  0023EC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6350  0023EE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6351  0023F0                     l3549:
  6352  0023F0  5009               	movf	___aomod@divisor^0,w,c
  6353  0023F2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6354  0023F4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6355  0023F6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6356  0023F8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6357  0023FA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6358  0023FC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6359  0023FE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6360  002400  B4D8               	btfsc	status,2,c
  6361  002402  EF05  F012         	goto	u2501
  6362  002406  EF07  F012         	goto	u2500
  6363  00240A                     u2501:
  6364  00240A  EF4F  F012         	goto	l3565
  6365  00240E                     u2500:
  6366  00240E  0E01               	movlw	1
  6367  002410  6E11               	movwf	___aomod@counter^0,c
  6368  002412  EF15  F012         	goto	l3555
  6369  002416                     l3553:
  6370  002416  90D8               	bcf	status,0,c
  6371  002418  3609               	rlcf	___aomod@divisor^0,f,c
  6372  00241A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6373  00241C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6374  00241E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6375  002420  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6376  002422  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6377  002424  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6378  002426  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6379  002428  2A11               	incf	___aomod@counter^0,f,c
  6380  00242A                     l3555:
  6381  00242A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6382  00242C  EF1A  F012         	goto	u2511
  6383  002430  EF1C  F012         	goto	u2510
  6384  002434                     u2511:
  6385  002434  EF0B  F012         	goto	l3553
  6386  002438                     u2510:
  6387  002438                     l3557:
  6388  002438  5009               	movf	___aomod@divisor^0,w,c
  6389  00243A  5C01               	subwf	___aomod@dividend^0,w,c
  6390  00243C  500A               	movf	(___aomod@divisor+1)^0,w,c
  6391  00243E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6392  002440  500B               	movf	(___aomod@divisor+2)^0,w,c
  6393  002442  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6394  002444  500C               	movf	(___aomod@divisor+3)^0,w,c
  6395  002446  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6396  002448  500D               	movf	(___aomod@divisor+4)^0,w,c
  6397  00244A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6398  00244C  500E               	movf	(___aomod@divisor+5)^0,w,c
  6399  00244E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6400  002450  500F               	movf	(___aomod@divisor+6)^0,w,c
  6401  002452  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6402  002454  5010               	movf	(___aomod@divisor+7)^0,w,c
  6403  002456  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6404  002458  A0D8               	btfss	status,0,c
  6405  00245A  EF31  F012         	goto	u2521
  6406  00245E  EF33  F012         	goto	u2520
  6407  002462                     u2521:
  6408  002462  EF43  F012         	goto	l3561
  6409  002466                     u2520:
  6410  002466  5009               	movf	___aomod@divisor^0,w,c
  6411  002468  5E01               	subwf	___aomod@dividend^0,f,c
  6412  00246A  500A               	movf	(___aomod@divisor+1)^0,w,c
  6413  00246C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6414  00246E  500B               	movf	(___aomod@divisor+2)^0,w,c
  6415  002470  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6416  002472  500C               	movf	(___aomod@divisor+3)^0,w,c
  6417  002474  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6418  002476  500D               	movf	(___aomod@divisor+4)^0,w,c
  6419  002478  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6420  00247A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6421  00247C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6422  00247E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6423  002480  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6424  002482  5010               	movf	(___aomod@divisor+7)^0,w,c
  6425  002484  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6426  002486                     l3561:
  6427  002486  90D8               	bcf	status,0,c
  6428  002488  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6429  00248A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6430  00248C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6431  00248E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6432  002490  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6433  002492  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6434  002494  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6435  002496  3209               	rrcf	___aomod@divisor^0,f,c
  6436  002498  2E11               	decfsz	___aomod@counter^0,f,c
  6437  00249A  EF1C  F012         	goto	l3557
  6438  00249E                     l3565:
  6439  00249E  5012               	movf	___aomod@sign^0,w,c
  6440  0024A0  B4D8               	btfsc	status,2,c
  6441  0024A2  EF55  F012         	goto	u2531
  6442  0024A6  EF57  F012         	goto	u2530
  6443  0024AA                     u2531:
  6444  0024AA  EF67  F012         	goto	l3569
  6445  0024AE                     u2530:
  6446  0024AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6447  0024B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6448  0024B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6449  0024B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6450  0024B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6451  0024B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6452  0024BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6453  0024BC  6C01               	negf	___aomod@dividend^0,c
  6454  0024BE  0E00               	movlw	0
  6455  0024C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6456  0024C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6457  0024C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6458  0024C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6459  0024C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6460  0024CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6461  0024CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6462  0024CE                     l3569:
  6463  0024CE  C001  F001         	movff	___aomod@dividend,?___aomod
  6464  0024D2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6465  0024D6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6466  0024DA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6467  0024DE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6468  0024E2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6469  0024E6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6470  0024EA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6471  0024EE  0012               	return		;funcret
  6472  0024F0                     __end_of___aomod:
  6473                           	opt callstack 0
  6474                           
  6475 ;; *************** function ___aodiv *****************
  6476 ;; Defined at:
  6477 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  dividend        8    0[COMRAM] long long 
  6480 ;;  divisor         8    8[COMRAM] long long 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  quotient        8   18[COMRAM] long long 
  6483 ;;  sign            1   17[COMRAM] unsigned char 
  6484 ;;  counter         1   16[COMRAM] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  8    0[COMRAM] long long 
  6487 ;; Registers used:
  6488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6494 ;;      Params:        16       0       0       0       0       0       0       0       0
  6495 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6497 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6498 ;;Total ram usage:       26 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_dtoa
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text28
  6509  001D96                     __ptext28:
  6510                           	opt callstack 0
  6511  001D96                     ___aodiv:
  6512                           	opt callstack 23
  6513  001D96  0E00               	movlw	0
  6514  001D98  6E12               	movwf	___aodiv@sign^0,c
  6515  001D9A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6516  001D9C  EFD4  F00E         	goto	u2410
  6517  001DA0  EFD2  F00E         	goto	u2411
  6518  001DA4                     u2411:
  6519  001DA4  EFE6  F00E         	goto	l3501
  6520  001DA8                     u2410:
  6521  001DA8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6522  001DAA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6523  001DAC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6524  001DAE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6525  001DB0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6526  001DB2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6527  001DB4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6528  001DB6  6C09               	negf	___aodiv@divisor^0,c
  6529  001DB8  0E00               	movlw	0
  6530  001DBA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6531  001DBC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6532  001DBE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6533  001DC0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6534  001DC2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6535  001DC4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6536  001DC6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6537  001DC8  0E01               	movlw	1
  6538  001DCA  6E12               	movwf	___aodiv@sign^0,c
  6539  001DCC                     l3501:
  6540  001DCC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6541  001DCE  EFED  F00E         	goto	u2420
  6542  001DD2  EFEB  F00E         	goto	u2421
  6543  001DD6                     u2421:
  6544  001DD6  EFFF  F00E         	goto	l3507
  6545  001DDA                     u2420:
  6546  001DDA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6547  001DDC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6548  001DDE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6549  001DE0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6550  001DE2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6551  001DE4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6552  001DE6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6553  001DE8  6C01               	negf	___aodiv@dividend^0,c
  6554  001DEA  0E00               	movlw	0
  6555  001DEC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6556  001DEE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6557  001DF0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6558  001DF2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6559  001DF4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6560  001DF6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6561  001DF8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6562  001DFA  0E01               	movlw	1
  6563  001DFC  1A12               	xorwf	___aodiv@sign^0,f,c
  6564  001DFE                     l3507:
  6565  001DFE  EE20  F013         	lfsr	2,___aodiv@quotient
  6566  001E02  0E07               	movlw	7
  6567  001E04                     u2431:
  6568  001E04  6ADE               	clrf	postinc2,c
  6569  001E06  06E8               	decf	wreg,f,c
  6570  001E08  E2FD               	bc	u2431
  6571  001E0A  5009               	movf	___aodiv@divisor^0,w,c
  6572  001E0C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6573  001E0E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6574  001E10  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6575  001E12  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6576  001E14  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6577  001E16  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6578  001E18  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6579  001E1A  B4D8               	btfsc	status,2,c
  6580  001E1C  EF12  F00F         	goto	u2441
  6581  001E20  EF14  F00F         	goto	u2440
  6582  001E24                     u2441:
  6583  001E24  EF66  F00F         	goto	l3529
  6584  001E28                     u2440:
  6585  001E28  0E01               	movlw	1
  6586  001E2A  6E11               	movwf	___aodiv@counter^0,c
  6587  001E2C  EF22  F00F         	goto	l3515
  6588  001E30                     l3513:
  6589  001E30  90D8               	bcf	status,0,c
  6590  001E32  3609               	rlcf	___aodiv@divisor^0,f,c
  6591  001E34  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6592  001E36  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6593  001E38  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6594  001E3A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6595  001E3C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6596  001E3E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6597  001E40  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6598  001E42  2A11               	incf	___aodiv@counter^0,f,c
  6599  001E44                     l3515:
  6600  001E44  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6601  001E46  EF27  F00F         	goto	u2451
  6602  001E4A  EF29  F00F         	goto	u2450
  6603  001E4E                     u2451:
  6604  001E4E  EF18  F00F         	goto	l3513
  6605  001E52                     u2450:
  6606  001E52                     l3517:
  6607  001E52  90D8               	bcf	status,0,c
  6608  001E54  3613               	rlcf	___aodiv@quotient^0,f,c
  6609  001E56  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6610  001E58  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6611  001E5A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6612  001E5C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6613  001E5E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6614  001E60  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6615  001E62  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6616  001E64  5009               	movf	___aodiv@divisor^0,w,c
  6617  001E66  5C01               	subwf	___aodiv@dividend^0,w,c
  6618  001E68  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6619  001E6A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6620  001E6C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6621  001E6E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6622  001E70  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6623  001E72  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6624  001E74  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6625  001E76  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6626  001E78  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6627  001E7A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6628  001E7C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6629  001E7E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6630  001E80  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6631  001E82  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6632  001E84  A0D8               	btfss	status,0,c
  6633  001E86  EF47  F00F         	goto	u2461
  6634  001E8A  EF49  F00F         	goto	u2460
  6635  001E8E                     u2461:
  6636  001E8E  EF5A  F00F         	goto	l3525
  6637  001E92                     u2460:
  6638  001E92  5009               	movf	___aodiv@divisor^0,w,c
  6639  001E94  5E01               	subwf	___aodiv@dividend^0,f,c
  6640  001E96  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6641  001E98  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6642  001E9A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6643  001E9C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6644  001E9E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6645  001EA0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6646  001EA2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6647  001EA4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6648  001EA6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6649  001EA8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6650  001EAA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6651  001EAC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6652  001EAE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6653  001EB0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6654  001EB2  8013               	bsf	___aodiv@quotient^0,0,c
  6655  001EB4                     l3525:
  6656  001EB4  90D8               	bcf	status,0,c
  6657  001EB6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6658  001EB8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6659  001EBA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6660  001EBC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6661  001EBE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6662  001EC0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6663  001EC2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6664  001EC4  3209               	rrcf	___aodiv@divisor^0,f,c
  6665  001EC6  2E11               	decfsz	___aodiv@counter^0,f,c
  6666  001EC8  EF29  F00F         	goto	l3517
  6667  001ECC                     l3529:
  6668  001ECC  5012               	movf	___aodiv@sign^0,w,c
  6669  001ECE  B4D8               	btfsc	status,2,c
  6670  001ED0  EF6C  F00F         	goto	u2471
  6671  001ED4  EF6E  F00F         	goto	u2470
  6672  001ED8                     u2471:
  6673  001ED8  EF7E  F00F         	goto	l3533
  6674  001EDC                     u2470:
  6675  001EDC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6676  001EDE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6677  001EE0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6678  001EE2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6679  001EE4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6680  001EE6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6681  001EE8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6682  001EEA  6C13               	negf	___aodiv@quotient^0,c
  6683  001EEC  0E00               	movlw	0
  6684  001EEE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6685  001EF0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6686  001EF2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6687  001EF4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6688  001EF6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6689  001EF8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6690  001EFA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6691  001EFC                     l3533:
  6692  001EFC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6693  001F00  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6694  001F04  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6695  001F08  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6696  001F0C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6697  001F10  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6698  001F14  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6699  001F18  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6700  001F1C  0012               	return		;funcret
  6701  001F1E                     __end_of___aodiv:
  6702                           	opt callstack 0
  6703                           
  6704 ;; *************** function _atoi *****************
  6705 ;; Defined at:
  6706 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6709 ;;		 -> STR_26(23), STR_25(24), STR_19(36), STR_18(37), 
  6710 ;;		 -> STR_17(36), STR_16(39), STR_15(36), STR_14(35), 
  6711 ;;		 -> STR_13(37), STR_12(19), 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  n               2   20[COMRAM] int 
  6714 ;;  neg             2   13[COMRAM] int 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  2    7[COMRAM] int 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6724 ;;      Params:         2       0       0       0       0       0       0       0       0
  6725 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6726 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6727 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6728 ;;Total ram usage:       15 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    2
  6731 ;; This function calls:
  6732 ;;		___wmul
  6733 ;;		_isdigit
  6734 ;;		_isspace
  6735 ;; This function is called by:
  6736 ;;		_vfpfcnvrt
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text29
  6741  001C06                     __ptext29:
  6742                           	opt callstack 0
  6743  001C06                     _atoi:
  6744                           	opt callstack 23
  6745  001C06  0E00               	movlw	0
  6746  001C08  6E16               	movwf	(atoi@n+1)^0,c
  6747  001C0A  0E00               	movlw	0
  6748  001C0C  6E15               	movwf	atoi@n^0,c
  6749  001C0E  0E00               	movlw	0
  6750  001C10  6E0F               	movwf	(atoi@neg+1)^0,c
  6751  001C12  0E00               	movlw	0
  6752  001C14  6E0E               	movwf	atoi@neg^0,c
  6753  001C16  EF0F  F00E         	goto	l3699
  6754  001C1A                     l3697:
  6755  001C1A  4A08               	infsnz	atoi@s^0,f,c
  6756  001C1C  2A09               	incf	(atoi@s+1)^0,f,c
  6757  001C1E                     l3699:
  6758  001C1E  0E01               	movlw	1
  6759  001C20  6E14               	movwf	_atoi$1287^0,c
  6760  001C22  C008  FFF6         	movff	atoi@s,tblptrl
  6761  001C26  C009  FFF7         	movff	atoi@s+1,tblptrh
  6762  001C2A                     	if	0	;tblptru may be non-zero
  6763  001C2A                     	endif
  6764  001C2A                     	if	0	;tblptru may be non-zero
  6765  001C2A                     	endif
  6766  001C2A  0008               	tblrd		*
  6767  001C2C  50F5               	movf	tablat,w,c
  6768  001C2E  0A20               	xorlw	32
  6769  001C30  B4D8               	btfsc	status,2,c
  6770  001C32  EF1D  F00E         	goto	u2821
  6771  001C36  EF1F  F00E         	goto	u2820
  6772  001C3A                     u2821:
  6773  001C3A  EF3C  F00E         	goto	l3707
  6774  001C3E                     u2820:
  6775  001C3E  0EF7               	movlw	247
  6776  001C40  6E0A               	movwf	??_atoi^0,c
  6777  001C42  0EFF               	movlw	255
  6778  001C44  6E0B               	movwf	(??_atoi+1)^0,c
  6779  001C46  C008  FFF6         	movff	atoi@s,tblptrl
  6780  001C4A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6781  001C4E                     	if	0	;tblptru may be non-zero
  6782  001C4E                     	endif
  6783  001C4E                     	if	0	;tblptru may be non-zero
  6784  001C4E                     	endif
  6785  001C4E  0008               	tblrd		*
  6786  001C50  50F5               	movf	tablat,w,c
  6787  001C52  6E0C               	movwf	(??_atoi+2)^0,c
  6788  001C54  6A0D               	clrf	(??_atoi+3)^0,c
  6789  001C56  500A               	movf	??_atoi^0,w,c
  6790  001C58  260C               	addwf	(??_atoi+2)^0,f,c
  6791  001C5A  500B               	movf	(??_atoi+1)^0,w,c
  6792  001C5C  220D               	addwfc	(??_atoi+3)^0,f,c
  6793  001C5E  500D               	movf	(??_atoi+3)^0,w,c
  6794  001C60  E109               	bnz	u2830
  6795  001C62  0E05               	movlw	5
  6796  001C64  5C0C               	subwf	(??_atoi+2)^0,w,c
  6797  001C66  A0D8               	btfss	status,0,c
  6798  001C68  EF38  F00E         	goto	u2831
  6799  001C6C  EF3A  F00E         	goto	u2830
  6800  001C70                     u2831:
  6801  001C70  EF3C  F00E         	goto	l3707
  6802  001C74                     u2830:
  6803  001C74  0E00               	movlw	0
  6804  001C76  6E14               	movwf	_atoi$1287^0,c
  6805  001C78                     l3707:
  6806  001C78  C014  F010         	movff	_atoi$1287,_atoi$1286
  6807  001C7C  6A11               	clrf	(_atoi$1286+1)^0,c
  6808  001C7E  5010               	movf	_atoi$1286^0,w,c
  6809  001C80  1011               	iorwf	(_atoi$1286+1)^0,w,c
  6810  001C82  A4D8               	btfss	status,2,c
  6811  001C84  EF46  F00E         	goto	u2841
  6812  001C88  EF48  F00E         	goto	u2840
  6813  001C8C                     u2841:
  6814  001C8C  EF0D  F00E         	goto	l3697
  6815  001C90                     u2840:
  6816  001C90  EF52  F00E         	goto	l3717
  6817  001C94                     l3713:
  6818  001C94  0E00               	movlw	0
  6819  001C96  6E0F               	movwf	(atoi@neg+1)^0,c
  6820  001C98  0E01               	movlw	1
  6821  001C9A  6E0E               	movwf	atoi@neg^0,c
  6822  001C9C                     l3715:
  6823  001C9C  4A08               	infsnz	atoi@s^0,f,c
  6824  001C9E  2A09               	incf	(atoi@s+1)^0,f,c
  6825  001CA0  EF87  F00E         	goto	l3723
  6826  001CA4                     l3717:
  6827  001CA4  C008  FFF6         	movff	atoi@s,tblptrl
  6828  001CA8  C009  FFF7         	movff	atoi@s+1,tblptrh
  6829  001CAC                     	if	0	;tblptru may be non-zero
  6830  001CAC                     	endif
  6831  001CAC                     	if	0	;tblptru may be non-zero
  6832  001CAC                     	endif
  6833  001CAC  0008               	tblrd		*
  6834  001CAE  50F5               	movf	tablat,w,c
  6835  001CB0  6E0A               	movwf	??_atoi^0,c
  6836  001CB2  6A0B               	clrf	(??_atoi+1)^0,c
  6837                           
  6838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6839                           ; Switch size 1, requested type "simple"
  6840                           ; Number of cases is 1, Range of values is 0 to 0
  6841                           ; switch strategies available:
  6842                           ; Name         Instructions Cycles
  6843                           ; simple_byte            4     3 (average)
  6844                           ;	Chosen strategy is simple_byte
  6845  001CB4  500B               	movf	(??_atoi+1)^0,w,c
  6846  001CB6  0A00               	xorlw	0	; case 0
  6847  001CB8  B4D8               	btfsc	status,2,c
  6848  001CBA  EF61  F00E         	goto	l5513
  6849  001CBE  EF87  F00E         	goto	l3723
  6850  001CC2                     l5513:
  6851                           
  6852                           ; Switch size 1, requested type "simple"
  6853                           ; Number of cases is 2, Range of values is 43 to 45
  6854                           ; switch strategies available:
  6855                           ; Name         Instructions Cycles
  6856                           ; simple_byte            7     4 (average)
  6857                           ;	Chosen strategy is simple_byte
  6858  001CC2  500A               	movf	??_atoi^0,w,c
  6859  001CC4  0A2B               	xorlw	43	; case 43
  6860  001CC6  B4D8               	btfsc	status,2,c
  6861  001CC8  EF4E  F00E         	goto	l3715
  6862  001CCC  0A06               	xorlw	6	; case 45
  6863  001CCE  B4D8               	btfsc	status,2,c
  6864  001CD0  EF4A  F00E         	goto	l3713
  6865  001CD4  EF87  F00E         	goto	l3723
  6866  001CD8                     l3719:
  6867  001CD8  C015  F001         	movff	atoi@n,___wmul@multiplier
  6868  001CDC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6869  001CE0  0E00               	movlw	0
  6870  001CE2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6871  001CE4  0E0A               	movlw	10
  6872  001CE6  6E03               	movwf	___wmul@multiplicand^0,c
  6873  001CE8  EC40  F01C         	call	___wmul	;wreg free
  6874  001CEC  C008  FFF6         	movff	atoi@s,tblptrl
  6875  001CF0  C009  FFF7         	movff	atoi@s+1,tblptrh
  6876  001CF4                     	if	0	;tblptru may be non-zero
  6877  001CF4                     	endif
  6878  001CF4                     	if	0	;tblptru may be non-zero
  6879  001CF4                     	endif
  6880  001CF4  0008               	tblrd		*
  6881  001CF6  50F5               	movf	tablat,w,c
  6882  001CF8  5E01               	subwf	?___wmul^0,f,c
  6883  001CFA  0E00               	movlw	0
  6884  001CFC  5A02               	subwfb	(?___wmul+1)^0,f,c
  6885  001CFE  0E30               	movlw	48
  6886  001D00  2401               	addwf	?___wmul^0,w,c
  6887  001D02  6E15               	movwf	atoi@n^0,c
  6888  001D04  0E00               	movlw	0
  6889  001D06  2002               	addwfc	(?___wmul+1)^0,w,c
  6890  001D08  6E16               	movwf	(atoi@n+1)^0,c
  6891  001D0A  EF4E  F00E         	goto	l3715
  6892  001D0E                     l3723:
  6893  001D0E  0ED0               	movlw	208
  6894  001D10  6E0A               	movwf	??_atoi^0,c
  6895  001D12  0EFF               	movlw	255
  6896  001D14  6E0B               	movwf	(??_atoi+1)^0,c
  6897  001D16  C008  FFF6         	movff	atoi@s,tblptrl
  6898  001D1A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6899  001D1E                     	if	0	;tblptru may be non-zero
  6900  001D1E                     	endif
  6901  001D1E                     	if	0	;tblptru may be non-zero
  6902  001D1E                     	endif
  6903  001D1E  0008               	tblrd		*
  6904  001D20  50F5               	movf	tablat,w,c
  6905  001D22  6E0C               	movwf	(??_atoi+2)^0,c
  6906  001D24  6A0D               	clrf	(??_atoi+3)^0,c
  6907  001D26  500A               	movf	??_atoi^0,w,c
  6908  001D28  260C               	addwf	(??_atoi+2)^0,f,c
  6909  001D2A  500B               	movf	(??_atoi+1)^0,w,c
  6910  001D2C  220D               	addwfc	(??_atoi+3)^0,f,c
  6911  001D2E  500D               	movf	(??_atoi+3)^0,w,c
  6912  001D30  E10A               	bnz	u2850
  6913  001D32  0E0A               	movlw	10
  6914  001D34  5C0C               	subwf	(??_atoi+2)^0,w,c
  6915  001D36  A0D8               	btfss	status,0,c
  6916  001D38  EFA0  F00E         	goto	u2851
  6917  001D3C  EFA3  F00E         	goto	u2850
  6918  001D40                     u2851:
  6919  001D40  0E01               	movlw	1
  6920  001D42  EFA4  F00E         	goto	u2860
  6921  001D46                     u2850:
  6922  001D46  0E00               	movlw	0
  6923  001D48                     u2860:
  6924  001D48  6E12               	movwf	_atoi$1288^0,c
  6925  001D4A  6A13               	clrf	(_atoi$1288+1)^0,c
  6926  001D4C  5012               	movf	_atoi$1288^0,w,c
  6927  001D4E  1013               	iorwf	(_atoi$1288+1)^0,w,c
  6928  001D50  A4D8               	btfss	status,2,c
  6929  001D52  EFAD  F00E         	goto	u2871
  6930  001D56  EFAF  F00E         	goto	u2870
  6931  001D5A                     u2871:
  6932  001D5A  EF6C  F00E         	goto	l3719
  6933  001D5E                     u2870:
  6934  001D5E  500E               	movf	atoi@neg^0,w,c
  6935  001D60  100F               	iorwf	(atoi@neg+1)^0,w,c
  6936  001D62  A4D8               	btfss	status,2,c
  6937  001D64  EFB6  F00E         	goto	u2881
  6938  001D68  EFB8  F00E         	goto	u2880
  6939  001D6C                     u2881:
  6940  001D6C  EFC6  F00E         	goto	l1300
  6941  001D70                     u2880:
  6942  001D70  C015  F00A         	movff	atoi@n,??_atoi
  6943  001D74  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6944  001D78  1E0A               	comf	??_atoi^0,f,c
  6945  001D7A  1E0B               	comf	(??_atoi+1)^0,f,c
  6946  001D7C  4A0A               	infsnz	??_atoi^0,f,c
  6947  001D7E  2A0B               	incf	(??_atoi+1)^0,f,c
  6948  001D80  C00A  F008         	movff	??_atoi,?_atoi
  6949  001D84  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6950  001D88  EFCA  F00E         	goto	l1303
  6951  001D8C                     l1300:
  6952  001D8C  C015  F008         	movff	atoi@n,?_atoi
  6953  001D90  C016  F009         	movff	atoi@n+1,?_atoi+1
  6954  001D94                     l1303:
  6955  001D94  0012               	return		;funcret
  6956  001D96                     __end_of_atoi:
  6957                           	opt callstack 0
  6958                           
  6959 ;; *************** function _isspace *****************
  6960 ;; Defined at:
  6961 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  c               2    0[COMRAM] int 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  2    0[COMRAM] int 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6975 ;;      Params:         2       0       0       0       0       0       0       0       0
  6976 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6977 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6978 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6979 ;;Total ram usage:        7 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_atoi
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text30
  6990  003494                     __ptext30:
  6991                           	opt callstack 0
  6992  003494                     _isspace:
  6993                           	opt callstack 23
  6994  003494  0E01               	movlw	1
  6995  003496  6E07               	movwf	_isspace$1304^0,c
  6996  003498  0E20               	movlw	32
  6997  00349A  1801               	xorwf	isspace@c^0,w,c
  6998  00349C  1002               	iorwf	(isspace@c+1)^0,w,c
  6999  00349E  B4D8               	btfsc	status,2,c
  7000  0034A0  EF54  F01A         	goto	u2541
  7001  0034A4  EF56  F01A         	goto	u2540
  7002  0034A8                     u2541:
  7003  0034A8  EF6F  F01A         	goto	l3581
  7004  0034AC                     u2540:
  7005  0034AC  0EF7               	movlw	247
  7006  0034AE  6E03               	movwf	??_isspace^0,c
  7007  0034B0  0EFF               	movlw	255
  7008  0034B2  6E04               	movwf	(??_isspace+1)^0,c
  7009  0034B4  C001  F005         	movff	isspace@c,??_isspace+2
  7010  0034B8  C002  F006         	movff	isspace@c+1,??_isspace+3
  7011  0034BC  5003               	movf	??_isspace^0,w,c
  7012  0034BE  2605               	addwf	(??_isspace+2)^0,f,c
  7013  0034C0  5004               	movf	(??_isspace+1)^0,w,c
  7014  0034C2  2206               	addwfc	(??_isspace+3)^0,f,c
  7015  0034C4  5006               	movf	(??_isspace+3)^0,w,c
  7016  0034C6  E109               	bnz	u2550
  7017  0034C8  0E05               	movlw	5
  7018  0034CA  5C05               	subwf	(??_isspace+2)^0,w,c
  7019  0034CC  A0D8               	btfss	status,0,c
  7020  0034CE  EF6B  F01A         	goto	u2551
  7021  0034D2  EF6D  F01A         	goto	u2550
  7022  0034D6                     u2551:
  7023  0034D6  EF6F  F01A         	goto	l3581
  7024  0034DA                     u2550:
  7025  0034DA  0E00               	movlw	0
  7026  0034DC  6E07               	movwf	_isspace$1304^0,c
  7027  0034DE                     l3581:
  7028  0034DE  C007  F001         	movff	_isspace$1304,?_isspace
  7029  0034E2  6A02               	clrf	(?_isspace+1)^0,c
  7030  0034E4  0012               	return		;funcret
  7031  0034E6                     __end_of_isspace:
  7032                           	opt callstack 0
  7033                           
  7034 ;; *************** function _isdigit *****************
  7035 ;; Defined at:
  7036 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  c               2    0[COMRAM] int 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;		None
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  2    0[COMRAM] int 
  7043 ;; Registers used:
  7044 ;;		wreg, status,2, status,0
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7050 ;;      Params:         2       0       0       0       0       0       0       0       0
  7051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7052 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7053 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7054 ;;Total ram usage:        6 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    1
  7057 ;; This function calls:
  7058 ;;		Nothing
  7059 ;; This function is called by:
  7060 ;;		_vfpfcnvrt
  7061 ;;		_atoi
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text31
  7066  00375E                     __ptext31:
  7067                           	opt callstack 0
  7068  00375E                     _isdigit:
  7069                           	opt callstack 24
  7070  00375E  0ED0               	movlw	208
  7071  003760  6E03               	movwf	??_isdigit^0,c
  7072  003762  0EFF               	movlw	255
  7073  003764  6E04               	movwf	(??_isdigit+1)^0,c
  7074  003766  C001  F005         	movff	isdigit@c,??_isdigit+2
  7075  00376A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7076  00376E  5003               	movf	??_isdigit^0,w,c
  7077  003770  2605               	addwf	(??_isdigit+2)^0,f,c
  7078  003772  5004               	movf	(??_isdigit+1)^0,w,c
  7079  003774  2206               	addwfc	(??_isdigit+3)^0,f,c
  7080  003776  5006               	movf	(??_isdigit+3)^0,w,c
  7081  003778  E10A               	bnz	u2390
  7082  00377A  0E0A               	movlw	10
  7083  00377C  5C05               	subwf	(??_isdigit+2)^0,w,c
  7084  00377E  A0D8               	btfss	status,0,c
  7085  003780  EFC4  F01B         	goto	u2391
  7086  003784  EFC7  F01B         	goto	u2390
  7087  003788                     u2391:
  7088  003788  0E01               	movlw	1
  7089  00378A  EFC8  F01B         	goto	u2400
  7090  00378E                     u2390:
  7091  00378E  0E00               	movlw	0
  7092  003790                     u2400:
  7093  003790  6E01               	movwf	?_isdigit^0,c
  7094  003792  6A02               	clrf	(?_isdigit+1)^0,c
  7095  003794  0012               	return		;funcret
  7096  003796                     __end_of_isdigit:
  7097                           	opt callstack 0
  7098                           
  7099 ;; *************** function _limpiarBuffer *****************
  7100 ;; Defined at:
  7101 ;;		line 740 in file "./AUTOMATIZADOR.h"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  i               2    0[COMRAM] int 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0
  7116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7118 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7119 ;;Total ram usage:        2 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    1
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_dameDatosSistema
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text32
  7130  0036A4                     __ptext32:
  7131                           	opt callstack 0
  7132  0036A4                     _limpiarBuffer:
  7133                           	opt callstack 27
  7134  0036A4                     
  7135                           ;./AUTOMATIZADOR.h: 741:     for (T_INT i = 0; i < 50; i++) {
  7136  0036A4  0E00               	movlw	0
  7137  0036A6  6E02               	movwf	(limpiarBuffer@i+1)^0,c
  7138  0036A8  0E00               	movlw	0
  7139  0036AA  6E01               	movwf	limpiarBuffer@i^0,c
  7140  0036AC                     l4635:
  7141                           
  7142                           ;./AUTOMATIZADOR.h: 742:         buffer[i] = 0;
  7143  0036AC  0E00               	movlw	low _buffer
  7144  0036AE  2401               	addwf	limpiarBuffer@i^0,w,c
  7145  0036B0  6ED9               	movwf	fsr2l,c
  7146  0036B2  0E01               	movlw	high _buffer
  7147  0036B4  2002               	addwfc	(limpiarBuffer@i+1)^0,w,c
  7148  0036B6  6EDA               	movwf	fsr2h,c
  7149  0036B8  0E00               	movlw	0
  7150  0036BA  6EDF               	movwf	indf2,c
  7151  0036BC                     
  7152                           ;./AUTOMATIZADOR.h: 743:     }
  7153  0036BC  4A01               	infsnz	limpiarBuffer@i^0,f,c
  7154  0036BE  2A02               	incf	(limpiarBuffer@i+1)^0,f,c
  7155  0036C0  BE02               	btfsc	(limpiarBuffer@i+1)^0,7,c
  7156  0036C2  EF6C  F01B         	goto	u3951
  7157  0036C6  5002               	movf	(limpiarBuffer@i+1)^0,w,c
  7158  0036C8  E109               	bnz	u3950
  7159  0036CA  0E32               	movlw	50
  7160  0036CC  5C01               	subwf	limpiarBuffer@i^0,w,c
  7161  0036CE  A0D8               	btfss	status,0,c
  7162  0036D0  EF6C  F01B         	goto	u3951
  7163  0036D4  EF6E  F01B         	goto	u3950
  7164  0036D8                     u3951:
  7165  0036D8  EF56  F01B         	goto	l4635
  7166  0036DC                     u3950:
  7167  0036DC                     
  7168                           ;./AUTOMATIZADOR.h: 745:     buffer[50 - 1] = '\0';
  7169  0036DC  0E00               	movlw	0
  7170  0036DE  0101               	movlb	1	; () banked
  7171  0036E0  6F31               	movwf	(_buffer+49)& (0+255),b
  7172  0036E2                     
  7173                           ; BSR set to: 1
  7174  0036E2  0012               	return		;funcret
  7175  0036E4                     __end_of_limpiarBuffer:
  7176                           	opt callstack 0
  7177                           
  7178 ;; *************** function _UART_printf *****************
  7179 ;; Defined at:
  7180 ;;		line 57 in file "./UART.h"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  7183 ;;		 -> STR_30(21), STR_29(11), STR_28(9), STR_27(17), 
  7184 ;;		 -> dameDatosSistema@bufferHorario(30), STR_24(37), STR_23(41), STR_22(42), 
  7185 ;;		 -> STR_21(31), STR_20(13), buffer(50), STR_11(3), 
  7186 ;;		 -> STR_10(14), STR_9(36), STR_8(26), STR_7(25), 
  7187 ;;		 -> STR_6(34), STR_5(32), STR_4(55), STR_3(40), 
  7188 ;;		 -> STR_2(27), STR_1(37), 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      void 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7200 ;;      Params:         2       0       0       0       0       0       0       0       0
  7201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7203 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7204 ;;Total ram usage:        2 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    2
  7207 ;; This function calls:
  7208 ;;		_UART_write
  7209 ;; This function is called by:
  7210 ;;		_dameDatosSistema
  7211 ;;		_mostrarDatosSensores
  7212 ;;		_main
  7213 ;;		_mostrarMenu
  7214 ;;		_configBluetoothHC_06
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text33
  7219  003336                     __ptext33:
  7220                           	opt callstack 0
  7221  003336                     _UART_printf:
  7222                           	opt callstack 26
  7223  003336                     
  7224                           ;./UART.h: 58:     while (*cadena) {
  7225  003336  EFB1  F019         	goto	l4519
  7226  00333A                     l4515:
  7227                           
  7228                           ;./UART.h: 59:         UART_write(*cadena++);
  7229  00333A  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7230  00333E  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7231  003342  6AF8               	clrf	tblptru,c
  7232  003344  0E07               	movlw	(high __ramtop+-1)
  7233  003346  64F7               	cpfsgt	tblptrh,c
  7234  003348  D003               	bra	u3897
  7235  00334A  0008               	tblrd		*
  7236  00334C  50F5               	movf	tablat,w,c
  7237  00334E  D005               	bra	u3890
  7238  003350                     u3897:
  7239  003350  CFF6 FFE1          	movff	tblptrl,fsr1l
  7240  003354  CFF7 FFE2          	movff	tblptrh,fsr1h
  7241  003358  50E7               	movf	indf1,w,c
  7242  00335A                     u3890:
  7243  00335A  ECAD  F01C         	call	_UART_write
  7244  00335E  4A02               	infsnz	UART_printf@cadena^0,f,c
  7245  003360  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  7246  003362                     l4519:
  7247                           
  7248                           ;./UART.h: 58:     while (*cadena) {
  7249  003362  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7250  003366  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7251  00336A  6AF8               	clrf	tblptru,c
  7252  00336C  0E07               	movlw	(high __ramtop+-1)
  7253  00336E  64F7               	cpfsgt	tblptrh,c
  7254  003370  D003               	bra	u3907
  7255  003372  0008               	tblrd		*
  7256  003374  50F5               	movf	tablat,w,c
  7257  003376  D005               	bra	u3900
  7258  003378                     u3907:
  7259  003378  CFF6 FFE1          	movff	tblptrl,fsr1l
  7260  00337C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7261  003380  50E7               	movf	indf1,w,c
  7262  003382                     u3900:
  7263  003382  0900               	iorlw	0
  7264  003384  A4D8               	btfss	status,2,c
  7265  003386  EFC7  F019         	goto	u3911
  7266  00338A  EFC9  F019         	goto	u3910
  7267  00338E                     u3911:
  7268  00338E  EF9D  F019         	goto	l4515
  7269  003392                     u3910:
  7270  003392  0012               	return		;funcret
  7271  003394                     __end_of_UART_printf:
  7272                           	opt callstack 0
  7273                           
  7274 ;; *************** function _asignarSetPoint *****************
  7275 ;; Defined at:
  7276 ;;		line 748 in file "./AUTOMATIZADOR.h"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  setPointTemp    4   34[COMRAM] unsigned long 
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0
  7291 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7293 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7294 ;;Total ram usage:        4 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    3
  7297 ;; This function calls:
  7298 ;;		_UART_write
  7299 ;;		_getValue
  7300 ;; This function is called by:
  7301 ;;		_sistemaPrincipal
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text34
  7306  0035D4                     __ptext34:
  7307                           	opt callstack 0
  7308  0035D4                     _asignarSetPoint:
  7309                           	opt callstack 26
  7310  0035D4                     
  7311                           ;./AUTOMATIZADOR.h: 750:     T_ULONG setPointTemp;;./AUTOMATIZADOR.h: 752:     setPointT
      +                          emp = getValue(5);
  7312  0035D4  0E00               	movlw	0
  7313  0035D6  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7314  0035D8  0E05               	movlw	5
  7315  0035DA  6E0D               	movwf	getValue@numCharacters^0,c
  7316  0035DC  EC09  F000         	call	_getValue	;wreg free
  7317  0035E0  C00D  F023         	movff	?_getValue,asignarSetPoint@setPointTemp
  7318  0035E4  C00E  F024         	movff	?_getValue+1,asignarSetPoint@setPointTemp+1
  7319  0035E8  C00F  F025         	movff	?_getValue+2,asignarSetPoint@setPointTemp+2
  7320  0035EC  C010  F026         	movff	?_getValue+3,asignarSetPoint@setPointTemp+3
  7321  0035F0                     
  7322                           ;./AUTOMATIZADOR.h: 754:     if (setPointTemp != '@') {
  7323  0035F0  0E40               	movlw	64
  7324  0035F2  1823               	xorwf	asignarSetPoint@setPointTemp^0,w,c
  7325  0035F4  1024               	iorwf	(asignarSetPoint@setPointTemp+1)^0,w,c
  7326  0035F6  1025               	iorwf	(asignarSetPoint@setPointTemp+2)^0,w,c
  7327  0035F8  1026               	iorwf	(asignarSetPoint@setPointTemp+3)^0,w,c
  7328  0035FA  B4D8               	btfsc	status,2,c
  7329  0035FC  EF02  F01B         	goto	u4361
  7330  003600  EF04  F01B         	goto	u4360
  7331  003604                     u4361:
  7332  003604  EF0F  F01B         	goto	l440
  7333  003608                     u4360:
  7334  003608                     
  7335                           ;./AUTOMATIZADOR.h: 756:         setPoint = setPointTemp;
  7336  003608  C023  F0DE         	movff	asignarSetPoint@setPointTemp,_setPoint
  7337  00360C  C024  F0DF         	movff	asignarSetPoint@setPointTemp+1,_setPoint+1
  7338  003610  C025  F0E0         	movff	asignarSetPoint@setPointTemp+2,_setPoint+2
  7339  003614  C026  F0E1         	movff	asignarSetPoint@setPointTemp+3,_setPoint+3
  7340  003618                     
  7341                           ;./AUTOMATIZADOR.h: 757:         UART_write('E');
  7342  003618  0E45               	movlw	69
  7343  00361A  ECAD  F01C         	call	_UART_write
  7344  00361E                     l440:
  7345  00361E  0012               	return		;funcret
  7346  003620                     __end_of_asignarSetPoint:
  7347                           	opt callstack 0
  7348                           
  7349 ;; *************** function _asignarHorarios *****************
  7350 ;; Defined at:
  7351 ;;		line 251 in file "./AUTOMATIZADOR.h"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;		None
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  i               2   36[COMRAM] int 
  7356 ;;  Rx              1   40[COMRAM] unsigned char 
  7357 ;;  hora            1   39[COMRAM] unsigned char 
  7358 ;;  diaIluminar     1   38[COMRAM] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0
  7369 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7370 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7371 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7372 ;;Total ram usage:        7 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    5
  7375 ;; This function calls:
  7376 ;;		_UART_write
  7377 ;;		_escribeHorariosMemoria
  7378 ;;		_getValue
  7379 ;; This function is called by:
  7380 ;;		_sistemaPrincipal
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text35
  7385  002646                     __ptext35:
  7386                           	opt callstack 0
  7387  002646                     _asignarHorarios:
  7388                           	opt callstack 24
  7389  002646                     
  7390                           ;./AUTOMATIZADOR.h: 253:     T_UBYTE hora;;./AUTOMATIZADOR.h: 254:     T_UBYTE Rx;;./AUT
      +                          OMATIZADOR.h: 255:     T_UBYTE diaIluminar;;./AUTOMATIZADOR.h: 260:     hora = getValue(
      +                          2);
  7391  002646  0E00               	movlw	0
  7392  002648  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7393  00264A  0E02               	movlw	2
  7394  00264C  6E0D               	movwf	getValue@numCharacters^0,c
  7395  00264E  EC09  F000         	call	_getValue	;wreg free
  7396  002652  500D               	movf	?_getValue^0,w,c
  7397  002654  6E28               	movwf	asignarHorarios@hora^0,c
  7398  002656                     
  7399                           ;./AUTOMATIZADOR.h: 262:     if (hora != '@') {
  7400  002656  0E40               	movlw	64
  7401  002658  1828               	xorwf	asignarHorarios@hora^0,w,c
  7402  00265A  B4D8               	btfsc	status,2,c
  7403  00265C  EF32  F013         	goto	u4271
  7404  002660  EF34  F013         	goto	u4270
  7405  002664                     u4271:
  7406  002664  EFC4  F013         	goto	l319
  7407  002668                     u4270:
  7408  002668                     
  7409                           ;./AUTOMATIZADOR.h: 266:         Rx = getValue(1);
  7410  002668  0E00               	movlw	0
  7411  00266A  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7412  00266C  0E01               	movlw	1
  7413  00266E  6E0D               	movwf	getValue@numCharacters^0,c
  7414  002670  EC09  F000         	call	_getValue	;wreg free
  7415  002674  500D               	movf	?_getValue^0,w,c
  7416  002676  6E29               	movwf	asignarHorarios@Rx^0,c
  7417  002678                     
  7418                           ;./AUTOMATIZADOR.h: 269:         if (Rx == 1) {
  7419  002678  0429               	decf	asignarHorarios@Rx^0,w,c
  7420  00267A  A4D8               	btfss	status,2,c
  7421  00267C  EF42  F013         	goto	u4281
  7422  002680  EF44  F013         	goto	u4280
  7423  002684                     u4281:
  7424  002684  EFAF  F013         	goto	l4905
  7425  002688                     u4280:
  7426  002688                     
  7427                           ;./AUTOMATIZADOR.h: 274:             for (T_INT i = 0; i < 7; i++) {
  7428  002688  0E00               	movlw	0
  7429  00268A  6E26               	movwf	(asignarHorarios@i+1)^0,c
  7430  00268C  0E00               	movlw	0
  7431  00268E  6E25               	movwf	asignarHorarios@i^0,c
  7432  002690                     l4879:
  7433                           
  7434                           ;./AUTOMATIZADOR.h: 278:                 diaIluminar = getValue(1);
  7435  002690  0E00               	movlw	0
  7436  002692  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7437  002694  0E01               	movlw	1
  7438  002696  6E0D               	movwf	getValue@numCharacters^0,c
  7439  002698  EC09  F000         	call	_getValue	;wreg free
  7440  00269C  500D               	movf	?_getValue^0,w,c
  7441  00269E  6E27               	movwf	asignarHorarios@diaIluminar^0,c
  7442  0026A0                     
  7443                           ;./AUTOMATIZADOR.h: 280:                 if (diaIluminar != '@') {
  7444  0026A0  0E40               	movlw	64
  7445  0026A2  1827               	xorwf	asignarHorarios@diaIluminar^0,w,c
  7446  0026A4  B4D8               	btfsc	status,2,c
  7447  0026A6  EF57  F013         	goto	u4291
  7448  0026AA  EF59  F013         	goto	u4290
  7449  0026AE                     u4291:
  7450  0026AE  EF8E  F013         	goto	l4895
  7451  0026B2                     u4290:
  7452  0026B2  EF63  F013         	goto	l4891
  7453  0026B6                     l4885:
  7454                           
  7455                           ;./AUTOMATIZADOR.h: 284:                             diaIluminar = '0';
  7456  0026B6  0E30               	movlw	48
  7457  0026B8  6E27               	movwf	asignarHorarios@diaIluminar^0,c
  7458                           
  7459                           ;./AUTOMATIZADOR.h: 285:                             break;
  7460  0026BA  EF78  F013         	goto	l4893
  7461  0026BE                     l4887:
  7462                           
  7463                           ;./AUTOMATIZADOR.h: 288:                             diaIluminar = '1';
  7464  0026BE  0E31               	movlw	49
  7465  0026C0  6E27               	movwf	asignarHorarios@diaIluminar^0,c
  7466                           
  7467                           ;./AUTOMATIZADOR.h: 289:                             break;
  7468  0026C2  EF78  F013         	goto	l4893
  7469  0026C6                     l4891:
  7470  0026C6  5027               	movf	asignarHorarios@diaIluminar^0,w,c
  7471  0026C8  6E23               	movwf	??_asignarHorarios^0,c
  7472  0026CA  6A24               	clrf	(??_asignarHorarios+1)^0,c
  7473                           
  7474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7475                           ; Switch size 1, requested type "simple"
  7476                           ; Number of cases is 1, Range of values is 0 to 0
  7477                           ; switch strategies available:
  7478                           ; Name         Instructions Cycles
  7479                           ; simple_byte            4     3 (average)
  7480                           ;	Chosen strategy is simple_byte
  7481  0026CC  5024               	movf	(??_asignarHorarios+1)^0,w,c
  7482  0026CE  0A00               	xorlw	0	; case 0
  7483  0026D0  B4D8               	btfsc	status,2,c
  7484  0026D2  EF6D  F013         	goto	l5515
  7485  0026D6  EF78  F013         	goto	l4893
  7486  0026DA                     l5515:
  7487                           
  7488                           ; Switch size 1, requested type "simple"
  7489                           ; Number of cases is 2, Range of values is 0 to 1
  7490                           ; switch strategies available:
  7491                           ; Name         Instructions Cycles
  7492                           ; simple_byte            7     4 (average)
  7493                           ;	Chosen strategy is simple_byte
  7494  0026DA  5023               	movf	??_asignarHorarios^0,w,c
  7495  0026DC  0A00               	xorlw	0	; case 0
  7496  0026DE  B4D8               	btfsc	status,2,c
  7497  0026E0  EF5B  F013         	goto	l4885
  7498  0026E4  0A01               	xorlw	1	; case 1
  7499  0026E6  B4D8               	btfsc	status,2,c
  7500  0026E8  EF5F  F013         	goto	l4887
  7501  0026EC  EF78  F013         	goto	l4893
  7502  0026F0                     l4893:
  7503                           
  7504                           ;./AUTOMATIZADOR.h: 293:                     horarios[hora].dias[i] = diaIluminar;
  7505  0026F0  5028               	movf	asignarHorarios@hora^0,w,c
  7506  0026F2  0D0C               	mullw	12
  7507  0026F4  0E52               	movlw	low _horarios
  7508  0026F6  6E23               	movwf	??_asignarHorarios^0,c
  7509  0026F8  0E01               	movlw	high _horarios
  7510  0026FA  6E24               	movwf	(??_asignarHorarios+1)^0,c
  7511  0026FC  0E01               	movlw	1
  7512  0026FE  2623               	addwf	??_asignarHorarios^0,f,c
  7513  002700  0E00               	movlw	0
  7514  002702  2224               	addwfc	(??_asignarHorarios+1)^0,f,c
  7515  002704  50F3               	movf	243,w,c
  7516  002706  2623               	addwf	??_asignarHorarios^0,f,c
  7517  002708  50F4               	movf	244,w,c
  7518  00270A  2224               	addwfc	(??_asignarHorarios+1)^0,f,c
  7519  00270C  5025               	movf	asignarHorarios@i^0,w,c
  7520  00270E  2423               	addwf	??_asignarHorarios^0,w,c
  7521  002710  6ED9               	movwf	fsr2l,c
  7522  002712  5026               	movf	(asignarHorarios@i+1)^0,w,c
  7523  002714  2024               	addwfc	(??_asignarHorarios+1)^0,w,c
  7524  002716  6EDA               	movwf	fsr2h,c
  7525  002718  C027  FFDF         	movff	asignarHorarios@diaIluminar,indf2
  7526  00271C                     l4895:
  7527                           
  7528                           ;./AUTOMATIZADOR.h: 296:             }
  7529  00271C  4A25               	infsnz	asignarHorarios@i^0,f,c
  7530  00271E  2A26               	incf	(asignarHorarios@i+1)^0,f,c
  7531  002720  BE26               	btfsc	(asignarHorarios@i+1)^0,7,c
  7532  002722  EF9C  F013         	goto	u4301
  7533  002726  5026               	movf	(asignarHorarios@i+1)^0,w,c
  7534  002728  E109               	bnz	u4300
  7535  00272A  0E07               	movlw	7
  7536  00272C  5C25               	subwf	asignarHorarios@i^0,w,c
  7537  00272E  A0D8               	btfss	status,0,c
  7538  002730  EF9C  F013         	goto	u4301
  7539  002734  EF9E  F013         	goto	u4300
  7540  002738                     u4301:
  7541  002738  EF48  F013         	goto	l4879
  7542  00273C                     u4300:
  7543  00273C                     
  7544                           ;./AUTOMATIZADOR.h: 298:             horarios[hora].iluminar = Rx;
  7545  00273C  5028               	movf	asignarHorarios@hora^0,w,c
  7546  00273E  0D0C               	mullw	12
  7547  002740  0E5B               	movlw	low (_horarios+9)
  7548  002742  24F3               	addwf	243,w,c
  7549  002744  6ED9               	movwf	fsr2l,c
  7550  002746  0E01               	movlw	high (_horarios+9)
  7551  002748  20F4               	addwfc	prodh,w,c
  7552  00274A  6EDA               	movwf	fsr2h,c
  7553  00274C  C029  FFDF         	movff	asignarHorarios@Rx,indf2
  7554  002750                     
  7555                           ;./AUTOMATIZADOR.h: 300:             escribeHorariosMemoria();
  7556  002750  EC78  F012         	call	_escribeHorariosMemoria	;wreg free
  7557  002754                     
  7558                           ;./AUTOMATIZADOR.h: 304:             UART_write('E');
  7559  002754  0E45               	movlw	69
  7560  002756  ECAD  F01C         	call	_UART_write
  7561                           
  7562                           ;./AUTOMATIZADOR.h: 306:         } else if (Rx == 0) {
  7563  00275A  EFC4  F013         	goto	l319
  7564  00275E                     l4905:
  7565  00275E  5029               	movf	asignarHorarios@Rx^0,w,c
  7566  002760  A4D8               	btfss	status,2,c
  7567  002762  EFB5  F013         	goto	u4311
  7568  002766  EFB7  F013         	goto	u4310
  7569  00276A                     u4311:
  7570  00276A  EFC4  F013         	goto	l319
  7571  00276E                     u4310:
  7572  00276E                     
  7573                           ;./AUTOMATIZADOR.h: 307:             horarios[hora].iluminar = Rx;
  7574  00276E  5028               	movf	asignarHorarios@hora^0,w,c
  7575  002770  0D0C               	mullw	12
  7576  002772  0E5B               	movlw	low (_horarios+9)
  7577  002774  24F3               	addwf	243,w,c
  7578  002776  6ED9               	movwf	fsr2l,c
  7579  002778  0E01               	movlw	high (_horarios+9)
  7580  00277A  20F4               	addwfc	prodh,w,c
  7581  00277C  6EDA               	movwf	fsr2h,c
  7582  00277E  C029  FFDF         	movff	asignarHorarios@Rx,indf2
  7583  002782                     
  7584                           ;./AUTOMATIZADOR.h: 309:             UART_write('E');
  7585  002782  0E45               	movlw	69
  7586  002784  ECAD  F01C         	call	_UART_write
  7587  002788                     l319:
  7588  002788  0012               	return		;funcret
  7589  00278A                     __end_of_asignarHorarios:
  7590                           	opt callstack 0
  7591                           
  7592 ;; *************** function _getValue *****************
  7593 ;; Defined at:
  7594 ;;		line 553 in file "./AUTOMATIZADOR.h"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  numCharacter    2   12[COMRAM] short 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  i               2   27[COMRAM] int 
  7599 ;;  i               2   25[COMRAM] int 
  7600 ;;  i               2   23[COMRAM] int 
  7601 ;;  i               2   21[COMRAM] int 
  7602 ;;  dato            4   29[COMRAM] unsigned long 
  7603 ;;  Rx              1   33[COMRAM] unsigned char 
  7604 ;;  datoIncorrec    1   20[COMRAM] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  4   12[COMRAM] unsigned long 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7614 ;;      Params:         4       0       0       0       0       0       0       0       0
  7615 ;;      Locals:        14       0       0       0       0       0       0       0       0
  7616 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7617 ;;      Totals:        22       0       0       0       0       0       0       0       0
  7618 ;;Total ram usage:       22 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    2
  7621 ;; This function calls:
  7622 ;;		_UART_read
  7623 ;;		_UART_write
  7624 ;;		___lmul
  7625 ;;		___wmul
  7626 ;; This function is called by:
  7627 ;;		_setRtc
  7628 ;;		_asignarHorarios
  7629 ;;		_setTiempoIluminar
  7630 ;;		_asignarSetPoint
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text36
  7635  000012                     __ptext36:
  7636                           	opt callstack 0
  7637  000012                     _getValue:
  7638                           	opt callstack 26
  7639  000012                     
  7640                           ;./AUTOMATIZADOR.h: 556:     T_UBYTE datoIncorrecto = 0;
  7641  000012  0E00               	movlw	0
  7642  000014  6E15               	movwf	getValue@datoIncorrecto^0,c
  7643                           
  7644                           ;./AUTOMATIZADOR.h: 557:     T_ULONG dato = 0;
  7645  000016  0E00               	movlw	0
  7646  000018  6E1E               	movwf	getValue@dato^0,c
  7647  00001A  0E00               	movlw	0
  7648  00001C  6E1F               	movwf	(getValue@dato+1)^0,c
  7649  00001E  0E00               	movlw	0
  7650  000020  6E20               	movwf	(getValue@dato+2)^0,c
  7651  000022  0E00               	movlw	0
  7652  000024  6E21               	movwf	(getValue@dato+3)^0,c
  7653                           
  7654                           ;./AUTOMATIZADOR.h: 559:     switch (numCharacters) {
  7655  000026  EF9F  F002         	goto	l4345
  7656  00002A                     l4189:
  7657                           
  7658                           ;./AUTOMATIZADOR.h: 562:             Rx = UART_read();
  7659  00002A  ECF7  F019         	call	_UART_read	;wreg free
  7660  00002E  6E22               	movwf	getValue@Rx^0,c
  7661  000030                     
  7662                           ;./AUTOMATIZADOR.h: 564:             if (Rx >= 48 && Rx <= 57) {
  7663  000030  0E2F               	movlw	47
  7664  000032  6422               	cpfsgt	getValue@Rx^0,c
  7665  000034  EF1E  F000         	goto	u3541
  7666  000038  EF20  F000         	goto	u3540
  7667  00003C                     u3541:
  7668  00003C  EF31  F000         	goto	l4199
  7669  000040                     u3540:
  7670  000040  0E3A               	movlw	58
  7671  000042  6022               	cpfslt	getValue@Rx^0,c
  7672  000044  EF26  F000         	goto	u3551
  7673  000048  EF28  F000         	goto	u3550
  7674  00004C                     u3551:
  7675  00004C  EF31  F000         	goto	l4199
  7676  000050                     u3550:
  7677  000050                     
  7678                           ;./AUTOMATIZADOR.h: 565:                 Rx -= 48;
  7679  000050  0E30               	movlw	48
  7680  000052  5E22               	subwf	getValue@Rx^0,f,c
  7681  000054                     
  7682                           ;./AUTOMATIZADOR.h: 566:                 dato = Rx;
  7683  000054  5022               	movf	getValue@Rx^0,w,c
  7684  000056  6E1E               	movwf	getValue@dato^0,c
  7685  000058  6A1F               	clrf	(getValue@dato+1)^0,c
  7686  00005A  6A20               	clrf	(getValue@dato+2)^0,c
  7687  00005C  6A21               	clrf	(getValue@dato+3)^0,c
  7688                           
  7689                           ;./AUTOMATIZADOR.h: 567:             } else {
  7690  00005E  EFC1  F002         	goto	l4347
  7691  000062                     l4199:
  7692                           
  7693                           ;./AUTOMATIZADOR.h: 568:                 UART_write('@');
  7694  000062  0E40               	movlw	64
  7695  000064  ECAD  F01C         	call	_UART_write
  7696  000068                     
  7697                           ;./AUTOMATIZADOR.h: 569:                 datoIncorrecto = 1;
  7698  000068  0E01               	movlw	1
  7699  00006A  6E15               	movwf	getValue@datoIncorrecto^0,c
  7700  00006C  EFC1  F002         	goto	l4347
  7701  000070                     l4203:
  7702                           
  7703                           ;./AUTOMATIZADOR.h: 575:             for (T_INT i = 0; i < 2; i++) {
  7704  000070  0E00               	movlw	0
  7705  000072  6E17               	movwf	(getValue@i+1)^0,c
  7706  000074  0E00               	movlw	0
  7707  000076  6E16               	movwf	getValue@i^0,c
  7708  000078                     l4209:
  7709                           
  7710                           ;./AUTOMATIZADOR.h: 577:                 Rx = UART_read();
  7711  000078  ECF7  F019         	call	_UART_read	;wreg free
  7712  00007C  6E22               	movwf	getValue@Rx^0,c
  7713  00007E                     
  7714                           ;./AUTOMATIZADOR.h: 579:                 if (Rx >= 48 && Rx <= 57) {
  7715  00007E  0E2F               	movlw	47
  7716  000080  6422               	cpfsgt	getValue@Rx^0,c
  7717  000082  EF45  F000         	goto	u3561
  7718  000086  EF47  F000         	goto	u3560
  7719  00008A                     u3561:
  7720  00008A  EF92  F000         	goto	l4227
  7721  00008E                     u3560:
  7722  00008E  0E3A               	movlw	58
  7723  000090  6022               	cpfslt	getValue@Rx^0,c
  7724  000092  EF4D  F000         	goto	u3571
  7725  000096  EF4F  F000         	goto	u3570
  7726  00009A                     u3571:
  7727  00009A  EF92  F000         	goto	l4227
  7728  00009E                     u3570:
  7729  00009E                     
  7730                           ;./AUTOMATIZADOR.h: 581:                     Rx -= 48;
  7731  00009E  0E30               	movlw	48
  7732  0000A0  5E22               	subwf	getValue@Rx^0,f,c
  7733                           
  7734                           ;./AUTOMATIZADOR.h: 583:                     switch (i) {
  7735  0000A2  EF7C  F000         	goto	l4225
  7736  0000A6                     l4217:
  7737                           
  7738                           ;./AUTOMATIZADOR.h: 585:                             dato = Rx;
  7739  0000A6  5022               	movf	getValue@Rx^0,w,c
  7740  0000A8  6E1E               	movwf	getValue@dato^0,c
  7741  0000AA  6A1F               	clrf	(getValue@dato+1)^0,c
  7742  0000AC  6A20               	clrf	(getValue@dato+2)^0,c
  7743  0000AE  6A21               	clrf	(getValue@dato+3)^0,c
  7744  0000B0                     
  7745                           ;./AUTOMATIZADOR.h: 586:                             dato *= 10;
  7746  0000B0  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  7747  0000B4  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  7748  0000B8  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  7749  0000BC  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  7750  0000C0  0E0A               	movlw	10
  7751  0000C2  6E05               	movwf	___lmul@multiplicand^0,c
  7752  0000C4  0E00               	movlw	0
  7753  0000C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7754  0000C8  0E00               	movlw	0
  7755  0000CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7756  0000CC  0E00               	movlw	0
  7757  0000CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7758  0000D0  EC04  F019         	call	___lmul	;wreg free
  7759  0000D4  C001  F01E         	movff	?___lmul,getValue@dato
  7760  0000D8  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  7761  0000DC  C003  F020         	movff	?___lmul+2,getValue@dato+2
  7762  0000E0  C004  F021         	movff	?___lmul+3,getValue@dato+3
  7763                           
  7764                           ;./AUTOMATIZADOR.h: 587:                             break;
  7765  0000E4  EF99  F000         	goto	l4231
  7766  0000E8                     l4221:
  7767                           
  7768                           ;./AUTOMATIZADOR.h: 590:                             dato += Rx;
  7769  0000E8  5022               	movf	getValue@Rx^0,w,c
  7770  0000EA  261E               	addwf	getValue@dato^0,f,c
  7771  0000EC  0E00               	movlw	0
  7772  0000EE  221F               	addwfc	(getValue@dato+1)^0,f,c
  7773  0000F0  2220               	addwfc	(getValue@dato+2)^0,f,c
  7774  0000F2  2221               	addwfc	(getValue@dato+3)^0,f,c
  7775                           
  7776                           ;./AUTOMATIZADOR.h: 591:                             break;
  7777  0000F4  EF99  F000         	goto	l4231
  7778  0000F8                     l4225:
  7779  0000F8  C016  F011         	movff	getValue@i,??_getValue
  7780  0000FC  C017  F012         	movff	getValue@i+1,??_getValue+1
  7781                           
  7782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7783                           ; Switch size 1, requested type "simple"
  7784                           ; Number of cases is 1, Range of values is 0 to 0
  7785                           ; switch strategies available:
  7786                           ; Name         Instructions Cycles
  7787                           ; simple_byte            4     3 (average)
  7788                           ;	Chosen strategy is simple_byte
  7789  000100  5012               	movf	(??_getValue+1)^0,w,c
  7790  000102  0A00               	xorlw	0	; case 0
  7791  000104  B4D8               	btfsc	status,2,c
  7792  000106  EF87  F000         	goto	l5517
  7793  00010A  EF99  F000         	goto	l4231
  7794  00010E                     l5517:
  7795                           
  7796                           ; Switch size 1, requested type "simple"
  7797                           ; Number of cases is 2, Range of values is 0 to 1
  7798                           ; switch strategies available:
  7799                           ; Name         Instructions Cycles
  7800                           ; simple_byte            7     4 (average)
  7801                           ;	Chosen strategy is simple_byte
  7802  00010E  5011               	movf	??_getValue^0,w,c
  7803  000110  0A00               	xorlw	0	; case 0
  7804  000112  B4D8               	btfsc	status,2,c
  7805  000114  EF53  F000         	goto	l4217
  7806  000118  0A01               	xorlw	1	; case 1
  7807  00011A  B4D8               	btfsc	status,2,c
  7808  00011C  EF74  F000         	goto	l4221
  7809  000120  EF99  F000         	goto	l4231
  7810  000124                     l4227:
  7811                           
  7812                           ;./AUTOMATIZADOR.h: 599:                     datoIncorrecto = 1;
  7813  000124  0E01               	movlw	1
  7814  000126  6E15               	movwf	getValue@datoIncorrecto^0,c
  7815  000128                     
  7816                           ;./AUTOMATIZADOR.h: 600:                     UART_write('@');
  7817  000128  0E40               	movlw	64
  7818  00012A  ECAD  F01C         	call	_UART_write
  7819                           
  7820                           ;./AUTOMATIZADOR.h: 601:                     break;
  7821  00012E  EFC1  F002         	goto	l4347
  7822  000132                     l4231:
  7823                           
  7824                           ;./AUTOMATIZADOR.h: 603:             }
  7825  000132  4A16               	infsnz	getValue@i^0,f,c
  7826  000134  2A17               	incf	(getValue@i+1)^0,f,c
  7827  000136  BE17               	btfsc	(getValue@i+1)^0,7,c
  7828  000138  EFA7  F000         	goto	u3581
  7829  00013C  5017               	movf	(getValue@i+1)^0,w,c
  7830  00013E  E109               	bnz	u3580
  7831  000140  0E02               	movlw	2
  7832  000142  5C16               	subwf	getValue@i^0,w,c
  7833  000144  A0D8               	btfss	status,0,c
  7834  000146  EFA7  F000         	goto	u3581
  7835  00014A  EFA9  F000         	goto	u3580
  7836  00014E                     u3581:
  7837  00014E  EF3C  F000         	goto	l4209
  7838  000152                     u3580:
  7839  000152  EFC1  F002         	goto	l4347
  7840  000156                     l4235:
  7841                           
  7842                           ;./AUTOMATIZADOR.h: 607:             for (T_INT i = 0; i < 3; i++) {
  7843  000156  0E00               	movlw	0
  7844  000158  6E19               	movwf	(getValue@i_697+1)^0,c
  7845  00015A  0E00               	movlw	0
  7846  00015C  6E18               	movwf	getValue@i_697^0,c
  7847  00015E                     l4241:
  7848                           
  7849                           ;./AUTOMATIZADOR.h: 609:                 Rx = UART_read();
  7850  00015E  ECF7  F019         	call	_UART_read	;wreg free
  7851  000162  6E22               	movwf	getValue@Rx^0,c
  7852  000164                     
  7853                           ;./AUTOMATIZADOR.h: 611:                 if (Rx >= 48 && Rx <= 57) {
  7854  000164  0E2F               	movlw	47
  7855  000166  6422               	cpfsgt	getValue@Rx^0,c
  7856  000168  EFB8  F000         	goto	u3591
  7857  00016C  EFBA  F000         	goto	u3590
  7858  000170                     u3591:
  7859  000170  EF1E  F001         	goto	l4261
  7860  000174                     u3590:
  7861  000174  0E3A               	movlw	58
  7862  000176  6022               	cpfslt	getValue@Rx^0,c
  7863  000178  EFC0  F000         	goto	u3601
  7864  00017C  EFC2  F000         	goto	u3600
  7865  000180                     u3601:
  7866  000180  EF1E  F001         	goto	l4261
  7867  000184                     u3600:
  7868  000184                     
  7869                           ;./AUTOMATIZADOR.h: 613:                     Rx -= 48;
  7870  000184  0E30               	movlw	48
  7871  000186  5E22               	subwf	getValue@Rx^0,f,c
  7872                           
  7873                           ;./AUTOMATIZADOR.h: 615:                     switch (i) {
  7874  000188  EF04  F001         	goto	l4259
  7875  00018C                     l4249:
  7876                           
  7877                           ;./AUTOMATIZADOR.h: 617:                             dato = Rx;
  7878  00018C  5022               	movf	getValue@Rx^0,w,c
  7879  00018E  6E1E               	movwf	getValue@dato^0,c
  7880  000190  6A1F               	clrf	(getValue@dato+1)^0,c
  7881  000192  6A20               	clrf	(getValue@dato+2)^0,c
  7882  000194  6A21               	clrf	(getValue@dato+3)^0,c
  7883  000196                     
  7884                           ;./AUTOMATIZADOR.h: 618:                             dato *= 100;
  7885  000196  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  7886  00019A  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  7887  00019E  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  7888  0001A2  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  7889  0001A6  0E64               	movlw	100
  7890  0001A8  6E05               	movwf	___lmul@multiplicand^0,c
  7891  0001AA  0E00               	movlw	0
  7892  0001AC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7893  0001AE  0E00               	movlw	0
  7894  0001B0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7895  0001B2  0E00               	movlw	0
  7896  0001B4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7897  0001B6  EC04  F019         	call	___lmul	;wreg free
  7898  0001BA  C001  F01E         	movff	?___lmul,getValue@dato
  7899  0001BE  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  7900  0001C2  C003  F020         	movff	?___lmul+2,getValue@dato+2
  7901  0001C6  C004  F021         	movff	?___lmul+3,getValue@dato+3
  7902                           
  7903                           ;./AUTOMATIZADOR.h: 619:                             break;
  7904  0001CA  EF25  F001         	goto	l4265
  7905  0001CE                     l4253:
  7906                           
  7907                           ;./AUTOMATIZADOR.h: 622:                             dato += (Rx * 10);
  7908  0001CE  5022               	movf	getValue@Rx^0,w,c
  7909  0001D0  0D0A               	mullw	10
  7910  0001D2  CFF3 F011          	movff	prodl,??_getValue
  7911  0001D6  CFF4 F012          	movff	prodh,??_getValue+1
  7912  0001DA  0E00               	movlw	0
  7913  0001DC  BE12               	btfsc	(??_getValue+1)^0,7,c
  7914  0001DE  0EFF               	movlw	255
  7915  0001E0  6E13               	movwf	(??_getValue+2)^0,c
  7916  0001E2  6E14               	movwf	(??_getValue+3)^0,c
  7917  0001E4  5011               	movf	??_getValue^0,w,c
  7918  0001E6  261E               	addwf	getValue@dato^0,f,c
  7919  0001E8  5012               	movf	(??_getValue+1)^0,w,c
  7920  0001EA  221F               	addwfc	(getValue@dato+1)^0,f,c
  7921  0001EC  5013               	movf	(??_getValue+2)^0,w,c
  7922  0001EE  2220               	addwfc	(getValue@dato+2)^0,f,c
  7923  0001F0  5014               	movf	(??_getValue+3)^0,w,c
  7924  0001F2  2221               	addwfc	(getValue@dato+3)^0,f,c
  7925                           
  7926                           ;./AUTOMATIZADOR.h: 623:                             break;
  7927  0001F4  EF25  F001         	goto	l4265
  7928  0001F8                     l4255:
  7929                           
  7930                           ;./AUTOMATIZADOR.h: 626:                             dato += Rx;
  7931  0001F8  5022               	movf	getValue@Rx^0,w,c
  7932  0001FA  261E               	addwf	getValue@dato^0,f,c
  7933  0001FC  0E00               	movlw	0
  7934  0001FE  221F               	addwfc	(getValue@dato+1)^0,f,c
  7935  000200  2220               	addwfc	(getValue@dato+2)^0,f,c
  7936  000202  2221               	addwfc	(getValue@dato+3)^0,f,c
  7937                           
  7938                           ;./AUTOMATIZADOR.h: 627:                             break;
  7939  000204  EF25  F001         	goto	l4265
  7940  000208                     l4259:
  7941  000208  C018  F011         	movff	getValue@i_697,??_getValue
  7942  00020C  C019  F012         	movff	getValue@i_697+1,??_getValue+1
  7943                           
  7944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7945                           ; Switch size 1, requested type "simple"
  7946                           ; Number of cases is 1, Range of values is 0 to 0
  7947                           ; switch strategies available:
  7948                           ; Name         Instructions Cycles
  7949                           ; simple_byte            4     3 (average)
  7950                           ;	Chosen strategy is simple_byte
  7951  000210  5012               	movf	(??_getValue+1)^0,w,c
  7952  000212  0A00               	xorlw	0	; case 0
  7953  000214  B4D8               	btfsc	status,2,c
  7954  000216  EF0F  F001         	goto	l5519
  7955  00021A  EF25  F001         	goto	l4265
  7956  00021E                     l5519:
  7957                           
  7958                           ; Switch size 1, requested type "simple"
  7959                           ; Number of cases is 3, Range of values is 0 to 2
  7960                           ; switch strategies available:
  7961                           ; Name         Instructions Cycles
  7962                           ; simple_byte           10     6 (average)
  7963                           ;	Chosen strategy is simple_byte
  7964  00021E  5011               	movf	??_getValue^0,w,c
  7965  000220  0A00               	xorlw	0	; case 0
  7966  000222  B4D8               	btfsc	status,2,c
  7967  000224  EFC6  F000         	goto	l4249
  7968  000228  0A01               	xorlw	1	; case 1
  7969  00022A  B4D8               	btfsc	status,2,c
  7970  00022C  EFE7  F000         	goto	l4253
  7971  000230  0A03               	xorlw	3	; case 2
  7972  000232  B4D8               	btfsc	status,2,c
  7973  000234  EFFC  F000         	goto	l4255
  7974  000238  EF25  F001         	goto	l4265
  7975  00023C                     l4261:
  7976                           
  7977                           ;./AUTOMATIZADOR.h: 635:                     datoIncorrecto = 1;
  7978  00023C  0E01               	movlw	1
  7979  00023E  6E15               	movwf	getValue@datoIncorrecto^0,c
  7980  000240                     
  7981                           ;./AUTOMATIZADOR.h: 636:                     UART_write('@');
  7982  000240  0E40               	movlw	64
  7983  000242  ECAD  F01C         	call	_UART_write
  7984                           
  7985                           ;./AUTOMATIZADOR.h: 637:                     break;
  7986  000246  EFC1  F002         	goto	l4347
  7987  00024A                     l4265:
  7988                           
  7989                           ;./AUTOMATIZADOR.h: 639:             }
  7990  00024A  4A18               	infsnz	getValue@i_697^0,f,c
  7991  00024C  2A19               	incf	(getValue@i_697+1)^0,f,c
  7992  00024E  BE19               	btfsc	(getValue@i_697+1)^0,7,c
  7993  000250  EF33  F001         	goto	u3611
  7994  000254  5019               	movf	(getValue@i_697+1)^0,w,c
  7995  000256  E109               	bnz	u3610
  7996  000258  0E03               	movlw	3
  7997  00025A  5C18               	subwf	getValue@i_697^0,w,c
  7998  00025C  A0D8               	btfss	status,0,c
  7999  00025E  EF33  F001         	goto	u3611
  8000  000262  EF35  F001         	goto	u3610
  8001  000266                     u3611:
  8002  000266  EFAF  F000         	goto	l4241
  8003  00026A                     u3610:
  8004  00026A  EFC1  F002         	goto	l4347
  8005  00026E                     l4269:
  8006                           
  8007                           ;./AUTOMATIZADOR.h: 643:             for (T_INT i = 0; i < 4; i++) {
  8008  00026E  0E00               	movlw	0
  8009  000270  6E1B               	movwf	(getValue@i_698+1)^0,c
  8010  000272  0E00               	movlw	0
  8011  000274  6E1A               	movwf	getValue@i_698^0,c
  8012  000276                     l4275:
  8013                           
  8014                           ;./AUTOMATIZADOR.h: 645:                 Rx = UART_read();
  8015  000276  ECF7  F019         	call	_UART_read	;wreg free
  8016  00027A  6E22               	movwf	getValue@Rx^0,c
  8017  00027C                     
  8018                           ;./AUTOMATIZADOR.h: 647:                 if (Rx >= 48 && Rx <= 57) {
  8019  00027C  0E2F               	movlw	47
  8020  00027E  6422               	cpfsgt	getValue@Rx^0,c
  8021  000280  EF44  F001         	goto	u3621
  8022  000284  EF46  F001         	goto	u3620
  8023  000288                     u3621:
  8024  000288  EFC3  F001         	goto	l4297
  8025  00028C                     u3620:
  8026  00028C  0E3A               	movlw	58
  8027  00028E  6022               	cpfslt	getValue@Rx^0,c
  8028  000290  EF4C  F001         	goto	u3631
  8029  000294  EF4E  F001         	goto	u3630
  8030  000298                     u3631:
  8031  000298  EFC3  F001         	goto	l4297
  8032  00029C                     u3630:
  8033  00029C                     
  8034                           ;./AUTOMATIZADOR.h: 649:                     Rx -= 48;
  8035  00029C  0E30               	movlw	48
  8036  00029E  5E22               	subwf	getValue@Rx^0,f,c
  8037                           
  8038                           ;./AUTOMATIZADOR.h: 651:                     switch (i) {
  8039  0002A0  EFA5  F001         	goto	l4295
  8040  0002A4                     l4283:
  8041                           
  8042                           ;./AUTOMATIZADOR.h: 653:                             dato = Rx;
  8043  0002A4  5022               	movf	getValue@Rx^0,w,c
  8044  0002A6  6E1E               	movwf	getValue@dato^0,c
  8045  0002A8  6A1F               	clrf	(getValue@dato+1)^0,c
  8046  0002AA  6A20               	clrf	(getValue@dato+2)^0,c
  8047  0002AC  6A21               	clrf	(getValue@dato+3)^0,c
  8048  0002AE                     
  8049                           ;./AUTOMATIZADOR.h: 654:                             dato *= 1000;
  8050  0002AE  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  8051  0002B2  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  8052  0002B6  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  8053  0002BA  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  8054  0002BE  0EE8               	movlw	232
  8055  0002C0  6E05               	movwf	___lmul@multiplicand^0,c
  8056  0002C2  0E03               	movlw	3
  8057  0002C4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  8058  0002C6  0E00               	movlw	0
  8059  0002C8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  8060  0002CA  0E00               	movlw	0
  8061  0002CC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  8062  0002CE  EC04  F019         	call	___lmul	;wreg free
  8063  0002D2  C001  F01E         	movff	?___lmul,getValue@dato
  8064  0002D6  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  8065  0002DA  C003  F020         	movff	?___lmul+2,getValue@dato+2
  8066  0002DE  C004  F021         	movff	?___lmul+3,getValue@dato+3
  8067                           
  8068                           ;./AUTOMATIZADOR.h: 655:                             break;
  8069  0002E2  EFCA  F001         	goto	l4301
  8070  0002E6                     l4287:
  8071                           
  8072                           ;./AUTOMATIZADOR.h: 658:                             dato += (Rx * 100);
  8073  0002E6  5022               	movf	getValue@Rx^0,w,c
  8074  0002E8  0D64               	mullw	100
  8075  0002EA  CFF3 F011          	movff	prodl,??_getValue
  8076  0002EE  CFF4 F012          	movff	prodh,??_getValue+1
  8077  0002F2  0E00               	movlw	0
  8078  0002F4  BE12               	btfsc	(??_getValue+1)^0,7,c
  8079  0002F6  0EFF               	movlw	255
  8080  0002F8  6E13               	movwf	(??_getValue+2)^0,c
  8081  0002FA  6E14               	movwf	(??_getValue+3)^0,c
  8082  0002FC  5011               	movf	??_getValue^0,w,c
  8083  0002FE  261E               	addwf	getValue@dato^0,f,c
  8084  000300  5012               	movf	(??_getValue+1)^0,w,c
  8085  000302  221F               	addwfc	(getValue@dato+1)^0,f,c
  8086  000304  5013               	movf	(??_getValue+2)^0,w,c
  8087  000306  2220               	addwfc	(getValue@dato+2)^0,f,c
  8088  000308  5014               	movf	(??_getValue+3)^0,w,c
  8089  00030A  2221               	addwfc	(getValue@dato+3)^0,f,c
  8090                           
  8091                           ;./AUTOMATIZADOR.h: 659:                             break;
  8092  00030C  EFCA  F001         	goto	l4301
  8093  000310                     l4289:
  8094                           
  8095                           ;./AUTOMATIZADOR.h: 662:                             dato += (Rx * 10);
  8096  000310  5022               	movf	getValue@Rx^0,w,c
  8097  000312  0D0A               	mullw	10
  8098  000314  CFF3 F011          	movff	prodl,??_getValue
  8099  000318  CFF4 F012          	movff	prodh,??_getValue+1
  8100  00031C  0E00               	movlw	0
  8101  00031E  BE12               	btfsc	(??_getValue+1)^0,7,c
  8102  000320  0EFF               	movlw	255
  8103  000322  6E13               	movwf	(??_getValue+2)^0,c
  8104  000324  6E14               	movwf	(??_getValue+3)^0,c
  8105  000326  5011               	movf	??_getValue^0,w,c
  8106  000328  261E               	addwf	getValue@dato^0,f,c
  8107  00032A  5012               	movf	(??_getValue+1)^0,w,c
  8108  00032C  221F               	addwfc	(getValue@dato+1)^0,f,c
  8109  00032E  5013               	movf	(??_getValue+2)^0,w,c
  8110  000330  2220               	addwfc	(getValue@dato+2)^0,f,c
  8111  000332  5014               	movf	(??_getValue+3)^0,w,c
  8112  000334  2221               	addwfc	(getValue@dato+3)^0,f,c
  8113                           
  8114                           ;./AUTOMATIZADOR.h: 663:                             break;
  8115  000336  EFCA  F001         	goto	l4301
  8116  00033A                     l4291:
  8117                           
  8118                           ;./AUTOMATIZADOR.h: 666:                             dato += Rx;
  8119  00033A  5022               	movf	getValue@Rx^0,w,c
  8120  00033C  261E               	addwf	getValue@dato^0,f,c
  8121  00033E  0E00               	movlw	0
  8122  000340  221F               	addwfc	(getValue@dato+1)^0,f,c
  8123  000342  2220               	addwfc	(getValue@dato+2)^0,f,c
  8124  000344  2221               	addwfc	(getValue@dato+3)^0,f,c
  8125                           
  8126                           ;./AUTOMATIZADOR.h: 667:                             break;
  8127  000346  EFCA  F001         	goto	l4301
  8128  00034A                     l4295:
  8129  00034A  C01A  F011         	movff	getValue@i_698,??_getValue
  8130  00034E  C01B  F012         	movff	getValue@i_698+1,??_getValue+1
  8131                           
  8132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8133                           ; Switch size 1, requested type "simple"
  8134                           ; Number of cases is 1, Range of values is 0 to 0
  8135                           ; switch strategies available:
  8136                           ; Name         Instructions Cycles
  8137                           ; simple_byte            4     3 (average)
  8138                           ;	Chosen strategy is simple_byte
  8139  000352  5012               	movf	(??_getValue+1)^0,w,c
  8140  000354  0A00               	xorlw	0	; case 0
  8141  000356  B4D8               	btfsc	status,2,c
  8142  000358  EFB0  F001         	goto	l5521
  8143  00035C  EFCA  F001         	goto	l4301
  8144  000360                     l5521:
  8145                           
  8146                           ; Switch size 1, requested type "simple"
  8147                           ; Number of cases is 4, Range of values is 0 to 3
  8148                           ; switch strategies available:
  8149                           ; Name         Instructions Cycles
  8150                           ; simple_byte           13     7 (average)
  8151                           ;	Chosen strategy is simple_byte
  8152  000360  5011               	movf	??_getValue^0,w,c
  8153  000362  0A00               	xorlw	0	; case 0
  8154  000364  B4D8               	btfsc	status,2,c
  8155  000366  EF52  F001         	goto	l4283
  8156  00036A  0A01               	xorlw	1	; case 1
  8157  00036C  B4D8               	btfsc	status,2,c
  8158  00036E  EF73  F001         	goto	l4287
  8159  000372  0A03               	xorlw	3	; case 2
  8160  000374  B4D8               	btfsc	status,2,c
  8161  000376  EF88  F001         	goto	l4289
  8162  00037A  0A01               	xorlw	1	; case 3
  8163  00037C  B4D8               	btfsc	status,2,c
  8164  00037E  EF9D  F001         	goto	l4291
  8165  000382  EFCA  F001         	goto	l4301
  8166  000386                     l4297:
  8167                           
  8168                           ;./AUTOMATIZADOR.h: 675:                     datoIncorrecto = 1;
  8169  000386  0E01               	movlw	1
  8170  000388  6E15               	movwf	getValue@datoIncorrecto^0,c
  8171  00038A                     
  8172                           ;./AUTOMATIZADOR.h: 676:                     UART_write('@');
  8173  00038A  0E40               	movlw	64
  8174  00038C  ECAD  F01C         	call	_UART_write
  8175                           
  8176                           ;./AUTOMATIZADOR.h: 677:                     break;
  8177  000390  EFC1  F002         	goto	l4347
  8178  000394                     l4301:
  8179                           
  8180                           ;./AUTOMATIZADOR.h: 679:             }
  8181  000394  4A1A               	infsnz	getValue@i_698^0,f,c
  8182  000396  2A1B               	incf	(getValue@i_698+1)^0,f,c
  8183  000398  BE1B               	btfsc	(getValue@i_698+1)^0,7,c
  8184  00039A  EFD8  F001         	goto	u3641
  8185  00039E  501B               	movf	(getValue@i_698+1)^0,w,c
  8186  0003A0  E109               	bnz	u3640
  8187  0003A2  0E04               	movlw	4
  8188  0003A4  5C1A               	subwf	getValue@i_698^0,w,c
  8189  0003A6  A0D8               	btfss	status,0,c
  8190  0003A8  EFD8  F001         	goto	u3641
  8191  0003AC  EFDA  F001         	goto	u3640
  8192  0003B0                     u3641:
  8193  0003B0  EF3B  F001         	goto	l4275
  8194  0003B4                     u3640:
  8195  0003B4  EFC1  F002         	goto	l4347
  8196  0003B8                     l4305:
  8197                           
  8198                           ;./AUTOMATIZADOR.h: 683:             for (T_INT i = 0; i < 5; i++) {
  8199  0003B8  0E00               	movlw	0
  8200  0003BA  6E1D               	movwf	(getValue@i_699+1)^0,c
  8201  0003BC  0E00               	movlw	0
  8202  0003BE  6E1C               	movwf	getValue@i_699^0,c
  8203  0003C0                     l4311:
  8204                           
  8205                           ;./AUTOMATIZADOR.h: 685:                 Rx = UART_read();
  8206  0003C0  ECF7  F019         	call	_UART_read	;wreg free
  8207  0003C4  6E22               	movwf	getValue@Rx^0,c
  8208  0003C6                     
  8209                           ;./AUTOMATIZADOR.h: 687:                 if (Rx >= 48 && Rx <= 57) {
  8210  0003C6  0E2F               	movlw	47
  8211  0003C8  6422               	cpfsgt	getValue@Rx^0,c
  8212  0003CA  EFE9  F001         	goto	u3651
  8213  0003CE  EFEB  F001         	goto	u3650
  8214  0003D2                     u3651:
  8215  0003D2  EF86  F002         	goto	l4335
  8216  0003D6                     u3650:
  8217  0003D6  0E3A               	movlw	58
  8218  0003D8  6022               	cpfslt	getValue@Rx^0,c
  8219  0003DA  EFF1  F001         	goto	u3661
  8220  0003DE  EFF3  F001         	goto	u3660
  8221  0003E2                     u3661:
  8222  0003E2  EF86  F002         	goto	l4335
  8223  0003E6                     u3660:
  8224  0003E6                     
  8225                           ;./AUTOMATIZADOR.h: 689:                     Rx -= 48;
  8226  0003E6  0E30               	movlw	48
  8227  0003E8  5E22               	subwf	getValue@Rx^0,f,c
  8228                           
  8229                           ;./AUTOMATIZADOR.h: 691:                     switch (i) {
  8230  0003EA  EF64  F002         	goto	l4333
  8231  0003EE                     l4319:
  8232                           
  8233                           ;./AUTOMATIZADOR.h: 693:                             dato = Rx;
  8234  0003EE  5022               	movf	getValue@Rx^0,w,c
  8235  0003F0  6E1E               	movwf	getValue@dato^0,c
  8236  0003F2  6A1F               	clrf	(getValue@dato+1)^0,c
  8237  0003F4  6A20               	clrf	(getValue@dato+2)^0,c
  8238  0003F6  6A21               	clrf	(getValue@dato+3)^0,c
  8239  0003F8                     
  8240                           ;./AUTOMATIZADOR.h: 694:                             dato *= 10000;
  8241  0003F8  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  8242  0003FC  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  8243  000400  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  8244  000404  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  8245  000408  0E10               	movlw	16
  8246  00040A  6E05               	movwf	___lmul@multiplicand^0,c
  8247  00040C  0E27               	movlw	39
  8248  00040E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  8249  000410  0E00               	movlw	0
  8250  000412  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  8251  000414  0E00               	movlw	0
  8252  000416  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  8253  000418  EC04  F019         	call	___lmul	;wreg free
  8254  00041C  C001  F01E         	movff	?___lmul,getValue@dato
  8255  000420  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  8256  000424  C003  F020         	movff	?___lmul+2,getValue@dato+2
  8257  000428  C004  F021         	movff	?___lmul+3,getValue@dato+3
  8258                           
  8259                           ;./AUTOMATIZADOR.h: 695:                             break;
  8260  00042C  EF8D  F002         	goto	l4339
  8261  000430                     l4323:
  8262                           
  8263                           ;./AUTOMATIZADOR.h: 698:                             dato += (Rx * 1000);
  8264  000430  C022  F001         	movff	getValue@Rx,___wmul@multiplier
  8265  000434  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8266  000436  0E03               	movlw	3
  8267  000438  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8268  00043A  0EE8               	movlw	232
  8269  00043C  6E03               	movwf	___wmul@multiplicand^0,c
  8270  00043E  EC40  F01C         	call	___wmul	;wreg free
  8271  000442  C001  F011         	movff	?___wmul,??_getValue
  8272  000446  C002  F012         	movff	?___wmul+1,??_getValue+1
  8273  00044A  0E00               	movlw	0
  8274  00044C  BE12               	btfsc	(??_getValue+1)^0,7,c
  8275  00044E  0EFF               	movlw	255
  8276  000450  6E13               	movwf	(??_getValue+2)^0,c
  8277  000452  6E14               	movwf	(??_getValue+3)^0,c
  8278  000454  5011               	movf	??_getValue^0,w,c
  8279  000456  261E               	addwf	getValue@dato^0,f,c
  8280  000458  5012               	movf	(??_getValue+1)^0,w,c
  8281  00045A  221F               	addwfc	(getValue@dato+1)^0,f,c
  8282  00045C  5013               	movf	(??_getValue+2)^0,w,c
  8283  00045E  2220               	addwfc	(getValue@dato+2)^0,f,c
  8284  000460  5014               	movf	(??_getValue+3)^0,w,c
  8285  000462  2221               	addwfc	(getValue@dato+3)^0,f,c
  8286                           
  8287                           ;./AUTOMATIZADOR.h: 699:                             break;
  8288  000464  EF8D  F002         	goto	l4339
  8289  000468                     l4325:
  8290                           
  8291                           ;./AUTOMATIZADOR.h: 702:                             dato += (Rx * 100);
  8292  000468  5022               	movf	getValue@Rx^0,w,c
  8293  00046A  0D64               	mullw	100
  8294  00046C  CFF3 F011          	movff	prodl,??_getValue
  8295  000470  CFF4 F012          	movff	prodh,??_getValue+1
  8296  000474  0E00               	movlw	0
  8297  000476  BE12               	btfsc	(??_getValue+1)^0,7,c
  8298  000478  0EFF               	movlw	255
  8299  00047A  6E13               	movwf	(??_getValue+2)^0,c
  8300  00047C  6E14               	movwf	(??_getValue+3)^0,c
  8301  00047E  5011               	movf	??_getValue^0,w,c
  8302  000480  261E               	addwf	getValue@dato^0,f,c
  8303  000482  5012               	movf	(??_getValue+1)^0,w,c
  8304  000484  221F               	addwfc	(getValue@dato+1)^0,f,c
  8305  000486  5013               	movf	(??_getValue+2)^0,w,c
  8306  000488  2220               	addwfc	(getValue@dato+2)^0,f,c
  8307  00048A  5014               	movf	(??_getValue+3)^0,w,c
  8308  00048C  2221               	addwfc	(getValue@dato+3)^0,f,c
  8309                           
  8310                           ;./AUTOMATIZADOR.h: 703:                             break;
  8311  00048E  EF8D  F002         	goto	l4339
  8312  000492                     l4327:
  8313                           
  8314                           ;./AUTOMATIZADOR.h: 706:                             dato += (Rx * 10);
  8315  000492  5022               	movf	getValue@Rx^0,w,c
  8316  000494  0D0A               	mullw	10
  8317  000496  CFF3 F011          	movff	prodl,??_getValue
  8318  00049A  CFF4 F012          	movff	prodh,??_getValue+1
  8319  00049E  0E00               	movlw	0
  8320  0004A0  BE12               	btfsc	(??_getValue+1)^0,7,c
  8321  0004A2  0EFF               	movlw	255
  8322  0004A4  6E13               	movwf	(??_getValue+2)^0,c
  8323  0004A6  6E14               	movwf	(??_getValue+3)^0,c
  8324  0004A8  5011               	movf	??_getValue^0,w,c
  8325  0004AA  261E               	addwf	getValue@dato^0,f,c
  8326  0004AC  5012               	movf	(??_getValue+1)^0,w,c
  8327  0004AE  221F               	addwfc	(getValue@dato+1)^0,f,c
  8328  0004B0  5013               	movf	(??_getValue+2)^0,w,c
  8329  0004B2  2220               	addwfc	(getValue@dato+2)^0,f,c
  8330  0004B4  5014               	movf	(??_getValue+3)^0,w,c
  8331  0004B6  2221               	addwfc	(getValue@dato+3)^0,f,c
  8332  0004B8                     l4329:
  8333                           
  8334                           ;./AUTOMATIZADOR.h: 709:                             dato += Rx;
  8335  0004B8  5022               	movf	getValue@Rx^0,w,c
  8336  0004BA  261E               	addwf	getValue@dato^0,f,c
  8337  0004BC  0E00               	movlw	0
  8338  0004BE  221F               	addwfc	(getValue@dato+1)^0,f,c
  8339  0004C0  2220               	addwfc	(getValue@dato+2)^0,f,c
  8340  0004C2  2221               	addwfc	(getValue@dato+3)^0,f,c
  8341                           
  8342                           ;./AUTOMATIZADOR.h: 710:                             break;
  8343  0004C4  EF8D  F002         	goto	l4339
  8344  0004C8                     l4333:
  8345  0004C8  C01C  F011         	movff	getValue@i_699,??_getValue
  8346  0004CC  C01D  F012         	movff	getValue@i_699+1,??_getValue+1
  8347                           
  8348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8349                           ; Switch size 1, requested type "simple"
  8350                           ; Number of cases is 1, Range of values is 0 to 0
  8351                           ; switch strategies available:
  8352                           ; Name         Instructions Cycles
  8353                           ; simple_byte            4     3 (average)
  8354                           ;	Chosen strategy is simple_byte
  8355  0004D0  5012               	movf	(??_getValue+1)^0,w,c
  8356  0004D2  0A00               	xorlw	0	; case 0
  8357  0004D4  B4D8               	btfsc	status,2,c
  8358  0004D6  EF6F  F002         	goto	l5523
  8359  0004DA  EF8D  F002         	goto	l4339
  8360  0004DE                     l5523:
  8361                           
  8362                           ; Switch size 1, requested type "simple"
  8363                           ; Number of cases is 5, Range of values is 0 to 4
  8364                           ; switch strategies available:
  8365                           ; Name         Instructions Cycles
  8366                           ; simple_byte           16     9 (average)
  8367                           ;	Chosen strategy is simple_byte
  8368  0004DE  5011               	movf	??_getValue^0,w,c
  8369  0004E0  0A00               	xorlw	0	; case 0
  8370  0004E2  B4D8               	btfsc	status,2,c
  8371  0004E4  EFF7  F001         	goto	l4319
  8372  0004E8  0A01               	xorlw	1	; case 1
  8373  0004EA  B4D8               	btfsc	status,2,c
  8374  0004EC  EF18  F002         	goto	l4323
  8375  0004F0  0A03               	xorlw	3	; case 2
  8376  0004F2  B4D8               	btfsc	status,2,c
  8377  0004F4  EF34  F002         	goto	l4325
  8378  0004F8  0A01               	xorlw	1	; case 3
  8379  0004FA  B4D8               	btfsc	status,2,c
  8380  0004FC  EF49  F002         	goto	l4327
  8381  000500  0A07               	xorlw	7	; case 4
  8382  000502  B4D8               	btfsc	status,2,c
  8383  000504  EF5C  F002         	goto	l4329
  8384  000508  EF8D  F002         	goto	l4339
  8385  00050C                     l4335:
  8386                           
  8387                           ;./AUTOMATIZADOR.h: 718:                     datoIncorrecto = 1;
  8388  00050C  0E01               	movlw	1
  8389  00050E  6E15               	movwf	getValue@datoIncorrecto^0,c
  8390  000510                     
  8391                           ;./AUTOMATIZADOR.h: 719:                     UART_write('@');
  8392  000510  0E40               	movlw	64
  8393  000512  ECAD  F01C         	call	_UART_write
  8394                           
  8395                           ;./AUTOMATIZADOR.h: 720:                     break;
  8396  000516  EFC1  F002         	goto	l4347
  8397  00051A                     l4339:
  8398                           
  8399                           ;./AUTOMATIZADOR.h: 722:             }
  8400  00051A  4A1C               	infsnz	getValue@i_699^0,f,c
  8401  00051C  2A1D               	incf	(getValue@i_699+1)^0,f,c
  8402  00051E  BE1D               	btfsc	(getValue@i_699+1)^0,7,c
  8403  000520  EF9B  F002         	goto	u3671
  8404  000524  501D               	movf	(getValue@i_699+1)^0,w,c
  8405  000526  E109               	bnz	u3670
  8406  000528  0E05               	movlw	5
  8407  00052A  5C1C               	subwf	getValue@i_699^0,w,c
  8408  00052C  A0D8               	btfss	status,0,c
  8409  00052E  EF9B  F002         	goto	u3671
  8410  000532  EF9D  F002         	goto	u3670
  8411  000536                     u3671:
  8412  000536  EFE0  F001         	goto	l4311
  8413  00053A                     u3670:
  8414  00053A  EFC1  F002         	goto	l4347
  8415  00053E                     l4345:
  8416  00053E  C00D  F011         	movff	getValue@numCharacters,??_getValue
  8417  000542  C00E  F012         	movff	getValue@numCharacters+1,??_getValue+1
  8418                           
  8419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8420                           ; Switch size 1, requested type "simple"
  8421                           ; Number of cases is 1, Range of values is 0 to 0
  8422                           ; switch strategies available:
  8423                           ; Name         Instructions Cycles
  8424                           ; simple_byte            4     3 (average)
  8425                           ;	Chosen strategy is simple_byte
  8426  000546  5012               	movf	(??_getValue+1)^0,w,c
  8427  000548  0A00               	xorlw	0	; case 0
  8428  00054A  B4D8               	btfsc	status,2,c
  8429  00054C  EFAA  F002         	goto	l5525
  8430  000550  EFC1  F002         	goto	l4347
  8431  000554                     l5525:
  8432                           
  8433                           ; Switch size 1, requested type "simple"
  8434                           ; Number of cases is 5, Range of values is 1 to 5
  8435                           ; switch strategies available:
  8436                           ; Name         Instructions Cycles
  8437                           ; simple_byte           16     9 (average)
  8438                           ;	Chosen strategy is simple_byte
  8439  000554  5011               	movf	??_getValue^0,w,c
  8440  000556  0A01               	xorlw	1	; case 1
  8441  000558  B4D8               	btfsc	status,2,c
  8442  00055A  EF15  F000         	goto	l4189
  8443  00055E  0A03               	xorlw	3	; case 2
  8444  000560  B4D8               	btfsc	status,2,c
  8445  000562  EF38  F000         	goto	l4203
  8446  000566  0A01               	xorlw	1	; case 3
  8447  000568  B4D8               	btfsc	status,2,c
  8448  00056A  EFAB  F000         	goto	l4235
  8449  00056E  0A07               	xorlw	7	; case 4
  8450  000570  B4D8               	btfsc	status,2,c
  8451  000572  EF37  F001         	goto	l4269
  8452  000576  0A01               	xorlw	1	; case 5
  8453  000578  B4D8               	btfsc	status,2,c
  8454  00057A  EFDC  F001         	goto	l4305
  8455  00057E  EFC1  F002         	goto	l4347
  8456  000582                     l4347:
  8457                           
  8458                           ;./AUTOMATIZADOR.h: 731:     if (esperandoDatos || datoIncorrecto) {
  8459  000582  0100               	movlb	0	; () banked
  8460  000584  51D3               	movf	_esperandoDatos& (0+255),w,b
  8461  000586  A4D8               	btfss	status,2,c
  8462  000588  EFC8  F002         	goto	u3681
  8463  00058C  EFCA  F002         	goto	u3680
  8464  000590                     u3681:
  8465  000590  EFD2  F002         	goto	l4351
  8466  000594                     u3680:
  8467  000594                     
  8468                           ; BSR set to: 0
  8469  000594  5015               	movf	getValue@datoIncorrecto^0,w,c
  8470  000596  B4D8               	btfsc	status,2,c
  8471  000598  EFD0  F002         	goto	u3691
  8472  00059C  EFD2  F002         	goto	u3690
  8473  0005A0                     u3691:
  8474  0005A0  EFDC  F002         	goto	l427
  8475  0005A4                     u3690:
  8476  0005A4                     l4351:
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;./AUTOMATIZADOR.h: 734:         return '@';
  8480  0005A4  0E40               	movlw	64
  8481  0005A6  6E0D               	movwf	?_getValue^0,c
  8482  0005A8  0E00               	movlw	0
  8483  0005AA  6E0E               	movwf	(?_getValue+1)^0,c
  8484  0005AC  0E00               	movlw	0
  8485  0005AE  6E0F               	movwf	(?_getValue+2)^0,c
  8486  0005B0  0E00               	movlw	0
  8487  0005B2  6E10               	movwf	(?_getValue+3)^0,c
  8488  0005B4  EFE4  F002         	goto	l430
  8489  0005B8                     l427:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;./AUTOMATIZADOR.h: 736:         return dato;
  8493  0005B8  C01E  F00D         	movff	getValue@dato,?_getValue
  8494  0005BC  C01F  F00E         	movff	getValue@dato+1,?_getValue+1
  8495  0005C0  C020  F00F         	movff	getValue@dato+2,?_getValue+2
  8496  0005C4  C021  F010         	movff	getValue@dato+3,?_getValue+3
  8497  0005C8                     l430:
  8498                           
  8499                           ; BSR set to: 0
  8500  0005C8  0012               	return		;funcret
  8501  0005CA                     __end_of_getValue:
  8502                           	opt callstack 0
  8503                           
  8504 ;; *************** function _UART_write *****************
  8505 ;; Defined at:
  8506 ;;		line 52 in file "./UART.h"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  dato            1    wreg     unsigned char 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  dato            1    0[COMRAM] unsigned char 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8520 ;;      Params:         0       0       0       0       0       0       0       0       0
  8521 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8523 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8524 ;;Total ram usage:        1 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    1
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_UART_printf
  8531 ;;		_fijaDiaRtc
  8532 ;;		_leeHorariosMemoria
  8533 ;;		_fijaHoraRtc
  8534 ;;		_asignarHorarios
  8535 ;;		_setTiempoIluminar
  8536 ;;		_dameDatosSistema
  8537 ;;		_mostrarDatosSensores
  8538 ;;		_getValue
  8539 ;;		_asignarSetPoint
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text37
  8544  00395A                     __ptext37:
  8545                           	opt callstack 0
  8546  00395A                     _UART_write:
  8547                           	opt callstack 26
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;incstack = 0
  8551                           ;UART_write@dato stored from wreg
  8552  00395A  6E01               	movwf	UART_write@dato^0,c
  8553  00395C                     
  8554                           ;./UART.h: 53:     TXREG = dato;
  8555  00395C  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8556  003960                     l115:
  8557  003960  A2AC               	btfss	172,1,c	;volatile
  8558  003962  EFB5  F01C         	goto	u2921
  8559  003966  EFB7  F01C         	goto	u2920
  8560  00396A                     u2921:
  8561  00396A  EFB0  F01C         	goto	l115
  8562  00396E                     u2920:
  8563  00396E  0012               	return		;funcret
  8564  003970                     __end_of_UART_write:
  8565                           	opt callstack 0
  8566                           
  8567 ;; *************** function _UART_read *****************
  8568 ;; Defined at:
  8569 ;;		line 34 in file "./UART.h"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;		None
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;		None
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      unsigned char 
  8576 ;; Registers used:
  8577 ;;		wreg, status,2
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8583 ;;      Params:         0       0       0       0       0       0       0       0       0
  8584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8586 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8587 ;;Total ram usage:        0 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; Hardware stack levels required when called:    1
  8590 ;; This function calls:
  8591 ;;		Nothing
  8592 ;; This function is called by:
  8593 ;;		_getValue
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text38
  8598  0033EE                     __ptext38:
  8599                           	opt callstack 0
  8600  0033EE                     _UART_read:
  8601                           	opt callstack 26
  8602  0033EE                     
  8603                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  8604  0033EE  0E67               	movlw	103
  8605  0033F0  6ED7               	movwf	215,c	;volatile
  8606  0033F2  0E69               	movlw	105
  8607  0033F4  6ED6               	movwf	214,c	;volatile
  8608                           
  8609                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  8610  0033F6  0E00               	movlw	0
  8611  0033F8  0100               	movlb	0	; () banked
  8612  0033FA  6FD4               	movwf	_esperaDatoConcluida& (0+255),b
  8613                           
  8614                           ;./UART.h: 38:     esperandoDatos = 1;
  8615  0033FC  0E01               	movlw	1
  8616  0033FE  6FD3               	movwf	_esperandoDatos& (0+255),b
  8617                           
  8618                           ;./UART.h: 39:     byteUart = 0;
  8619  003400  0E00               	movlw	0
  8620  003402  6FD5               	movwf	_byteUart& (0+255),b
  8621                           
  8622                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  8623  003404  0E00               	movlw	0
  8624  003406  6FD6               	movwf	_tiempoInactividadTrans& (0+255),b
  8625  003408                     l106:
  8626                           
  8627                           ; BSR set to: 0
  8628  003408  BA9E               	btfsc	158,5,c	;volatile
  8629  00340A  EF09  F01A         	goto	u2891
  8630  00340E  EF0B  F01A         	goto	u2890
  8631  003412                     u2891:
  8632  003412  EF13  F01A         	goto	l3741
  8633  003416                     u2890:
  8634  003416                     
  8635                           ; BSR set to: 0
  8636  003416  51D4               	movf	_esperaDatoConcluida& (0+255),w,b
  8637  003418  B4D8               	btfsc	status,2,c
  8638  00341A  EF11  F01A         	goto	u2901
  8639  00341E  EF13  F01A         	goto	u2900
  8640  003422                     u2901:
  8641  003422  EF04  F01A         	goto	l106
  8642  003426                     u2900:
  8643  003426                     l3741:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  8647  003426  51D4               	movf	_esperaDatoConcluida& (0+255),w,b
  8648  003428  A4D8               	btfss	status,2,c
  8649  00342A  EF19  F01A         	goto	u2911
  8650  00342E  EF1B  F01A         	goto	u2910
  8651  003432                     u2911:
  8652  003432  EF1F  F01A         	goto	l111
  8653  003436                     u2910:
  8654  003436                     
  8655                           ; BSR set to: 0
  8656                           ;./UART.h: 45:         byteUart = RCREG;
  8657  003436  CFAE F0D5          	movff	4014,_byteUart	;volatile
  8658  00343A                     
  8659                           ; BSR set to: 0
  8660                           ;./UART.h: 46:         esperandoDatos = 0;
  8661  00343A  0E00               	movlw	0
  8662  00343C  6FD3               	movwf	_esperandoDatos& (0+255),b
  8663  00343E                     l111:
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;./UART.h: 49:     return byteUart;
  8667  00343E  51D5               	movf	_byteUart& (0+255),w,b
  8668  003440                     
  8669                           ; BSR set to: 0
  8670  003440  0012               	return		;funcret
  8671  003442                     __end_of_UART_read:
  8672                           	opt callstack 0
  8673                           
  8674 ;; *************** function _escribeHorariosMemoria *****************
  8675 ;; Defined at:
  8676 ;;		line 168 in file "./AUTOMATIZADOR.h"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  j               2   12[COMRAM] int 
  8681 ;;  i               2   16[COMRAM] int 
  8682 ;;  contMemoria     2   14[COMRAM] int 
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1    wreg      void 
  8685 ;; Registers used:
  8686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8692 ;;      Params:         0       0       0       0       0       0       0       0       0
  8693 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8694 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8695 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8696 ;;Total ram usage:        8 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; Hardware stack levels required when called:    4
  8699 ;; This function calls:
  8700 ;;		___wmul
  8701 ;;		_escribe_eeprom
  8702 ;; This function is called by:
  8703 ;;		_asignarHorarios
  8704 ;;		_setTiempoIluminar
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text39
  8709  0024F0                     __ptext39:
  8710                           	opt callstack 0
  8711  0024F0                     _escribeHorariosMemoria:
  8712                           	opt callstack 24
  8713  0024F0                     
  8714                           ;./AUTOMATIZADOR.h: 170:     T_INT contMemoria = 0;
  8715  0024F0  0E00               	movlw	0
  8716  0024F2  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  8717  0024F4  0E00               	movlw	0
  8718  0024F6  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
  8719  0024F8                     
  8720                           ;./AUTOMATIZADOR.h: 172:     escribe_eeprom(contMemoria++, 'T');
  8721  0024F8  0E00               	movlw	0
  8722  0024FA  6E08               	movwf	(escribe_eeprom@direccion+1)^0,c
  8723  0024FC  0E00               	movlw	0
  8724  0024FE  6E07               	movwf	escribe_eeprom@direccion^0,c
  8725  002500  0E54               	movlw	84
  8726  002502  6E09               	movwf	escribe_eeprom@dato^0,c
  8727  002504  ECE6  F01B         	call	_escribe_eeprom	;wreg free
  8728  002508  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8729  00250A  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8730  00250C                     
  8731                           ;./AUTOMATIZADOR.h: 175:     for (T_INT i = 0; i < 24; i++) {
  8732  00250C  0E00               	movlw	0
  8733  00250E  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
  8734  002510  0E00               	movlw	0
  8735  002512  6E11               	movwf	escribeHorariosMemoria@i^0,c
  8736  002514                     l4591:
  8737                           
  8738                           ;./AUTOMATIZADOR.h: 176:         escribe_eeprom(contMemoria++, horarios[i].hora);
  8739  002514  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8740  002518  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8741  00251C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8742  002520  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8743  002524  0E00               	movlw	0
  8744  002526  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8745  002528  0E0C               	movlw	12
  8746  00252A  6E03               	movwf	___wmul@multiplicand^0,c
  8747  00252C  EC40  F01C         	call	___wmul	;wreg free
  8748  002530  0E52               	movlw	low _horarios
  8749  002532  2401               	addwf	?___wmul^0,w,c
  8750  002534  6ED9               	movwf	fsr2l,c
  8751  002536  0E01               	movlw	high _horarios
  8752  002538  2002               	addwfc	(?___wmul+1)^0,w,c
  8753  00253A  6EDA               	movwf	fsr2h,c
  8754  00253C  50DF               	movf	indf2,w,c
  8755  00253E  6E09               	movwf	escribe_eeprom@dato^0,c
  8756  002540  ECE6  F01B         	call	_escribe_eeprom	;wreg free
  8757  002544  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8758  002546  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8759  002548                     
  8760                           ;./AUTOMATIZADOR.h: 178:         for (T_INT j = 0; j < 7; j++) {
  8761  002548  0E00               	movlw	0
  8762  00254A  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
  8763  00254C  0E00               	movlw	0
  8764  00254E  6E0D               	movwf	escribeHorariosMemoria@j^0,c
  8765  002550                     l4601:
  8766                           
  8767                           ;./AUTOMATIZADOR.h: 179:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
  8768  002550  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8769  002554  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8770  002558  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8771  00255C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8772  002560  0E00               	movlw	0
  8773  002562  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8774  002564  0E0C               	movlw	12
  8775  002566  6E03               	movwf	___wmul@multiplicand^0,c
  8776  002568  EC40  F01C         	call	___wmul	;wreg free
  8777  00256C  0E52               	movlw	low _horarios
  8778  00256E  6E0B               	movwf	??_escribeHorariosMemoria^0,c
  8779  002570  0E01               	movlw	high _horarios
  8780  002572  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
  8781  002574  0E01               	movlw	1
  8782  002576  260B               	addwf	??_escribeHorariosMemoria^0,f,c
  8783  002578  0E00               	movlw	0
  8784  00257A  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
  8785  00257C  5001               	movf	?___wmul^0,w,c
  8786  00257E  260B               	addwf	??_escribeHorariosMemoria^0,f,c
  8787  002580  5002               	movf	(?___wmul+1)^0,w,c
  8788  002582  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
  8789  002584  500D               	movf	escribeHorariosMemoria@j^0,w,c
  8790  002586  240B               	addwf	??_escribeHorariosMemoria^0,w,c
  8791  002588  6ED9               	movwf	fsr2l,c
  8792  00258A  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
  8793  00258C  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
  8794  00258E  6EDA               	movwf	fsr2h,c
  8795  002590  50DF               	movf	indf2,w,c
  8796  002592  6E09               	movwf	escribe_eeprom@dato^0,c
  8797  002594  ECE6  F01B         	call	_escribe_eeprom	;wreg free
  8798  002598  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8799  00259A  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8800  00259C                     
  8801                           ;./AUTOMATIZADOR.h: 180:         }
  8802  00259C  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
  8803  00259E  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
  8804  0025A0  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
  8805  0025A2  EFDC  F012         	goto	u3931
  8806  0025A6  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
  8807  0025A8  E109               	bnz	u3930
  8808  0025AA  0E07               	movlw	7
  8809  0025AC  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
  8810  0025AE  A0D8               	btfss	status,0,c
  8811  0025B0  EFDC  F012         	goto	u3931
  8812  0025B4  EFDE  F012         	goto	u3930
  8813  0025B8                     u3931:
  8814  0025B8  EFA8  F012         	goto	l4601
  8815  0025BC                     u3930:
  8816  0025BC                     
  8817                           ;./AUTOMATIZADOR.h: 182:         escribe_eeprom(contMemoria++, horarios[i].iluminar);
  8818  0025BC  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8819  0025C0  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8820  0025C4  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8821  0025C8  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8822  0025CC  0E00               	movlw	0
  8823  0025CE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8824  0025D0  0E0C               	movlw	12
  8825  0025D2  6E03               	movwf	___wmul@multiplicand^0,c
  8826  0025D4  EC40  F01C         	call	___wmul	;wreg free
  8827  0025D8  0E5B               	movlw	low (_horarios+9)
  8828  0025DA  2401               	addwf	?___wmul^0,w,c
  8829  0025DC  6ED9               	movwf	fsr2l,c
  8830  0025DE  0E01               	movlw	high (_horarios+9)
  8831  0025E0  2002               	addwfc	(?___wmul+1)^0,w,c
  8832  0025E2  6EDA               	movwf	fsr2h,c
  8833  0025E4  50DF               	movf	indf2,w,c
  8834  0025E6  6E09               	movwf	escribe_eeprom@dato^0,c
  8835  0025E8  ECE6  F01B         	call	_escribe_eeprom	;wreg free
  8836  0025EC  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8837  0025EE  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8838  0025F0                     
  8839                           ;./AUTOMATIZADOR.h: 183:         escribe_eeprom(contMemoria++, horarios[i].tiempoIlumina
      +                          r);
  8840  0025F0  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8841  0025F4  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8842  0025F8  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8843  0025FC  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8844  002600  0E00               	movlw	0
  8845  002602  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8846  002604  0E0C               	movlw	12
  8847  002606  6E03               	movwf	___wmul@multiplicand^0,c
  8848  002608  EC40  F01C         	call	___wmul	;wreg free
  8849  00260C  0E5D               	movlw	low (_horarios+11)
  8850  00260E  2401               	addwf	?___wmul^0,w,c
  8851  002610  6ED9               	movwf	fsr2l,c
  8852  002612  0E01               	movlw	high (_horarios+11)
  8853  002614  2002               	addwfc	(?___wmul+1)^0,w,c
  8854  002616  6EDA               	movwf	fsr2h,c
  8855  002618  50DF               	movf	indf2,w,c
  8856  00261A  6E09               	movwf	escribe_eeprom@dato^0,c
  8857  00261C  ECE6  F01B         	call	_escribe_eeprom	;wreg free
  8858  002620  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8859  002622  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8860                           
  8861                           ;./AUTOMATIZADOR.h: 184:     }
  8862  002624  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
  8863  002626  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  8864  002628  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  8865  00262A  EF20  F013         	goto	u3941
  8866  00262E  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  8867  002630  E109               	bnz	u3940
  8868  002632  0E18               	movlw	24
  8869  002634  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
  8870  002636  A0D8               	btfss	status,0,c
  8871  002638  EF20  F013         	goto	u3941
  8872  00263C  EF22  F013         	goto	u3940
  8873  002640                     u3941:
  8874  002640  EF8A  F012         	goto	l4591
  8875  002644                     u3940:
  8876  002644  0012               	return		;funcret
  8877  002646                     __end_of_escribeHorariosMemoria:
  8878                           	opt callstack 0
  8879                           
  8880 ;; *************** function _escribe_eeprom *****************
  8881 ;; Defined at:
  8882 ;;		line 139 in file "./AUTOMATIZADOR.h"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  direccion       2    6[COMRAM] unsigned short 
  8885 ;;  dato            1    8[COMRAM] unsigned char 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8897 ;;      Params:         3       0       0       0       0       0       0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8899 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8900 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8901 ;;Total ram usage:        4 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    3
  8904 ;; This function calls:
  8905 ;;		_i2c_detener
  8906 ;;		_i2c_envia_dato
  8907 ;;		_i2c_inicia_com
  8908 ;; This function is called by:
  8909 ;;		_escribeHorariosMemoria
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text40
  8914  0037CC                     __ptext40:
  8915                           	opt callstack 0
  8916  0037CC                     _escribe_eeprom:
  8917                           	opt callstack 24
  8918  0037CC                     
  8919                           ;./AUTOMATIZADOR.h: 140:     i2c_inicia_com();
  8920  0037CC  ECE8  F01C         	call	_i2c_inicia_com	;wreg free
  8921                           
  8922                           ;./AUTOMATIZADOR.h: 141:     i2c_envia_dato(0xAE);
  8923  0037D0  0EAE               	movlw	174
  8924  0037D2  ECDE  F01C         	call	_i2c_envia_dato
  8925                           
  8926                           ;./AUTOMATIZADOR.h: 142:     i2c_envia_dato(direccion >> 8);
  8927  0037D6  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  8928  0037D8  ECDE  F01C         	call	_i2c_envia_dato
  8929                           
  8930                           ;./AUTOMATIZADOR.h: 144:     i2c_envia_dato(direccion);
  8931  0037DC  5007               	movf	escribe_eeprom@direccion^0,w,c
  8932  0037DE  ECDE  F01C         	call	_i2c_envia_dato
  8933                           
  8934                           ;./AUTOMATIZADOR.h: 146:     i2c_envia_dato(dato);
  8935  0037E2  5009               	movf	escribe_eeprom@dato^0,w,c
  8936  0037E4  ECDE  F01C         	call	_i2c_envia_dato
  8937                           
  8938                           ;./AUTOMATIZADOR.h: 147:     i2c_detener();
  8939  0037E8  ECEC  F01C         	call	_i2c_detener	;wreg free
  8940  0037EC                     
  8941                           ;./AUTOMATIZADOR.h: 148:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8942  0037EC  0E0D               	movlw	13
  8943  0037EE  6E0A               	movwf	??_escribe_eeprom^0,c
  8944  0037F0  0EFC               	movlw	252
  8945  0037F2                     u4577:
  8946  0037F2  2EE8               	decfsz	wreg,f,c
  8947  0037F4  D7FE               	bra	u4577
  8948  0037F6  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  8949  0037F8  D7FC               	bra	u4577
  8950  0037FA  0012               	return		;funcret
  8951  0037FC                     __end_of_escribe_eeprom:
  8952                           	opt callstack 0
  8953                           
  8954 ;; *************** function _sistemaIluminado *****************
  8955 ;; Defined at:
  8956 ;;		line 412 in file "./AUTOMATIZADOR.h"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;		None
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;		None
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8970 ;;      Params:         0       0       0       0       0       0       0       0       0
  8971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8972 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8973 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8974 ;;Total ram usage:        1 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    5
  8977 ;; This function calls:
  8978 ;;		_dameDiaActual
  8979 ;;		_dameHoraActual
  8980 ;;		_horaIluminar
  8981 ;;		_pwmDuty
  8982 ;; This function is called by:
  8983 ;;		_main
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text41
  8988  00278A                     __ptext41:
  8989                           	opt callstack 0
  8990  00278A                     _sistemaIluminado:
  8991                           	opt callstack 25
  8992  00278A                     
  8993                           ;./AUTOMATIZADOR.h: 416:     if (iluminando) {
  8994  00278A  0100               	movlb	0	; () banked
  8995  00278C  51C9               	movf	_iluminando& (0+255),w,b
  8996  00278E  B4D8               	btfsc	status,2,c
  8997  002790  EFCC  F013         	goto	u4401
  8998  002794  EFCE  F013         	goto	u4400
  8999  002798                     u4401:
  9000  002798  EF0A  F014         	goto	l5131
  9001  00279C                     u4400:
  9002  00279C                     
  9003                           ; BSR set to: 0
  9004                           ;./AUTOMATIZADOR.h: 421:         contInterrupciones++;
  9005  00279C  4BC6               	infsnz	_contInterrupciones& (0+255),f,b
  9006  00279E  2BC7               	incf	(_contInterrupciones+1)& (0+255),f,b
  9007  0027A0                     
  9008                           ; BSR set to: 0
  9009                           ;./AUTOMATIZADOR.h: 423:         if (contInterrupciones == 6) {
  9010  0027A0  0E06               	movlw	6
  9011  0027A2  19C6               	xorwf	_contInterrupciones& (0+255),w,b
  9012  0027A4  11C7               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  9013  0027A6  A4D8               	btfss	status,2,c
  9014  0027A8  EFD8  F013         	goto	u4411
  9015  0027AC  EFDA  F013         	goto	u4410
  9016  0027B0                     u4411:
  9017  0027B0  EF50  F014         	goto	l350
  9018  0027B4                     u4410:
  9019  0027B4                     
  9020                           ; BSR set to: 0
  9021                           ;./AUTOMATIZADOR.h: 424:             contInterrupciones = 0;
  9022  0027B4  0E00               	movlw	0
  9023  0027B6  6FC7               	movwf	(_contInterrupciones+1)& (0+255),b
  9024  0027B8  0E00               	movlw	0
  9025  0027BA  6FC6               	movwf	_contInterrupciones& (0+255),b
  9026  0027BC                     
  9027                           ; BSR set to: 0
  9028                           ;./AUTOMATIZADOR.h: 425:             minutosTranscurridos++;
  9029  0027BC  4BC2               	infsnz	_minutosTranscurridos& (0+255),f,b
  9030  0027BE  2BC3               	incf	(_minutosTranscurridos+1)& (0+255),f,b
  9031  0027C0                     
  9032                           ; BSR set to: 0
  9033                           ;./AUTOMATIZADOR.h: 428:             if (minutosTranscurridos >= minutosIluminar) {
  9034  0027C0  51C4               	movf	_minutosIluminar& (0+255),w,b
  9035  0027C2  5DC2               	subwf	_minutosTranscurridos& (0+255),w,b
  9036  0027C4  51C5               	movf	(_minutosIluminar+1)& (0+255),w,b
  9037  0027C6  59C3               	subwfb	(_minutosTranscurridos+1)& (0+255),w,b
  9038  0027C8  A0D8               	btfss	status,0,c
  9039  0027CA  EFE9  F013         	goto	u4421
  9040  0027CE  EFEB  F013         	goto	u4420
  9041  0027D2                     u4421:
  9042  0027D2  EF50  F014         	goto	l350
  9043  0027D6                     u4420:
  9044  0027D6                     
  9045                           ; BSR set to: 0
  9046                           ;./AUTOMATIZADOR.h: 430:                 pwmDuty(0, 1);
  9047  0027D6  0E00               	movlw	0
  9048  0027D8  6E4C               	movwf	(pwmDuty@cicloTrabajo+1)^0,c
  9049  0027DA  0E00               	movlw	0
  9050  0027DC  6E4B               	movwf	pwmDuty@cicloTrabajo^0,c
  9051  0027DE  0E01               	movlw	1
  9052  0027E0  6E4D               	movwf	pwmDuty@channel^0,c
  9053  0027E2  EC4F  F00C         	call	_pwmDuty	;wreg free
  9054  0027E6                     
  9055                           ;./AUTOMATIZADOR.h: 431:                 minutosTranscurridos = 0;
  9056  0027E6  0E00               	movlw	0
  9057  0027E8  0100               	movlb	0	; () banked
  9058  0027EA  6FC3               	movwf	(_minutosTranscurridos+1)& (0+255),b
  9059  0027EC  0E00               	movlw	0
  9060  0027EE  6FC2               	movwf	_minutosTranscurridos& (0+255),b
  9061  0027F0                     
  9062                           ; BSR set to: 0
  9063                           ;./AUTOMATIZADOR.h: 432:                 iluminando = 0;
  9064  0027F0  0E00               	movlw	0
  9065  0027F2  6FC9               	movwf	_iluminando& (0+255),b
  9066  0027F4                     
  9067                           ; BSR set to: 0
  9068                           ;./AUTOMATIZADOR.h: 433:                 horarios[hora].iluminado = 1;
  9069  0027F4  51D1               	movf	_hora& (0+255),w,b
  9070  0027F6  0D0C               	mullw	12
  9071  0027F8  0E5C               	movlw	low (_horarios+10)
  9072  0027FA  24F3               	addwf	243,w,c
  9073  0027FC  6ED9               	movwf	fsr2l,c
  9074  0027FE  0E01               	movlw	high (_horarios+10)
  9075  002800  20F4               	addwfc	prodh,w,c
  9076  002802  6EDA               	movwf	fsr2h,c
  9077  002804  0E01               	movlw	1
  9078  002806  6EDF               	movwf	indf2,c
  9079  002808                     
  9080                           ; BSR set to: 0
  9081                           ;./AUTOMATIZADOR.h: 434:                 tempHora = hora;
  9082  002808  C0D1  F0CB         	movff	_hora,_tempHora
  9083  00280C                     
  9084                           ; BSR set to: 0
  9085                           ;./AUTOMATIZADOR.h: 435:                 flagIluminado = 0;
  9086  00280C  0E00               	movlw	0
  9087  00280E  6FCA               	movwf	_flagIluminado& (0+255),b
  9088  002810  EF50  F014         	goto	l350
  9089  002814                     l5131:
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;./AUTOMATIZADOR.h: 441:         dameHoraActual();
  9093  002814  EC15  F01C         	call	_dameHoraActual	;wreg free
  9094                           
  9095                           ;./AUTOMATIZADOR.h: 442:         dameDiaActual();
  9096  002818  ECCE  F01C         	call	_dameDiaActual	;wreg free
  9097  00281C                     
  9098                           ;./AUTOMATIZADOR.h: 444:         if (hora != tempHora && !flagIluminado) {
  9099  00281C  0100               	movlb	0	; () banked
  9100  00281E  51CB               	movf	_tempHora& (0+255),w,b
  9101  002820  19D1               	xorwf	_hora& (0+255),w,b
  9102  002822  B4D8               	btfsc	status,2,c
  9103  002824  EF16  F014         	goto	u4431
  9104  002828  EF18  F014         	goto	u4430
  9105  00282C                     u4431:
  9106  00282C  EF2C  F014         	goto	l5141
  9107  002830                     u4430:
  9108  002830                     
  9109                           ; BSR set to: 0
  9110  002830  51CA               	movf	_flagIluminado& (0+255),w,b
  9111  002832  A4D8               	btfss	status,2,c
  9112  002834  EF1E  F014         	goto	u4441
  9113  002838  EF20  F014         	goto	u4440
  9114  00283C                     u4441:
  9115  00283C  EF2C  F014         	goto	l5141
  9116  002840                     u4440:
  9117  002840                     
  9118                           ; BSR set to: 0
  9119                           ;./AUTOMATIZADOR.h: 445:             horarios[tempHora].iluminado = 0;
  9120  002840  51CB               	movf	_tempHora& (0+255),w,b
  9121  002842  0D0C               	mullw	12
  9122  002844  0E5C               	movlw	low (_horarios+10)
  9123  002846  24F3               	addwf	243,w,c
  9124  002848  6ED9               	movwf	fsr2l,c
  9125  00284A  0E01               	movlw	high (_horarios+10)
  9126  00284C  20F4               	addwfc	prodh,w,c
  9127  00284E  6EDA               	movwf	fsr2h,c
  9128  002850  0E00               	movlw	0
  9129  002852  6EDF               	movwf	indf2,c
  9130  002854                     
  9131                           ; BSR set to: 0
  9132                           ;./AUTOMATIZADOR.h: 446:             flagIluminado = 1;
  9133  002854  0E01               	movlw	1
  9134  002856  6FCA               	movwf	_flagIluminado& (0+255),b
  9135  002858                     l5141:
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;./AUTOMATIZADOR.h: 449:         if (horaIluminar()) {
  9139  002858  ECD4  F017         	call	_horaIluminar	;wreg free
  9140  00285C  5001               	movf	?_horaIluminar^0,w,c
  9141  00285E  1002               	iorwf	(?_horaIluminar+1)^0,w,c
  9142  002860  B4D8               	btfsc	status,2,c
  9143  002862  EF35  F014         	goto	u4451
  9144  002866  EF37  F014         	goto	u4450
  9145  00286A                     u4451:
  9146  00286A  EF50  F014         	goto	l350
  9147  00286E                     u4450:
  9148  00286E                     
  9149                           ;./AUTOMATIZADOR.h: 452:             minutosIluminar = (horarios[hora].tiempoIluminar) *
      +                           60;
  9150  00286E  0100               	movlb	0	; () banked
  9151  002870  51D1               	movf	_hora& (0+255),w,b
  9152  002872  0D0C               	mullw	12
  9153  002874  0E5D               	movlw	low (_horarios+11)
  9154  002876  24F3               	addwf	243,w,c
  9155  002878  6ED9               	movwf	fsr2l,c
  9156  00287A  0E01               	movlw	high (_horarios+11)
  9157  00287C  20F4               	addwfc	prodh,w,c
  9158  00287E  6EDA               	movwf	fsr2h,c
  9159  002880  50DF               	movf	indf2,w,c
  9160  002882  6E57               	movwf	??_sistemaIluminado^0,c
  9161  002884  5057               	movf	??_sistemaIluminado^0,w,c
  9162  002886  0D3C               	mullw	60
  9163  002888  CFF3 F0C4          	movff	prodl,_minutosIluminar
  9164  00288C  CFF4 F0C5          	movff	prodh,_minutosIluminar+1
  9165  002890                     
  9166                           ; BSR set to: 0
  9167                           ;./AUTOMATIZADOR.h: 453:             pwmDuty(100, 1);
  9168  002890  0E00               	movlw	0
  9169  002892  6E4C               	movwf	(pwmDuty@cicloTrabajo+1)^0,c
  9170  002894  0E64               	movlw	100
  9171  002896  6E4B               	movwf	pwmDuty@cicloTrabajo^0,c
  9172  002898  0E01               	movlw	1
  9173  00289A  6E4D               	movwf	pwmDuty@channel^0,c
  9174  00289C  EC4F  F00C         	call	_pwmDuty	;wreg free
  9175  0028A0                     l350:
  9176  0028A0  0012               	return		;funcret
  9177  0028A2                     __end_of_sistemaIluminado:
  9178                           	opt callstack 0
  9179                           
  9180 ;; *************** function _horaIluminar *****************
  9181 ;; Defined at:
  9182 ;;		line 70 in file "./AUTOMATIZADOR.h"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;		None
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  2    0[COMRAM] int 
  9189 ;; Registers used:
  9190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9196 ;;      Params:         2       0       0       0       0       0       0       0       0
  9197 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9198 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9199 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9200 ;;Total ram usage:        6 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    1
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_sistemaIluminado
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text42
  9211  002FA8                     __ptext42:
  9212                           	opt callstack 0
  9213  002FA8                     _horaIluminar:
  9214                           	opt callstack 28
  9215  002FA8                     
  9216                           ;./AUTOMATIZADOR.h: 72:     return (horarios[hora].iluminar) && (!horarios[hora].ilumina
      +                          do) &&
  9217  002FA8  0E00               	movlw	0
  9218  002FAA  6E06               	movwf	_horaIluminar$589^0,c
  9219  002FAC  0100               	movlb	0	; () banked
  9220  002FAE  51D1               	movf	_hora& (0+255),w,b
  9221  002FB0  0D0C               	mullw	12
  9222  002FB2  0E5B               	movlw	low (_horarios+9)
  9223  002FB4  24F3               	addwf	243,w,c
  9224  002FB6  6ED9               	movwf	fsr2l,c
  9225  002FB8  0E01               	movlw	high (_horarios+9)
  9226  002FBA  20F4               	addwfc	prodh,w,c
  9227  002FBC  6EDA               	movwf	fsr2h,c
  9228  002FBE  50DF               	movf	indf2,w,c
  9229  002FC0  B4D8               	btfsc	status,2,c
  9230  002FC2  EFE5  F017         	goto	u4181
  9231  002FC6  EFE7  F017         	goto	u4180
  9232  002FCA                     u4181:
  9233  002FCA  EF12  F018         	goto	l4801
  9234  002FCE                     u4180:
  9235  002FCE                     
  9236                           ; BSR set to: 0
  9237  002FCE  51D1               	movf	_hora& (0+255),w,b
  9238  002FD0  0D0C               	mullw	12
  9239  002FD2  0E5C               	movlw	low (_horarios+10)
  9240  002FD4  24F3               	addwf	243,w,c
  9241  002FD6  6ED9               	movwf	fsr2l,c
  9242  002FD8  0E01               	movlw	high (_horarios+10)
  9243  002FDA  20F4               	addwfc	prodh,w,c
  9244  002FDC  6EDA               	movwf	fsr2h,c
  9245  002FDE  50DF               	movf	indf2,w,c
  9246  002FE0  A4D8               	btfss	status,2,c
  9247  002FE2  EFF5  F017         	goto	u4191
  9248  002FE6  EFF7  F017         	goto	u4190
  9249  002FEA                     u4191:
  9250  002FEA  EF12  F018         	goto	l4801
  9251  002FEE                     u4190:
  9252  002FEE                     
  9253                           ; BSR set to: 0
  9254  002FEE  51D1               	movf	_hora& (0+255),w,b
  9255  002FF0  0D0C               	mullw	12
  9256  002FF2  0E52               	movlw	low _horarios
  9257  002FF4  6E03               	movwf	??_horaIluminar^0,c
  9258  002FF6  0E01               	movlw	high _horarios
  9259  002FF8  6E04               	movwf	(??_horaIluminar+1)^0,c
  9260  002FFA  50F3               	movf	243,w,c
  9261  002FFC  2603               	addwf	??_horaIluminar^0,f,c
  9262  002FFE  50F4               	movf	244,w,c
  9263  003000  2204               	addwfc	(??_horaIluminar+1)^0,f,c
  9264  003002  51CE               	movf	_diaActual& (0+255),w,b
  9265  003004  2403               	addwf	??_horaIluminar^0,w,c
  9266  003006  6ED9               	movwf	fsr2l,c
  9267  003008  0E00               	movlw	0
  9268  00300A  2004               	addwfc	(??_horaIluminar+1)^0,w,c
  9269  00300C  6EDA               	movwf	fsr2h,c
  9270  00300E  0E31               	movlw	49
  9271  003010  18DE               	xorwf	postinc2,w,c
  9272  003012  A4D8               	btfss	status,2,c
  9273  003014  EF0E  F018         	goto	u4201
  9274  003018  EF10  F018         	goto	u4200
  9275  00301C                     u4201:
  9276  00301C  EF12  F018         	goto	l4801
  9277  003020                     u4200:
  9278  003020                     
  9279                           ; BSR set to: 0
  9280  003020  0E01               	movlw	1
  9281  003022  6E06               	movwf	_horaIluminar$589^0,c
  9282  003024                     l4801:
  9283                           
  9284                           ; BSR set to: 0
  9285  003024  C006  F001         	movff	_horaIluminar$589,?_horaIluminar
  9286  003028  6A02               	clrf	(?_horaIluminar+1)^0,c
  9287  00302A                     
  9288                           ; BSR set to: 0
  9289  00302A  0012               	return		;funcret
  9290  00302C                     __end_of_horaIluminar:
  9291                           	opt callstack 0
  9292                           
  9293 ;; *************** function _dameHoraActual *****************
  9294 ;; Defined at:
  9295 ;;		line 97 in file "./AUTOMATIZADOR.h"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;		None
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;		None
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      void 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9309 ;;      Params:         0       0       0       0       0       0       0       0       0
  9310 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9312 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9313 ;;Total ram usage:        0 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    4
  9316 ;; This function calls:
  9317 ;;		_convertirDato
  9318 ;;		_leer_rtc
  9319 ;; This function is called by:
  9320 ;;		_sistemaIluminado
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text43
  9325  00382A                     __ptext43:
  9326                           	opt callstack 0
  9327  00382A                     _dameHoraActual:
  9328                           	opt callstack 25
  9329  00382A                     
  9330                           ;./AUTOMATIZADOR.h: 99:     segundos = convertirDato(leer_rtc(0x00));
  9331  00382A  0E00               	movlw	0
  9332  00382C  EC2B  F01C         	call	_leer_rtc
  9333  003830  EC66  F01C         	call	_convertirDato
  9334  003834  0100               	movlb	0	; () banked
  9335  003836  6FCF               	movwf	_segundos& (0+255),b
  9336                           
  9337                           ;./AUTOMATIZADOR.h: 100:     minutos = convertirDato(leer_rtc(0x01));
  9338  003838  0E01               	movlw	1
  9339  00383A  EC2B  F01C         	call	_leer_rtc
  9340  00383E  EC66  F01C         	call	_convertirDato
  9341  003842  0100               	movlb	0	; () banked
  9342  003844  6FD0               	movwf	_minutos& (0+255),b
  9343                           
  9344                           ;./AUTOMATIZADOR.h: 101:     hora = convertirDato(leer_rtc(0x02));
  9345  003846  0E02               	movlw	2
  9346  003848  EC2B  F01C         	call	_leer_rtc
  9347  00384C  EC66  F01C         	call	_convertirDato
  9348  003850  0100               	movlb	0	; () banked
  9349  003852  6FD1               	movwf	_hora& (0+255),b
  9350  003854                     
  9351                           ; BSR set to: 0
  9352  003854  0012               	return		;funcret
  9353  003856                     __end_of_dameHoraActual:
  9354                           	opt callstack 0
  9355                           
  9356 ;; *************** function _dameDiaActual *****************
  9357 ;; Defined at:
  9358 ;;		line 104 in file "./AUTOMATIZADOR.h"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9372 ;;      Params:         0       0       0       0       0       0       0       0       0
  9373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9376 ;;Total ram usage:        0 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    4
  9379 ;; This function calls:
  9380 ;;		_convertirDato
  9381 ;;		_leer_rtc
  9382 ;; This function is called by:
  9383 ;;		_sistemaIluminado
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text44
  9388  00399C                     __ptext44:
  9389                           	opt callstack 0
  9390  00399C                     _dameDiaActual:
  9391                           	opt callstack 25
  9392  00399C                     
  9393                           ;./AUTOMATIZADOR.h: 106:     diaActual = convertirDato(leer_rtc(0x03));
  9394  00399C  0E03               	movlw	3
  9395  00399E  EC2B  F01C         	call	_leer_rtc
  9396  0039A2  EC66  F01C         	call	_convertirDato
  9397  0039A6  0100               	movlb	0	; () banked
  9398  0039A8  6FCE               	movwf	_diaActual& (0+255),b
  9399  0039AA                     
  9400                           ; BSR set to: 0
  9401  0039AA  0012               	return		;funcret
  9402  0039AC                     __end_of_dameDiaActual:
  9403                           	opt callstack 0
  9404                           
  9405 ;; *************** function _leer_rtc *****************
  9406 ;; Defined at:
  9407 ;;		line 13 in file "./RTC.h"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  direccion       1    wreg     unsigned char 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  direccion       1    2[COMRAM] unsigned char 
  9412 ;;  dato            1    3[COMRAM] unsigned char 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      unsigned char 
  9415 ;; Registers used:
  9416 ;;		wreg, status,2, status,0, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9422 ;;      Params:         0       0       0       0       0       0       0       0       0
  9423 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9425 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9426 ;;Total ram usage:        2 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:    3
  9429 ;; This function calls:
  9430 ;;		_i2c_detener
  9431 ;;		_i2c_envia_dato
  9432 ;;		_i2c_inicia_com
  9433 ;;		_i2c_recibe_dato
  9434 ;;		_i2c_reinicia_com
  9435 ;; This function is called by:
  9436 ;;		_dameHoraActual
  9437 ;;		_dameDiaActual
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text45
  9442  003856                     __ptext45:
  9443                           	opt callstack 0
  9444  003856                     _leer_rtc:
  9445                           	opt callstack 25
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;incstack = 0
  9449                           ;leer_rtc@direccion stored from wreg
  9450  003856  6E03               	movwf	leer_rtc@direccion^0,c
  9451  003858                     
  9452                           ;./RTC.h: 14:     T_UBYTE dato;;./RTC.h: 15:     i2c_inicia_com();
  9453  003858  ECE8  F01C         	call	_i2c_inicia_com	;wreg free
  9454                           
  9455                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  9456  00385C  0ED0               	movlw	208
  9457  00385E  ECDE  F01C         	call	_i2c_envia_dato
  9458                           
  9459                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  9460  003862  5003               	movf	leer_rtc@direccion^0,w,c
  9461  003864  ECDE  F01C         	call	_i2c_envia_dato
  9462                           
  9463                           ;./RTC.h: 18:     i2c_reinicia_com();
  9464  003868  ECE4  F01C         	call	_i2c_reinicia_com	;wreg free
  9465                           
  9466                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  9467  00386C  0ED1               	movlw	209
  9468  00386E  ECDE  F01C         	call	_i2c_envia_dato
  9469                           
  9470                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  9471  003872  EC94  F01C         	call	_i2c_recibe_dato	;wreg free
  9472  003876  6E04               	movwf	leer_rtc@dato^0,c
  9473                           
  9474                           ;./RTC.h: 21:     i2c_detener();
  9475  003878  ECEC  F01C         	call	_i2c_detener	;wreg free
  9476  00387C                     
  9477                           ;./RTC.h: 22:     return dato;
  9478  00387C  5004               	movf	leer_rtc@dato^0,w,c
  9479  00387E  0012               	return		;funcret
  9480  003880                     __end_of_leer_rtc:
  9481                           	opt callstack 0
  9482                           
  9483 ;; *************** function _i2c_reinicia_com *****************
  9484 ;; Defined at:
  9485 ;;		line 46 in file "./I2C.h"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, status,2, status,0, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9502 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    2
  9506 ;; This function calls:
  9507 ;;		_i2c_espera
  9508 ;; This function is called by:
  9509 ;;		_leer_rtc
  9510 ;;		_leer_eeprom
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text46
  9515  0039C8                     __ptext46:
  9516                           	opt callstack 0
  9517  0039C8                     _i2c_reinicia_com:
  9518                           	opt callstack 25
  9519  0039C8                     
  9520                           ;./I2C.h: 47:     i2c_espera();
  9521  0039C8  EC53  F01C         	call	_i2c_espera	;wreg free
  9522  0039CC                     
  9523                           ;./I2C.h: 48:     SSPCON2bits.RSEN = 1;
  9524  0039CC  82C5               	bsf	197,1,c	;volatile
  9525  0039CE  0012               	return		;funcret
  9526  0039D0                     __end_of_i2c_reinicia_com:
  9527                           	opt callstack 0
  9528                           
  9529 ;; *************** function _i2c_recibe_dato *****************
  9530 ;; Defined at:
  9531 ;;		line 77 in file "./I2C.h"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;		None
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;  datoleido       1    1[COMRAM] unsigned char 
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  1    wreg      unsigned char 
  9538 ;; Registers used:
  9539 ;;		wreg, status,2, status,0, cstack
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0
  9546 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9548 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9549 ;;Total ram usage:        1 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; Hardware stack levels required when called:    2
  9552 ;; This function calls:
  9553 ;;		_i2c_espera
  9554 ;; This function is called by:
  9555 ;;		_leer_rtc
  9556 ;;		_leer_eeprom
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text47
  9561  003928                     __ptext47:
  9562                           	opt callstack 0
  9563  003928                     _i2c_recibe_dato:
  9564                           	opt callstack 25
  9565  003928                     
  9566                           ;./I2C.h: 79:     T_UBYTE datoleido;;./I2C.h: 82:     i2c_espera();
  9567  003928  EC53  F01C         	call	_i2c_espera	;wreg free
  9568  00392C                     
  9569                           ;./I2C.h: 83:     SSPCON2bits.RCEN = 1;
  9570  00392C  86C5               	bsf	197,3,c	;volatile
  9571                           
  9572                           ;./I2C.h: 85:     i2c_espera();
  9573  00392E  EC53  F01C         	call	_i2c_espera	;wreg free
  9574  003932                     
  9575                           ;./I2C.h: 86:     datoleido = SSPBUF;
  9576  003932  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  9577                           
  9578                           ;./I2C.h: 89:     i2c_espera();
  9579  003936  EC53  F01C         	call	_i2c_espera	;wreg free
  9580  00393A                     
  9581                           ;./I2C.h: 91:     SSPCON2bits.ACKDT = 1;
  9582  00393A  8AC5               	bsf	197,5,c	;volatile
  9583  00393C                     
  9584                           ;./I2C.h: 96:     SSPCON2bits.ACKEN = 1;
  9585  00393C  88C5               	bsf	197,4,c	;volatile
  9586  00393E                     
  9587                           ;./I2C.h: 100:     return datoleido;
  9588  00393E  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  9589  003940  0012               	return		;funcret
  9590  003942                     __end_of_i2c_recibe_dato:
  9591                           	opt callstack 0
  9592                           
  9593 ;; *************** function _convertirDato *****************
  9594 ;; Defined at:
  9595 ;;		line 28 in file "./RTC.h"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  dato            1    wreg     unsigned char 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  dato            1    1[COMRAM] unsigned char 
  9600 ;;  datoR           1    2[COMRAM] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      unsigned char 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0, prodl, prodh
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9610 ;;      Params:         0       0       0       0       0       0       0       0       0
  9611 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9612 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9613 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9614 ;;Total ram usage:        3 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    1
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_dameHoraActual
  9621 ;;		_dameDiaActual
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text48
  9626  0038CC                     __ptext48:
  9627                           	opt callstack 0
  9628  0038CC                     _convertirDato:
  9629                           	opt callstack 27
  9630                           
  9631                           ;incstack = 0
  9632                           ;convertirDato@dato stored from wreg
  9633  0038CC  6E02               	movwf	convertirDato@dato^0,c
  9634  0038CE                     
  9635                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  9636  0038CE  3802               	swapf	convertirDato@dato^0,w,c
  9637  0038D0  0B0F               	andlw	15
  9638  0038D2  0B0F               	andlw	15
  9639  0038D4  6E03               	movwf	convertirDato@datoR^0,c
  9640  0038D6                     
  9641                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  9642  0038D6  C002  F001         	movff	convertirDato@dato,??_convertirDato
  9643  0038DA  0E0F               	movlw	15
  9644  0038DC  1601               	andwf	??_convertirDato^0,f,c
  9645  0038DE  5003               	movf	convertirDato@datoR^0,w,c
  9646  0038E0  0D0A               	mullw	10
  9647  0038E2  50F3               	movf	243,w,c
  9648  0038E4  2401               	addwf	??_convertirDato^0,w,c
  9649  0038E6  6E03               	movwf	convertirDato@datoR^0,c
  9650  0038E8                     
  9651                           ;./RTC.h: 32:     return datoR;
  9652  0038E8  5003               	movf	convertirDato@datoR^0,w,c
  9653  0038EA  0012               	return		;funcret
  9654  0038EC                     __end_of_convertirDato:
  9655                           	opt callstack 0
  9656                           
  9657 ;; *************** function _inicializarObjetos *****************
  9658 ;; Defined at:
  9659 ;;		line 76 in file "./AUTOMATIZADOR.h"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;		None
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  j               2   88[COMRAM] int 
  9664 ;;  i               2   90[COMRAM] int 
  9665 ;;  i               2   92[COMRAM] int 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9675 ;;      Params:         0       0       0       0       0       0       0       0       0
  9676 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9677 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9678 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9679 ;;Total ram usage:        8 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:    4
  9682 ;; This function calls:
  9683 ;;		___wmul
  9684 ;;		_pwmDuty
  9685 ;; This function is called by:
  9686 ;;		_main
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text49
  9691  0020A4                     __ptext49:
  9692                           	opt callstack 0
  9693  0020A4                     _inicializarObjetos:
  9694                           	opt callstack 26
  9695  0020A4                     
  9696                           ;./AUTOMATIZADOR.h: 78:     for (T_INT i = 0; i < 24; i++) {
  9697  0020A4  0E00               	movlw	0
  9698  0020A6  6E5E               	movwf	(inicializarObjetos@i+1)^0,c
  9699  0020A8  0E00               	movlw	0
  9700  0020AA  6E5D               	movwf	inicializarObjetos@i^0,c
  9701  0020AC                     l5051:
  9702                           
  9703                           ;./AUTOMATIZADOR.h: 79:         horarios[i].hora = i;
  9704  0020AC  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9705  0020B0  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9706  0020B4  0E00               	movlw	0
  9707  0020B6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9708  0020B8  0E0C               	movlw	12
  9709  0020BA  6E03               	movwf	___wmul@multiplicand^0,c
  9710  0020BC  EC40  F01C         	call	___wmul	;wreg free
  9711  0020C0  0E52               	movlw	low _horarios
  9712  0020C2  2401               	addwf	?___wmul^0,w,c
  9713  0020C4  6ED9               	movwf	fsr2l,c
  9714  0020C6  0E01               	movlw	high _horarios
  9715  0020C8  2002               	addwfc	(?___wmul+1)^0,w,c
  9716  0020CA  6EDA               	movwf	fsr2h,c
  9717  0020CC  C05D  FFDF         	movff	inicializarObjetos@i,indf2
  9718                           
  9719                           ;./AUTOMATIZADOR.h: 80:         horarios[i].iluminar = 0;
  9720  0020D0  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9721  0020D4  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9722  0020D8  0E00               	movlw	0
  9723  0020DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9724  0020DC  0E0C               	movlw	12
  9725  0020DE  6E03               	movwf	___wmul@multiplicand^0,c
  9726  0020E0  EC40  F01C         	call	___wmul	;wreg free
  9727  0020E4  0E5B               	movlw	low (_horarios+9)
  9728  0020E6  2401               	addwf	?___wmul^0,w,c
  9729  0020E8  6ED9               	movwf	fsr2l,c
  9730  0020EA  0E01               	movlw	high (_horarios+9)
  9731  0020EC  2002               	addwfc	(?___wmul+1)^0,w,c
  9732  0020EE  6EDA               	movwf	fsr2h,c
  9733  0020F0  0E00               	movlw	0
  9734  0020F2  6EDF               	movwf	indf2,c
  9735                           
  9736                           ;./AUTOMATIZADOR.h: 81:         horarios[i].iluminado = 0;
  9737  0020F4  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9738  0020F8  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9739  0020FC  0E00               	movlw	0
  9740  0020FE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9741  002100  0E0C               	movlw	12
  9742  002102  6E03               	movwf	___wmul@multiplicand^0,c
  9743  002104  EC40  F01C         	call	___wmul	;wreg free
  9744  002108  0E5C               	movlw	low (_horarios+10)
  9745  00210A  2401               	addwf	?___wmul^0,w,c
  9746  00210C  6ED9               	movwf	fsr2l,c
  9747  00210E  0E01               	movlw	high (_horarios+10)
  9748  002110  2002               	addwfc	(?___wmul+1)^0,w,c
  9749  002112  6EDA               	movwf	fsr2h,c
  9750  002114  0E00               	movlw	0
  9751  002116  6EDF               	movwf	indf2,c
  9752                           
  9753                           ;./AUTOMATIZADOR.h: 82:         horarios[i].tiempoIluminar = 1;
  9754  002118  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9755  00211C  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9756  002120  0E00               	movlw	0
  9757  002122  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9758  002124  0E0C               	movlw	12
  9759  002126  6E03               	movwf	___wmul@multiplicand^0,c
  9760  002128  EC40  F01C         	call	___wmul	;wreg free
  9761  00212C  0E5D               	movlw	low (_horarios+11)
  9762  00212E  2401               	addwf	?___wmul^0,w,c
  9763  002130  6ED9               	movwf	fsr2l,c
  9764  002132  0E01               	movlw	high (_horarios+11)
  9765  002134  2002               	addwfc	(?___wmul+1)^0,w,c
  9766  002136  6EDA               	movwf	fsr2h,c
  9767  002138  0E01               	movlw	1
  9768  00213A  6EDF               	movwf	indf2,c
  9769  00213C                     
  9770                           ;./AUTOMATIZADOR.h: 83:     }
  9771  00213C  4A5D               	infsnz	inicializarObjetos@i^0,f,c
  9772  00213E  2A5E               	incf	(inicializarObjetos@i+1)^0,f,c
  9773  002140  BE5E               	btfsc	(inicializarObjetos@i+1)^0,7,c
  9774  002142  EFAC  F010         	goto	u4371
  9775  002146  505E               	movf	(inicializarObjetos@i+1)^0,w,c
  9776  002148  E109               	bnz	u4370
  9777  00214A  0E18               	movlw	24
  9778  00214C  5C5D               	subwf	inicializarObjetos@i^0,w,c
  9779  00214E  A0D8               	btfss	status,0,c
  9780  002150  EFAC  F010         	goto	u4371
  9781  002154  EFAE  F010         	goto	u4370
  9782  002158                     u4371:
  9783  002158  EF56  F010         	goto	l5051
  9784  00215C                     u4370:
  9785  00215C                     
  9786                           ;./AUTOMATIZADOR.h: 85:     for (T_INT i = 0; i < 24; i++) {
  9787  00215C  0E00               	movlw	0
  9788  00215E  6E5C               	movwf	(inicializarObjetos@i_592+1)^0,c
  9789  002160  0E00               	movlw	0
  9790  002162  6E5B               	movwf	inicializarObjetos@i_592^0,c
  9791  002164                     l5063:
  9792                           
  9793                           ;./AUTOMATIZADOR.h: 87:         for (T_INT j = 0; j < 7; j++)
  9794  002164  0E00               	movlw	0
  9795  002166  6E5A               	movwf	(inicializarObjetos@j+1)^0,c
  9796  002168  0E00               	movlw	0
  9797  00216A  6E59               	movwf	inicializarObjetos@j^0,c
  9798  00216C                     l5069:
  9799                           
  9800                           ;./AUTOMATIZADOR.h: 88:             horarios[i].dias[j] = 0;
  9801  00216C  C05B  F001         	movff	inicializarObjetos@i_592,___wmul@multiplier
  9802  002170  C05C  F002         	movff	inicializarObjetos@i_592+1,___wmul@multiplier+1
  9803  002174  0E00               	movlw	0
  9804  002176  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9805  002178  0E0C               	movlw	12
  9806  00217A  6E03               	movwf	___wmul@multiplicand^0,c
  9807  00217C  EC40  F01C         	call	___wmul	;wreg free
  9808  002180  0E52               	movlw	low _horarios
  9809  002182  6E57               	movwf	??_inicializarObjetos^0,c
  9810  002184  0E01               	movlw	high _horarios
  9811  002186  6E58               	movwf	(??_inicializarObjetos+1)^0,c
  9812  002188  0E01               	movlw	1
  9813  00218A  2657               	addwf	??_inicializarObjetos^0,f,c
  9814  00218C  0E00               	movlw	0
  9815  00218E  2258               	addwfc	(??_inicializarObjetos+1)^0,f,c
  9816  002190  5001               	movf	?___wmul^0,w,c
  9817  002192  2657               	addwf	??_inicializarObjetos^0,f,c
  9818  002194  5002               	movf	(?___wmul+1)^0,w,c
  9819  002196  2258               	addwfc	(??_inicializarObjetos+1)^0,f,c
  9820  002198  5059               	movf	inicializarObjetos@j^0,w,c
  9821  00219A  2457               	addwf	??_inicializarObjetos^0,w,c
  9822  00219C  6ED9               	movwf	fsr2l,c
  9823  00219E  505A               	movf	(inicializarObjetos@j+1)^0,w,c
  9824  0021A0  2058               	addwfc	(??_inicializarObjetos+1)^0,w,c
  9825  0021A2  6EDA               	movwf	fsr2h,c
  9826  0021A4  0E00               	movlw	0
  9827  0021A6  6EDF               	movwf	indf2,c
  9828  0021A8  4A59               	infsnz	inicializarObjetos@j^0,f,c
  9829  0021AA  2A5A               	incf	(inicializarObjetos@j+1)^0,f,c
  9830  0021AC  BE5A               	btfsc	(inicializarObjetos@j+1)^0,7,c
  9831  0021AE  EFE2  F010         	goto	u4381
  9832  0021B2  505A               	movf	(inicializarObjetos@j+1)^0,w,c
  9833  0021B4  E109               	bnz	u4380
  9834  0021B6  0E07               	movlw	7
  9835  0021B8  5C59               	subwf	inicializarObjetos@j^0,w,c
  9836  0021BA  A0D8               	btfss	status,0,c
  9837  0021BC  EFE2  F010         	goto	u4381
  9838  0021C0  EFE4  F010         	goto	u4380
  9839  0021C4                     u4381:
  9840  0021C4  EFB6  F010         	goto	l5069
  9841  0021C8                     u4380:
  9842  0021C8                     
  9843                           ;./AUTOMATIZADOR.h: 90:         horarios[i].dias[7 - 1] = '\0';
  9844  0021C8  C05B  F001         	movff	inicializarObjetos@i_592,___wmul@multiplier
  9845  0021CC  C05C  F002         	movff	inicializarObjetos@i_592+1,___wmul@multiplier+1
  9846  0021D0  0E00               	movlw	0
  9847  0021D2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9848  0021D4  0E0C               	movlw	12
  9849  0021D6  6E03               	movwf	___wmul@multiplicand^0,c
  9850  0021D8  EC40  F01C         	call	___wmul	;wreg free
  9851  0021DC  0E59               	movlw	low (_horarios+7)
  9852  0021DE  2401               	addwf	?___wmul^0,w,c
  9853  0021E0  6ED9               	movwf	fsr2l,c
  9854  0021E2  0E01               	movlw	high (_horarios+7)
  9855  0021E4  2002               	addwfc	(?___wmul+1)^0,w,c
  9856  0021E6  6EDA               	movwf	fsr2h,c
  9857  0021E8  0E00               	movlw	0
  9858  0021EA  6EDF               	movwf	indf2,c
  9859  0021EC                     
  9860                           ;./AUTOMATIZADOR.h: 91:     }
  9861  0021EC  4A5B               	infsnz	inicializarObjetos@i_592^0,f,c
  9862  0021EE  2A5C               	incf	(inicializarObjetos@i_592+1)^0,f,c
  9863  0021F0  BE5C               	btfsc	(inicializarObjetos@i_592+1)^0,7,c
  9864  0021F2  EF04  F011         	goto	u4391
  9865  0021F6  505C               	movf	(inicializarObjetos@i_592+1)^0,w,c
  9866  0021F8  E109               	bnz	u4390
  9867  0021FA  0E18               	movlw	24
  9868  0021FC  5C5B               	subwf	inicializarObjetos@i_592^0,w,c
  9869  0021FE  A0D8               	btfss	status,0,c
  9870  002200  EF04  F011         	goto	u4391
  9871  002204  EF06  F011         	goto	u4390
  9872  002208                     u4391:
  9873  002208  EFB2  F010         	goto	l5063
  9874  00220C                     u4390:
  9875  00220C                     
  9876                           ;./AUTOMATIZADOR.h: 93:     pwmDuty(0, 1);
  9877  00220C  0E00               	movlw	0
  9878  00220E  6E4C               	movwf	(pwmDuty@cicloTrabajo+1)^0,c
  9879  002210  0E00               	movlw	0
  9880  002212  6E4B               	movwf	pwmDuty@cicloTrabajo^0,c
  9881  002214  0E01               	movlw	1
  9882  002216  6E4D               	movwf	pwmDuty@channel^0,c
  9883  002218  EC4F  F00C         	call	_pwmDuty	;wreg free
  9884  00221C  0012               	return		;funcret
  9885  00221E                     __end_of_inicializarObjetos:
  9886                           	opt callstack 0
  9887                           
  9888 ;; *************** function _pwmDuty *****************
  9889 ;; Defined at:
  9890 ;;		line 20 in file "./pwm.h"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  cicloTrabajo    2   74[COMRAM] unsigned int 
  9893 ;;  channel         1   76[COMRAM] unsigned char 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  duty            4   82[COMRAM] long 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9905 ;;      Params:         3       0       0       0       0       0       0       0       0
  9906 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9907 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9908 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9909 ;;Total ram usage:       12 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    3
  9912 ;; This function calls:
  9913 ;;		___fldiv
  9914 ;;		___flmul
  9915 ;;		___fltol
  9916 ;;		___xxtofl
  9917 ;;		_map
  9918 ;; This function is called by:
  9919 ;;		_inicializarObjetos
  9920 ;;		_sistemaIluminado
  9921 ;;		_PID
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text50
  9926  00189E                     __ptext50:
  9927                           	opt callstack 0
  9928  00189E                     _pwmDuty:
  9929                           	opt callstack 26
  9930  00189E                     
  9931                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  9932  00189E  C04B  F01B         	movff	pwmDuty@cicloTrabajo,map@x
  9933  0018A2  C04C  F01C         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  9934  0018A6  6A1D               	clrf	(map@x+2)^0,c
  9935  0018A8  6A1E               	clrf	(map@x+3)^0,c
  9936  0018AA  0E00               	movlw	0
  9937  0018AC  6E1F               	movwf	map@in_min^0,c
  9938  0018AE  0E00               	movlw	0
  9939  0018B0  6E20               	movwf	(map@in_min+1)^0,c
  9940  0018B2  0E00               	movlw	0
  9941  0018B4  6E21               	movwf	(map@in_min+2)^0,c
  9942  0018B6  0E00               	movlw	0
  9943  0018B8  6E22               	movwf	(map@in_min+3)^0,c
  9944  0018BA  0E64               	movlw	100
  9945  0018BC  6E23               	movwf	map@in_max^0,c
  9946  0018BE  0E00               	movlw	0
  9947  0018C0  6E24               	movwf	(map@in_max+1)^0,c
  9948  0018C2  0E00               	movlw	0
  9949  0018C4  6E25               	movwf	(map@in_max+2)^0,c
  9950  0018C6  0E00               	movlw	0
  9951  0018C8  6E26               	movwf	(map@in_max+3)^0,c
  9952  0018CA  0E00               	movlw	0
  9953  0018CC  6E27               	movwf	map@out_min^0,c
  9954  0018CE  0E00               	movlw	0
  9955  0018D0  6E28               	movwf	(map@out_min+1)^0,c
  9956  0018D2  0E00               	movlw	0
  9957  0018D4  6E29               	movwf	(map@out_min+2)^0,c
  9958  0018D6  0E00               	movlw	0
  9959  0018D8  6E2A               	movwf	(map@out_min+3)^0,c
  9960  0018DA  0EFF               	movlw	255
  9961  0018DC  6E2B               	movwf	map@out_max^0,c
  9962  0018DE  0E03               	movlw	3
  9963  0018E0  6E2C               	movwf	(map@out_max+1)^0,c
  9964  0018E2  0E00               	movlw	0
  9965  0018E4  6E2D               	movwf	(map@out_max+2)^0,c
  9966  0018E6  0E00               	movlw	0
  9967  0018E8  6E2E               	movwf	(map@out_max+3)^0,c
  9968  0018EA  EC56  F018         	call	_map	;wreg free
  9969  0018EE  C01B  F053         	movff	?_map,pwmDuty@duty
  9970  0018F2  C01C  F054         	movff	?_map+1,pwmDuty@duty+1
  9971  0018F6  C01D  F055         	movff	?_map+2,pwmDuty@duty+2
  9972  0018FA  C01E  F056         	movff	?_map+3,pwmDuty@duty+3
  9973  0018FE                     
  9974                           ;./pwm.h: 24:     if (duty < 1024) {
  9975  0018FE  BE56               	btfsc	(pwmDuty@duty+3)^0,7,c
  9976  001900  EF8E  F00C         	goto	u4150
  9977  001904  5056               	movf	(pwmDuty@duty+3)^0,w,c
  9978  001906  1055               	iorwf	(pwmDuty@duty+2)^0,w,c
  9979  001908  E107               	bnz	u4151
  9980  00190A  0E04               	movlw	4
  9981  00190C  5C54               	subwf	(pwmDuty@duty+1)^0,w,c
  9982  00190E  B0D8               	btfsc	status,0,c
  9983  001910  EF8C  F00C         	goto	u4151
  9984  001914  EF8E  F00C         	goto	u4150
  9985  001918                     u4151:
  9986  001918  EF28  F00D         	goto	l174
  9987  00191C                     u4150:
  9988  00191C                     
  9989                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  9990  00191C  0E00               	movlw	0
  9991  00191E  6E2C               	movwf	___flmul@a^0,c
  9992  001920  0E00               	movlw	0
  9993  001922  6E2D               	movwf	(___flmul@a+1)^0,c
  9994  001924  0EFA               	movlw	250
  9995  001926  6E2E               	movwf	(___flmul@a+2)^0,c
  9996  001928  0E43               	movlw	67
  9997  00192A  6E2F               	movwf	(___flmul@a+3)^0,c
  9998  00192C  0E00               	movlw	0
  9999  00192E  6E13               	movwf	___fldiv@a^0,c
 10000  001930  0EC0               	movlw	192
 10001  001932  6E14               	movwf	(___fldiv@a+1)^0,c
 10002  001934  0E7F               	movlw	127
 10003  001936  6E15               	movwf	(___fldiv@a+2)^0,c
 10004  001938  0E44               	movlw	68
 10005  00193A  6E16               	movwf	(___fldiv@a+3)^0,c
 10006  00193C  C053  F001         	movff	pwmDuty@duty,___xxtofl@val
 10007  001940  C054  F002         	movff	pwmDuty@duty+1,___xxtofl@val+1
 10008  001944  C055  F003         	movff	pwmDuty@duty+2,___xxtofl@val+2
 10009  001948  C056  F004         	movff	pwmDuty@duty+3,___xxtofl@val+3
 10010  00194C  0E01               	movlw	1
 10011  00194E  EC29  F00D         	call	___xxtofl
 10012  001952  C001  F00F         	movff	?___xxtofl,___fldiv@b
 10013  001956  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 10014  00195A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 10015  00195E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 10016  001962  EC82  F007         	call	___fldiv	;wreg free
 10017  001966  C00F  F028         	movff	?___fldiv,___flmul@b
 10018  00196A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
 10019  00196E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
 10020  001972  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
 10021  001976  EC6D  F005         	call	___flmul	;wreg free
 10022  00197A  C028  F041         	movff	?___flmul,___fltol@f1
 10023  00197E  C029  F042         	movff	?___flmul+1,___fltol@f1+1
 10024  001982  C02A  F043         	movff	?___flmul+2,___fltol@f1+2
 10025  001986  C02B  F044         	movff	?___flmul+3,___fltol@f1+3
 10026  00198A  ECD7  F014         	call	___fltol	;wreg free
 10027  00198E  C041  F053         	movff	?___fltol,pwmDuty@duty
 10028  001992  C042  F054         	movff	?___fltol+1,pwmDuty@duty+1
 10029  001996  C043  F055         	movff	?___fltol+2,pwmDuty@duty+2
 10030  00199A  C044  F056         	movff	?___fltol+3,pwmDuty@duty+3
 10031                           
 10032                           ;./pwm.h: 28:         switch (channel) {
 10033  00199E  EF13  F00D         	goto	l4785
 10034  0019A2                     l4779:
 10035                           
 10036                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
 10037  0019A2  0E02               	movlw	2
 10038  0019A4  6E4E               	movwf	??_pwmDuty^0,c
 10039  0019A6  C053  F04F         	movff	pwmDuty@duty,??_pwmDuty+1
 10040  0019AA  C054  F050         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10041  0019AE  C055  F051         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10042  0019B2  C056  F052         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10043  0019B6                     u4165:
 10044  0019B6  664E               	tstfsz	??_pwmDuty^0,c
 10045  0019B8  EFE0  F00C         	goto	u4166
 10046  0019BC  EFE8  F00C         	goto	u4167
 10047  0019C0                     u4166:
 10048  0019C0  3452               	rlcf	(??_pwmDuty+4)^0,w,c
 10049  0019C2  3252               	rrcf	(??_pwmDuty+4)^0,f,c
 10050  0019C4  3251               	rrcf	(??_pwmDuty+3)^0,f,c
 10051  0019C6  3250               	rrcf	(??_pwmDuty+2)^0,f,c
 10052  0019C8  324F               	rrcf	(??_pwmDuty+1)^0,f,c
 10053  0019CA  2E4E               	decfsz	??_pwmDuty^0,f,c
 10054  0019CC  EFDB  F00C         	goto	u4165
 10055  0019D0                     u4167:
 10056  0019D0  504F               	movf	(??_pwmDuty+1)^0,w,c
 10057  0019D2  6EBE               	movwf	190,c	;volatile
 10058                           
 10059                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
 10060  0019D4  0ECF               	movlw	207
 10061  0019D6  16BD               	andwf	189,f,c	;volatile
 10062                           
 10063                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
 10064  0019D8  3853               	swapf	pwmDuty@duty^0,w,c	;volatile
 10065  0019DA  0BF0               	andlw	240
 10066  0019DC  0B30               	andlw	48
 10067  0019DE  12BD               	iorwf	189,f,c	;volatile
 10068                           
 10069                           ;./pwm.h: 34:                 break;
 10070  0019E0  EF28  F00D         	goto	l174
 10071  0019E4                     l4781:
 10072                           
 10073                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
 10074  0019E4  0E02               	movlw	2
 10075  0019E6  6E4E               	movwf	??_pwmDuty^0,c
 10076  0019E8  C053  F04F         	movff	pwmDuty@duty,??_pwmDuty+1
 10077  0019EC  C054  F050         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10078  0019F0  C055  F051         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10079  0019F4  C056  F052         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10080  0019F8                     u4175:
 10081  0019F8  664E               	tstfsz	??_pwmDuty^0,c
 10082  0019FA  EF01  F00D         	goto	u4176
 10083  0019FE  EF09  F00D         	goto	u4177
 10084  001A02                     u4176:
 10085  001A02  3452               	rlcf	(??_pwmDuty+4)^0,w,c
 10086  001A04  3252               	rrcf	(??_pwmDuty+4)^0,f,c
 10087  001A06  3251               	rrcf	(??_pwmDuty+3)^0,f,c
 10088  001A08  3250               	rrcf	(??_pwmDuty+2)^0,f,c
 10089  001A0A  324F               	rrcf	(??_pwmDuty+1)^0,f,c
 10090  001A0C  2E4E               	decfsz	??_pwmDuty^0,f,c
 10091  001A0E  EFFC  F00C         	goto	u4175
 10092  001A12                     u4177:
 10093  001A12  504F               	movf	(??_pwmDuty+1)^0,w,c
 10094  001A14  6EBB               	movwf	187,c	;volatile
 10095                           
 10096                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
 10097  001A16  0ECF               	movlw	207
 10098  001A18  16BA               	andwf	186,f,c	;volatile
 10099                           
 10100                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
 10101  001A1A  3853               	swapf	pwmDuty@duty^0,w,c	;volatile
 10102  001A1C  0BF0               	andlw	240
 10103  001A1E  0B30               	andlw	48
 10104  001A20  12BA               	iorwf	186,f,c	;volatile
 10105                           
 10106                           ;./pwm.h: 40:                 break;
 10107  001A22  EF28  F00D         	goto	l174
 10108  001A26                     l4785:
 10109  001A26  504D               	movf	pwmDuty@channel^0,w,c
 10110  001A28  6E4E               	movwf	??_pwmDuty^0,c
 10111  001A2A  6A4F               	clrf	(??_pwmDuty+1)^0,c
 10112                           
 10113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10114                           ; Switch size 1, requested type "simple"
 10115                           ; Number of cases is 1, Range of values is 0 to 0
 10116                           ; switch strategies available:
 10117                           ; Name         Instructions Cycles
 10118                           ; simple_byte            4     3 (average)
 10119                           ;	Chosen strategy is simple_byte
 10120  001A2C  504F               	movf	(??_pwmDuty+1)^0,w,c
 10121  001A2E  0A00               	xorlw	0	; case 0
 10122  001A30  B4D8               	btfsc	status,2,c
 10123  001A32  EF1D  F00D         	goto	l5527
 10124  001A36  EF28  F00D         	goto	l174
 10125  001A3A                     l5527:
 10126                           
 10127                           ; Switch size 1, requested type "simple"
 10128                           ; Number of cases is 2, Range of values is 1 to 2
 10129                           ; switch strategies available:
 10130                           ; Name         Instructions Cycles
 10131                           ; simple_byte            7     4 (average)
 10132                           ;	Chosen strategy is simple_byte
 10133  001A3A  504E               	movf	??_pwmDuty^0,w,c
 10134  001A3C  0A01               	xorlw	1	; case 1
 10135  001A3E  B4D8               	btfsc	status,2,c
 10136  001A40  EFD1  F00C         	goto	l4779
 10137  001A44  0A03               	xorlw	3	; case 2
 10138  001A46  B4D8               	btfsc	status,2,c
 10139  001A48  EFF2  F00C         	goto	l4781
 10140  001A4C  EF28  F00D         	goto	l174
 10141  001A50                     l174:
 10142  001A50  0012               	return		;funcret
 10143  001A52                     __end_of_pwmDuty:
 10144                           	opt callstack 0
 10145                           
 10146 ;; *************** function _map *****************
 10147 ;; Defined at:
 10148 ;;		line 16 in file "./pwm.h"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  x               4   26[COMRAM] long 
 10151 ;;  in_min          4   30[COMRAM] long 
 10152 ;;  in_max          4   34[COMRAM] long 
 10153 ;;  out_min         4   38[COMRAM] long 
 10154 ;;  out_max         4   42[COMRAM] long 
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;		None
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  4   26[COMRAM] long 
 10159 ;; Registers used:
 10160 ;;		wreg, status,2, status,0, cstack
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10166 ;;      Params:        20       0       0       0       0       0       0       0       0
 10167 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10168 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10169 ;;      Totals:        20       0       0       0       0       0       0       0       0
 10170 ;;Total ram usage:       20 bytes
 10171 ;; Hardware stack levels used:    1
 10172 ;; Hardware stack levels required when called:    2
 10173 ;; This function calls:
 10174 ;;		___aldiv
 10175 ;;		___lmul
 10176 ;; This function is called by:
 10177 ;;		_pwmDuty
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text51
 10182  0030AC                     __ptext51:
 10183                           	opt callstack 0
 10184  0030AC                     _map:
 10185                           	opt callstack 26
 10186  0030AC                     
 10187                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
 10188  0030AC  501F               	movf	map@in_min^0,w,c
 10189  0030AE  5C1B               	subwf	map@x^0,w,c
 10190  0030B0  6E01               	movwf	___lmul@multiplier^0,c
 10191  0030B2  5020               	movf	(map@in_min+1)^0,w,c
 10192  0030B4  581C               	subwfb	(map@x+1)^0,w,c
 10193  0030B6  6E02               	movwf	(___lmul@multiplier+1)^0,c
 10194  0030B8  5021               	movf	(map@in_min+2)^0,w,c
 10195  0030BA  581D               	subwfb	(map@x+2)^0,w,c
 10196  0030BC  6E03               	movwf	(___lmul@multiplier+2)^0,c
 10197  0030BE  5022               	movf	(map@in_min+3)^0,w,c
 10198  0030C0  581E               	subwfb	(map@x+3)^0,w,c
 10199  0030C2  6E04               	movwf	(___lmul@multiplier+3)^0,c
 10200  0030C4  5027               	movf	map@out_min^0,w,c
 10201  0030C6  5C2B               	subwf	map@out_max^0,w,c
 10202  0030C8  6E05               	movwf	___lmul@multiplicand^0,c
 10203  0030CA  5028               	movf	(map@out_min+1)^0,w,c
 10204  0030CC  582C               	subwfb	(map@out_max+1)^0,w,c
 10205  0030CE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10206  0030D0  5029               	movf	(map@out_min+2)^0,w,c
 10207  0030D2  582D               	subwfb	(map@out_max+2)^0,w,c
 10208  0030D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10209  0030D6  502A               	movf	(map@out_min+3)^0,w,c
 10210  0030D8  582E               	subwfb	(map@out_max+3)^0,w,c
 10211  0030DA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10212  0030DC  EC04  F019         	call	___lmul	;wreg free
 10213  0030E0  C001  F00D         	movff	?___lmul,___aldiv@dividend
 10214  0030E4  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
 10215  0030E8  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
 10216  0030EC  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
 10217  0030F0  501F               	movf	map@in_min^0,w,c
 10218  0030F2  5C23               	subwf	map@in_max^0,w,c
 10219  0030F4  6E11               	movwf	___aldiv@divisor^0,c
 10220  0030F6  5020               	movf	(map@in_min+1)^0,w,c
 10221  0030F8  5824               	subwfb	(map@in_max+1)^0,w,c
 10222  0030FA  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10223  0030FC  5021               	movf	(map@in_min+2)^0,w,c
 10224  0030FE  5825               	subwfb	(map@in_max+2)^0,w,c
 10225  003100  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10226  003102  5022               	movf	(map@in_min+3)^0,w,c
 10227  003104  5826               	subwfb	(map@in_max+3)^0,w,c
 10228  003106  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10229  003108  EC51  F014         	call	___aldiv	;wreg free
 10230  00310C  5027               	movf	map@out_min^0,w,c
 10231  00310E  240D               	addwf	?___aldiv^0,w,c
 10232  003110  6E1B               	movwf	?_map^0,c
 10233  003112  5028               	movf	(map@out_min+1)^0,w,c
 10234  003114  200E               	addwfc	(?___aldiv+1)^0,w,c
 10235  003116  6E1C               	movwf	(?_map+1)^0,c
 10236  003118  5029               	movf	(map@out_min+2)^0,w,c
 10237  00311A  200F               	addwfc	(?___aldiv+2)^0,w,c
 10238  00311C  6E1D               	movwf	(?_map+2)^0,c
 10239  00311E  502A               	movf	(map@out_min+3)^0,w,c
 10240  003120  2010               	addwfc	(?___aldiv+3)^0,w,c
 10241  003122  6E1E               	movwf	(?_map+3)^0,c
 10242  003124  0012               	return		;funcret
 10243  003126                     __end_of_map:
 10244                           	opt callstack 0
 10245                           
 10246 ;; *************** function ___lmul *****************
 10247 ;; Defined at:
 10248 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;  multiplier      4    0[COMRAM] unsigned long 
 10251 ;;  multiplicand    4    4[COMRAM] unsigned long 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  product         4    8[COMRAM] unsigned long 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  4    0[COMRAM] unsigned long 
 10256 ;; Registers used:
 10257 ;;		wreg, status,2, status,0
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10263 ;;      Params:         8       0       0       0       0       0       0       0       0
 10264 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10265 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10266 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10267 ;;Total ram usage:       12 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    1
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_map
 10274 ;;		_getValue
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text52
 10279  003208                     __ptext52:
 10280                           	opt callstack 0
 10281  003208                     ___lmul:
 10282                           	opt callstack 26
 10283  003208  0E00               	movlw	0
 10284  00320A  6E09               	movwf	___lmul@product^0,c
 10285  00320C  0E00               	movlw	0
 10286  00320E  6E0A               	movwf	(___lmul@product+1)^0,c
 10287  003210  0E00               	movlw	0
 10288  003212  6E0B               	movwf	(___lmul@product+2)^0,c
 10289  003214  0E00               	movlw	0
 10290  003216  6E0C               	movwf	(___lmul@product+3)^0,c
 10291  003218                     l3909:
 10292  003218  A001               	btfss	___lmul@multiplier^0,0,c
 10293  00321A  EF11  F019         	goto	u3121
 10294  00321E  EF13  F019         	goto	u3120
 10295  003222                     u3121:
 10296  003222  EF1B  F019         	goto	l3913
 10297  003226                     u3120:
 10298  003226  5005               	movf	___lmul@multiplicand^0,w,c
 10299  003228  2609               	addwf	___lmul@product^0,f,c
 10300  00322A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 10301  00322C  220A               	addwfc	(___lmul@product+1)^0,f,c
 10302  00322E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 10303  003230  220B               	addwfc	(___lmul@product+2)^0,f,c
 10304  003232  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 10305  003234  220C               	addwfc	(___lmul@product+3)^0,f,c
 10306  003236                     l3913:
 10307  003236  90D8               	bcf	status,0,c
 10308  003238  3605               	rlcf	___lmul@multiplicand^0,f,c
 10309  00323A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 10310  00323C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 10311  00323E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 10312  003240  90D8               	bcf	status,0,c
 10313  003242  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 10314  003244  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 10315  003246  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 10316  003248  3201               	rrcf	___lmul@multiplier^0,f,c
 10317  00324A  5001               	movf	___lmul@multiplier^0,w,c
 10318  00324C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 10319  00324E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 10320  003250  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 10321  003252  A4D8               	btfss	status,2,c
 10322  003254  EF2E  F019         	goto	u3131
 10323  003258  EF30  F019         	goto	u3130
 10324  00325C                     u3131:
 10325  00325C  EF0C  F019         	goto	l3909
 10326  003260                     u3130:
 10327  003260  C009  F001         	movff	___lmul@product,?___lmul
 10328  003264  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 10329  003268  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 10330  00326C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 10331  003270  0012               	return		;funcret
 10332  003272                     __end_of___lmul:
 10333                           	opt callstack 0
 10334                           
 10335 ;; *************** function ___xxtofl *****************
 10336 ;; Defined at:
 10337 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  sign            1    wreg     unsigned char 
 10340 ;;  val             4    0[COMRAM] long 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  sign            1    8[COMRAM] unsigned char 
 10343 ;;  arg             4   10[COMRAM] unsigned long 
 10344 ;;  exp             1    9[COMRAM] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  4    0[COMRAM] unsigned char 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10354 ;;      Params:         4       0       0       0       0       0       0       0       0
 10355 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10356 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10357 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10358 ;;Total ram usage:       14 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:    1
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_bh1750_leer
 10365 ;;		_pwmDuty
 10366 ;;		_PID
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text53
 10371  001A52                     __ptext53:
 10372                           	opt callstack 0
 10373  001A52                     ___xxtofl:
 10374                           	opt callstack 25
 10375                           
 10376                           ;incstack = 0
 10377                           ;___xxtofl@sign stored from wreg
 10378  001A52  6E09               	movwf	___xxtofl@sign^0,c
 10379  001A54  5009               	movf	___xxtofl@sign^0,w,c
 10380  001A56  B4D8               	btfsc	status,2,c
 10381  001A58  EF30  F00D         	goto	u3441
 10382  001A5C  EF32  F00D         	goto	u3440
 10383  001A60                     u3441:
 10384  001A60  EF54  F00D         	goto	l1249
 10385  001A64                     u3440:
 10386  001A64  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10387  001A66  EF39  F00D         	goto	u3450
 10388  001A6A  EF37  F00D         	goto	u3451
 10389  001A6E                     u3451:
 10390  001A6E  EF54  F00D         	goto	l1249
 10391  001A72                     u3450:
 10392  001A72  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10393  001A76  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10394  001A7A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10395  001A7E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10396  001A82  1E05               	comf	??___xxtofl^0,f,c
 10397  001A84  1E06               	comf	(??___xxtofl+1)^0,f,c
 10398  001A86  1E07               	comf	(??___xxtofl+2)^0,f,c
 10399  001A88  1E08               	comf	(??___xxtofl+3)^0,f,c
 10400  001A8A  2A05               	incf	??___xxtofl^0,f,c
 10401  001A8C  0E00               	movlw	0
 10402  001A8E  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10403  001A90  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10404  001A92  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10405  001A94  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10406  001A98  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10407  001A9C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10408  001AA0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10409  001AA4  EF5C  F00D         	goto	l4105
 10410  001AA8                     l1249:
 10411  001AA8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10412  001AAC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10413  001AB0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10414  001AB4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10415  001AB8                     l4105:
 10416  001AB8  5001               	movf	___xxtofl@val^0,w,c
 10417  001ABA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10418  001ABC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10419  001ABE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10420  001AC0  A4D8               	btfss	status,2,c
 10421  001AC2  EF65  F00D         	goto	u3461
 10422  001AC6  EF67  F00D         	goto	u3460
 10423  001ACA                     u3461:
 10424  001ACA  EF71  F00D         	goto	l4111
 10425  001ACE                     u3460:
 10426  001ACE  0E00               	movlw	0
 10427  001AD0  6E01               	movwf	?___xxtofl^0,c
 10428  001AD2  0E00               	movlw	0
 10429  001AD4  6E02               	movwf	(?___xxtofl+1)^0,c
 10430  001AD6  0E00               	movlw	0
 10431  001AD8  6E03               	movwf	(?___xxtofl+2)^0,c
 10432  001ADA  0E00               	movlw	0
 10433  001ADC  6E04               	movwf	(?___xxtofl+3)^0,c
 10434  001ADE  EF02  F00E         	goto	l1252
 10435  001AE2                     l4111:
 10436  001AE2  0E96               	movlw	150
 10437  001AE4  6E0A               	movwf	___xxtofl@exp^0,c
 10438  001AE6  EF7B  F00D         	goto	l4115
 10439  001AEA                     l4113:
 10440  001AEA  2A0A               	incf	___xxtofl@exp^0,f,c
 10441  001AEC  90D8               	bcf	status,0,c
 10442  001AEE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10443  001AF0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10444  001AF2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10445  001AF4  320B               	rrcf	___xxtofl@arg^0,f,c
 10446  001AF6                     l4115:
 10447  001AF6  0E00               	movlw	0
 10448  001AF8  140B               	andwf	___xxtofl@arg^0,w,c
 10449  001AFA  6E05               	movwf	??___xxtofl^0,c
 10450  001AFC  0E00               	movlw	0
 10451  001AFE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10452  001B00  6E06               	movwf	(??___xxtofl+1)^0,c
 10453  001B02  0E00               	movlw	0
 10454  001B04  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10455  001B06  6E07               	movwf	(??___xxtofl+2)^0,c
 10456  001B08  0EFE               	movlw	254
 10457  001B0A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10458  001B0C  6E08               	movwf	(??___xxtofl+3)^0,c
 10459  001B0E  5005               	movf	??___xxtofl^0,w,c
 10460  001B10  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10461  001B12  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10462  001B14  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10463  001B16  A4D8               	btfss	status,2,c
 10464  001B18  EF90  F00D         	goto	u3471
 10465  001B1C  EF92  F00D         	goto	u3470
 10466  001B20                     u3471:
 10467  001B20  EF75  F00D         	goto	l4113
 10468  001B24                     u3470:
 10469  001B24  EFA0  F00D         	goto	l1256
 10470  001B28                     l4117:
 10471  001B28  2A0A               	incf	___xxtofl@exp^0,f,c
 10472  001B2A  0E01               	movlw	1
 10473  001B2C  260B               	addwf	___xxtofl@arg^0,f,c
 10474  001B2E  0E00               	movlw	0
 10475  001B30  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10476  001B32  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10477  001B34  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10478  001B36  90D8               	bcf	status,0,c
 10479  001B38  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10480  001B3A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10481  001B3C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10482  001B3E  320B               	rrcf	___xxtofl@arg^0,f,c
 10483  001B40                     l1256:
 10484  001B40  0E00               	movlw	0
 10485  001B42  140B               	andwf	___xxtofl@arg^0,w,c
 10486  001B44  6E05               	movwf	??___xxtofl^0,c
 10487  001B46  0E00               	movlw	0
 10488  001B48  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10489  001B4A  6E06               	movwf	(??___xxtofl+1)^0,c
 10490  001B4C  0E00               	movlw	0
 10491  001B4E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10492  001B50  6E07               	movwf	(??___xxtofl+2)^0,c
 10493  001B52  0EFF               	movlw	255
 10494  001B54  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10495  001B56  6E08               	movwf	(??___xxtofl+3)^0,c
 10496  001B58  5005               	movf	??___xxtofl^0,w,c
 10497  001B5A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10498  001B5C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10499  001B5E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10500  001B60  A4D8               	btfss	status,2,c
 10501  001B62  EFB5  F00D         	goto	u3481
 10502  001B66  EFB7  F00D         	goto	u3480
 10503  001B6A                     u3481:
 10504  001B6A  EF94  F00D         	goto	l4117
 10505  001B6E                     u3480:
 10506  001B6E  EFBF  F00D         	goto	l4125
 10507  001B72                     l4123:
 10508  001B72  060A               	decf	___xxtofl@exp^0,f,c
 10509  001B74  90D8               	bcf	status,0,c
 10510  001B76  360B               	rlcf	___xxtofl@arg^0,f,c
 10511  001B78  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10512  001B7A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10513  001B7C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10514  001B7E                     l4125:
 10515  001B7E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10516  001B80  EFC4  F00D         	goto	u3491
 10517  001B84  EFC6  F00D         	goto	u3490
 10518  001B88                     u3491:
 10519  001B88  EFCE  F00D         	goto	l1263
 10520  001B8C                     u3490:
 10521  001B8C  0E02               	movlw	2
 10522  001B8E  600A               	cpfslt	___xxtofl@exp^0,c
 10523  001B90  EFCC  F00D         	goto	u3501
 10524  001B94  EFCE  F00D         	goto	u3500
 10525  001B98                     u3501:
 10526  001B98  EFB9  F00D         	goto	l4123
 10527  001B9C                     u3500:
 10528  001B9C                     l1263:
 10529  001B9C  B00A               	btfsc	___xxtofl@exp^0,0,c
 10530  001B9E  EFD3  F00D         	goto	u3511
 10531  001BA2  EFD5  F00D         	goto	u3510
 10532  001BA6                     u3511:
 10533  001BA6  EFD6  F00D         	goto	l4131
 10534  001BAA                     u3510:
 10535  001BAA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10536  001BAC                     l4131:
 10537  001BAC  90D8               	bcf	status,0,c
 10538  001BAE  320A               	rrcf	___xxtofl@exp^0,f,c
 10539  001BB0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10540  001BB4  6A06               	clrf	(??___xxtofl+1)^0,c
 10541  001BB6  6A07               	clrf	(??___xxtofl+2)^0,c
 10542  001BB8  6A08               	clrf	(??___xxtofl+3)^0,c
 10543  001BBA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10544  001BBE  6A07               	clrf	(??___xxtofl+2)^0,c
 10545  001BC0  6A06               	clrf	(??___xxtofl+1)^0,c
 10546  001BC2  6A05               	clrf	??___xxtofl^0,c
 10547  001BC4  5005               	movf	??___xxtofl^0,w,c
 10548  001BC6  120B               	iorwf	___xxtofl@arg^0,f,c
 10549  001BC8  5006               	movf	(??___xxtofl+1)^0,w,c
 10550  001BCA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10551  001BCC  5007               	movf	(??___xxtofl+2)^0,w,c
 10552  001BCE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10553  001BD0  5008               	movf	(??___xxtofl+3)^0,w,c
 10554  001BD2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10555  001BD4  5009               	movf	___xxtofl@sign^0,w,c
 10556  001BD6  B4D8               	btfsc	status,2,c
 10557  001BD8  EFF0  F00D         	goto	u3521
 10558  001BDC  EFF2  F00D         	goto	u3520
 10559  001BE0                     u3521:
 10560  001BE0  EFFA  F00D         	goto	l4141
 10561  001BE4                     u3520:
 10562  001BE4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10563  001BE6  EFF9  F00D         	goto	u3530
 10564  001BEA  EFF7  F00D         	goto	u3531
 10565  001BEE                     u3531:
 10566  001BEE  EFFA  F00D         	goto	l4141
 10567  001BF2                     u3530:
 10568  001BF2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10569  001BF4                     l4141:
 10570  001BF4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10571  001BF8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10572  001BFC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10573  001C00  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10574  001C04                     l1252:
 10575  001C04  0012               	return		;funcret
 10576  001C06                     __end_of___xxtofl:
 10577                           	opt callstack 0
 10578                           
 10579 ;; *************** function ___fltol *****************
 10580 ;; Defined at:
 10581 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  f1              4   64[COMRAM] unsigned char 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  exp1            1   73[COMRAM] unsigned char 
 10586 ;;  sign1           1   72[COMRAM] unsigned char 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  4   64[COMRAM] long 
 10589 ;; Registers used:
 10590 ;;		wreg, status,2, status,0
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10596 ;;      Params:         4       0       0       0       0       0       0       0       0
 10597 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10598 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10599 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10600 ;;Total ram usage:       10 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    1
 10603 ;; This function calls:
 10604 ;;		Nothing
 10605 ;; This function is called by:
 10606 ;;		_bh1750_leer
 10607 ;;		_pwmDuty
 10608 ;;		_PID
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text54
 10613  0029AE                     __ptext54:
 10614                           	opt callstack 0
 10615  0029AE                     ___fltol:
 10616                           	opt callstack 25
 10617  0029AE  3443               	rlcf	(___fltol@f1+2)^0,w,c
 10618  0029B0  3444               	rlcf	(___fltol@f1+3)^0,w,c
 10619  0029B2  6E4A               	movwf	___fltol@exp1^0,c
 10620  0029B4  504A               	movf	___fltol@exp1^0,w,c
 10621  0029B6  A4D8               	btfss	status,2,c
 10622  0029B8  EFE0  F014         	goto	u3371
 10623  0029BC  EFE2  F014         	goto	u3370
 10624  0029C0                     u3371:
 10625  0029C0  EFEC  F014         	goto	l4061
 10626  0029C4                     u3370:
 10627  0029C4                     l4057:
 10628  0029C4  0E00               	movlw	0
 10629  0029C6  6E41               	movwf	?___fltol^0,c
 10630  0029C8  0E00               	movlw	0
 10631  0029CA  6E42               	movwf	(?___fltol+1)^0,c
 10632  0029CC  0E00               	movlw	0
 10633  0029CE  6E43               	movwf	(?___fltol+2)^0,c
 10634  0029D0  0E00               	movlw	0
 10635  0029D2  6E44               	movwf	(?___fltol+3)^0,c
 10636  0029D4  EF59  F015         	goto	l891
 10637  0029D8                     l4061:
 10638  0029D8  C041  F045         	movff	___fltol@f1,??___fltol
 10639  0029DC  C042  F046         	movff	___fltol@f1+1,??___fltol+1
 10640  0029E0  C043  F047         	movff	___fltol@f1+2,??___fltol+2
 10641  0029E4  C044  F048         	movff	___fltol@f1+3,??___fltol+3
 10642  0029E8  0E20               	movlw	32
 10643  0029EA  EFFC  F014         	goto	u3380
 10644  0029EE                     u3385:
 10645  0029EE  90D8               	bcf	status,0,c
 10646  0029F0  3248               	rrcf	(??___fltol+3)^0,f,c
 10647  0029F2  3247               	rrcf	(??___fltol+2)^0,f,c
 10648  0029F4  3246               	rrcf	(??___fltol+1)^0,f,c
 10649  0029F6  3245               	rrcf	??___fltol^0,f,c
 10650  0029F8                     u3380:
 10651  0029F8  2EE8               	decfsz	wreg,f,c
 10652  0029FA  EFF7  F014         	goto	u3385
 10653  0029FE  5045               	movf	??___fltol^0,w,c
 10654  002A00  6E49               	movwf	___fltol@sign1^0,c
 10655  002A02  8E43               	bsf	(___fltol@f1+2)^0,7,c
 10656  002A04  0EFF               	movlw	255
 10657  002A06  1641               	andwf	___fltol@f1^0,f,c
 10658  002A08  0EFF               	movlw	255
 10659  002A0A  1642               	andwf	(___fltol@f1+1)^0,f,c
 10660  002A0C  0EFF               	movlw	255
 10661  002A0E  1643               	andwf	(___fltol@f1+2)^0,f,c
 10662  002A10  0E00               	movlw	0
 10663  002A12  1644               	andwf	(___fltol@f1+3)^0,f,c
 10664  002A14  0E96               	movlw	150
 10665  002A16  5E4A               	subwf	___fltol@exp1^0,f,c
 10666  002A18  BE4A               	btfsc	___fltol@exp1^0,7,c
 10667  002A1A  EF13  F015         	goto	u3390
 10668  002A1E  EF11  F015         	goto	u3391
 10669  002A22                     u3391:
 10670  002A22  EF29  F015         	goto	l4081
 10671  002A26                     u3390:
 10672  002A26  504A               	movf	___fltol@exp1^0,w,c
 10673  002A28  0A80               	xorlw	128
 10674  002A2A  0F97               	addlw	151
 10675  002A2C  B0D8               	btfsc	status,0,c
 10676  002A2E  EF1B  F015         	goto	u3401
 10677  002A32  EF1D  F015         	goto	u3400
 10678  002A36                     u3401:
 10679  002A36  EF1F  F015         	goto	l4077
 10680  002A3A                     u3400:
 10681  002A3A  EFE2  F014         	goto	l4057
 10682  002A3E                     l4077:
 10683  002A3E  90D8               	bcf	status,0,c
 10684  002A40  3244               	rrcf	(___fltol@f1+3)^0,f,c
 10685  002A42  3243               	rrcf	(___fltol@f1+2)^0,f,c
 10686  002A44  3242               	rrcf	(___fltol@f1+1)^0,f,c
 10687  002A46  3241               	rrcf	___fltol@f1^0,f,c
 10688  002A48  3E4A               	incfsz	___fltol@exp1^0,f,c
 10689  002A4A  EF1F  F015         	goto	l4077
 10690  002A4E  EF41  F015         	goto	l4091
 10691  002A52                     l4081:
 10692  002A52  0E1F               	movlw	31
 10693  002A54  644A               	cpfsgt	___fltol@exp1^0,c
 10694  002A56  EF2F  F015         	goto	u3411
 10695  002A5A  EF31  F015         	goto	u3410
 10696  002A5E                     u3411:
 10697  002A5E  EF39  F015         	goto	l4089
 10698  002A62                     u3410:
 10699  002A62  EFE2  F014         	goto	l4057
 10700  002A66                     l4087:
 10701  002A66  90D8               	bcf	status,0,c
 10702  002A68  3641               	rlcf	___fltol@f1^0,f,c
 10703  002A6A  3642               	rlcf	(___fltol@f1+1)^0,f,c
 10704  002A6C  3643               	rlcf	(___fltol@f1+2)^0,f,c
 10705  002A6E  3644               	rlcf	(___fltol@f1+3)^0,f,c
 10706  002A70  064A               	decf	___fltol@exp1^0,f,c
 10707  002A72                     l4089:
 10708  002A72  504A               	movf	___fltol@exp1^0,w,c
 10709  002A74  A4D8               	btfss	status,2,c
 10710  002A76  EF3F  F015         	goto	u3421
 10711  002A7A  EF41  F015         	goto	u3420
 10712  002A7E                     u3421:
 10713  002A7E  EF33  F015         	goto	l4087
 10714  002A82                     u3420:
 10715  002A82                     l4091:
 10716  002A82  5049               	movf	___fltol@sign1^0,w,c
 10717  002A84  B4D8               	btfsc	status,2,c
 10718  002A86  EF47  F015         	goto	u3431
 10719  002A8A  EF49  F015         	goto	u3430
 10720  002A8E                     u3431:
 10721  002A8E  EF51  F015         	goto	l4095
 10722  002A92                     u3430:
 10723  002A92  1E44               	comf	(___fltol@f1+3)^0,f,c
 10724  002A94  1E43               	comf	(___fltol@f1+2)^0,f,c
 10725  002A96  1E42               	comf	(___fltol@f1+1)^0,f,c
 10726  002A98  6C41               	negf	___fltol@f1^0,c
 10727  002A9A  0E00               	movlw	0
 10728  002A9C  2242               	addwfc	(___fltol@f1+1)^0,f,c
 10729  002A9E  2243               	addwfc	(___fltol@f1+2)^0,f,c
 10730  002AA0  2244               	addwfc	(___fltol@f1+3)^0,f,c
 10731  002AA2                     l4095:
 10732  002AA2  C041  F041         	movff	___fltol@f1,?___fltol
 10733  002AA6  C042  F042         	movff	___fltol@f1+1,?___fltol+1
 10734  002AAA  C043  F043         	movff	___fltol@f1+2,?___fltol+2
 10735  002AAE  C044  F044         	movff	___fltol@f1+3,?___fltol+3
 10736  002AB2                     l891:
 10737  002AB2  0012               	return		;funcret
 10738  002AB4                     __end_of___fltol:
 10739                           	opt callstack 0
 10740                           
 10741 ;; *************** function ___flmul *****************
 10742 ;; Defined at:
 10743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;  b               4   39[COMRAM] long 
 10746 ;;  a               4   43[COMRAM] long 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  prod            4   58[COMRAM] struct .
 10749 ;;  grs             4   52[COMRAM] unsigned long 
 10750 ;;  temp            2   62[COMRAM] struct .
 10751 ;;  bexp            1   57[COMRAM] unsigned char 
 10752 ;;  aexp            1   56[COMRAM] unsigned char 
 10753 ;;  sign            1   51[COMRAM] unsigned char 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  4   39[COMRAM] unsigned char 
 10756 ;; Registers used:
 10757 ;;		wreg, status,2, status,0, prodl, prodh
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10763 ;;      Params:         8       0       0       0       0       0       0       0       0
 10764 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10765 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10766 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10767 ;;Total ram usage:       25 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    1
 10770 ;; This function calls:
 10771 ;;		Nothing
 10772 ;; This function is called by:
 10773 ;;		_pwmDuty
 10774 ;;		_PID
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text55
 10779  000ADA                     __ptext55:
 10780                           	opt callstack 0
 10781  000ADA                     ___flmul:
 10782                           	opt callstack 27
 10783  000ADA  502B               	movf	(___flmul@b+3)^0,w,c
 10784  000ADC  0B80               	andlw	128
 10785  000ADE  6E34               	movwf	___flmul@sign^0,c
 10786  000AE0  502B               	movf	(___flmul@b+3)^0,w,c
 10787  000AE2  242B               	addwf	(___flmul@b+3)^0,w,c
 10788  000AE4  6E3A               	movwf	___flmul@bexp^0,c
 10789  000AE6  AE2A               	btfss	(___flmul@b+2)^0,7,c
 10790  000AE8  EF78  F005         	goto	u3961
 10791  000AEC  EF7A  F005         	goto	u3960
 10792  000AF0                     u3961:
 10793  000AF0  EF7B  F005         	goto	l4649
 10794  000AF4                     u3960:
 10795  000AF4  803A               	bsf	___flmul@bexp^0,0,c
 10796  000AF6                     l4649:
 10797  000AF6  503A               	movf	___flmul@bexp^0,w,c
 10798  000AF8  B4D8               	btfsc	status,2,c
 10799  000AFA  EF81  F005         	goto	u3971
 10800  000AFE  EF83  F005         	goto	u3970
 10801  000B02                     u3971:
 10802  000B02  EF96  F005         	goto	l4657
 10803  000B06                     u3970:
 10804  000B06  283A               	incf	___flmul@bexp^0,w,c
 10805  000B08  A4D8               	btfss	status,2,c
 10806  000B0A  EF89  F005         	goto	u3981
 10807  000B0E  EF8B  F005         	goto	u3980
 10808  000B12                     u3981:
 10809  000B12  EF93  F005         	goto	l4655
 10810  000B16                     u3980:
 10811  000B16  0E00               	movlw	0
 10812  000B18  6E28               	movwf	___flmul@b^0,c
 10813  000B1A  0E00               	movlw	0
 10814  000B1C  6E29               	movwf	(___flmul@b+1)^0,c
 10815  000B1E  0E00               	movlw	0
 10816  000B20  6E2A               	movwf	(___flmul@b+2)^0,c
 10817  000B22  0E00               	movlw	0
 10818  000B24  6E2B               	movwf	(___flmul@b+3)^0,c
 10819  000B26                     l4655:
 10820  000B26  8E2A               	bsf	(___flmul@b+2)^0,7,c
 10821  000B28  EF9E  F005         	goto	l4659
 10822  000B2C                     l4657:
 10823  000B2C  0E00               	movlw	0
 10824  000B2E  6E28               	movwf	___flmul@b^0,c
 10825  000B30  0E00               	movlw	0
 10826  000B32  6E29               	movwf	(___flmul@b+1)^0,c
 10827  000B34  0E00               	movlw	0
 10828  000B36  6E2A               	movwf	(___flmul@b+2)^0,c
 10829  000B38  0E00               	movlw	0
 10830  000B3A  6E2B               	movwf	(___flmul@b+3)^0,c
 10831  000B3C                     l4659:
 10832  000B3C  502F               	movf	(___flmul@a+3)^0,w,c
 10833  000B3E  0B80               	andlw	128
 10834  000B40  1A34               	xorwf	___flmul@sign^0,f,c
 10835  000B42  502F               	movf	(___flmul@a+3)^0,w,c
 10836  000B44  242F               	addwf	(___flmul@a+3)^0,w,c
 10837  000B46  6E39               	movwf	___flmul@aexp^0,c
 10838  000B48  AE2E               	btfss	(___flmul@a+2)^0,7,c
 10839  000B4A  EFA9  F005         	goto	u3991
 10840  000B4E  EFAB  F005         	goto	u3990
 10841  000B52                     u3991:
 10842  000B52  EFAC  F005         	goto	l4667
 10843  000B56                     u3990:
 10844  000B56  8039               	bsf	___flmul@aexp^0,0,c
 10845  000B58                     l4667:
 10846  000B58  5039               	movf	___flmul@aexp^0,w,c
 10847  000B5A  B4D8               	btfsc	status,2,c
 10848  000B5C  EFB2  F005         	goto	u4001
 10849  000B60  EFB4  F005         	goto	u4000
 10850  000B64                     u4001:
 10851  000B64  EFC7  F005         	goto	l4675
 10852  000B68                     u4000:
 10853  000B68  2839               	incf	___flmul@aexp^0,w,c
 10854  000B6A  A4D8               	btfss	status,2,c
 10855  000B6C  EFBA  F005         	goto	u4011
 10856  000B70  EFBC  F005         	goto	u4010
 10857  000B74                     u4011:
 10858  000B74  EFC4  F005         	goto	l4673
 10859  000B78                     u4010:
 10860  000B78  0E00               	movlw	0
 10861  000B7A  6E2C               	movwf	___flmul@a^0,c
 10862  000B7C  0E00               	movlw	0
 10863  000B7E  6E2D               	movwf	(___flmul@a+1)^0,c
 10864  000B80  0E00               	movlw	0
 10865  000B82  6E2E               	movwf	(___flmul@a+2)^0,c
 10866  000B84  0E00               	movlw	0
 10867  000B86  6E2F               	movwf	(___flmul@a+3)^0,c
 10868  000B88                     l4673:
 10869  000B88  8E2E               	bsf	(___flmul@a+2)^0,7,c
 10870  000B8A  EFCF  F005         	goto	l1208
 10871  000B8E                     l4675:
 10872  000B8E  0E00               	movlw	0
 10873  000B90  6E2C               	movwf	___flmul@a^0,c
 10874  000B92  0E00               	movlw	0
 10875  000B94  6E2D               	movwf	(___flmul@a+1)^0,c
 10876  000B96  0E00               	movlw	0
 10877  000B98  6E2E               	movwf	(___flmul@a+2)^0,c
 10878  000B9A  0E00               	movlw	0
 10879  000B9C  6E2F               	movwf	(___flmul@a+3)^0,c
 10880  000B9E                     l1208:
 10881  000B9E  5039               	movf	___flmul@aexp^0,w,c
 10882  000BA0  B4D8               	btfsc	status,2,c
 10883  000BA2  EFD5  F005         	goto	u4021
 10884  000BA6  EFD7  F005         	goto	u4020
 10885  000BAA                     u4021:
 10886  000BAA  EFDF  F005         	goto	l4679
 10887  000BAE                     u4020:
 10888  000BAE  503A               	movf	___flmul@bexp^0,w,c
 10889  000BB0  A4D8               	btfss	status,2,c
 10890  000BB2  EFDD  F005         	goto	u4031
 10891  000BB6  EFDF  F005         	goto	u4030
 10892  000BBA                     u4031:
 10893  000BBA  EFE9  F005         	goto	l4683
 10894  000BBE                     u4030:
 10895  000BBE                     l4679:
 10896  000BBE  0E00               	movlw	0
 10897  000BC0  6E28               	movwf	?___flmul^0,c
 10898  000BC2  0E00               	movlw	0
 10899  000BC4  6E29               	movwf	(?___flmul+1)^0,c
 10900  000BC6  0E00               	movlw	0
 10901  000BC8  6E2A               	movwf	(?___flmul+2)^0,c
 10902  000BCA  0E00               	movlw	0
 10903  000BCC  6E2B               	movwf	(?___flmul+3)^0,c
 10904  000BCE  EF81  F007         	goto	l1212
 10905  000BD2                     l4683:
 10906  000BD2  502E               	movf	(___flmul@a+2)^0,w,c
 10907  000BD4  0228               	mulwf	___flmul@b^0,c
 10908  000BD6  CFF3 F03F          	movff	prodl,___flmul@temp
 10909  000BDA  CFF4 F040          	movff	prodh,___flmul@temp+1
 10910  000BDE  503F               	movf	___flmul@temp^0,w,c
 10911  000BE0  6E35               	movwf	___flmul@grs^0,c
 10912  000BE2  6A36               	clrf	(___flmul@grs+1)^0,c
 10913  000BE4  6A37               	clrf	(___flmul@grs+2)^0,c
 10914  000BE6  6A38               	clrf	(___flmul@grs+3)^0,c
 10915  000BE8  5040               	movf	(___flmul@temp+1)^0,w,c
 10916  000BEA  6E3B               	movwf	___flmul@prod^0,c
 10917  000BEC  6A3C               	clrf	(___flmul@prod+1)^0,c
 10918  000BEE  6A3D               	clrf	(___flmul@prod+2)^0,c
 10919  000BF0  6A3E               	clrf	(___flmul@prod+3)^0,c
 10920  000BF2  502D               	movf	(___flmul@a+1)^0,w,c
 10921  000BF4  0229               	mulwf	(___flmul@b+1)^0,c
 10922  000BF6  CFF3 F03F          	movff	prodl,___flmul@temp
 10923  000BFA  CFF4 F040          	movff	prodh,___flmul@temp+1
 10924  000BFE  503F               	movf	___flmul@temp^0,w,c
 10925  000C00  2635               	addwf	___flmul@grs^0,f,c
 10926  000C02  0E00               	movlw	0
 10927  000C04  2236               	addwfc	(___flmul@grs+1)^0,f,c
 10928  000C06  2237               	addwfc	(___flmul@grs+2)^0,f,c
 10929  000C08  2238               	addwfc	(___flmul@grs+3)^0,f,c
 10930  000C0A  5040               	movf	(___flmul@temp+1)^0,w,c
 10931  000C0C  263B               	addwf	___flmul@prod^0,f,c
 10932  000C0E  0E00               	movlw	0
 10933  000C10  223C               	addwfc	(___flmul@prod+1)^0,f,c
 10934  000C12  223D               	addwfc	(___flmul@prod+2)^0,f,c
 10935  000C14  223E               	addwfc	(___flmul@prod+3)^0,f,c
 10936  000C16  502C               	movf	___flmul@a^0,w,c
 10937  000C18  022A               	mulwf	(___flmul@b+2)^0,c
 10938  000C1A  CFF3 F03F          	movff	prodl,___flmul@temp
 10939  000C1E  CFF4 F040          	movff	prodh,___flmul@temp+1
 10940  000C22  503F               	movf	___flmul@temp^0,w,c
 10941  000C24  2635               	addwf	___flmul@grs^0,f,c
 10942  000C26  0E00               	movlw	0
 10943  000C28  2236               	addwfc	(___flmul@grs+1)^0,f,c
 10944  000C2A  2237               	addwfc	(___flmul@grs+2)^0,f,c
 10945  000C2C  2238               	addwfc	(___flmul@grs+3)^0,f,c
 10946  000C2E  5040               	movf	(___flmul@temp+1)^0,w,c
 10947  000C30  263B               	addwf	___flmul@prod^0,f,c
 10948  000C32  0E00               	movlw	0
 10949  000C34  223C               	addwfc	(___flmul@prod+1)^0,f,c
 10950  000C36  223D               	addwfc	(___flmul@prod+2)^0,f,c
 10951  000C38  223E               	addwfc	(___flmul@prod+3)^0,f,c
 10952  000C3A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 10953  000C3E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 10954  000C42  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 10955  000C46  6A35               	clrf	___flmul@grs^0,c
 10956  000C48  502C               	movf	___flmul@a^0,w,c
 10957  000C4A  0229               	mulwf	(___flmul@b+1)^0,c
 10958  000C4C  CFF3 F03F          	movff	prodl,___flmul@temp
 10959  000C50  CFF4 F040          	movff	prodh,___flmul@temp+1
 10960  000C54  503F               	movf	___flmul@temp^0,w,c
 10961  000C56  2635               	addwf	___flmul@grs^0,f,c
 10962  000C58  5040               	movf	(___flmul@temp+1)^0,w,c
 10963  000C5A  2236               	addwfc	(___flmul@grs+1)^0,f,c
 10964  000C5C  0E00               	movlw	0
 10965  000C5E  2237               	addwfc	(___flmul@grs+2)^0,f,c
 10966  000C60  0E00               	movlw	0
 10967  000C62  2238               	addwfc	(___flmul@grs+3)^0,f,c
 10968  000C64  502D               	movf	(___flmul@a+1)^0,w,c
 10969  000C66  0228               	mulwf	___flmul@b^0,c
 10970  000C68  CFF3 F03F          	movff	prodl,___flmul@temp
 10971  000C6C  CFF4 F040          	movff	prodh,___flmul@temp+1
 10972  000C70  503F               	movf	___flmul@temp^0,w,c
 10973  000C72  2635               	addwf	___flmul@grs^0,f,c
 10974  000C74  5040               	movf	(___flmul@temp+1)^0,w,c
 10975  000C76  2236               	addwfc	(___flmul@grs+1)^0,f,c
 10976  000C78  0E00               	movlw	0
 10977  000C7A  2237               	addwfc	(___flmul@grs+2)^0,f,c
 10978  000C7C  0E00               	movlw	0
 10979  000C7E  2238               	addwfc	(___flmul@grs+3)^0,f,c
 10980  000C80  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 10981  000C84  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 10982  000C88  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 10983  000C8C  6A35               	clrf	___flmul@grs^0,c
 10984  000C8E  502C               	movf	___flmul@a^0,w,c
 10985  000C90  0228               	mulwf	___flmul@b^0,c
 10986  000C92  CFF3 F03F          	movff	prodl,___flmul@temp
 10987  000C96  CFF4 F040          	movff	prodh,___flmul@temp+1
 10988  000C9A  503F               	movf	___flmul@temp^0,w,c
 10989  000C9C  2635               	addwf	___flmul@grs^0,f,c
 10990  000C9E  5040               	movf	(___flmul@temp+1)^0,w,c
 10991  000CA0  2236               	addwfc	(___flmul@grs+1)^0,f,c
 10992  000CA2  0E00               	movlw	0
 10993  000CA4  2237               	addwfc	(___flmul@grs+2)^0,f,c
 10994  000CA6  0E00               	movlw	0
 10995  000CA8  2238               	addwfc	(___flmul@grs+3)^0,f,c
 10996  000CAA  502E               	movf	(___flmul@a+2)^0,w,c
 10997  000CAC  0229               	mulwf	(___flmul@b+1)^0,c
 10998  000CAE  CFF3 F03F          	movff	prodl,___flmul@temp
 10999  000CB2  CFF4 F040          	movff	prodh,___flmul@temp+1
 11000  000CB6  503F               	movf	___flmul@temp^0,w,c
 11001  000CB8  263B               	addwf	___flmul@prod^0,f,c
 11002  000CBA  5040               	movf	(___flmul@temp+1)^0,w,c
 11003  000CBC  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11004  000CBE  0E00               	movlw	0
 11005  000CC0  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11006  000CC2  0E00               	movlw	0
 11007  000CC4  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11008  000CC6  502D               	movf	(___flmul@a+1)^0,w,c
 11009  000CC8  022A               	mulwf	(___flmul@b+2)^0,c
 11010  000CCA  CFF3 F03F          	movff	prodl,___flmul@temp
 11011  000CCE  CFF4 F040          	movff	prodh,___flmul@temp+1
 11012  000CD2  503F               	movf	___flmul@temp^0,w,c
 11013  000CD4  263B               	addwf	___flmul@prod^0,f,c
 11014  000CD6  5040               	movf	(___flmul@temp+1)^0,w,c
 11015  000CD8  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11016  000CDA  0E00               	movlw	0
 11017  000CDC  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11018  000CDE  0E00               	movlw	0
 11019  000CE0  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11020  000CE2  502E               	movf	(___flmul@a+2)^0,w,c
 11021  000CE4  022A               	mulwf	(___flmul@b+2)^0,c
 11022  000CE6  CFF3 F03F          	movff	prodl,___flmul@temp
 11023  000CEA  CFF4 F040          	movff	prodh,___flmul@temp+1
 11024  000CEE  503F               	movf	___flmul@temp^0,w,c
 11025  000CF0  6E30               	movwf	??___flmul^0,c
 11026  000CF2  5040               	movf	(___flmul@temp+1)^0,w,c
 11027  000CF4  6E31               	movwf	(??___flmul+1)^0,c
 11028  000CF6  6A32               	clrf	(??___flmul+2)^0,c
 11029  000CF8  6A33               	clrf	(??___flmul+3)^0,c
 11030  000CFA  C032  F033         	movff	??___flmul+2,??___flmul+3
 11031  000CFE  C031  F032         	movff	??___flmul+1,??___flmul+2
 11032  000D02  C030  F031         	movff	??___flmul,??___flmul+1
 11033  000D06  6A30               	clrf	??___flmul^0,c
 11034  000D08  5030               	movf	??___flmul^0,w,c
 11035  000D0A  263B               	addwf	___flmul@prod^0,f,c
 11036  000D0C  5031               	movf	(??___flmul+1)^0,w,c
 11037  000D0E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11038  000D10  5032               	movf	(??___flmul+2)^0,w,c
 11039  000D12  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11040  000D14  5033               	movf	(??___flmul+3)^0,w,c
 11041  000D16  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11042  000D18  C035  F030         	movff	___flmul@grs,??___flmul
 11043  000D1C  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11044  000D20  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11045  000D24  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11046  000D28  0E19               	movlw	25
 11047  000D2A  EF9C  F006         	goto	u4040
 11048  000D2E                     u4045:
 11049  000D2E  90D8               	bcf	status,0,c
 11050  000D30  3233               	rrcf	(??___flmul+3)^0,f,c
 11051  000D32  3232               	rrcf	(??___flmul+2)^0,f,c
 11052  000D34  3231               	rrcf	(??___flmul+1)^0,f,c
 11053  000D36  3230               	rrcf	??___flmul^0,f,c
 11054  000D38                     u4040:
 11055  000D38  2EE8               	decfsz	wreg,f,c
 11056  000D3A  EF97  F006         	goto	u4045
 11057  000D3E  5030               	movf	??___flmul^0,w,c
 11058  000D40  263B               	addwf	___flmul@prod^0,f,c
 11059  000D42  5031               	movf	(??___flmul+1)^0,w,c
 11060  000D44  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11061  000D46  5032               	movf	(??___flmul+2)^0,w,c
 11062  000D48  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11063  000D4A  5033               	movf	(??___flmul+3)^0,w,c
 11064  000D4C  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11065  000D4E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11066  000D52  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11067  000D56  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11068  000D5A  6A35               	clrf	___flmul@grs^0,c
 11069  000D5C  5039               	movf	___flmul@aexp^0,w,c
 11070  000D5E  C03A  F030         	movff	___flmul@bexp,??___flmul
 11071  000D62  6A31               	clrf	(??___flmul+1)^0,c
 11072  000D64  2630               	addwf	??___flmul^0,f,c
 11073  000D66  0E00               	movlw	0
 11074  000D68  2231               	addwfc	(??___flmul+1)^0,f,c
 11075  000D6A  0E82               	movlw	130
 11076  000D6C  2430               	addwf	??___flmul^0,w,c
 11077  000D6E  6E3F               	movwf	___flmul@temp^0,c
 11078  000D70  0EFF               	movlw	255
 11079  000D72  2031               	addwfc	(??___flmul+1)^0,w,c
 11080  000D74  6E40               	movwf	(___flmul@temp+1)^0,c
 11081  000D76  EFD2  F006         	goto	l4731
 11082  000D7A                     l4725:
 11083  000D7A  90D8               	bcf	status,0,c
 11084  000D7C  363B               	rlcf	___flmul@prod^0,f,c
 11085  000D7E  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11086  000D80  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11087  000D82  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11088  000D84  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11089  000D86  EFC7  F006         	goto	u4051
 11090  000D8A  EFC9  F006         	goto	u4050
 11091  000D8E                     u4051:
 11092  000D8E  EFCA  F006         	goto	l1215
 11093  000D92                     u4050:
 11094  000D92  803B               	bsf	___flmul@prod^0,0,c
 11095  000D94                     l1215:
 11096  000D94  90D8               	bcf	status,0,c
 11097  000D96  3635               	rlcf	___flmul@grs^0,f,c
 11098  000D98  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11099  000D9A  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11100  000D9C  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11101  000D9E  063F               	decf	___flmul@temp^0,f,c
 11102  000DA0  A0D8               	btfss	status,0,c
 11103  000DA2  0640               	decf	(___flmul@temp+1)^0,f,c
 11104  000DA4                     l4731:
 11105  000DA4  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11106  000DA6  EFD7  F006         	goto	u4061
 11107  000DAA  EFD9  F006         	goto	u4060
 11108  000DAE                     u4061:
 11109  000DAE  EFBD  F006         	goto	l4725
 11110  000DB2                     u4060:
 11111  000DB2  0E00               	movlw	0
 11112  000DB4  6E39               	movwf	___flmul@aexp^0,c
 11113  000DB6  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11114  000DB8  EFE0  F006         	goto	u4071
 11115  000DBC  EFE2  F006         	goto	u4070
 11116  000DC0                     u4071:
 11117  000DC0  EF06  F007         	goto	l1217
 11118  000DC4                     u4070:
 11119  000DC4  0EFF               	movlw	255
 11120  000DC6  1435               	andwf	___flmul@grs^0,w,c
 11121  000DC8  6E30               	movwf	??___flmul^0,c
 11122  000DCA  0EFF               	movlw	255
 11123  000DCC  1436               	andwf	(___flmul@grs+1)^0,w,c
 11124  000DCE  6E31               	movwf	(??___flmul+1)^0,c
 11125  000DD0  0EFF               	movlw	255
 11126  000DD2  1437               	andwf	(___flmul@grs+2)^0,w,c
 11127  000DD4  6E32               	movwf	(??___flmul+2)^0,c
 11128  000DD6  0E7F               	movlw	127
 11129  000DD8  1438               	andwf	(___flmul@grs+3)^0,w,c
 11130  000DDA  6E33               	movwf	(??___flmul+3)^0,c
 11131  000DDC  5030               	movf	??___flmul^0,w,c
 11132  000DDE  1031               	iorwf	(??___flmul+1)^0,w,c
 11133  000DE0  1032               	iorwf	(??___flmul+2)^0,w,c
 11134  000DE2  1033               	iorwf	(??___flmul+3)^0,w,c
 11135  000DE4  B4D8               	btfsc	status,2,c
 11136  000DE6  EFF7  F006         	goto	u4081
 11137  000DEA  EFF9  F006         	goto	u4080
 11138  000DEE                     u4081:
 11139  000DEE  EFFD  F006         	goto	l1218
 11140  000DF2                     u4080:
 11141  000DF2                     l4739:
 11142  000DF2  0E01               	movlw	1
 11143  000DF4  6E39               	movwf	___flmul@aexp^0,c
 11144  000DF6  EF06  F007         	goto	l1217
 11145  000DFA                     l1218:
 11146  000DFA  A03B               	btfss	___flmul@prod^0,0,c
 11147  000DFC  EF02  F007         	goto	u4091
 11148  000E00  EF04  F007         	goto	u4090
 11149  000E04                     u4091:
 11150  000E04  EF06  F007         	goto	l1217
 11151  000E08                     u4090:
 11152  000E08  EFF9  F006         	goto	l4739
 11153  000E0C                     l1217:
 11154  000E0C  5039               	movf	___flmul@aexp^0,w,c
 11155  000E0E  B4D8               	btfsc	status,2,c
 11156  000E10  EF0C  F007         	goto	u4101
 11157  000E14  EF0E  F007         	goto	u4100
 11158  000E18                     u4101:
 11159  000E18  EF32  F007         	goto	l4751
 11160  000E1C                     u4100:
 11161  000E1C  0E01               	movlw	1
 11162  000E1E  263B               	addwf	___flmul@prod^0,f,c
 11163  000E20  0E00               	movlw	0
 11164  000E22  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11165  000E24  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11166  000E26  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11167  000E28  A03E               	btfss	(___flmul@prod+3)^0,0,c
 11168  000E2A  EF19  F007         	goto	u4111
 11169  000E2E  EF1B  F007         	goto	u4110
 11170  000E32                     u4111:
 11171  000E32  EF32  F007         	goto	l4751
 11172  000E36                     u4110:
 11173  000E36  C03B  F030         	movff	___flmul@prod,??___flmul
 11174  000E3A  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 11175  000E3E  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 11176  000E42  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 11177  000E46  3433               	rlcf	(??___flmul+3)^0,w,c
 11178  000E48  3233               	rrcf	(??___flmul+3)^0,f,c
 11179  000E4A  3232               	rrcf	(??___flmul+2)^0,f,c
 11180  000E4C  3231               	rrcf	(??___flmul+1)^0,f,c
 11181  000E4E  3230               	rrcf	??___flmul^0,f,c
 11182  000E50  C030  F03B         	movff	??___flmul,___flmul@prod
 11183  000E54  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 11184  000E58  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 11185  000E5C  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 11186  000E60  4A3F               	infsnz	___flmul@temp^0,f,c
 11187  000E62  2A40               	incf	(___flmul@temp+1)^0,f,c
 11188  000E64                     l4751:
 11189  000E64  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11190  000E66  EF3D  F007         	goto	u4121
 11191  000E6A  5040               	movf	(___flmul@temp+1)^0,w,c
 11192  000E6C  E108               	bnz	u4120
 11193  000E6E  283F               	incf	___flmul@temp^0,w,c
 11194  000E70  A0D8               	btfss	status,0,c
 11195  000E72  EF3D  F007         	goto	u4121
 11196  000E76  EF3F  F007         	goto	u4120
 11197  000E7A                     u4121:
 11198  000E7A  EF49  F007         	goto	l4755
 11199  000E7E                     u4120:
 11200  000E7E  0E00               	movlw	0
 11201  000E80  6E3B               	movwf	___flmul@prod^0,c
 11202  000E82  0E00               	movlw	0
 11203  000E84  6E3C               	movwf	(___flmul@prod+1)^0,c
 11204  000E86  0E80               	movlw	128
 11205  000E88  6E3D               	movwf	(___flmul@prod+2)^0,c
 11206  000E8A  0E7F               	movlw	127
 11207  000E8C  6E3E               	movwf	(___flmul@prod+3)^0,c
 11208  000E8E  EF77  F007         	goto	l4767
 11209  000E92                     l4755:
 11210  000E92  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11211  000E94  EF56  F007         	goto	u4130
 11212  000E98  5040               	movf	(___flmul@temp+1)^0,w,c
 11213  000E9A  E106               	bnz	u4131
 11214  000E9C  043F               	decf	___flmul@temp^0,w,c
 11215  000E9E  B0D8               	btfsc	status,0,c
 11216  000EA0  EF54  F007         	goto	u4131
 11217  000EA4  EF56  F007         	goto	u4130
 11218  000EA8                     u4131:
 11219  000EA8  EF62  F007         	goto	l1225
 11220  000EAC                     u4130:
 11221  000EAC  0E00               	movlw	0
 11222  000EAE  6E3B               	movwf	___flmul@prod^0,c
 11223  000EB0  0E00               	movlw	0
 11224  000EB2  6E3C               	movwf	(___flmul@prod+1)^0,c
 11225  000EB4  0E00               	movlw	0
 11226  000EB6  6E3D               	movwf	(___flmul@prod+2)^0,c
 11227  000EB8  0E00               	movlw	0
 11228  000EBA  6E3E               	movwf	(___flmul@prod+3)^0,c
 11229  000EBC  0E00               	movlw	0
 11230  000EBE  6E34               	movwf	___flmul@sign^0,c
 11231  000EC0  EF77  F007         	goto	l4767
 11232  000EC4                     l1225:
 11233  000EC4  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 11234  000EC8  0EFF               	movlw	255
 11235  000ECA  163B               	andwf	___flmul@prod^0,f,c
 11236  000ECC  0EFF               	movlw	255
 11237  000ECE  163C               	andwf	(___flmul@prod+1)^0,f,c
 11238  000ED0  0E7F               	movlw	127
 11239  000ED2  163D               	andwf	(___flmul@prod+2)^0,f,c
 11240  000ED4  0E00               	movlw	0
 11241  000ED6  163E               	andwf	(___flmul@prod+3)^0,f,c
 11242  000ED8  A03A               	btfss	___flmul@bexp^0,0,c
 11243  000EDA  EF71  F007         	goto	u4141
 11244  000EDE  EF73  F007         	goto	u4140
 11245  000EE2                     u4141:
 11246  000EE2  EF74  F007         	goto	l4765
 11247  000EE6                     u4140:
 11248  000EE6  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 11249  000EE8                     l4765:
 11250  000EE8  90D8               	bcf	status,0,c
 11251  000EEA  303A               	rrcf	___flmul@bexp^0,w,c
 11252  000EEC  6E3E               	movwf	(___flmul@prod+3)^0,c
 11253  000EEE                     l4767:
 11254  000EEE  5034               	movf	___flmul@sign^0,w,c
 11255  000EF0  123E               	iorwf	(___flmul@prod+3)^0,f,c
 11256  000EF2  C03B  F028         	movff	___flmul@prod,?___flmul
 11257  000EF6  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 11258  000EFA  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 11259  000EFE  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 11260  000F02                     l1212:
 11261  000F02  0012               	return		;funcret
 11262  000F04                     __end_of___flmul:
 11263                           	opt callstack 0
 11264                           
 11265 ;; *************** function ___fldiv *****************
 11266 ;; Defined at:
 11267 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;  b               4   14[COMRAM] unsigned char 
 11270 ;;  a               4   18[COMRAM] unsigned char 
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;  grs             4   33[COMRAM] unsigned long 
 11273 ;;  rem             4   26[COMRAM] unsigned long 
 11274 ;;  new_exp         2   31[COMRAM] short 
 11275 ;;  aexp            1   38[COMRAM] unsigned char 
 11276 ;;  bexp            1   37[COMRAM] unsigned char 
 11277 ;;  sign            1   30[COMRAM] unsigned char 
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  4   14[COMRAM] unsigned char 
 11280 ;; Registers used:
 11281 ;;		wreg, status,2, status,0
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11287 ;;      Params:         8       0       0       0       0       0       0       0       0
 11288 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11289 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11290 ;;      Totals:        25       0       0       0       0       0       0       0       0
 11291 ;;Total ram usage:       25 bytes
 11292 ;; Hardware stack levels used:    1
 11293 ;; Hardware stack levels required when called:    1
 11294 ;; This function calls:
 11295 ;;		Nothing
 11296 ;; This function is called by:
 11297 ;;		_bh1750_leer
 11298 ;;		_pwmDuty
 11299 ;; This function uses a non-reentrant model
 11300 ;;
 11301                           
 11302                           	psect	text56
 11303  000F04                     __ptext56:
 11304                           	opt callstack 0
 11305  000F04                     ___fldiv:
 11306                           	opt callstack 25
 11307  000F04  5012               	movf	(___fldiv@b+3)^0,w,c
 11308  000F06  0B80               	andlw	128
 11309  000F08  6E1F               	movwf	___fldiv@sign^0,c
 11310  000F0A  5012               	movf	(___fldiv@b+3)^0,w,c
 11311  000F0C  2412               	addwf	(___fldiv@b+3)^0,w,c
 11312  000F0E  6E26               	movwf	___fldiv@bexp^0,c
 11313  000F10  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11314  000F12  EF8D  F007         	goto	u3141
 11315  000F16  EF8F  F007         	goto	u3140
 11316  000F1A                     u3141:
 11317  000F1A  EF90  F007         	goto	l3923
 11318  000F1E                     u3140:
 11319  000F1E  8026               	bsf	___fldiv@bexp^0,0,c
 11320  000F20                     l3923:
 11321  000F20  5026               	movf	___fldiv@bexp^0,w,c
 11322  000F22  B4D8               	btfsc	status,2,c
 11323  000F24  EF96  F007         	goto	u3151
 11324  000F28  EF98  F007         	goto	u3150
 11325  000F2C                     u3151:
 11326  000F2C  EFAD  F007         	goto	l3933
 11327  000F30                     u3150:
 11328  000F30  2826               	incf	___fldiv@bexp^0,w,c
 11329  000F32  A4D8               	btfss	status,2,c
 11330  000F34  EF9E  F007         	goto	u3161
 11331  000F38  EFA0  F007         	goto	u3160
 11332  000F3C                     u3161:
 11333  000F3C  EFA8  F007         	goto	l3929
 11334  000F40                     u3160:
 11335  000F40  0E00               	movlw	0
 11336  000F42  6E0F               	movwf	___fldiv@b^0,c
 11337  000F44  0E00               	movlw	0
 11338  000F46  6E10               	movwf	(___fldiv@b+1)^0,c
 11339  000F48  0E00               	movlw	0
 11340  000F4A  6E11               	movwf	(___fldiv@b+2)^0,c
 11341  000F4C  0E00               	movlw	0
 11342  000F4E  6E12               	movwf	(___fldiv@b+3)^0,c
 11343  000F50                     l3929:
 11344  000F50  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11345  000F52  0E00               	movlw	0
 11346  000F54  6E12               	movwf	(___fldiv@b+3)^0,c
 11347  000F56  EFB5  F007         	goto	l3935
 11348  000F5A                     l3933:
 11349  000F5A  0E00               	movlw	0
 11350  000F5C  6E0F               	movwf	___fldiv@b^0,c
 11351  000F5E  0E00               	movlw	0
 11352  000F60  6E10               	movwf	(___fldiv@b+1)^0,c
 11353  000F62  0E00               	movlw	0
 11354  000F64  6E11               	movwf	(___fldiv@b+2)^0,c
 11355  000F66  0E00               	movlw	0
 11356  000F68  6E12               	movwf	(___fldiv@b+3)^0,c
 11357  000F6A                     l3935:
 11358  000F6A  5016               	movf	(___fldiv@a+3)^0,w,c
 11359  000F6C  0B80               	andlw	128
 11360  000F6E  1A1F               	xorwf	___fldiv@sign^0,f,c
 11361  000F70  5016               	movf	(___fldiv@a+3)^0,w,c
 11362  000F72  2416               	addwf	(___fldiv@a+3)^0,w,c
 11363  000F74  6E27               	movwf	___fldiv@aexp^0,c
 11364  000F76  AE15               	btfss	(___fldiv@a+2)^0,7,c
 11365  000F78  EFC0  F007         	goto	u3171
 11366  000F7C  EFC2  F007         	goto	u3170
 11367  000F80                     u3171:
 11368  000F80  EFC3  F007         	goto	l3943
 11369  000F84                     u3170:
 11370  000F84  8027               	bsf	___fldiv@aexp^0,0,c
 11371  000F86                     l3943:
 11372  000F86  5027               	movf	___fldiv@aexp^0,w,c
 11373  000F88  B4D8               	btfsc	status,2,c
 11374  000F8A  EFC9  F007         	goto	u3181
 11375  000F8E  EFCB  F007         	goto	u3180
 11376  000F92                     u3181:
 11377  000F92  EFE0  F007         	goto	l3953
 11378  000F96                     u3180:
 11379  000F96  2827               	incf	___fldiv@aexp^0,w,c
 11380  000F98  A4D8               	btfss	status,2,c
 11381  000F9A  EFD1  F007         	goto	u3191
 11382  000F9E  EFD3  F007         	goto	u3190
 11383  000FA2                     u3191:
 11384  000FA2  EFDB  F007         	goto	l3949
 11385  000FA6                     u3190:
 11386  000FA6  0E00               	movlw	0
 11387  000FA8  6E13               	movwf	___fldiv@a^0,c
 11388  000FAA  0E00               	movlw	0
 11389  000FAC  6E14               	movwf	(___fldiv@a+1)^0,c
 11390  000FAE  0E00               	movlw	0
 11391  000FB0  6E15               	movwf	(___fldiv@a+2)^0,c
 11392  000FB2  0E00               	movlw	0
 11393  000FB4  6E16               	movwf	(___fldiv@a+3)^0,c
 11394  000FB6                     l3949:
 11395  000FB6  8E15               	bsf	(___fldiv@a+2)^0,7,c
 11396  000FB8  0E00               	movlw	0
 11397  000FBA  6E16               	movwf	(___fldiv@a+3)^0,c
 11398  000FBC  EFE8  F007         	goto	l3955
 11399  000FC0                     l3953:
 11400  000FC0  0E00               	movlw	0
 11401  000FC2  6E13               	movwf	___fldiv@a^0,c
 11402  000FC4  0E00               	movlw	0
 11403  000FC6  6E14               	movwf	(___fldiv@a+1)^0,c
 11404  000FC8  0E00               	movlw	0
 11405  000FCA  6E15               	movwf	(___fldiv@a+2)^0,c
 11406  000FCC  0E00               	movlw	0
 11407  000FCE  6E16               	movwf	(___fldiv@a+3)^0,c
 11408  000FD0                     l3955:
 11409  000FD0  5013               	movf	___fldiv@a^0,w,c
 11410  000FD2  1014               	iorwf	(___fldiv@a+1)^0,w,c
 11411  000FD4  1015               	iorwf	(___fldiv@a+2)^0,w,c
 11412  000FD6  1016               	iorwf	(___fldiv@a+3)^0,w,c
 11413  000FD8  A4D8               	btfss	status,2,c
 11414  000FDA  EFF1  F007         	goto	u3201
 11415  000FDE  EFF3  F007         	goto	u3200
 11416  000FE2                     u3201:
 11417  000FE2  EF0B  F008         	goto	l3967
 11418  000FE6                     u3200:
 11419  000FE6  0E00               	movlw	0
 11420  000FE8  6E0F               	movwf	___fldiv@b^0,c
 11421  000FEA  0E00               	movlw	0
 11422  000FEC  6E10               	movwf	(___fldiv@b+1)^0,c
 11423  000FEE  0E00               	movlw	0
 11424  000FF0  6E11               	movwf	(___fldiv@b+2)^0,c
 11425  000FF2  0E00               	movlw	0
 11426  000FF4  6E12               	movwf	(___fldiv@b+3)^0,c
 11427  000FF6  0E80               	movlw	128
 11428  000FF8  1211               	iorwf	(___fldiv@b+2)^0,f,c
 11429  000FFA  0E7F               	movlw	127
 11430  000FFC  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11431  000FFE                     l3961:
 11432  000FFE  501F               	movf	___fldiv@sign^0,w,c
 11433  001000  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11434  001002  C00F  F00F         	movff	___fldiv@b,?___fldiv
 11435  001006  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 11436  00100A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 11437  00100E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 11438  001012  EF4E  F009         	goto	l1176
 11439  001016                     l3967:
 11440  001016  5026               	movf	___fldiv@bexp^0,w,c
 11441  001018  A4D8               	btfss	status,2,c
 11442  00101A  EF11  F008         	goto	u3211
 11443  00101E  EF13  F008         	goto	u3210
 11444  001022                     u3211:
 11445  001022  EF1D  F008         	goto	l3975
 11446  001026                     u3210:
 11447  001026  0E00               	movlw	0
 11448  001028  6E0F               	movwf	?___fldiv^0,c
 11449  00102A  0E00               	movlw	0
 11450  00102C  6E10               	movwf	(?___fldiv+1)^0,c
 11451  00102E  0E00               	movlw	0
 11452  001030  6E11               	movwf	(?___fldiv+2)^0,c
 11453  001032  0E00               	movlw	0
 11454  001034  6E12               	movwf	(?___fldiv+3)^0,c
 11455  001036  EF4E  F009         	goto	l1176
 11456  00103A                     l3975:
 11457  00103A  5027               	movf	___fldiv@aexp^0,w,c
 11458  00103C  C026  F017         	movff	___fldiv@bexp,??___fldiv
 11459  001040  6A18               	clrf	(??___fldiv+1)^0,c
 11460  001042  5E17               	subwf	??___fldiv^0,f,c
 11461  001044  0E00               	movlw	0
 11462  001046  5A18               	subwfb	(??___fldiv+1)^0,f,c
 11463  001048  0E7F               	movlw	127
 11464  00104A  2417               	addwf	??___fldiv^0,w,c
 11465  00104C  6E20               	movwf	___fldiv@new_exp^0,c
 11466  00104E  0E00               	movlw	0
 11467  001050  2018               	addwfc	(??___fldiv+1)^0,w,c
 11468  001052  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11469  001054  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 11470  001058  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 11471  00105C  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 11472  001060  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 11473  001064  0E00               	movlw	0
 11474  001066  6E0F               	movwf	___fldiv@b^0,c
 11475  001068  0E00               	movlw	0
 11476  00106A  6E10               	movwf	(___fldiv@b+1)^0,c
 11477  00106C  0E00               	movlw	0
 11478  00106E  6E11               	movwf	(___fldiv@b+2)^0,c
 11479  001070  0E00               	movlw	0
 11480  001072  6E12               	movwf	(___fldiv@b+3)^0,c
 11481  001074  0E00               	movlw	0
 11482  001076  6E22               	movwf	___fldiv@grs^0,c
 11483  001078  0E00               	movlw	0
 11484  00107A  6E23               	movwf	(___fldiv@grs+1)^0,c
 11485  00107C  0E00               	movlw	0
 11486  00107E  6E24               	movwf	(___fldiv@grs+2)^0,c
 11487  001080  0E00               	movlw	0
 11488  001082  6E25               	movwf	(___fldiv@grs+3)^0,c
 11489  001084  0E00               	movlw	0
 11490  001086  6E27               	movwf	___fldiv@aexp^0,c
 11491  001088  EF7E  F008         	goto	l1178
 11492  00108C                     l3985:
 11493  00108C  5027               	movf	___fldiv@aexp^0,w,c
 11494  00108E  B4D8               	btfsc	status,2,c
 11495  001090  EF4C  F008         	goto	u3221
 11496  001094  EF4E  F008         	goto	u3220
 11497  001098                     u3221:
 11498  001098  EF65  F008         	goto	l3993
 11499  00109C                     u3220:
 11500  00109C  90D8               	bcf	status,0,c
 11501  00109E  361B               	rlcf	___fldiv@rem^0,f,c
 11502  0010A0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 11503  0010A2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 11504  0010A4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 11505  0010A6  90D8               	bcf	status,0,c
 11506  0010A8  360F               	rlcf	___fldiv@b^0,f,c
 11507  0010AA  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11508  0010AC  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11509  0010AE  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11510  0010B0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11511  0010B2  EF5D  F008         	goto	u3231
 11512  0010B6  EF5F  F008         	goto	u3230
 11513  0010BA                     u3231:
 11514  0010BA  EF60  F008         	goto	l1181
 11515  0010BE                     u3230:
 11516  0010BE  800F               	bsf	___fldiv@b^0,0,c
 11517  0010C0                     l1181:
 11518  0010C0  90D8               	bcf	status,0,c
 11519  0010C2  3622               	rlcf	___fldiv@grs^0,f,c
 11520  0010C4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11521  0010C6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11522  0010C8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11523  0010CA                     l3993:
 11524  0010CA  5013               	movf	___fldiv@a^0,w,c
 11525  0010CC  5C1B               	subwf	___fldiv@rem^0,w,c
 11526  0010CE  5014               	movf	(___fldiv@a+1)^0,w,c
 11527  0010D0  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 11528  0010D2  5015               	movf	(___fldiv@a+2)^0,w,c
 11529  0010D4  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 11530  0010D6  5016               	movf	(___fldiv@a+3)^0,w,c
 11531  0010D8  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 11532  0010DA  A0D8               	btfss	status,0,c
 11533  0010DC  EF72  F008         	goto	u3241
 11534  0010E0  EF74  F008         	goto	u3240
 11535  0010E4                     u3241:
 11536  0010E4  EF7D  F008         	goto	l3999
 11537  0010E8                     u3240:
 11538  0010E8  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 11539  0010EA  5013               	movf	___fldiv@a^0,w,c
 11540  0010EC  5E1B               	subwf	___fldiv@rem^0,f,c
 11541  0010EE  5014               	movf	(___fldiv@a+1)^0,w,c
 11542  0010F0  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 11543  0010F2  5015               	movf	(___fldiv@a+2)^0,w,c
 11544  0010F4  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 11545  0010F6  5016               	movf	(___fldiv@a+3)^0,w,c
 11546  0010F8  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 11547  0010FA                     l3999:
 11548  0010FA  2A27               	incf	___fldiv@aexp^0,f,c
 11549  0010FC                     l1178:
 11550  0010FC  0E19               	movlw	25
 11551  0010FE  6427               	cpfsgt	___fldiv@aexp^0,c
 11552  001100  EF84  F008         	goto	u3251
 11553  001104  EF86  F008         	goto	u3250
 11554  001108                     u3251:
 11555  001108  EF46  F008         	goto	l3985
 11556  00110C                     u3250:
 11557  00110C  501B               	movf	___fldiv@rem^0,w,c
 11558  00110E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 11559  001110  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 11560  001112  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 11561  001114  B4D8               	btfsc	status,2,c
 11562  001116  EF8F  F008         	goto	u3261
 11563  00111A  EF91  F008         	goto	u3260
 11564  00111E                     u3261:
 11565  00111E  EFA9  F008         	goto	l4011
 11566  001122                     u3260:
 11567  001122  8022               	bsf	___fldiv@grs^0,0,c
 11568  001124  EFA9  F008         	goto	l4011
 11569  001128                     l4005:
 11570  001128  90D8               	bcf	status,0,c
 11571  00112A  360F               	rlcf	___fldiv@b^0,f,c
 11572  00112C  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11573  00112E  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11574  001130  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11575  001132  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11576  001134  EF9E  F008         	goto	u3271
 11577  001138  EFA0  F008         	goto	u3270
 11578  00113C                     u3271:
 11579  00113C  EFA1  F008         	goto	l1187
 11580  001140                     u3270:
 11581  001140  800F               	bsf	___fldiv@b^0,0,c
 11582  001142                     l1187:
 11583  001142  90D8               	bcf	status,0,c
 11584  001144  3622               	rlcf	___fldiv@grs^0,f,c
 11585  001146  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11586  001148  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11587  00114A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11588  00114C  0620               	decf	___fldiv@new_exp^0,f,c
 11589  00114E  A0D8               	btfss	status,0,c
 11590  001150  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 11591  001152                     l4011:
 11592  001152  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11593  001154  EFAE  F008         	goto	u3281
 11594  001158  EFB0  F008         	goto	u3280
 11595  00115C                     u3281:
 11596  00115C  EF94  F008         	goto	l4005
 11597  001160                     u3280:
 11598  001160  0E00               	movlw	0
 11599  001162  6E27               	movwf	___fldiv@aexp^0,c
 11600  001164  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11601  001166  EFB7  F008         	goto	u3291
 11602  00116A  EFB9  F008         	goto	u3290
 11603  00116E                     u3291:
 11604  00116E  EFDD  F008         	goto	l1189
 11605  001172                     u3290:
 11606  001172  0EFF               	movlw	255
 11607  001174  1422               	andwf	___fldiv@grs^0,w,c
 11608  001176  6E17               	movwf	??___fldiv^0,c
 11609  001178  0EFF               	movlw	255
 11610  00117A  1423               	andwf	(___fldiv@grs+1)^0,w,c
 11611  00117C  6E18               	movwf	(??___fldiv+1)^0,c
 11612  00117E  0EFF               	movlw	255
 11613  001180  1424               	andwf	(___fldiv@grs+2)^0,w,c
 11614  001182  6E19               	movwf	(??___fldiv+2)^0,c
 11615  001184  0E7F               	movlw	127
 11616  001186  1425               	andwf	(___fldiv@grs+3)^0,w,c
 11617  001188  6E1A               	movwf	(??___fldiv+3)^0,c
 11618  00118A  5017               	movf	??___fldiv^0,w,c
 11619  00118C  1018               	iorwf	(??___fldiv+1)^0,w,c
 11620  00118E  1019               	iorwf	(??___fldiv+2)^0,w,c
 11621  001190  101A               	iorwf	(??___fldiv+3)^0,w,c
 11622  001192  B4D8               	btfsc	status,2,c
 11623  001194  EFCE  F008         	goto	u3301
 11624  001198  EFD0  F008         	goto	u3300
 11625  00119C                     u3301:
 11626  00119C  EFD4  F008         	goto	l1190
 11627  0011A0                     u3300:
 11628  0011A0                     l4019:
 11629  0011A0  0E01               	movlw	1
 11630  0011A2  6E27               	movwf	___fldiv@aexp^0,c
 11631  0011A4  EFDD  F008         	goto	l1189
 11632  0011A8                     l1190:
 11633  0011A8  A00F               	btfss	___fldiv@b^0,0,c
 11634  0011AA  EFD9  F008         	goto	u3311
 11635  0011AE  EFDB  F008         	goto	u3310
 11636  0011B2                     u3311:
 11637  0011B2  EFDD  F008         	goto	l1189
 11638  0011B6                     u3310:
 11639  0011B6  EFD0  F008         	goto	l4019
 11640  0011BA                     l1189:
 11641  0011BA  5027               	movf	___fldiv@aexp^0,w,c
 11642  0011BC  B4D8               	btfsc	status,2,c
 11643  0011BE  EFE3  F008         	goto	u3321
 11644  0011C2  EFE5  F008         	goto	u3320
 11645  0011C6                     u3321:
 11646  0011C6  EF09  F009         	goto	l4031
 11647  0011CA                     u3320:
 11648  0011CA  0E01               	movlw	1
 11649  0011CC  260F               	addwf	___fldiv@b^0,f,c
 11650  0011CE  0E00               	movlw	0
 11651  0011D0  2210               	addwfc	(___fldiv@b+1)^0,f,c
 11652  0011D2  2211               	addwfc	(___fldiv@b+2)^0,f,c
 11653  0011D4  2212               	addwfc	(___fldiv@b+3)^0,f,c
 11654  0011D6  A012               	btfss	(___fldiv@b+3)^0,0,c
 11655  0011D8  EFF0  F008         	goto	u3331
 11656  0011DC  EFF2  F008         	goto	u3330
 11657  0011E0                     u3331:
 11658  0011E0  EF09  F009         	goto	l4031
 11659  0011E4                     u3330:
 11660  0011E4  C00F  F017         	movff	___fldiv@b,??___fldiv
 11661  0011E8  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 11662  0011EC  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 11663  0011F0  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 11664  0011F4  341A               	rlcf	(??___fldiv+3)^0,w,c
 11665  0011F6  321A               	rrcf	(??___fldiv+3)^0,f,c
 11666  0011F8  3219               	rrcf	(??___fldiv+2)^0,f,c
 11667  0011FA  3218               	rrcf	(??___fldiv+1)^0,f,c
 11668  0011FC  3217               	rrcf	??___fldiv^0,f,c
 11669  0011FE  C017  F00F         	movff	??___fldiv,___fldiv@b
 11670  001202  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 11671  001206  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 11672  00120A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 11673  00120E  4A20               	infsnz	___fldiv@new_exp^0,f,c
 11674  001210  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 11675  001212                     l4031:
 11676  001212  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11677  001214  EF14  F009         	goto	u3341
 11678  001218  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11679  00121A  E108               	bnz	u3340
 11680  00121C  2820               	incf	___fldiv@new_exp^0,w,c
 11681  00121E  A0D8               	btfss	status,0,c
 11682  001220  EF14  F009         	goto	u3341
 11683  001224  EF16  F009         	goto	u3340
 11684  001228                     u3341:
 11685  001228  EF21  F009         	goto	l4035
 11686  00122C                     u3340:
 11687  00122C  0E00               	movlw	0
 11688  00122E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11689  001230  6820               	setf	___fldiv@new_exp^0,c
 11690  001232  0E00               	movlw	0
 11691  001234  6E0F               	movwf	___fldiv@b^0,c
 11692  001236  0E00               	movlw	0
 11693  001238  6E10               	movwf	(___fldiv@b+1)^0,c
 11694  00123A  0E00               	movlw	0
 11695  00123C  6E11               	movwf	(___fldiv@b+2)^0,c
 11696  00123E  0E00               	movlw	0
 11697  001240  6E12               	movwf	(___fldiv@b+3)^0,c
 11698  001242                     l4035:
 11699  001242  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11700  001244  EF2E  F009         	goto	u3350
 11701  001248  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11702  00124A  E106               	bnz	u3351
 11703  00124C  0420               	decf	___fldiv@new_exp^0,w,c
 11704  00124E  B0D8               	btfsc	status,0,c
 11705  001250  EF2C  F009         	goto	u3351
 11706  001254  EF2E  F009         	goto	u3350
 11707  001258                     u3351:
 11708  001258  EF3C  F009         	goto	l4039
 11709  00125C                     u3350:
 11710  00125C  0E00               	movlw	0
 11711  00125E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11712  001260  0E00               	movlw	0
 11713  001262  6E20               	movwf	___fldiv@new_exp^0,c
 11714  001264  0E00               	movlw	0
 11715  001266  6E0F               	movwf	___fldiv@b^0,c
 11716  001268  0E00               	movlw	0
 11717  00126A  6E10               	movwf	(___fldiv@b+1)^0,c
 11718  00126C  0E00               	movlw	0
 11719  00126E  6E11               	movwf	(___fldiv@b+2)^0,c
 11720  001270  0E00               	movlw	0
 11721  001272  6E12               	movwf	(___fldiv@b+3)^0,c
 11722  001274  0E00               	movlw	0
 11723  001276  6E1F               	movwf	___fldiv@sign^0,c
 11724  001278                     l4039:
 11725  001278  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 11726  00127C  A026               	btfss	___fldiv@bexp^0,0,c
 11727  00127E  EF43  F009         	goto	u3361
 11728  001282  EF45  F009         	goto	u3360
 11729  001286                     u3361:
 11730  001286  EF48  F009         	goto	l4045
 11731  00128A                     u3360:
 11732  00128A  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11733  00128C  EF49  F009         	goto	l4047
 11734  001290                     l4045:
 11735  001290  9E11               	bcf	(___fldiv@b+2)^0,7,c
 11736  001292                     l4047:
 11737  001292  90D8               	bcf	status,0,c
 11738  001294  3026               	rrcf	___fldiv@bexp^0,w,c
 11739  001296  6E12               	movwf	(___fldiv@b+3)^0,c
 11740  001298  EFFF  F007         	goto	l3961
 11741  00129C                     l1176:
 11742  00129C  0012               	return		;funcret
 11743  00129E                     __end_of___fldiv:
 11744                           	opt callstack 0
 11745                           
 11746 ;; *************** function ___wmul *****************
 11747 ;; Defined at:
 11748 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;  multiplier      2    0[COMRAM] unsigned int 
 11751 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  product         2    4[COMRAM] unsigned int 
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  2    0[COMRAM] unsigned int 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2, status,0, prodl, prodh
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11763 ;;      Params:         4       0       0       0       0       0       0       0       0
 11764 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11766 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11767 ;;Total ram usage:        6 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    1
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_inicializarObjetos
 11774 ;;		_escribeHorariosMemoria
 11775 ;;		_leeHorariosMemoria
 11776 ;;		_dameDatosSistema
 11777 ;;		_getValue
 11778 ;;		_atoi
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           	psect	text57
 11783  003880                     __ptext57:
 11784                           	opt callstack 0
 11785  003880                     ___wmul:
 11786                           	opt callstack 26
 11787  003880  5001               	movf	___wmul@multiplier^0,w,c
 11788  003882  0203               	mulwf	___wmul@multiplicand^0,c
 11789  003884  CFF3 F005          	movff	prodl,___wmul@product
 11790  003888  CFF4 F006          	movff	prodh,___wmul@product+1
 11791  00388C  5001               	movf	___wmul@multiplier^0,w,c
 11792  00388E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11793  003890  50F3               	movf	243,w,c
 11794  003892  2606               	addwf	(___wmul@product+1)^0,f,c
 11795  003894  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11796  003896  0203               	mulwf	___wmul@multiplicand^0,c
 11797  003898  50F3               	movf	243,w,c
 11798  00389A  2606               	addwf	(___wmul@product+1)^0,f,c
 11799  00389C  C005  F001         	movff	___wmul@product,?___wmul
 11800  0038A0  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11801  0038A4  0012               	return		;funcret
 11802  0038A6                     __end_of___wmul:
 11803                           	opt callstack 0
 11804                           
 11805 ;; *************** function _i2c_iniciar *****************
 11806 ;; Defined at:
 11807 ;;		line 13 in file "./I2C.h"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;		None
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;		None
 11812 ;; Return value:  Size  Location     Type
 11813 ;;                  1    wreg      void 
 11814 ;; Registers used:
 11815 ;;		wreg, status,2
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11821 ;;      Params:         0       0       0       0       0       0       0       0       0
 11822 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11824 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11825 ;;Total ram usage:        0 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; Hardware stack levels required when called:    1
 11828 ;; This function calls:
 11829 ;;		Nothing
 11830 ;; This function is called by:
 11831 ;;		_main
 11832 ;; This function uses a non-reentrant model
 11833 ;;
 11834                           
 11835                           	psect	text58
 11836  003970                     __ptext58:
 11837                           	opt callstack 0
 11838  003970                     _i2c_iniciar:
 11839                           	opt callstack 29
 11840  003970                     
 11841                           ;./I2C.h: 14:     TRISBbits.RB0 = 1;
 11842  003970  8093               	bsf	147,0,c	;volatile
 11843                           
 11844                           ;./I2C.h: 15:     TRISBbits.RB1 = 1;
 11845  003972  8293               	bsf	147,1,c	;volatile
 11846  003974                     
 11847                           ;./I2C.h: 16:     SSPSTAT = 0b10000000;
 11848  003974  0E80               	movlw	128
 11849  003976  6EC7               	movwf	199,c	;volatile
 11850                           
 11851                           ;./I2C.h: 17:     SSPCON1 = 0b00101000;
 11852  003978  0E28               	movlw	40
 11853  00397A  6EC6               	movwf	198,c	;volatile
 11854                           
 11855                           ;./I2C.h: 18:     SSPCON2 = 0b00000000;
 11856  00397C  0E00               	movlw	0
 11857  00397E  6EC5               	movwf	197,c	;volatile
 11858                           
 11859                           ;./I2C.h: 19:     SSPADD = 9;
 11860  003980  0E09               	movlw	9
 11861  003982  6EC8               	movwf	200,c	;volatile
 11862  003984  0012               	return		;funcret
 11863  003986                     __end_of_i2c_iniciar:
 11864                           	opt callstack 0
 11865                           
 11866 ;; *************** function _configPwm *****************
 11867 ;; Defined at:
 11868 ;;		line 47 in file "./pwm.h"
 11869 ;; Parameters:    Size  Location     Type
 11870 ;;  channel         1    wreg     unsigned char 
 11871 ;; Auto vars:     Size  Location     Type
 11872 ;;  channel         1    2[COMRAM] unsigned char 
 11873 ;; Return value:  Size  Location     Type
 11874 ;;                  1    wreg      void 
 11875 ;; Registers used:
 11876 ;;		wreg, status,2, status,0
 11877 ;; Tracked objects:
 11878 ;;		On entry : 0/0
 11879 ;;		On exit  : 0/0
 11880 ;;		Unchanged: 0/0
 11881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11882 ;;      Params:         0       0       0       0       0       0       0       0       0
 11883 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11884 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11885 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11886 ;;Total ram usage:        3 bytes
 11887 ;; Hardware stack levels used:    1
 11888 ;; Hardware stack levels required when called:    1
 11889 ;; This function calls:
 11890 ;;		Nothing
 11891 ;; This function is called by:
 11892 ;;		_main
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           	psect	text59
 11897  003536                     __ptext59:
 11898                           	opt callstack 0
 11899  003536                     _configPwm:
 11900                           	opt callstack 29
 11901                           
 11902                           ;incstack = 0
 11903                           ;configPwm@channel stored from wreg
 11904  003536  6E03               	movwf	configPwm@channel^0,c
 11905  003538                     
 11906                           ;./pwm.h: 56:         T2CKPS0 = 1;
 11907  003538  80CA               	bsf	4042,0,c	;volatile
 11908                           
 11909                           ;./pwm.h: 57:         T2CKPS1 = 1;
 11910  00353A  82CA               	bsf	4042,1,c	;volatile
 11911  00353C                     
 11912                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
 11913  00353C  0E7C               	movlw	124
 11914  00353E  6ECB               	movwf	203,c	;volatile
 11915                           
 11916                           ;./pwm.h: 63:     switch (channel) {
 11917  003540  EFAC  F01A         	goto	l5039
 11918  003544                     l182:
 11919                           
 11920                           ;./pwm.h: 66:             TRISC2 = 0;
 11921  003544  9494               	bcf	3988,2,c	;volatile
 11922                           
 11923                           ;./pwm.h: 67:             CCP1M3 = 1;
 11924  003546  86BD               	bsf	4029,3,c	;volatile
 11925                           
 11926                           ;./pwm.h: 68:             CCP1M2 = 1;
 11927  003548  84BD               	bsf	4029,2,c	;volatile
 11928                           
 11929                           ;./pwm.h: 71:             break;
 11930  00354A  EFC1  F01A         	goto	l183
 11931  00354E                     l184:
 11932                           
 11933                           ;./pwm.h: 74:             TRISC1 = 0;
 11934  00354E  9294               	bcf	3988,1,c	;volatile
 11935                           
 11936                           ;./pwm.h: 75:             CCP2M3 = 1;
 11937  003550  86BA               	bsf	4026,3,c	;volatile
 11938                           
 11939                           ;./pwm.h: 76:             CCP2M2 = 1;
 11940  003552  84BA               	bsf	4026,2,c	;volatile
 11941                           
 11942                           ;./pwm.h: 77:             break;
 11943  003554  EFC1  F01A         	goto	l183
 11944  003558                     l5039:
 11945  003558  5003               	movf	configPwm@channel^0,w,c
 11946  00355A  6E01               	movwf	??_configPwm^0,c
 11947  00355C  6A02               	clrf	(??_configPwm+1)^0,c
 11948                           
 11949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11950                           ; Switch size 1, requested type "simple"
 11951                           ; Number of cases is 1, Range of values is 0 to 0
 11952                           ; switch strategies available:
 11953                           ; Name         Instructions Cycles
 11954                           ; simple_byte            4     3 (average)
 11955                           ;	Chosen strategy is simple_byte
 11956  00355E  5002               	movf	(??_configPwm+1)^0,w,c
 11957  003560  0A00               	xorlw	0	; case 0
 11958  003562  B4D8               	btfsc	status,2,c
 11959  003564  EFB6  F01A         	goto	l5529
 11960  003568  EFC1  F01A         	goto	l183
 11961  00356C                     l5529:
 11962                           
 11963                           ; Switch size 1, requested type "simple"
 11964                           ; Number of cases is 2, Range of values is 1 to 2
 11965                           ; switch strategies available:
 11966                           ; Name         Instructions Cycles
 11967                           ; simple_byte            7     4 (average)
 11968                           ;	Chosen strategy is simple_byte
 11969  00356C  5001               	movf	??_configPwm^0,w,c
 11970  00356E  0A01               	xorlw	1	; case 1
 11971  003570  B4D8               	btfsc	status,2,c
 11972  003572  EFA2  F01A         	goto	l182
 11973  003576  0A03               	xorlw	3	; case 2
 11974  003578  B4D8               	btfsc	status,2,c
 11975  00357A  EFA7  F01A         	goto	l184
 11976  00357E  EFC1  F01A         	goto	l183
 11977  003582                     l183:
 11978                           
 11979                           ;./pwm.h: 81:     TMR2ON = 1;
 11980  003582  84CA               	bsf	4042,2,c	;volatile
 11981  003584  0012               	return		;funcret
 11982  003586                     __end_of_configPwm:
 11983                           	opt callstack 0
 11984                           
 11985 ;; *************** function _bh1750_iniciar *****************
 11986 ;; Defined at:
 11987 ;;		line 27 in file "./bh1750.h"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;		None
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;		None
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  1    wreg      void 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0, cstack
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12001 ;;      Params:         0       0       0       0       0       0       0       0       0
 12002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12003 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12004 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12005 ;;Total ram usage:        1 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    4
 12008 ;; This function calls:
 12009 ;;		_bh1750_escribir
 12010 ;; This function is called by:
 12011 ;;		_main
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           	psect	text60
 12016  003986                     __ptext60:
 12017                           	opt callstack 0
 12018  003986                     _bh1750_iniciar:
 12019                           	opt callstack 26
 12020  003986                     
 12021                           ;./bh1750.h: 28:     _delay((unsigned long)((100)*(4000000/4000.0)));
 12022  003986  0E82               	movlw	130
 12023  003988  6E04               	movwf	??_bh1750_iniciar^0,c
 12024  00398A  0EDE               	movlw	222
 12025  00398C                     u4587:
 12026  00398C  2EE8               	decfsz	wreg,f,c
 12027  00398E  D7FE               	bra	u4587
 12028  003990  2E04               	decfsz	??_bh1750_iniciar^0,f,c
 12029  003992  D7FC               	bra	u4587
 12030  003994                     
 12031                           ;./bh1750.h: 29:     bh1750_escribir(0x00);
 12032  003994  0E00               	movlw	0
 12033  003996  ECA1  F01C         	call	_bh1750_escribir
 12034  00399A  0012               	return		;funcret
 12035  00399C                     __end_of_bh1750_iniciar:
 12036                           	opt callstack 0
 12037                           
 12038 ;; *************** function _bh1750_escribir *****************
 12039 ;; Defined at:
 12040 ;;		line 32 in file "./bh1750.h"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;  comando         1    wreg     unsigned char 
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;  comando         1    2[COMRAM] unsigned char 
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      void 
 12047 ;; Registers used:
 12048 ;;		wreg, status,2, status,0, cstack
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12054 ;;      Params:         0       0       0       0       0       0       0       0       0
 12055 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12056 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12057 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12058 ;;Total ram usage:        1 bytes
 12059 ;; Hardware stack levels used:    1
 12060 ;; Hardware stack levels required when called:    3
 12061 ;; This function calls:
 12062 ;;		_i2c_detener
 12063 ;;		_i2c_envia_dato
 12064 ;;		_i2c_inicia_com
 12065 ;; This function is called by:
 12066 ;;		_bh1750_iniciar
 12067 ;;		_dameValorLux
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text61
 12072  003942                     __ptext61:
 12073                           	opt callstack 0
 12074  003942                     _bh1750_escribir:
 12075                           	opt callstack 24
 12076                           
 12077                           ;incstack = 0
 12078                           ;bh1750_escribir@comando stored from wreg
 12079  003942  6E03               	movwf	bh1750_escribir@comando^0,c
 12080  003944                     
 12081                           ;./bh1750.h: 33:     i2c_inicia_com();
 12082  003944  ECE8  F01C         	call	_i2c_inicia_com	;wreg free
 12083                           
 12084                           ;./bh1750.h: 34:     i2c_envia_dato(0x46);
 12085  003948  0E46               	movlw	70
 12086  00394A  ECDE  F01C         	call	_i2c_envia_dato
 12087                           
 12088                           ;./bh1750.h: 35:     i2c_envia_dato(comando);
 12089  00394E  5003               	movf	bh1750_escribir@comando^0,w,c
 12090  003950  ECDE  F01C         	call	_i2c_envia_dato
 12091                           
 12092                           ;./bh1750.h: 36:     i2c_detener();
 12093  003954  ECEC  F01C         	call	_i2c_detener	;wreg free
 12094  003958  0012               	return		;funcret
 12095  00395A                     __end_of_bh1750_escribir:
 12096                           	opt callstack 0
 12097                           
 12098 ;; *************** function _i2c_inicia_com *****************
 12099 ;; Defined at:
 12100 ;;		line 37 in file "./I2C.h"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;		None
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, status,2, status,0, cstack
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12116 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12117 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12118 ;;Total ram usage:        0 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    2
 12121 ;; This function calls:
 12122 ;;		_i2c_espera
 12123 ;; This function is called by:
 12124 ;;		_bh1750_escribir
 12125 ;;		_bh1750_leer
 12126 ;;		_escribe_rtc
 12127 ;;		_leer_rtc
 12128 ;;		_escribe_eeprom
 12129 ;;		_leer_eeprom
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133                           	psect	text62
 12134  0039D0                     __ptext62:
 12135                           	opt callstack 0
 12136  0039D0                     _i2c_inicia_com:
 12137                           	opt callstack 24
 12138  0039D0                     
 12139                           ;./I2C.h: 38:     i2c_espera();
 12140  0039D0  EC53  F01C         	call	_i2c_espera	;wreg free
 12141  0039D4                     
 12142                           ;./I2C.h: 39:     SSPCON2bits.SEN = 1;
 12143  0039D4  80C5               	bsf	197,0,c	;volatile
 12144  0039D6  0012               	return		;funcret
 12145  0039D8                     __end_of_i2c_inicia_com:
 12146                           	opt callstack 0
 12147                           
 12148 ;; *************** function _i2c_envia_dato *****************
 12149 ;; Defined at:
 12150 ;;		line 66 in file "./I2C.h"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  dato            1    wreg     unsigned char 
 12153 ;; Auto vars:     Size  Location     Type
 12154 ;;  dato            1    1[COMRAM] unsigned char 
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  1    wreg      unsigned char 
 12157 ;; Registers used:
 12158 ;;		wreg, status,2, status,0, cstack
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12164 ;;      Params:         0       0       0       0       0       0       0       0       0
 12165 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12166 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12167 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12168 ;;Total ram usage:        1 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    2
 12171 ;; This function calls:
 12172 ;;		_i2c_espera
 12173 ;; This function is called by:
 12174 ;;		_bh1750_escribir
 12175 ;;		_bh1750_leer
 12176 ;;		_escribe_rtc
 12177 ;;		_leer_rtc
 12178 ;;		_escribe_eeprom
 12179 ;;		_leer_eeprom
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text63
 12184  0039BC                     __ptext63:
 12185                           	opt callstack 0
 12186  0039BC                     _i2c_envia_dato:
 12187                           	opt callstack 24
 12188                           
 12189                           ;incstack = 0
 12190                           ;i2c_envia_dato@dato stored from wreg
 12191  0039BC  6E02               	movwf	i2c_envia_dato@dato^0,c
 12192  0039BE                     
 12193                           ;./I2C.h: 67:     i2c_espera();
 12194  0039BE  EC53  F01C         	call	_i2c_espera	;wreg free
 12195  0039C2                     
 12196                           ;./I2C.h: 68:     SSPBUF = dato;
 12197  0039C2  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 12198  0039C6  0012               	return		;funcret
 12199  0039C8                     __end_of_i2c_envia_dato:
 12200                           	opt callstack 0
 12201                           
 12202 ;; *************** function _i2c_detener *****************
 12203 ;; Defined at:
 12204 ;;		line 55 in file "./I2C.h"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;		None
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;		None
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		wreg, status,2, status,0, cstack
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12218 ;;      Params:         0       0       0       0       0       0       0       0       0
 12219 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12220 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12221 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12222 ;;Total ram usage:        0 bytes
 12223 ;; Hardware stack levels used:    1
 12224 ;; Hardware stack levels required when called:    2
 12225 ;; This function calls:
 12226 ;;		_i2c_espera
 12227 ;; This function is called by:
 12228 ;;		_bh1750_escribir
 12229 ;;		_bh1750_leer
 12230 ;;		_escribe_rtc
 12231 ;;		_leer_rtc
 12232 ;;		_escribe_eeprom
 12233 ;;		_leer_eeprom
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           	psect	text64
 12238  0039D8                     __ptext64:
 12239                           	opt callstack 0
 12240  0039D8                     _i2c_detener:
 12241                           	opt callstack 24
 12242  0039D8                     
 12243                           ;./I2C.h: 56:     i2c_espera();
 12244  0039D8  EC53  F01C         	call	_i2c_espera	;wreg free
 12245  0039DC                     
 12246                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
 12247  0039DC  84C5               	bsf	197,2,c	;volatile
 12248  0039DE  0012               	return		;funcret
 12249  0039E0                     __end_of_i2c_detener:
 12250                           	opt callstack 0
 12251                           
 12252 ;; *************** function _i2c_espera *****************
 12253 ;; Defined at:
 12254 ;;		line 29 in file "./I2C.h"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;		None
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12270 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12271 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12272 ;;Total ram usage:        1 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    1
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_i2c_inicia_com
 12279 ;;		_i2c_reinicia_com
 12280 ;;		_i2c_detener
 12281 ;;		_i2c_envia_dato
 12282 ;;		_i2c_recibe_dato
 12283 ;;		_i2c_recibe_datoACK
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text65
 12288  0038A6                     __ptext65:
 12289                           	opt callstack 0
 12290  0038A6                     _i2c_espera:
 12291                           	opt callstack 24
 12292  0038A6                     l3587:
 12293  0038A6  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 12294  0038AA  0E1F               	movlw	31
 12295  0038AC  1601               	andwf	??_i2c_espera^0,f,c
 12296  0038AE  A4D8               	btfss	status,2,c
 12297  0038B0  EF5C  F01C         	goto	u2561
 12298  0038B4  EF5E  F01C         	goto	u2560
 12299  0038B8                     u2561:
 12300  0038B8  EF53  F01C         	goto	l3587
 12301  0038BC                     u2560:
 12302  0038BC  B4C7               	btfsc	199,2,c	;volatile
 12303  0038BE  EF63  F01C         	goto	u2571
 12304  0038C2  EF65  F01C         	goto	u2570
 12305  0038C6                     u2571:
 12306  0038C6  EF53  F01C         	goto	l3587
 12307  0038CA                     u2570:
 12308  0038CA  0012               	return		;funcret
 12309  0038CC                     __end_of_i2c_espera:
 12310                           	opt callstack 0
 12311                           
 12312 ;; *************** function _UART_init *****************
 12313 ;; Defined at:
 12314 ;;		line 12 in file "./UART.h"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;  BAUD            4   26[COMRAM] long 
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;  frecuenciaCr    4    0        long 
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  1    wreg      void 
 12321 ;; Registers used:
 12322 ;;		wreg, status,2, status,0, cstack
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12328 ;;      Params:         4       0       0       0       0       0       0       0       0
 12329 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12330 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12331 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12332 ;;Total ram usage:       12 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; Hardware stack levels required when called:    2
 12335 ;; This function calls:
 12336 ;;		___aldiv
 12337 ;; This function is called by:
 12338 ;;		_main
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text66
 12343  003198                     __ptext66:
 12344                           	opt callstack 0
 12345  003198                     _UART_init:
 12346                           	opt callstack 28
 12347  003198                     
 12348                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12349  003198  9C94               	bcf	148,6,c	;volatile
 12350  00319A                     
 12351                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12352  00319A  8E94               	bsf	148,7,c	;volatile
 12353  00319C                     
 12354                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12355  00319C  0E10               	movlw	16
 12356  00319E  6E11               	movwf	___aldiv@divisor^0,c
 12357  0031A0  0E00               	movlw	0
 12358  0031A2  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12359  0031A4  0E00               	movlw	0
 12360  0031A6  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12361  0031A8  0E00               	movlw	0
 12362  0031AA  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12363  0031AC  0E00               	movlw	0
 12364  0031AE  6E0D               	movwf	___aldiv@dividend^0,c
 12365  0031B0  0E09               	movlw	9
 12366  0031B2  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12367  0031B4  0E3D               	movlw	61
 12368  0031B6  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12369  0031B8  0E00               	movlw	0
 12370  0031BA  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12371  0031BC  EC51  F014         	call	___aldiv	;wreg free
 12372  0031C0  C00D  F023         	movff	?___aldiv,_UART_init$1629
 12373  0031C4  C00E  F024         	movff	?___aldiv+1,_UART_init$1629+1
 12374  0031C8  C00F  F025         	movff	?___aldiv+2,_UART_init$1629+2
 12375  0031CC  C010  F026         	movff	?___aldiv+3,_UART_init$1629+3
 12376  0031D0                     
 12377                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12378  0031D0  C023  F00D         	movff	_UART_init$1629,___aldiv@dividend
 12379  0031D4  C024  F00E         	movff	_UART_init$1629+1,___aldiv@dividend+1
 12380  0031D8  C025  F00F         	movff	_UART_init$1629+2,___aldiv@dividend+2
 12381  0031DC  C026  F010         	movff	_UART_init$1629+3,___aldiv@dividend+3
 12382  0031E0  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12383  0031E4  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12384  0031E8  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12385  0031EC  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12386  0031F0  EC51  F014         	call	___aldiv	;wreg free
 12387  0031F4  040D               	decf	?___aldiv^0,w,c
 12388  0031F6  6EAF               	movwf	175,c	;volatile
 12389  0031F8                     
 12390                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12391  0031F8  84AC               	bsf	172,2,c	;volatile
 12392  0031FA                     
 12393                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12394  0031FA  98AC               	bcf	172,4,c	;volatile
 12395  0031FC                     
 12396                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12397  0031FC  8EAB               	bsf	171,7,c	;volatile
 12398  0031FE                     
 12399                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12400  0031FE  9CAC               	bcf	172,6,c	;volatile
 12401  003200                     
 12402                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12403  003200  8AAC               	bsf	172,5,c	;volatile
 12404  003202                     
 12405                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12406  003202  9CAB               	bcf	171,6,c	;volatile
 12407  003204                     
 12408                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12409  003204  88AB               	bsf	171,4,c	;volatile
 12410  003206  0012               	return		;funcret
 12411  003208                     __end_of_UART_init:
 12412                           	opt callstack 0
 12413                           
 12414 ;; *************** function ___aldiv *****************
 12415 ;; Defined at:
 12416 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;  dividend        4   12[COMRAM] long 
 12419 ;;  divisor         4   16[COMRAM] long 
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;  quotient        4   22[COMRAM] long 
 12422 ;;  sign            1   21[COMRAM] unsigned char 
 12423 ;;  counter         1   20[COMRAM] unsigned char 
 12424 ;; Return value:  Size  Location     Type
 12425 ;;                  4   12[COMRAM] long 
 12426 ;; Registers used:
 12427 ;;		wreg, status,2, status,0
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/0
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12433 ;;      Params:         8       0       0       0       0       0       0       0       0
 12434 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12435 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12436 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12437 ;;Total ram usage:       14 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:    1
 12440 ;; This function calls:
 12441 ;;		Nothing
 12442 ;; This function is called by:
 12443 ;;		_UART_init
 12444 ;;		_map
 12445 ;; This function uses a non-reentrant model
 12446 ;;
 12447                           
 12448                           	psect	text67
 12449  0028A2                     __ptext67:
 12450                           	opt callstack 0
 12451  0028A2                     ___aldiv:
 12452                           	opt callstack 26
 12453  0028A2  0E00               	movlw	0
 12454  0028A4  6E16               	movwf	___aldiv@sign^0,c
 12455  0028A6  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12456  0028A8  EF5A  F014         	goto	u3710
 12457  0028AC  EF58  F014         	goto	u3711
 12458  0028B0                     u3711:
 12459  0028B0  EF64  F014         	goto	l4397
 12460  0028B4                     u3710:
 12461  0028B4  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12462  0028B6  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12463  0028B8  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12464  0028BA  6C11               	negf	___aldiv@divisor^0,c
 12465  0028BC  0E00               	movlw	0
 12466  0028BE  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12467  0028C0  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12468  0028C2  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12469  0028C4  0E01               	movlw	1
 12470  0028C6  6E16               	movwf	___aldiv@sign^0,c
 12471  0028C8                     l4397:
 12472  0028C8  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12473  0028CA  EF6B  F014         	goto	u3720
 12474  0028CE  EF69  F014         	goto	u3721
 12475  0028D2                     u3721:
 12476  0028D2  EF75  F014         	goto	l4403
 12477  0028D6                     u3720:
 12478  0028D6  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12479  0028D8  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12480  0028DA  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12481  0028DC  6C0D               	negf	___aldiv@dividend^0,c
 12482  0028DE  0E00               	movlw	0
 12483  0028E0  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12484  0028E2  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12485  0028E4  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12486  0028E6  0E01               	movlw	1
 12487  0028E8  1A16               	xorwf	___aldiv@sign^0,f,c
 12488  0028EA                     l4403:
 12489  0028EA  0E00               	movlw	0
 12490  0028EC  6E17               	movwf	___aldiv@quotient^0,c
 12491  0028EE  0E00               	movlw	0
 12492  0028F0  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12493  0028F2  0E00               	movlw	0
 12494  0028F4  6E19               	movwf	(___aldiv@quotient+2)^0,c
 12495  0028F6  0E00               	movlw	0
 12496  0028F8  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 12497  0028FA  5011               	movf	___aldiv@divisor^0,w,c
 12498  0028FC  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 12499  0028FE  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 12500  002900  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 12501  002902  B4D8               	btfsc	status,2,c
 12502  002904  EF86  F014         	goto	u3731
 12503  002908  EF88  F014         	goto	u3730
 12504  00290C                     u3731:
 12505  00290C  EFBE  F014         	goto	l4425
 12506  002910                     u3730:
 12507  002910  0E01               	movlw	1
 12508  002912  6E15               	movwf	___aldiv@counter^0,c
 12509  002914  EF92  F014         	goto	l4411
 12510  002918                     l4409:
 12511  002918  90D8               	bcf	status,0,c
 12512  00291A  3611               	rlcf	___aldiv@divisor^0,f,c
 12513  00291C  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 12514  00291E  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 12515  002920  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 12516  002922  2A15               	incf	___aldiv@counter^0,f,c
 12517  002924                     l4411:
 12518  002924  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 12519  002926  EF97  F014         	goto	u3741
 12520  00292A  EF99  F014         	goto	u3740
 12521  00292E                     u3741:
 12522  00292E  EF8C  F014         	goto	l4409
 12523  002932                     u3740:
 12524  002932                     l4413:
 12525  002932  90D8               	bcf	status,0,c
 12526  002934  3617               	rlcf	___aldiv@quotient^0,f,c
 12527  002936  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 12528  002938  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 12529  00293A  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 12530  00293C  5011               	movf	___aldiv@divisor^0,w,c
 12531  00293E  5C0D               	subwf	___aldiv@dividend^0,w,c
 12532  002940  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12533  002942  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 12534  002944  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12535  002946  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 12536  002948  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12537  00294A  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 12538  00294C  A0D8               	btfss	status,0,c
 12539  00294E  EFAB  F014         	goto	u3751
 12540  002952  EFAD  F014         	goto	u3750
 12541  002956                     u3751:
 12542  002956  EFB6  F014         	goto	l4421
 12543  00295A                     u3750:
 12544  00295A  5011               	movf	___aldiv@divisor^0,w,c
 12545  00295C  5E0D               	subwf	___aldiv@dividend^0,f,c
 12546  00295E  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12547  002960  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 12548  002962  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12549  002964  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 12550  002966  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12551  002968  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 12552  00296A  8017               	bsf	___aldiv@quotient^0,0,c
 12553  00296C                     l4421:
 12554  00296C  90D8               	bcf	status,0,c
 12555  00296E  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 12556  002970  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 12557  002972  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 12558  002974  3211               	rrcf	___aldiv@divisor^0,f,c
 12559  002976  2E15               	decfsz	___aldiv@counter^0,f,c
 12560  002978  EF99  F014         	goto	l4413
 12561  00297C                     l4425:
 12562  00297C  5016               	movf	___aldiv@sign^0,w,c
 12563  00297E  B4D8               	btfsc	status,2,c
 12564  002980  EFC4  F014         	goto	u3761
 12565  002984  EFC6  F014         	goto	u3760
 12566  002988                     u3761:
 12567  002988  EFCE  F014         	goto	l4429
 12568  00298C                     u3760:
 12569  00298C  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 12570  00298E  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 12571  002990  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 12572  002992  6C17               	negf	___aldiv@quotient^0,c
 12573  002994  0E00               	movlw	0
 12574  002996  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 12575  002998  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 12576  00299A  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 12577  00299C                     l4429:
 12578  00299C  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 12579  0029A0  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 12580  0029A4  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 12581  0029A8  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 12582  0029AC  0012               	return		;funcret
 12583  0029AE                     __end_of___aldiv:
 12584                           	opt callstack 0
 12585                           
 12586 ;; *************** function _desbordamiento *****************
 12587 ;; Defined at:
 12588 ;;		line 13 in file "main.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;		None
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, status,2, status,0
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12602 ;;      Params:         0       0       0       0       0       0       0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12605 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12606 ;;Total ram usage:        0 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; This function calls:
 12609 ;;		Nothing
 12610 ;; This function is called by:
 12611 ;;		Interrupt level 2
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           	psect	intcode
 12616  000008                     __pintcode:
 12617                           	opt callstack 0
 12618  000008                     _desbordamiento:
 12619                           	opt callstack 20
 12620                           
 12621                           ;incstack = 0
 12622  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12623  00000A  ED6A  F019         	call	int_func,f	;refresh shadow registers
 12624                           
 12625                           	psect	intcode_body
 12626  0032D4                     __pintcode_body:
 12627                           	opt callstack 20
 12628  0032D4                     int_func:
 12629                           	opt callstack 20
 12630  0032D4  0006               	pop		; remove dummy address from shadow register refresh
 12631  0032D6                     
 12632                           ;main.c: 15:     if (INTCONbits.TMR0IF) {
 12633  0032D6  A4F2               	btfss	242,2,c	;volatile
 12634  0032D8  EF70  F019         	goto	i2u449_41
 12635  0032DC  EF72  F019         	goto	i2u449_40
 12636  0032E0                     i2u449_41:
 12637  0032E0  EF8D  F019         	goto	i2l5209
 12638  0032E4                     i2u449_40:
 12639  0032E4                     
 12640                           ;main.c: 17:         if (esperandoDatos) {
 12641  0032E4  0100               	movlb	0	; () banked
 12642  0032E6  51D3               	movf	_esperandoDatos& (0+255),w,b
 12643  0032E8  B4D8               	btfsc	status,2,c
 12644  0032EA  EF79  F019         	goto	i2u450_41
 12645  0032EE  EF7B  F019         	goto	i2u450_40
 12646  0032F2                     i2u450_41:
 12647  0032F2  EF86  F019         	goto	i2l5205
 12648  0032F6                     i2u450_40:
 12649  0032F6                     
 12650                           ; BSR set to: 0
 12651                           ;main.c: 19:             tiempoInactividadTrans++;
 12652  0032F6  2BD6               	incf	_tiempoInactividadTrans& (0+255),f,b
 12653  0032F8                     
 12654                           ; BSR set to: 0
 12655                           ;main.c: 21:             if (tiempoInactividadTrans == 1)
 12656  0032F8  05D6               	decf	_tiempoInactividadTrans& (0+255),w,b
 12657  0032FA  A4D8               	btfss	status,2,c
 12658  0032FC  EF82  F019         	goto	i2u451_41
 12659  003300  EF84  F019         	goto	i2u451_40
 12660  003304                     i2u451_41:
 12661  003304  EF86  F019         	goto	i2l5205
 12662  003308                     i2u451_40:
 12663  003308                     
 12664                           ; BSR set to: 0
 12665                           ;main.c: 22:                 esperaDatoConcluida = 1;
 12666  003308  0E01               	movlw	1
 12667  00330A  6FD4               	movwf	_esperaDatoConcluida& (0+255),b
 12668  00330C                     i2l5205:
 12669                           
 12670                           ; BSR set to: 0
 12671                           ;main.c: 27:         INTCONbits.TMR0IF = 0;
 12672  00330C  94F2               	bcf	242,2,c	;volatile
 12673  00330E                     
 12674                           ; BSR set to: 0
 12675                           ;main.c: 28:         TMR0 = VALOR_TIMER0;
 12676  00330E  C0E2  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 12677  003312  C0E3  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 12678                           
 12679                           ;main.c: 29:         overflowTimer = 1;
 12680  003316  0E01               	movlw	1
 12681  003318  6FCC               	movwf	_overflowTimer& (0+255),b
 12682  00331A                     i2l5209:
 12683                           
 12684                           ;main.c: 33:     if (PIR1bits.RCIF) {
 12685  00331A  AA9E               	btfss	158,5,c	;volatile
 12686  00331C  EF92  F019         	goto	i2u452_41
 12687  003320  EF94  F019         	goto	i2u452_40
 12688  003324                     i2u452_41:
 12689  003324  EF99  F019         	goto	i2l449
 12690  003328                     i2u452_40:
 12691  003328                     
 12692                           ;main.c: 35:         byteUart = RCREG;
 12693  003328  CFAE F0D5          	movff	4014,_byteUart	;volatile
 12694  00332C                     
 12695                           ;main.c: 36:         datoRecibido = 1;
 12696  00332C  0E01               	movlw	1
 12697  00332E  0100               	movlb	0	; () banked
 12698  003330  6FCD               	movwf	_datoRecibido& (0+255),b
 12699  003332                     i2l449:
 12700  003332  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12701  003334  0011               	retfie		f
 12702  003336                     __end_of_desbordamiento:
 12703                           	opt callstack 0
 12704                           
 12705                           	psect	rparam
 12706  0000                     
 12707                           	psect	temp
 12708  00005F                     btemp:
 12709                           	opt callstack 0
 12710  00005F                     	ds	1
 12711  0000                     int$flags	set	btemp
 12712  0000                     wtemp8	set	btemp+1
 12713  0000                     ttemp5	set	btemp+1
 12714  0000                     ttemp6	set	btemp+4
 12715  0000                     ttemp7	set	btemp+8
 12716                           tosu	equ	0xFFF
 12717                           tosh	equ	0xFFE
 12718                           tosl	equ	0xFFD
 12719                           stkptr	equ	0xFFC
 12720                           pclatu	equ	0xFFB
 12721                           pclath	equ	0xFFA
 12722                           pcl	equ	0xFF9
 12723                           tblptru	equ	0xFF8
 12724                           tblptrh	equ	0xFF7
 12725                           tblptrl	equ	0xFF6
 12726                           tablat	equ	0xFF5
 12727                           prodh	equ	0xFF4
 12728                           prodl	equ	0xFF3
 12729                           indf0	equ	0xFEF
 12730                           postinc0	equ	0xFEE
 12731                           postdec0	equ	0xFED
 12732                           preinc0	equ	0xFEC
 12733                           plusw0	equ	0xFEB
 12734                           fsr0h	equ	0xFEA
 12735                           fsr0l	equ	0xFE9
 12736                           wreg	equ	0xFE8
 12737                           indf1	equ	0xFE7
 12738                           postinc1	equ	0xFE6
 12739                           postdec1	equ	0xFE5
 12740                           preinc1	equ	0xFE4
 12741                           plusw1	equ	0xFE3
 12742                           fsr1h	equ	0xFE2
 12743                           fsr1l	equ	0xFE1
 12744                           bsr	equ	0xFE0
 12745                           indf2	equ	0xFDF
 12746                           postinc2	equ	0xFDE
 12747                           postdec2	equ	0xFDD
 12748                           preinc2	equ	0xFDC
 12749                           plusw2	equ	0xFDB
 12750                           fsr2h	equ	0xFDA
 12751                           fsr2l	equ	0xFD9
 12752                           status	equ	0xFD8


Data Sizes:
    Strings     870
    Constant    0
    Data        15
    BSS         419
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     70     134
    BANK1           256      0      82
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dameDatosSistema$1633	PTR unsigned char [8] size(2) Largest target is 288
		 -> horarios(BIGRAM[288]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), horarios(BIGRAM[288]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), horarios(BIGRAM[288]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_26(CODE[23]), STR_25(CODE[24]), STR_19(CODE[36]), STR_18(CODE[37]), 
		 -> STR_17(CODE[36]), STR_16(CODE[39]), STR_15(CODE[36]), STR_14(CODE[35]), 
		 -> STR_13(CODE[37]), STR_12(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1308_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_26(CODE[23]), STR_25(CODE[24]), STR_19(CODE[36]), STR_18(CODE[37]), 
		 -> STR_17(CODE[36]), STR_16(CODE[39]), STR_15(CODE[36]), STR_14(CODE[35]), 
		 -> STR_13(CODE[37]), STR_12(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_26(CODE[23]), STR_25(CODE[24]), STR_19(CODE[36]), STR_18(CODE[37]), 
		 -> STR_17(CODE[36]), STR_16(CODE[39]), STR_15(CODE[36]), STR_14(CODE[35]), 
		 -> STR_13(CODE[37]), STR_12(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_26(CODE[23]), STR_25(CODE[24]), STR_19(CODE[36]), STR_18(CODE[37]), 
		 -> STR_17(CODE[36]), STR_16(CODE[39]), STR_15(CODE[36]), STR_14(CODE[35]), 
		 -> STR_13(CODE[37]), STR_12(CODE[19]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), horarios(BIGRAM[288]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 55
		 -> STR_30(CODE[21]), STR_29(CODE[11]), STR_28(CODE[9]), STR_27(CODE[17]), 
		 -> dameDatosSistema@bufferHorario(BANK0[30]), STR_24(CODE[37]), STR_23(CODE[41]), STR_22(CODE[42]), 
		 -> STR_21(CODE[31]), STR_20(CODE[13]), buffer(BANK1[50]), STR_11(CODE[3]), 
		 -> STR_10(CODE[14]), STR_9(CODE[36]), STR_8(CODE[26]), STR_7(CODE[25]), 
		 -> STR_6(CODE[34]), STR_5(CODE[32]), STR_4(CODE[55]), STR_3(CODE[40]), 
		 -> STR_2(CODE[27]), STR_1(CODE[37]), 


Critical Paths under _main in COMRAM

    _main->_inicializarObjetos
    _main->_sistemaPrincipal
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoIluminar->_getValue
    _mostrarDatosSensores->_dameValorLux
    _dameValorLux->_bh1750_leer
    _bh1750_leer->___fltol
    _i2c_recibe_datoACK->_i2c_espera
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_printf->_UART_write
    _asignarSetPoint->_getValue
    _asignarHorarios->_getValue
    _getValue->___lmul
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _sistemaIluminado->_pwmDuty
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _inicializarObjetos->_pwmDuty
    _pwmDuty->___fltol
    _map->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _bh1750_iniciar->_bh1750_escribir
    _bh1750_escribir->_i2c_envia_dato
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  115733
                          _UART_init
                        _UART_printf
                     _bh1750_iniciar
                          _configPwm
                        _i2c_iniciar
                 _inicializarObjetos
                   _sistemaIluminado
                   _sistemaPrincipal
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   92455
                                             93 COMRAM     1     1      0
                                             68 BANK0      2     2      0
                    _asignarHorarios
                    _asignarSetPoint
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
                 _leeHorariosMemoria
               _mostrarDatosSensores
                  _setTiempoIluminar
 ---------------------------------------------------------------------------------
 (2) _setTiempoIluminar                                    3     3      0   10823
                                             34 COMRAM     3     3      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 0     0      0   21935
                        _UART_printf
                         _UART_write
                       _dameValorLux
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _dameValorLux                                        10     6      4    3114
                                             86 COMRAM     5     1      4
                                              0 BANK0      5     5      0
                    _bh1750_escribir
                        _bh1750_leer
 ---------------------------------------------------------------------------------
 (4) _bh1750_leer                                         12     8      4    3024
                                             74 COMRAM    12     8      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                 _i2c_recibe_datoACK
 ---------------------------------------------------------------------------------
 (5) _i2c_recibe_datoACK                                   2     2      0      45
                                              1 COMRAM     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _leeHorariosMemoria                                   9     9      0    4344
                                              6 COMRAM     9     9      0
                         _UART_write
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (3) _leer_eeprom                                          4     2      2     492
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    7987
                         _UART_write
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0    7541
                         _UART_write
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    7519
                                             34 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    42    42      0   22676
                                             91 COMRAM     2     2      0
                                             28 BANK0     40    40      0
                        _UART_printf
                         _UART_write
                             ___wmul
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   16908
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   15183
                                             89 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   14796
                                             63 COMRAM    26    20      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5346
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3697
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4482
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _limpiarBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    1891
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _asignarSetPoint                                      4     4      0    6101
                                             34 COMRAM     4     4      0
                         _UART_write
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0   11026
                                             34 COMRAM     7     7      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (3) _getValue                                            22    18      4    6034
                                             12 COMRAM    22    18      4
                          _UART_read
                         _UART_write
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4655
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     848
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _sistemaIluminado                                     1     1      0    8502
                                             86 COMRAM     1     1      0
                      _dameDiaActual
                     _dameHoraActual
                       _horaIluminar
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _horaIluminar                                         6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0   11919
                                             86 COMRAM     8     8      0
                             ___wmul
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _pwmDuty                                             12     9      3    8116
                                             74 COMRAM    12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    2268
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     609
                                             64 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2200
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1551
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3489
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bh1750_iniciar                                       1     1      0      44
                                              3 COMRAM     1     1      0
                    _bh1750_escribir
 ---------------------------------------------------------------------------------
 (4) _bh1750_escribir                                      1     1      0      44
                                              2 COMRAM     1     1      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (5) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (6) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _UART_printf
     _UART_write
   _bh1750_iniciar
     _bh1750_escribir
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _configPwm
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
     _pwmDuty
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
   _sistemaIluminado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _horaIluminar
     _pwmDuty
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
   _sistemaPrincipal
     _asignarHorarios
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
         ___lmul
         ___wmul
     _asignarSetPoint
       _UART_write
       _getValue
         _UART_read
         _UART_write
         ___lmul
         ___wmul
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
           ___lmul
           ___wmul
     _fijaHoraRtc
       _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
           ___lmul
           ___wmul
     _leeHorariosMemoria
       _UART_write
       ___wmul
       _leer_eeprom
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameValorLux
         _bh1750_escribir
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _bh1750_leer
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
           _i2c_recibe_datoACK
             _i2c_espera
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _setTiempoIluminar
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
         ___lmul
         ___wmul

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      52       7       32.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136      20        0.0%
DATA                 0      0     256       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 01 20:27:05 2020

          __size_of_escribe_eeprom 0030                       ___fldiv@aexp 0027  
                     ___fldiv@bexp 0026                       ___fldiv@sign 001F  
                    ??_bh1750_leer 004F                       ___awdiv@sign 0006  
              ___wmul@multiplicand 0003                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l103 3206                                l111 343E  
                              l112 3440                                l106 3408  
                              l115 3960                                l212 387E  
                              l124 3392                                l133 38CA  
                              l142 39DE                                l118 396E  
                              l127 3984                                l215 38EA  
                              l151 3828                                l136 39D6  
                              l160 2DC2                                l145 39C6  
                              l209 3926                                l305 3720  
                              l154 399A                                l139 39CE  
                              l163 35D2                                l148 3940  
                              l252 302A                                l324 30AA  
                              l332 2F14                                l157 3958  
         __size_of_bh1750_escribir 0018                                l261 221C  
                              l501 165A                                l341 2F16  
                              l182 3544                                l166 3124  
                              l174 1A50                                l350 28A0  
                              l430 05C8                                l183 3582  
                              l319 2788                                l503 1662  
                              l271 3908                                l184 354E  
                              l264 3854                                l440 361E  
                              l185 3584                                l521 189C  
                              l281 375C                                l530 1FA6  
                              l338 2EA8                                l179 3538  
                              l267 39AA                                l427 05B8  
                              l275 3196                                l436 36E2  
                              l540 209A                                l605 3260  
                              l606 3270                                l278 37FA  
                              l366 15B8                                l288 2644  
                              l544 20A2                                l528 1F9E  
                              l721 24EE                                l297 238A  
                              l369 3534                                l490 2BC4  
                              l539 2050                                l708 1F1C  
                              l493 2C06                                l558 06C6  
                              l590 32CA                                l495 2C42  
                              l583 0AD8                                l591 32D2  
                              l673 29AC                                l825 2D06  
                              l594 38A4                                l838 2E72  
                              l891 2AB2                       __CFG_CPB$OFF 000000  
                              _PR2 000FCB                       __CFG_CPD$OFF 000000  
                     __CFG_BOR$OFF 000000                                _abs 3664  
                              _map 30AC                                _pad 2B7E  
                     ___awmod@sign 0006                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 0039  
                     ___flmul@bexp 003A                       ___flmul@sign 0034  
                     ___flmul@temp 003F           __end_of_dameDatosSistema 15BA  
                     ___flmul@prod 003B                       __CFG_LVP$OFF 000000  
                ?_i2c_reinicia_com 0001                               PID@D 00AA  
                             PID@I 00AE                               PID@P 00B2  
                     ___fltol@exp1 004A                       ?_escribe_rtc 0003  
                     __CFG_WDT$OFF 000000                               ?_abs 0013  
                             l1212 0F02                               l1300 1D8C  
                             l1215 0D94                               l1303 1D94  
                             l1208 0B9E                               l1225 0EC4  
                             l1217 0E0C                               l1218 0DFA  
                             l1306 3794                               l1314 34E4  
                             l1252 1C04                               l1181 10C0  
                             l1190 11A8                               l1263 1B9C  
                             l1176 129C                               l1256 1B40  
                             l1272 36A2                               l1344 3492  
                             l4001 110C                               l1249 1AA8  
                             l1329 2B7C                               l1337 3662  
                             l1353 37CA                               l1178 10FC  
                             l1187 1142                               l4003 1122  
                             l4011 1152                               l1347 39E0  
                             l1189 11BA                               l4013 1160  
                             l4005 1128                               l4101 1A64  
                             l1269 369A                               l4023 11CA  
                             l4031 1212                               l4015 1164  
                             l4007 1132                               l4111 1AE2  
                             l4103 1A72                               l5001 319A  
                             l4041 127C                               l4033 122C  
                             l4025 11D6                               l4017 1172  
                             l4009 1140                               l4121 1B36  
                             l4113 1AEA                               l4105 1AB8  
                             l4201 0068                               l5011 31FC  
                             l5003 319C                               l4043 128A  
                             l4035 1242                               l4027 11E4  
                             l4019 11A0                               l4131 1BAC  
                             l4123 1B72                               l4115 1AF6  
                             l4107 1ACE                               l4211 007E  
                             l4203 0070                               l5013 31FE  
                             l5005 31D0                               l5021 3970  
                             l4045 1290                               l4037 125C  
                             l4029 120E                               l4061 29D8  
                             l4141 1BF4                               l4133 1BB0  
                             l4125 1B7E                               l4117 1B28  
                             l4301 0394                               l4221 00E8  
                             l4213 008E                               l3501 1DCC  
                             l5101 2EB8                               l5015 3200  
                             l5007 31F8                               l5023 3974  
                             l4047 1292                               l4039 1278  
                             l4071 2A26                               l4063 2A02  
                             l4055 29AE                               l4135 1BD4  
                             l4127 1B8C                               l4119 1B2A  
                             l4151 392C                               l5111 27A0  
                             l4311 03C0                               l4303 0398  
                             l4231 0132                               l4215 009E  
                             l3511 1E28                               l3503 1DDA  
                             l3431 2AE2                               l4401 28E6  
                             l5017 3202                               l5009 31FA  
                             l5025 3986                               l4081 2A52  
                             l4065 2A04                               l4057 29C4  
                             l4137 1BE4                               l4129 1BAA  
                             l4153 3932                               l4145 39C8  
                             l5121 27E6                               l5113 27B4  
                             l4321 03F8                               l4313 03C6  
                             l4305 03B8                               l4241 015E  
                             l4233 0136                               l4217 00A6  
                             l4225 00F8                               l4209 0078  
                             l3521 1E92                               l3513 1E30  
                             l3505 1DFA                               l3433 2B00  
                             l3425 2AB4                               l3441 362C  
                             l3601 1634                               l4411 2924  
                             l4403 28EA                               l5019 3204  
                             l4163 3944                               l5027 3994  
                             l5035 353C                               l4091 2A82  
                             l4067 2A14                               l4139 1BF2  
                             l5051 20AC                               l4155 393A  
                             l4147 39CC                               l5123 27F0  
                             l5115 27BC                               l5131 2814  
                             l5107 278A                               l4323 0430  
                             l4315 03D6                               l4251 0196  
                             l4243 0164                               l4235 0156  
                             l4219 00B0                               l4227 0124  
                             l3531 1EDC                               l3523 1EB2  
                             l3515 1E44                               l3507 1DFE  
                             l3435 2B36                               l3427 2AC6  
                             l3443 363E                               l3451 37A6  
                             l3611 1690                               l3603 164E  
                             l4171 2D1A                               l4421 296C  
                             l4413 2932                               l4405 28FA  
                             l5029 3538                               l4093 2A92  
                             l4077 2A3E                               l4069 2A18  
                             l5053 213C                               l5045 20A4  
                             l4157 393C                               l4149 3928  
                             l5141 2858                               l5133 281C  
                             l5125 27F4                               l5117 27C0  
                             l5109 279C                               l4341 051E  
                             l4325 0468                               l4333 04C8  
                             l4317 03E6                               l4253 01CE  
                             l4245 0174                               l4261 023C  
                             l4229 0128                               l3701 1C22  
                             l3533 1EFC                               l3525 1EB4  
                             l3517 1E52                               l3509 1E0A  
                             l3541 239E                               l3429 2AD8  
                             l3445 3642                               l3453 37BE  
                             l3461 2BA2                               l3621 1730  
                             l3613 1698                               l3605 166A  
                             l4501 2E46                               l4181 2DB2  
                             l4173 2D22                               l4165 2D08  
                             l5221 2F34                               l4423 2976  
                             l4415 293C                               l4407 2910  
                             l5039 3558                               l4095 2AA2  
                             l4087 2A66                               l4079 2A48  
                             l5071 21A8                               l5063 2164  
                             l5055 2140                               l4159 393E  
                             l5143 286E                               l5135 2830  
                             l5127 2808                               l5119 27D6  
                             l4351 05A4                               l4327 0492  
                             l4319 03EE                               l4335 050C  
                             l4263 0240                               l4255 01F8  
                             l4247 0184                               l4191 0030  
                             l3711 1C7E                               l3703 1C3E  
                             l3527 1EC6                               l3519 1E64  
                             l3551 240E                               l3543 23BE  
                             l3439 3620                               l3447 3796  
                             l3471 2BE8                               l3463 2BB0  
                             l3631 17EC                               l3623 1736  
                             l3615 16A2                               l3607 167C  
                             l4503 2E4C                               l4175 2D2A  
                             l4167 2D10                               l5231 2F44  
                             l5223 2F3A                               l5215 2F18  
                             l4417 295A                               l4409 2918  
                             l4425 297C                               l4089 2A72  
                             l5081 220C                               l5073 21AC  
                             l5057 215C                               l5145 2890  
                             l5137 2840                               l5129 280C  
                             l4601 2550                               l4337 0510  
                             l4329 04B8                               l4281 029C  
                             l4265 024A                               l4249 018C  
                             l4193 0040                               l4345 053E  
                             l4513 3336                               l3713 1C94  
                             l3705 1C74                               l3529 1ECC  
                             l3561 2486                               l3553 2416  
                             l3545 23C2                               l3537 238C  
                             l3481 367E                               l3449 37A2  
                             l3473 2C16                               l3465 2BBC  
                             l3457 2B7E                               l3641 183E  
                             l3633 1806                               l3617 16A8  
                             l3625 179A                               l3609 168A  
                             l4441 2C62                               l4433 2C44  
                             l4505 2E52                               l4185 390C  
                             l4177 2D2E                               l4169 2D14  
                             l4521 358A                               l5241 2F56  
                             l5233 2F46                               l5225 2F3E  
                             l5217 2F2C                               l4427 298C  
                             l4419 296A                               l4099 1A54  
                             l5075 21C8                               l5139 2854  
                             l4611 25EC                               l4603 2598  
                             l4339 051A                               l4291 033A  
                             l4283 02A4                               l4275 0276  
                             l4267 024E                               l4259 0208  
                             l4347 0582                               l4195 0050  
                             l4187 0012                               l4515 333A  
                             l3483 375E                               l3731 1D70  
                             l3723 1D0E                               l3715 1C9C  
                             l3707 1C78                               l3563 2498  
                             l3555 242A                               l3547 23D0  
                             l3539 2390                               l3475 2C2A  
                             l3467 2BD0                               l3459 2B8E  
                             l3643 1850                               l3627 17B4  
                             l3635 1816                               l3619 172A  
                             l3811 0654                               l3803 0644  
                             l4451 2C96                               l4443 2C70  
                             l4435 2C48                               l4507 2E62  
                             l4179 2D54                               l4531 35BC  
                             l4523 358A                               l5091 2E94  
                             l5083 2E76                               l5251 2F82  
                             l5243 2F62                               l5235 2F4A  
                             l5227 2F40                               l5219 2F30  
                             l4429 299C                               l4701 0C54  
                             l5077 21EC                               l5069 216C  
                             l4541 3858                               l4613 25F0  
                             l4605 259C                               l3741 3426  
                             l4349 0594                               l4285 02AE  
                             l4277 027C                               l4269 026E  
                             l4197 0054                               l4189 002A  
                             l4517 335E                               l3581 34DE  
                             l3573 3494                               l3717 1CA4  
                             l3493 1D96                               l3557 2438  
                             l3565 249E                               l3549 23F0  
                             l3469 2BE4                               l3645 185C  
                             l3637 1828                               l3629 17D2  
                             l3661 1F52                               l3653 1F1E  
                             l3821 06D8                               l4381 3272  
                             l4621 345C                               l4461 2CD0  
                             l4453 2C9E                               l4445 2C78  
                             l4437 2C56                               l4509 2E6A  
                             l4533 35C2                               l4525 3590  
                             l5093 2E9C                               l5085 2E7C  
                             l5253 2F94                               l5245 2F74  
                             l5237 2F52                               l5229 2F42  
                             ?_map 001B                               ?_pad 0011  
                             l4391 28A6                               l3751 39D0  
                             l3487 3880                               l4711 0CAA  
                             l4703 0C64                               l3911 3226  
                             l5079 21F0                               l4551 38D6  
                             l4543 387C                               l4615 2628  
                             l4607 25A0                               l3743 3436  
                             l4287 02E6                               l4295 034A  
                             l4279 028C                               l4199 0062  
                             l4519 3362                               l3575 3498  
                             l3727 1D4C                               l3719 1CD8  
                             l3495 1D9A                               l3567 24AE  
                             l3559 2466                               l3479 3664  
                             l3647 1864                               l3639 1838  
                             l3591 15BA                               l3671 1FCA  
                             l3663 1F66                               l3655 1F30  
                             l3831 076E                               l3823 06FC  
                             l5511 0686                               l3815 0660  
                             l3807 064C                               l4383 327A  
                             l4623 3464                               l4471 2CF6  
                             l4463 2CD8                               l4455 2CA6  
                             l4447 2C7C                               l4439 2C5E  
                             l4527 3598                               l5095 2EA4  
                             l5087 2E84                               l5255 2F9C  
                             l5247 2F78                               l5239 2F54  
                             l4393 28B4                               l3585 38A6  
                             l3761 39C2                               l3753 39D4  
                             l3489 389C                               l3921 0F1E  
                             l4721 0D4E                               l4713 0CC6  
                             l4705 0C70                               l3913 3236  
                             l4537 30AC                               l4553 38E8  
                             l4801 3024                               l4377 37CC  
                             l4609 25BC                               l3745 343A  
                             l3737 33EE                               l5521 0360  
                             l4289 0310                               l4297 0386  
                             l4641 36DC                               l3577 34AC  
                             l3729 1D5E                               l5513 1CC2  
                             l3497 1DA8                               l3569 24CE  
                             l3649 1874                               l3593 15DA  
                             l3681 202A                               l3673 1FDE  
                             l3665 1F6E                               l3657 1F38  
                             l3841 07F8                               l3833 077C  
                             l3825 0732                               l3817 06B4  
                             l4385 3288                               l4625 3480  
                             l4617 3442                               l4473 2CFE  
                             l4465 2CDA                               l4457 2CB4  
                             l4449 2C84                               l4481 2DD6  
                             l4561 3140                               l4529 35AC  
                             l5097 2EB0                               l5089 2E8C  
                             l5249 2F7C                               l4395 28C4  
                             l3587 38A6                               l3755 39D8  
                             l3763 39C6                               l3931 0F52  
                             l3923 0F20                               l4731 0DA4  
                             l4723 0D5C                               l4715 0CD2  
                             l4707 0C80                               l4651 0B06  
                             l4643 0ADA                               l3915 3240  
                             l3907 3208                               l4547 38CE  
                             l4379 37EC                               l3739 3416  
                             l5523 04DE                               l4299 038A  
                             l5515 26DA                               l4635 36AC  
                             l3579 34DA                               l3499 1DC8  
                             l3595 1602                               l3691 2078  
                             l3683 202E                               l3675 1FE2  
                             l3667 1F7C                               l3659 1F4A  
                             l3851 088E                               l3843 0802  
                             l3827 0740                               l3819 06D6  
                             l4387 32AE                               l4619 3454  
                             l4467 2CE0                               l4459 2CBA  
                             l4491 2E0A                               l4483 2DDE  
                             l4563 3152                               l4811 3902  
                             l4571 3722                               l3771 3808  
                             l5507 2ECE                               l4397 28C8  
                             l4389 28A2                               l3589 38BC  
                             l3757 39DC                               l3941 0F84  
                             l3925 0F30                               l3933 0F5A  
                             l3917 0F04                               l4733 0DB2  
                             l4725 0D7A                               l4717 0CEE  
                             l4709 0C9A                               l4661 0B42  
                             l4653 0B16                               l4645 0AE6  
                             l3909 3218                               l4549 38CE  
                             l4805 382A                               l4581 24F8  
                             l3749 395C                               l5525 0554  
                             l5517 010E                               l4901 2750  
                             l4637 36BC                               l4629 36A4  
                             l3597 1622                               l3693 207C  
                             l3685 2032                               l3677 2000  
                             l3861 0918                               l3853 089C  
                             l3845 0810                               l3837 07C2  
                             l3829 074E                               l3781 05CA  
                             l5509 13E6                               l4469 2CE6  
                             l4493 2E12                               l4485 2DE2  
                             l4477 2DC4                               l4565 3190  
                             l4557 3128                               l4573 374C  
                             l4821 224A                               l4813 221E  
                             l3773 3810                               l4399 28D6  
                             l3759 39BE                               l3951 0FB8  
                             l3943 0F86                               l3935 0F6A  
                             l3927 0F40                               l3919 0F10  
                             l4743 0E1C                               l4751 0E64  
                             l4735 0DB6                               l4727 0D84  
                             l4719 0D18                               l4671 0B78  
                             l4663 0B48                               l4655 0B26  
                             l4647 0AF4                               l5527 1A3A  
                             l4807 399C                               l4591 2514  
                             l4583 2508                               l5519 021E  
                             l4903 2754                               l4639 36C0  
                             l3695 1C06                               l3599 1632  
                             l3679 200C                               l3871 09E0  
                             l3863 093C                               l3847 0834  
                             l3839 07D4                               l3791 061E  
                             l3783 05EE                               l4495 2E1A  
                             l4487 2DF0                               l4479 2DC8  
                             l4567 3194                               l4559 3130  
                             l4575 375A                               l4831 2284  
                             l4815 2226                               l3775 3824  
                             l3767 37FE                               l5529 356C  
                             l3961 0FFE                               l3945 0F96  
                             l3953 0FC0                               l3937 0F70  
                             l3929 0F50                               l4761 0ED8  
                             l4753 0E7E                               l4745 0E28  
                             l4737 0DC4                               l4729 0D92  
                             l4673 0B88                               l4665 0B56  
                             l4657 0B2C                               l4649 0AF6  
                             l4593 2544                               l4585 250C  
                             l4905 275E                               l3697 1C1A  
                             l3689 2064                               l3881 0A68  
                             l3873 0A16                               l3865 0984  
                             l3857 08E2                               l3849 086E  
                             l3793 0622                               l3785 05FC  
                             l4497 2E28                               l4489 2DF8  
                             l4809 38EC                               l4841 22D6  
                             l4817 2234                               l3777 3826  
                             l3769 3802                               l4921 305E  
                             l3971 1026                               l3963 1002  
                             l3955 0FD0                               l3947 0FA6  
                             l3939 0F76                               l4763 0EE6  
                             l4755 0E92                               l4747 0E36  
                             l4739 0DF2                               l4691 0C0A  
                             l4683 0BD2                               l4675 0B8E  
                             l4667 0B58                               l4659 0B3C  
                             l4595 2548                               l4579 24F0  
                             l4907 276E                               l3699 1C1E  
                             l3883 0A7C                               l3859 08F4  
                             l3795 0634                               l3787 060E  
                             l4931 12C4                               l4499 2E3E  
                             l4851 235E                               l4843 22DA  
                             l4827 2252                               l4819 2238  
                             l4923 3070                               l4915 302C  
                             l3981 1074                               l3957 0FE6  
                             l3949 0FB6                               l4765 0EE8  
                             l4757 0EAC                               l4749 0E60  
                             l4693 0C22                               l4685 0BDE  
                             l4677 0BAE                               l4669 0B68  
                             l4781 19E4                               l4773 189E  
                             l4909 2782                               l3877 0A36  
                             l3869 09BC                               l3789 0612  
                             l3893 0AA2                               l4941 1364  
                             l4933 12D4                               l4861 3710  
                             l4853 237A                               l4845 22F6  
                             l4837 228C                               l4829 2280  
                             l4925 30A0                               l4917 303C  
                             l3991 10BE                               l3983 1084  
                             l3975 103A                               l3959 0FF6  
                             l3967 1016                               l4759 0EC8  
                             l4767 0EEE                               l4695 0C2E  
                             l4687 0BE8                               l4679 0BBE  
                             l4775 18FE                               l4791 2FA8  
                             l4871 2678                               l3895 0AC6  
                             l3879 0A5A                               l3887 0A88  
                             l3799 063C                               l4943 1388  
                             l4935 12F8                               l4951 1424  
                             l4863 371A                               l4847 2324  
                             l4839 22D2                               l4855 2384  
                             l4927 30A4                               l4919 304E  
                             l3993 10CA                               l3985 108C  
                             l3977 1054                               l3969 1026  
                             l4769 0EF2                               l4697 0C3A  
                             l4689 0BFE                               l4785 1A26  
                             l4777 191C                               l4793 2FAC  
                             l4881 26A0                               l4873 2688  
                             l4865 2646                               l3889 0A96  
                             l4961 14A6                               l4953 146C  
                             l4945 13AC                               l4937 131C  
                             l4929 129E                               l4857 36E4  
                             l4849 2328                               l3995 10E8  
                             l3987 109C                               l3979 1064  
                             l4699 0C48                               l4779 19A2  
                             l4795 2FCE                               l4891 26C6  
                             l4867 2656                               l4971 1592  
                             l4963 152A                               l4939 1340  
                             l4859 36FA                               l3997 10EA  
                             l3989 10B0                               l4797 2FEE  
                             l4893 26F0                               l4885 26B6  
                             l4869 2668                               l4973 15AE  
                             l4965 154C                               l4949 13D0  
                             l4981 34E6                               l3999 10FA  
                             l4799 3020                               l4887 26BE  
                             l4895 271C                               l4879 2690  
                             l4991 35F0                               l4975 15B2  
                             l4967 1580                               l4959 1476  
                             l4983 34FC                               l4897 2720  
                             l4993 3608                               l4969 158C  
                             l4985 3522                               l4899 273C  
                             l4995 3618                               l4987 352E  
                             l4997 3198                               l4989 35D4  
                             l4999 3198                       ?_leer_eeprom 0003  
                             STR_1 7D72                               STR_2 7F1A  
                             STR_3 7D23                               STR_4 7C99  
                             STR_5 7EDB                               STR_6 7EB9  
                             STR_7 7F4F                               STR_8 7F35  
                             STR_9 7E06                               u3000 07BC  
                             u3001 07B6                               u3010 07BE  
                             u2300 2B00                               u3100 09E0  
                             u3020 07D4                               u2301 2AFC  
                             u3101 09DC                               u3021 07D0  
                             u2310 2B36                               u3110 0A5A  
                             u3030 07F8                               u2311 2B32  
                             u3111 0A56                               u3031 07F4  
                             u3200 0FE6                               u4000 0B68  
                             u3120 3226                               u2400 3790  
                             u2320 3662                               u3040 0834  
                             u3201 0FE2                               u4001 0B64  
                             u3121 3222                               u2321 365E  
                             u3041 0830                               u3210 1026  
                             u4010 0B78                               u3130 3260  
                             u2410 1DA8                               u2330 37BE  
                             u3050 08DC                               u3211 1022  
                             u4011 0B74                               u3131 325C  
                             u2411 1DA4                               u2331 37BA  
                             u3051 08D6                               u3300 11A0  
                             u3220 109C                               u3140 0F1E  
                             u4100 0E1C                               u4020 0BAE  
                             u2420 1DDA                               u2500 240E  
                             u2340 2B8E                               u3060 08DE  
                             u3301 119C                               u3221 1098  
                             u3141 0F1A                               u4101 0E18  
                             u4021 0BAA                               u2421 1DD6  
                             u2501 240A                               u2341 2B8A  
                             u3310 11B6                               u3230 10BE  
                             u3150 0F30                               u4110 0E36  
                             u4030 0BBE                               u2510 2438  
                             u2350 2BB0                               u3070 08F4  
                             u3311 11B2                               u3231 10BA  
                             u3151 0F2C                               u4111 0E32  
                             u4031 0BBA                               u2431 1E04  
                             u2511 2434                               u2351 2BAC  
                             u3071 08F0                               u3320 11CA  
                             u3240 10E8                               u3160 0F40  
                             u4120 0E7E                               u4040 0D38  
                             u3400 2A3A                               u4200 3020  
                             u2440 1E28                               u2520 2466  
                             u2280 2AC6                               u2360 2C06  
                             u2600 1602                               u3080 0918  
                             u3321 11C6                               u3241 10E4  
                             u3161 0F3C                               u4121 0E7A  
                             u3401 2A36                               u4201 301C  
                             u2441 1E24                               u2521 2462  
                             u2281 2AC2                               u2361 2C02  
                             u2601 15FE                               u3081 0914  
                             u3330 11E4                               u3250 110C  
                             u3170 0F84                               u4130 0EAC  
                             u4050 0D92                               u3410 2A62  
                             u2450 1E52                               u2530 24AE  
                             u2290 2AD8                               u2370 2C16  
                             u2610 1632                               u3090 093C  
                             u4210 3902                               u3331 11E0  
                             u3251 1108                               u3171 0F80  
                             u4131 0EA8                               u4051 0D8E  
                             u3411 2A5E                               u2451 1E4E  
                             u2531 24AA                               u2291 2AD4  
                             u2371 2C12                               u2611 162E  
                             u3091 0938                               u4211 38FE  
                             u3340 122C                               u3260 1122  
                             u3180 0F96                               u4140 0EE6  
                             u4060 0DB2                               u3420 2A82  
                             u3500 1B9C                               u4300 273C  
                             u2540 34AC                               u2460 1E92  
                             u2380 367E                               u2700 1828  
                             u2620 164E                               u4220 224A  
                             u3341 1228                               u3261 111E  
                             u3181 0F92                               u4141 0EE2  
                             u4061 0DAE                               u4045 0D2E  
                             u3421 2A7E                               u3501 1B98  
                             u4301 2738                               u2541 34A8  
                             u2461 1E8E                               u2381 367A  
                             u2701 1824                               u2621 164A  
                             u4221 2246                               u3350 125C  
                             u3270 1140                               u3190 0FA6  
                             u4070 0DC4                               u3430 2A92  
                             u3510 1BAA                               u4150 191C  
                             u4310 276E                               u2390 378E  
                             u2550 34DA                               u2470 1EDC  
                             u2710 1838                               u2630 167C  
                             u4230 22F6                               u3351 1258  
                             u3271 113C                               u3191 0FA2  
                             u4071 0DC0                               u3431 2A8E  
                             u3511 1BA6                               u4151 1918  
                             u4311 276A                               u2391 3788  
                             u2551 34D6                               u2471 1ED8  
                             u2711 1834                               u2631 1678  
                             u4231 22F2                               u2560 38BC  
                             u3360 128A                               u3280 1160  
                             u4080 0DF2                               u3520 1BE4  
                             u3440 1A64                               u4400 279C  
                             u3600 0184                               u2480 239E  
                             u2720 1850                               u2640 168A  
                             u2800 2060                               u4240 237A  
                             u4320 304E                               u2561 38B8  
                             u3361 1286                               u3281 115C  
                             u4081 0DEE                               u3521 1BE0  
                             u3441 1A60                               u4401 2798  
                             u3601 0180                               u2481 239A  
                             u2721 184C                               u2641 1686  
                             u2801 205C                               u4241 2376  
                             u4321 304A                               u2570 38CA  
                             u3290 1172                               u4090 0E08  
                             u3370 29C4                               u3530 1BF2  
                             u3450 1A72                               u4410 27B4  
                             u3610 026A                               u2490 23D0  
                             u2650 17B4                               u2810 209A  
                             u4250 36FA                               u4330 3070  
                             u2571 38C6                               u3291 116E  
                             u4091 0E04                               u3371 29C0  
                             u3531 1BEE                               u3451 1A6E  
                             u4411 27B0                               u3611 0266  
                             u2491 23CC                               u2651 17B0  
                             u2811 2096                               u2731 1F28  
                             u4251 36F6                               u4331 306C  
                             u3380 29F8                               u3460 1ACE  
                             u4180 2FCE                               u4420 27D6  
                             u2900 3426                               u3620 028C  
                             u3540 0040                               u2820 1C3E  
                             u2660 17D2                               u2580 15EA  
                             u2740 1F4A                               u3700 32CA  
                             u4340 14A6                               u4260 3710  
                             u3461 1ACA                               u4165 19B6  
                             u4181 2FCA                               u4421 27D2  
                             u2901 3422                               u3621 0288  
                             u3541 003C                               u2821 1C3A  
                             u2661 17CE                               u2581 15E4  
                             u2741 1F46                               u3701 32C6  
                             u4341 14A2                               u4261 370C  
                             u3710 28B4                               u3390 2A26  
                             u3470 1B24                               u4166 19C0  
                             u4190 2FEE                               u4430 2830  
                             u2910 3436                               u3630 029C  
                             u3550 0050                               u4270 2668  
                             u2830 1C74                               u2670 17EC  
                             u2590 15EC                               u2750 1F7C  
                             u4350 15AE                               u3711 28B0  
                             u3391 2A22                               u3471 1B20  
                             u4175 19F8                               u4167 19D0  
                             u4191 2FEA                               u4431 282C  
                             u2911 3432                               u3631 0298  
                             u3551 004C                               u4271 2664  
                             u2831 1C70                               u2671 17E8  
                             u2751 1F78                               u4351 15AA  
                             u3720 28D6                               u3480 1B6E  
                             u4176 1A02                               u4440 2840  
                             u2920 396E                               u3640 03B4  
                             u3560 008E                               u4280 2688  
                             u4360 3608                               u2840 1C90  
                             u2680 1806                               u2760 1F9A  
                             u3800 2CB4                               u3721 28D2  
                             u3385 29EE                               u3481 1B6A  
                             u4177 1A12                               u4441 283C  
                             u2921 396A                               u3641 03B0  
                             u3561 008A                               u4281 2684  
                             u4361 3604                               u2841 1C8C  
                             u2681 1802                               u2761 1F96  
                             u3801 2CB0                               u3730 2910  
                             u3490 1B8C                               u4370 215C  
                             u4450 286E                               u3650 03D6  
                             u3570 009E                               u4290 26B2  
                             u2850 1D46                               u2690 1816  
                             u2770 1FC6                               u3810 2CD0  
                             u2930 3822                               u4530 2F74  
                             u3731 290C                               u3491 1B88  
                             u4371 2158                               u4451 286A  
                             u3651 03D2                               u3571 009A  
                             u4291 26AE                               u2851 1D40  
                             u2691 1812                               u2771 1FC2  
                             u3811 2CCC                               u2931 381C  
                             u4531 2F70                               u3740 2932  
                             u4380 21C8                               u3660 03E6  
                             u3580 0152                               u3900 3382  
                             u2860 1D48                               u2780 2000  
                             u3820 2CF6                               u4540 2F94  
                             u3741 292E                               u4381 21C4  
                             u3661 03E2                               u3581 014E  
                             u2781 1FFC                               u3821 2CF2  
                             u4541 2F90                               u3750 295A  
                             u4390 220C                               u3670 053A  
                             u3590 0174                               u3910 3392  
                             u2870 1D5E                               u2790 2050  
                             u2950 05EE                               u3830 2DD6  
                             u3751 2956                               u4391 2208  
                             u3671 0536                               u3591 0170  
                             u3911 338E                               u2871 1D5A  
                             u2791 204C                               u2951 05EA  
                             u3831 2DD2                               u3760 298C  
                             u3680 0594                               u2880 1D70  
                             u2960 06C6                               u3840 2DF0  
                             u3920 3152                               u3761 2988  
                             u3681 0590                               u2881 1D6C  
                             u2961 06C2                               u3841 2DEC  
                             u3921 314E                               u2945 3824  
                             u3930 25BC                               u2890 3416  
                             u3690 05A4                               u2970 06D6  
                             u3770 2C56                               u3850 2E0A  
                             u3931 25B8                               u2891 3412  
                             u3691 05A0                               u3907 3378  
                             u2971 06D2                               u3771 2C52  
                             u3851 2E06                               u3940 2644  
                             u2980 06FC                               u3780 2C70  
                             u3860 2E28                               u3941 2640  
                             u2981 06F8                               u3781 2C6C  
                             u3861 2E24                               u4557 35B2  
                             u3950 36DC                               u2990 0740  
                             u3790 2C96                               u3870 2E3E  
                             u3951 36D8                               u2991 073C  
                             u3791 2C92                               u3871 2E3A  
                             u4567 3752                               u3960 0AF4  
                             u3880 2E62                               u3961 0AF0  
                             u4577 37F2                               u3881 2E5E  
                             u3970 0B06                               u3890 335A  
                             u4587 398C                               u3971 0B02  
                             u3980 0B16                               u3981 0B12  
                             u3990 0B56                               u3991 0B52  
                             u3897 3350                               _TMR0 000FD6  
             _minutosTranscurridos 00C2                 ??_i2c_reinicia_com 0002  
          escribeHorariosMemoria@i 0011            escribeHorariosMemoria@j 000D  
                    ??_i2c_detener 0002                               abs@a 0013  
                             _dbuf 0132                               _atoi 1C06  
                             _main 2F18                               _dtoa 15BA  
                             _hora 00D1                               _prec 00BE  
                             _nout 00BA                               pad@i 0018  
                             pad@p 0015                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001A                               map@x 001B  
                             fsr2l 000FD9                               _stoa 1F1E  
                             btemp 005F           __size_of_asignarHorarios 0144  
                    ??_i2c_iniciar 0001                               prodh 000FF4  
                             prodl 000FF3                               start 000E  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0020  
         __size_of_asignarSetPoint 004C                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000000                 _leeHorariosMemoria 221E  
                            ??_abs 0015                              ??_map 002F  
                            ??_pad 0017                     _i2c_envia_dato 39BC  
                    __CFG_PLLDIV$1 000000                     _i2c_inicia_com 39D0  
                   __CFG_CCP2MX$ON 000000                      ___fltol@sign1 0049  
                  __end_of___aldiv 29AE                    __end_of___aodiv 1F1E  
                            ?_atoi 0008                              ?_main 0001  
                            ?_dtoa 001C                    __end_of___aomod 24F0  
                            _ACKEN 007E2C                              _ACKDT 007E2D  
                    _convertirDato 38CC                    __end_of___fldiv 129E  
                  __end_of___awdiv 2D08                              STR_10 7FD0  
                            STR_20 7FDE                              STR_12 7FAC  
                            STR_21 7EFB                              STR_13 7D97  
                            STR_30 7F97                              STR_14 7E96  
                            STR_22 7CD0                              STR_15 7E4E  
                            STR_23 7CFA                              STR_24 7DE1  
                            STR_16 7D4B                              STR_25 7F68  
                            STR_17 7E72                              STR_26 7F80  
                            STR_18 7DBC                              STR_27 7FBF  
                            STR_19 7E2A                   ??_bh1750_iniciar 0004  
                            STR_28 7FF6                    __end_of___awmod 2E74  
                            STR_29 7FEB                    __end_of___flmul 0F04  
                  __end_of___fltol 2AB4                              ?_stoa 000A  
                convertirDato@dato 0002                              _T0CON 000FD5  
                  ___awdiv@divisor 0003                ?_leeHorariosMemoria 0001  
                            i2l449 3332                    ___awdiv@counter 0005  
                            _RCREG 000FAE                       vfpfcnvrt@fmt 0042  
                            _SPBRG 000FAF                      __CFG_USBDIV$1 000000  
                   limpiarBuffer@i 0001                              _TXREG 000FAD  
                    __CFG_PWRT$OFF 000000                __end_of_bh1750_leer 2DC4  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                ___lmul@multiplicand 0005  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
               __size_of_UART_init 0070                 __size_of_UART_read 0054  
                            _flags 00C0                              _fputc 2AB4  
                            _fputs 3620                    __end_of_isdigit 3796  
                _setTiempoIluminar 302C                        ?_UART_write 0001  
                            atoi@n 0015                              pad@fp 0011  
                            atoi@s 0008                              _width 00BC  
                            _putch 39E0                              dtoa@d 001E  
                            dtoa@i 003E                              dtoa@n 0036  
                            dtoa@p 0030                              dtoa@s 0034  
                            dtoa@w 0032                    __end_of_isspace 34E6  
       asignarHorarios@diaIluminar 0027                              tablat 000FF5  
                  __end_of_pwmDuty 1A52                 ?_setTiempoIluminar 0001  
                            plusw1 000FE3                              plusw2 000FDB  
                            stoa@i 0016                              stoa@l 001E  
                            stoa@p 001C                              stoa@s 000C  
                            stoa@w 0018                              ttemp5 0060  
                            ttemp6 0063                              ttemp7 0067  
                            status 000FD8                              wtemp8 0060  
                  __end_of_sprintf 3494                 escribe_eeprom@dato 0009  
             ??_leeHorariosMemoria 0007                     __CFG_ICPRT$OFF 000000  
                    ?_horaIluminar 0001                         _i2c_espera 38A6  
                 ??_dameHoraActual 0005                ??_setTiempoIluminar 0023  
                  __initialization 3394        i2c_recibe_datoACK@datoleido 0003  
              __end_of_i2c_detener 39E0             __end_of_i2c_envia_dato 39C8  
                     __end_of_atoi 1D96                       __end_of_main 2FA8  
                     __end_of_dtoa 189E           ??_escribeHorariosMemoria 000B  
                     __end_of_stoa 20A4             __end_of_i2c_inicia_com 39D8  
               _inicializarObjetos 20A4                __end_of_i2c_iniciar 3986  
           sistemaPrincipal@opcion 005E                     ?_convertirDato 0001  
             __size_of_fijaHoraRtc 003E                             ??_atoi 000A  
                           ??_main 005F                             ??_dtoa 0026  
                           ??_stoa 000E                      __activetblptr 000002  
              ?_inicializarObjetos 0001                 i2c_envia_dato@dato 0002  
            __size_of_dameValorLux 004E          __end_of_setTiempoIluminar 30AC  
      __size_of_i2c_recibe_datoACK 002E                             _CCP1M2 007DEA  
                           _CCP1M3 007DEB                  ??_bh1750_escribir 0003  
                           _CCP2M2 007DD2                             _CCP2M3 007DD3  
         __end_of_sistemaIluminado 28A2                             ?_fputc 0001  
                           ?_fputs 000A                             _CCPR1L 000FBE  
                           _CCPR2L 000FBB                   ___awdiv@dividend 0001  
                           ?_putch 0001                 convertirDato@datoR 0003  
                           i2l5201 32F8                             i2l5211 3328  
                           i2l5203 3308                             i2l5213 332C  
                           i2l5205 330C                             i2l5207 330E  
                           i2l5209 331A                             i2l5195 32D6  
                           i2l5197 32E4                             i2l5199 32F6  
                    vfpfcnvrt@done 0054                             _TMR2ON 007E52  
                           _SSPADD 000FC8                             _TRISC1 007CA1  
                           _TRISC2 007CA2                             _SSPBUF 000FC9  
                 __end_of___xxtofl 1C06                     ??_horaIluminar 0003  
             ??_inicializarObjetos 0057                     __CFG_XINST$OFF 000000  
                 __end_of_getValue 05CA                       vfprintf@cfmt 005A  
         __end_of_sistemaPrincipal 2F18                     _escribe_eeprom 37CC  
                           ___lmul 3208                    ?_i2c_envia_dato 0001  
                        ??___aldiv 0015                          ??___aodiv 0011  
                        ??___aomod 0011                             ___wmul 3880  
                __end_of_UART_init 3208                  __end_of_UART_read 3442  
                        ??___fldiv 0017                          ??___awdiv 0005  
                        ??___awmod 0005                          ??___flmul 0030  
                        ??___fltol 0045                  ??_asignarHorarios 0023  
                 __end_of_leer_rtc 3880                       _dameValorLux 3586  
                  ?_i2c_inicia_com 0001                             _buffer 0100  
                      _bh1750_leer 2D08                __size_of_UART_write 0016  
                     ?_UART_printf 0002                             clear_0 33BC  
                           clear_1 33CE                             clear_2 33DA  
                 ___awdiv@quotient 0007                    ___awmod@divisor 0003  
                           _setRtc 3126                  ??_asignarSetPoint 0023  
                  ___awmod@counter 0005                             pad@buf 0013  
                           dtoa@fp 001C                             _strlen 3796  
                  _i2c_recibe_dato 3928             __size_of_dameDiaActual 0010  
                           fputc@c 0001                             fputs@c 000E  
                           fputs@i 000F                             fputs@s 000A  
                        ??_isdigit 0003               escribe_rtc@direccion 0004  
                     __mediumconst 7C98                          ??_isspace 0003  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ??_pwmDuty 004E  
     __end_of_mostrarDatosSensores 3536                             stoa@cp 001A  
                           stoa@fp 000A                             putch@c 0001  
                 __end_of_vfprintf 32D4                          ??_sprintf 005C  
                     ___xxtofl@arg 000B                       ___xxtofl@exp 000A  
                     ___xxtofl@val 0001                         __accesstop 0060  
          __end_of__initialization 33E0               __size_of_escribe_rtc 001E  
                  __CFG_PBADEN$OFF 000000               __size_of_leer_eeprom 003C  
                  __CFG_FOSC$XT_XT 000000                        _i2c_detener 39D8  
                    ___rparam_used 000001                         ___fltol@f1 0041  
                      _i2c_iniciar 3970             __end_of_escribe_eeprom 37FC  
                      ?_i2c_espera 0001    leeHorariosMemoria@caracterLeido 0009  
                   __pcstackCOMRAM 0001                       leer_rtc@dato 0004  
                     __pidataBANK0 39AC    __size_of_escribeHorariosMemoria 0156  
                  ??_convertirDato 0001                      __end_of_fputc 2B7E  
                    __end_of_fputs 3664                      __end_of_putch 39E2  
             dameValorLux@valorLux 0061             __size_of_limpiarBuffer 0040  
                     _datoRecibido 00CD        asignarSetPoint@setPointTemp 0023  
       __size_of_setTiempoIluminar 0080                 __size_of_configPwm 0050  
                        PID@difAnt 00A6                  ?_dameDatosSistema 0001  
                          ??_fputc 0005                            ??_fputs 000E  
                          ??_putch 0001                         __pbssBANK0 00A6  
                       __pbssBANK1 0100                 ??_dameDatosSistema 005C  
          __size_of_desbordamiento 332E                      _dameDiaActual 399C  
                  ?_escribe_eeprom 0007                         _fijaDiaRtc 38EC  
               _contInterrupciones 00C6          __size_of_i2c_reinicia_com 0008  
                          ?___lmul 0001                            ?___wmul 0001  
          __end_of_i2c_recibe_dato 3942                            _CCP1CON 000FBD  
                          _CCP2CON 000FBA                            _ACKSTAT 007E2E  
                   ___lmul@product 0009                            ?_setRtc 0001  
                          ?_strlen 0001                            _T2CKPS0 007E50  
                          _T2CKPS1 007E51               __end_of_horaIluminar 302C  
                        ?___xxtofl 0001                 __size_of_vfpfcnvrt 0510  
              __size_of_i2c_espera 0026                          ?_getValue 000D  
           _escribeHorariosMemoria 24F0                            _SSPCON1 000FC6  
                          _SSPCON2 000FC5                       ??_UART_write 0001  
                          _SSPSTAT 000FC7                          ?_leer_rtc 0001  
                  __CFG_VREGEN$OFF 000000                     ?_dameDiaActual 0001  
                  _minutosIluminar 00C4                      _limpiarBuffer 36A4  
                          __Hparam 0000                            __Lparam 0000  
                __end_of_configPwm 3586                            ___aldiv 28A2  
                          ___aodiv 1D96                            ___aomod 238C  
                          ___fldiv 0F04                            ___awdiv 2C44  
                  __size_of___lmul 006A               _mostrarDatosSensores 34E6  
                          ___awmod 2DC4                            ___flmul 0ADA  
                          ___fltol 29AE                    __size_of___wmul 0026  
                        ?_vfprintf 0060                    __CFG_STVREN$OFF 000000  
                          __pcinit 3394                    _bh1750_escribir 3942  
                          __ramtop 0800                 __end_of_UART_write 3970  
                  __size_of_setRtc 0072                            __ptext0 2F18  
                          __ptext1 2E74                            __ptext2 302C  
                          __ptext3 34E6                            __ptext4 3586  
                          __ptext5 2D08                            __ptext6 37FC  
                          __ptext7 221E                            __ptext8 3722  
                          __ptext9 36E4                          _T0CONbits 000FD5  
                  __size_of_strlen 0036               __size_of_UART_printf 005E  
                     __size_of_abs 0040                i2c_recibe_datoACK@a 0002  
                     __size_of_map 007A                       __size_of_pad 00C6  
                          _isdigit 375E                         ??___xxtofl 0005  
                       _iluminando 00C9                   ___awmod@dividend 0001  
                 ___aldiv@dividend 000D                            _isspace 3494  
                          _minutos 00D0                            _pwmDuty 189E  
                          atoi@neg 000E                         ??_getValue 0011  
                          _sprintf 3442                     __pintcode_body 32D4  
                ?_sistemaIluminado 0001               end_of_initialization 33E0  
                       ??_leer_rtc 0003                            fputc@fp 0003  
               ??_sistemaIluminado 0057                     ?_limpiarBuffer 0001  
                  _asignarHorarios 2646                      __Lmediumconst 7C98  
                          int_func 32D4                            fputs@fp 000C  
                 ??_i2c_envia_dato 0002        __size_of_leeHorariosMemoria 016E  
                  _asignarSetPoint 35D4                   ??_i2c_inicia_com 0002  
                      ?_fijaDiaRtc 0001                   _VALOR_TIMER0UART 00E4  
                __end_of_vfpfcnvrt 0ADA                          _RCSTAbits 000FAB  
                 ___aldiv@quotient 0017              ?_mostrarDatosSensores 0001  
                          postdec1 000FE5                            postdec2 000FDD  
                ?_sistemaPrincipal 0001            _peticionLecturaSensores 00C8  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                      ??_fijaHoraRtc 0027  
                 ?_i2c_recibe_dato 0001                         ??_vfprintf 005A  
  setTiempoIluminar@tiempoIluminar 0024                      setRtc@datoRtc 0025  
                     ?_bh1750_leer 004B                 ??_sistemaPrincipal 00A4  
                          strlen@a 0003                            strlen@s 0001  
                        _UART_init 3198                         getValue@Rx 0022  
                        _UART_read 33EE         __end_of_i2c_recibe_datoACK 382A  
                    setRtc@seteado 0024                        pwmDuty@duty 0053  
                    ___xxtofl@sign 0009                          _TRISBbits 000F93  
                        _TRISCbits 000F94                        ___fldiv@grs 0022  
                      ___fldiv@rem 001B                   _horaIluminar$589 0006  
                  ??_dameDiaActual 0005            __size_of_bh1750_iniciar 0016  
                       map@out_max 002B                         map@out_min 0027  
                   _desbordamiento 0008                     _esperandoDatos 00D3  
                      ___flmul@grs 0035                     _UART_init$1629 0023  
                     ?_i2c_detener 0001                          _TXSTAbits 000FAC  
                dameDatosSistema@i 00A2        __size_of_inicializarObjetos 017A  
                     ?_i2c_iniciar 0001                       ??_i2c_espera 0001  
          __end_of_bh1750_escribir 395A                   _i2c_reinicia_com 39C8  
                   __end_of___lmul 3272              __size_of_horaIluminar 0084  
                      vfpfcnvrt@ap 0044                        vfpfcnvrt@cp 0052  
                      vfpfcnvrt@fp 0040                        vfpfcnvrt@ll 004A  
                   __end_of___wmul 38A6                         ?_UART_init 001B  
                       ?_UART_read 0001            __size_of_dameHoraActual 002C  
                   __end_of_setRtc 3198                __end_of_fijaHoraRtc 3722  
                   __end_of_strlen 37CC                start_initialization 3394  
                      __end_of_abs 36A4                        __end_of_map 3126  
          __end_of_asignarHorarios 278A                        __end_of_pad 2C44  
              __size_of_fijaDiaRtc 001E  escribeHorariosMemoria@contMemoria 000F  
           __end_of_desbordamiento 3336                 __end_of_i2c_espera 38CC  
                    ??_escribe_rtc 0004                      ??_leer_eeprom 0005  
                  ??_limpiarBuffer 0001            __end_of_asignarSetPoint 3620  
                 ??_escribe_eeprom 000A                leeHorariosMemoria@i 000E  
              leeHorariosMemoria@j 000A                pwmDuty@cicloTrabajo 004B  
                     _horaIluminar 2FA8              _dameDatosSistema$1630 009A  
            _dameDatosSistema$1631 009C              _dameDatosSistema$1632 009E  
            _dameDatosSistema$1633 00A0              setTiempoIluminar@hora 0025  
           ??_mostrarDatosSensores 005C                        vfprintf@fmt 0062  
        __size_of_dameDatosSistema 031C                           ??___lmul 0009  
                         ??___wmul 0005                        __pdataBANK0 00D7  
                 __CFG_LPT1OSC$OFF 000000                  leer_rtc@direccion 0003  
                         ??_setRtc 0023              __end_of_convertirDato 38EC  
                         ??_strlen 0003                          ___fldiv@a 0013  
                        ___fldiv@b 000F                        __pbssBIGRAM 0152  
          ?_escribeHorariosMemoria 0001                          ___flmul@a 002C  
                        ___flmul@b 0028                      __pcstackBANK0 0060  
                 ___aodiv@dividend 0001      dameDatosSistema@bufferHorario 007C  
                __size_of___xxtofl 01B4                    ?_desbordamiento 0001  
                        _diaActual 00CE            inicializarObjetos@i_592 005B  
                __size_of_getValue 05B8             getValue@datoIncorrecto 0015  
                UART_printf@cadena 0002                          _atoi$1286 0010  
                        _atoi$1287 0014                          _atoi$1288 0012  
                __size_of_leer_rtc 002A                __end_of_escribe_rtc 3928  
              __end_of_leer_eeprom 375E                   ?_bh1750_escribir 0001  
                        __pintcode 0008                      __pmediumconst 7C98  
                         ?___aldiv 000D                           ?___aodiv 0001  
                         ?___aomod 0001                           ?___fldiv 000F  
                         ?___awdiv 0001                   ___aodiv@quotient 0013  
                         ?___awmod 0001                           ?___flmul 0028  
                         ?___fltol 0041                        _fijaHoraRtc 36E4  
                        _configPwm 3536                         setRtc@dato 0026  
                      ??_UART_init 001F                        ??_UART_read 0001  
                __size_of_vfprintf 0062     __end_of_escribeHorariosMemoria 2646  
             __size_of_bh1750_leer 00BC                           ?_isdigit 0001  
                         ?_isspace 0001                           ?_pwmDuty 004B  
                 ?_asignarHorarios 0001                           ?_sprintf 0066  
                   __size_of_fputc 00CA                     __size_of_fputs 0044  
                   _bh1750_iniciar 3986                     __size_of_putch 0002  
                 ?_asignarSetPoint 0001                      _flagIluminado 00CA  
                  ___aldiv@divisor 0011                    ___aldiv@counter 0015  
                   ___wmul@product 0005                           _PIE1bits 000F9D  
             __size_of_i2c_detener 0008                       ??_fijaDiaRtc 0027  
                        _luzMedida 00B6                           _PIR1bits 000F9E  
                         i2u450_40 32F6                           i2u450_41 32F2  
                         i2u451_40 3308                           i2u451_41 3304  
                         i2u452_40 3328                           i2u452_41 3324  
                         i2u449_40 32E4                           i2u449_41 32E0  
             __size_of_i2c_iniciar 0016                   __CFG_WDTPS$32768 000000  
           _tiempoInactividadTrans 00D6      leeHorariosMemoria@contMemoria 000C  
              asignarHorarios@hora 0028          __size_of_sistemaIluminado 0118  
                    ?_dameValorLux 0057                          getValue@i 0016  
                    ??_UART_printf 0004                          _vfpfcnvrt 05CA  
                       ?_configPwm 0001                          map@in_max 0023  
                        map@in_min 001F                     _dameHoraActual 382A  
                ___wmul@multiplier 0001                   configPwm@channel 0003  
                   UART_write@dato 0001             __end_of_bh1750_iniciar 399C  
                     _isspace$1304 0007          __size_of_sistemaPrincipal 00A4  
         __end_of_i2c_reinicia_com 39D0                 __end_of_fijaDiaRtc 390A  
                ___lmul@multiplier 0001                          copy_data0 33A8  
                      _escribe_rtc 390A                        _leer_eeprom 3722  
                     _VALOR_TIMER0 00E2         __end_of_leeHorariosMemoria 238C  
               _i2c_recibe_datoACK 37FC                       _reiniciarPID 00D2  
                         __Hrparam 0000              getValue@numCharacters 000D  
                    UART_init@BAUD 001B                         vfprintf@ap 0064  
                         __Lrparam 0000                         vfprintf@fp 0060  
                 _dameDatosSistema 129E                ?_i2c_recibe_datoACK 0001  
                   ??_dameValorLux 005B                _esperaDatoConcluida 00D4  
                 __size_of___aldiv 010C                   __size_of___aodiv 0188  
                 __size_of___aomod 0164                   __size_of___fldiv 039A  
                 __size_of___awdiv 00C4             __end_of_dameHoraActual 3856  
                 __size_of___awmod 00B0                   __size_of___flmul 042A  
                 __size_of___fltol 0106                   bh1750_leer@valor 0053  
                       ?_vfpfcnvrt 0040                    ___aodiv@divisor 0009  
                  ___aodiv@counter 0011                         sprintf@fmt 0068  
                         ___xxtofl 1A52           __size_of_i2c_recibe_dato 001A  
                 dameValorLux@modo 0060                __end_of_UART_printf 3394  
                 __size_of_isdigit 0038                           _dtoa$801 002E  
             ??_i2c_recibe_datoACK 0002                    ?_bh1750_iniciar 0001  
                 __size_of_isspace 0052                           __ptext10 38EC  
                         __ptext11 3126                           __ptext20 15BA  
                         __ptext12 390A                           __ptext21 2B7E  
                         __ptext13 2DC4                           __ptext30 3494  
                         __ptext22 3796                           __ptext14 2C44  
                         __ptext31 375E                           __ptext23 3620  
                         __ptext15 129E                           __ptext40 37CC  
                         __ptext32 36A4                           __ptext24 2AB4  
                         __ptext16 3442                           __ptext41 278A  
                         __ptext33 3336                           __ptext25 39E0  
                         __ptext17 3272                           __ptext50 189E  
                         __ptext42 2FA8                           __ptext34 35D4  
                         __ptext26 3664                           __ptext18 05CA  
                         __ptext51 30AC                           __ptext43 382A  
                         __ptext35 2646                           __ptext27 238C  
                         __ptext19 1F1E                           __ptext60 3986  
                         __ptext52 3208                           __ptext44 399C  
                         __ptext36 0012                           __ptext28 1D96  
                         __ptext61 3942                           __ptext53 1A52  
                         __ptext45 3856                           __ptext37 395A  
                         __ptext29 1C06                           __ptext62 39D0  
                         __ptext54 29AE                           __ptext46 39C8  
                         __ptext38 33EE                           __ptext63 39BC  
                         __ptext55 0ADA                           __ptext47 3928  
                         __ptext39 24F0                           __ptext64 39D8  
                         __ptext56 0F04                           __ptext48 38CC  
                         __ptext65 38A6                           __ptext57 3880  
                         __ptext49 20A4                           __ptext66 3198  
                         __ptext58 3970                           __ptext67 28A2  
                         __ptext59 3536                           _getValue 0012  
                 __size_of_pwmDuty 01B4                   __size_of_sprintf 0052  
                         _leer_rtc 3856         __end_of_inicializarObjetos 221E  
                         _byteUart 00D5              __end_of_dameDiaActual 39AC  
              inicializarObjetos@i 005D                inicializarObjetos@j 0059  
                    __size_of_atoi 0190                      __size_of_main 0090  
                    __size_of_dtoa 02E4                           _horarios 0152  
                    __size_of_stoa 0186             bh1750_escribir@comando 0003  
                         _setPoint 00DE                           _tempHora 00CB  
                         _segundos 00CF                          stoa@F1139 00D7  
                         int$flags 005F                           _vfprintf 3272  
                  ?_dameHoraActual 0001            __size_of_i2c_envia_dato 000C  
                      ??_configPwm 0001                      getValue@i_697 0018  
                    getValue@i_698 001A                      getValue@i_699 001C  
          __size_of_i2c_inicia_com 0008           i2c_recibe_dato@datoleido 0002  
                 ___aomod@dividend 0001              __CFG_CPUDIV$OSC1_PLL2 000000  
                 ??_desbordamiento 0001                         _INTCONbits 000FF2  
          escribe_eeprom@direccion 0007                           isdigit@c 0001  
                         intlevel2 0000                          sprintf@ap 0074  
                  escribe_rtc@dato 0003              __end_of_limpiarBuffer 36E4  
                         isspace@c 0001                    setRtc@direccion 0023  
                asignarHorarios@Rx 0029                   _sistemaIluminado 278A  
    __size_of_mostrarDatosSensores 0050                      _overflowTimer 00CC  
                     ?_fijaHoraRtc 0001                    ___aomod@divisor 0009  
                     getValue@dato 001E                        ??_vfpfcnvrt 0046  
                         stoa@nuls 000F                    ___aomod@counter 0011  
                    _vfpfcnvrt$827 0056                      _vfpfcnvrt$828 0058  
                      _UART_printf 3336                     pwmDuty@channel 004D  
                         sprintf@f 0076                           sprintf@s 0066  
                     ___aldiv@sign 0016                   asignarHorarios@i 0025  
                 _sistemaPrincipal 2E74                    leer_eeprom@dato 0006  
                      _SSPCON2bits 000FC5               __end_of_dameValorLux 35D4  
                       _UART_write 395A                      bh1750_leer@hb 0052  
                    bh1750_leer@lb 0051                       ___aodiv@sign 0012  
                ??_i2c_recibe_dato 0002             __size_of_convertirDato 0020  
             leer_eeprom@direccion 0003                       ___aomod@sign 0012  
