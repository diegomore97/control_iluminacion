

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 02 13:38:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88  0000                     
    89                           ; Version 2.10
    90                           ; Generated 31/07/2019 GMT
    91                           ; 
    92                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F4550 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataBANK0
   125  003AA4                     __pidataBANK0:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for stoa@F1139
   129  003AA4  28                 	db	40
   130  003AA5  6E                 	db	110
   131  003AA6  75                 	db	117
   132  003AA7  6C                 	db	108
   133  003AA8  6C                 	db	108
   134  003AA9  29                 	db	41
   135  003AAA  00                 	db	0
   136                           
   137                           ;initializer for _setPoint
   138  003AAB  0064               	dw	100
   139  003AAD  0000               	dw	0
   140                           
   141                           ;initializer for _VALOR_TIMER0
   142  003AAF  6769               	dw	26473
   143                           
   144                           ;initializer for _VALOR_TIMER0UART
   145  003AB1  6769               	dw	26473
   146  0000                     _TMR0	set	4054
   147  0000                     _T0CONbits	set	4053
   148  0000                     _T0CON	set	4053
   149  0000                     _INTCONbits	set	4082
   150  0000                     _PIE1bits	set	3997
   151  0000                     _PR2	set	4043
   152  0000                     _CCP2CON	set	4026
   153  0000                     _CCPR2L	set	4027
   154  0000                     _CCP1CON	set	4029
   155  0000                     _CCPR1L	set	4030
   156  0000                     _SSPBUF	set	4041
   157  0000                     _SSPCON2bits	set	4037
   158  0000                     _SSPADD	set	4040
   159  0000                     _SSPCON2	set	4037
   160  0000                     _SSPCON1	set	4038
   161  0000                     _SSPSTAT	set	4039
   162  0000                     _TRISBbits	set	3987
   163  0000                     _TXREG	set	4013
   164  0000                     _RCREG	set	4014
   165  0000                     _PIR1bits	set	3998
   166  0000                     _RCSTAbits	set	4011
   167  0000                     _TXSTAbits	set	4012
   168  0000                     _SPBRG	set	4015
   169  0000                     _TRISCbits	set	3988
   170  0000                     _TMR2ON	set	32338
   171  0000                     _CCP2M2	set	32210
   172  0000                     _CCP2M3	set	32211
   173  0000                     _TRISC1	set	31905
   174  0000                     _CCP1M2	set	32234
   175  0000                     _CCP1M3	set	32235
   176  0000                     _TRISC2	set	31906
   177  0000                     _T2CKPS1	set	32337
   178  0000                     _T2CKPS0	set	32336
   179  0000                     _ACKEN	set	32300
   180  0000                     _ACKDT	set	32301
   181  0000                     _ACKSTAT	set	32302
   182                           
   183                           	psect	mediumconst
   184  007C88                     __pmediumconst:
   185                           	opt callstack 0
   186  007C88  00                 	db	0
   187  007C89  0D                 	db	13
   188  007C8A  0A                 	db	10
   189  007C8B  20                 	db	32
   190  007C8C  33                 	db	51	;'3'
   191  007C8D  2E                 	db	46
   192  007C8E  20                 	db	32
   193  007C8F  50                 	db	80	;'P'
   194  007C90  72                 	db	114	;'r'
   195  007C91  6F                 	db	111	;'o'
   196  007C92  67                 	db	103	;'g'
   197  007C93  72                 	db	114	;'r'
   198  007C94  61                 	db	97	;'a'
   199  007C95  6D                 	db	109	;'m'
   200  007C96  61                 	db	97	;'a'
   201  007C97  72                 	db	114	;'r'
   202  007C98  20                 	db	32
   203  007C99  74                 	db	116	;'t'
   204  007C9A  69                 	db	105	;'i'
   205  007C9B  65                 	db	101	;'e'
   206  007C9C  6D                 	db	109	;'m'
   207  007C9D  70                 	db	112	;'p'
   208  007C9E  6F                 	db	111	;'o'
   209  007C9F  20                 	db	32
   210  007CA0  64                 	db	100	;'d'
   211  007CA1  65                 	db	101	;'e'
   212  007CA2  20                 	db	32
   213  007CA3  49                 	db	73	;'I'
   214  007CA4  6C                 	db	108	;'l'
   215  007CA5  75                 	db	117	;'u'
   216  007CA6  6D                 	db	109	;'m'
   217  007CA7  69                 	db	105	;'i'
   218  007CA8  6E                 	db	110	;'n'
   219  007CA9  61                 	db	97	;'a'
   220  007CAA  63                 	db	99	;'c'
   221  007CAB  69                 	db	105	;'i'
   222  007CAC  6F                 	db	111	;'o'
   223  007CAD  6E                 	db	110	;'n'
   224  007CAE  20                 	db	32
   225  007CAF  65                 	db	101	;'e'
   226  007CB0  6E                 	db	110	;'n'
   227  007CB1  20                 	db	32
   228  007CB2  75                 	db	117	;'u'
   229  007CB3  6E                 	db	110	;'n'
   230  007CB4  20                 	db	32
   231  007CB5  68                 	db	104	;'h'
   232  007CB6  6F                 	db	111	;'o'
   233  007CB7  72                 	db	114	;'r'
   234  007CB8  61                 	db	97	;'a'
   235  007CB9  72                 	db	114	;'r'
   236  007CBA  69                 	db	105	;'i'
   237  007CBB  6F                 	db	111	;'o'
   238  007CBC  20                 	db	32
   239  007CBD  0D                 	db	13
   240  007CBE  0A                 	db	10
   241  007CBF  00                 	db	0
   242  007CC0                     STR_23:
   243  007CC0  0D                 	db	13
   244  007CC1  0A                 	db	10
   245  007CC2  54                 	db	84	;'T'
   246  007CC3  20                 	db	32
   247  007CC4  3D                 	db	61	;'='
   248  007CC5  20                 	db	32
   249  007CC6  4D                 	db	77	;'M'
   250  007CC7  49                 	db	73	;'I'
   251  007CC8  4E                 	db	78	;'N'
   252  007CC9  55                 	db	85	;'U'
   253  007CCA  54                 	db	84	;'T'
   254  007CCB  4F                 	db	79	;'O'
   255  007CCC  53                 	db	83	;'S'
   256  007CCD  20                 	db	32
   257  007CCE  51                 	db	81	;'Q'
   258  007CCF  55                 	db	85	;'U'
   259  007CD0  45                 	db	69	;'E'
   260  007CD1  20                 	db	32
   261  007CD2  44                 	db	68	;'D'
   262  007CD3  55                 	db	85	;'U'
   263  007CD4  52                 	db	82	;'R'
   264  007CD5  41                 	db	65	;'A'
   265  007CD6  52                 	db	82	;'R'
   266  007CD7  41                 	db	65	;'A'
   267  007CD8  20                 	db	32
   268  007CD9  4C                 	db	76	;'L'
   269  007CDA  41                 	db	65	;'A'
   270  007CDB  20                 	db	32
   271  007CDC  49                 	db	73	;'I'
   272  007CDD  4C                 	db	76	;'L'
   273  007CDE  55                 	db	85	;'U'
   274  007CDF  4D                 	db	77	;'M'
   275  007CE0  49                 	db	73	;'I'
   276  007CE1  4E                 	db	78	;'N'
   277  007CE2  41                 	db	65	;'A'
   278  007CE3  43                 	db	67	;'C'
   279  007CE4  49                 	db	73	;'I'
   280  007CE5  4F                 	db	79	;'O'
   281  007CE6  4E                 	db	78	;'N'
   282  007CE7  0D                 	db	13
   283  007CE8  0A                 	db	10
   284  007CE9  00                 	db	0
   285  007CEA                     STR_24:
   286  007CEA  0D                 	db	13
   287  007CEB  0A                 	db	10
   288  007CEC  44                 	db	68	;'D'
   289  007CED  20                 	db	32
   290  007CEE  3D                 	db	61	;'='
   291  007CEF  20                 	db	32
   292  007CF0  44                 	db	68	;'D'
   293  007CF1  49                 	db	73	;'I'
   294  007CF2  41                 	db	65	;'A'
   295  007CF3  53                 	db	83	;'S'
   296  007CF4  20                 	db	32
   297  007CF5  51                 	db	81	;'Q'
   298  007CF6  55                 	db	85	;'U'
   299  007CF7  45                 	db	69	;'E'
   300  007CF8  20                 	db	32
   301  007CF9  45                 	db	69	;'E'
   302  007CFA  4E                 	db	78	;'N'
   303  007CFB  20                 	db	32
   304  007CFC  4C                 	db	76	;'L'
   305  007CFD  4F                 	db	79	;'O'
   306  007CFE  53                 	db	83	;'S'
   307  007CFF  20                 	db	32
   308  007D00  51                 	db	81	;'Q'
   309  007D01  55                 	db	85	;'U'
   310  007D02  45                 	db	69	;'E'
   311  007D03  20                 	db	32
   312  007D04  53                 	db	83	;'S'
   313  007D05  45                 	db	69	;'E'
   314  007D06  20                 	db	32
   315  007D07  49                 	db	73	;'I'
   316  007D08  4C                 	db	76	;'L'
   317  007D09  55                 	db	85	;'U'
   318  007D0A  4D                 	db	77	;'M'
   319  007D0B  49                 	db	73	;'I'
   320  007D0C  4E                 	db	78	;'N'
   321  007D0D  41                 	db	65	;'A'
   322  007D0E  52                 	db	82	;'R'
   323  007D0F  41                 	db	65	;'A'
   324  007D10  0D                 	db	13
   325  007D11  0A                 	db	10
   326  007D12  00                 	db	0
   327  007D13  0D                 	db	13
   328  007D14  0A                 	db	10
   329  007D15  20                 	db	32
   330  007D16  32                 	db	50	;'2'
   331  007D17  2E                 	db	46
   332  007D18  20                 	db	32
   333  007D19  41                 	db	65	;'A'
   334  007D1A  73                 	db	115	;'s'
   335  007D1B  69                 	db	105	;'i'
   336  007D1C  67                 	db	103	;'g'
   337  007D1D  6E                 	db	110	;'n'
   338  007D1E  61                 	db	97	;'a'
   339  007D1F  72                 	db	114	;'r'
   340  007D20  20                 	db	32
   341  007D21  48                 	db	72	;'H'
   342  007D22  6F                 	db	111	;'o'
   343  007D23  72                 	db	114	;'r'
   344  007D24  61                 	db	97	;'a'
   345  007D25  72                 	db	114	;'r'
   346  007D26  69                 	db	105	;'i'
   347  007D27  6F                 	db	111	;'o'
   348  007D28  73                 	db	115	;'s'
   349  007D29  20                 	db	32
   350  007D2A  70                 	db	112	;'p'
   351  007D2B  61                 	db	97	;'a'
   352  007D2C  72                 	db	114	;'r'
   353  007D2D  61                 	db	97	;'a'
   354  007D2E  20                 	db	32
   355  007D2F  49                 	db	73	;'I'
   356  007D30  6C                 	db	108	;'l'
   357  007D31  75                 	db	117	;'u'
   358  007D32  6D                 	db	109	;'m'
   359  007D33  69                 	db	105	;'i'
   360  007D34  6E                 	db	110	;'n'
   361  007D35  61                 	db	97	;'a'
   362  007D36  72                 	db	114	;'r'
   363  007D37  20                 	db	32
   364  007D38  0D                 	db	13
   365  007D39  0A                 	db	10
   366  007D3A  00                 	db	0
   367  007D3B                     STR_17:
   368  007D3B  48                 	db	72	;'H'
   369  007D3C  4F                 	db	79	;'O'
   370  007D3D  52                 	db	82	;'R'
   371  007D3E  41                 	db	65	;'A'
   372  007D3F  20                 	db	32
   373  007D40  3D                 	db	61	;'='
   374  007D41  20                 	db	32
   375  007D42  25                 	db	37
   376  007D43  30                 	db	48	;'0'
   377  007D44  2E                 	db	46
   378  007D45  32                 	db	50	;'2'
   379  007D46  64                 	db	100	;'d'
   380  007D47  3A                 	db	58	;':'
   381  007D48  25                 	db	37
   382  007D49  30                 	db	48	;'0'
   383  007D4A  2E                 	db	46
   384  007D4B  32                 	db	50	;'2'
   385  007D4C  64                 	db	100	;'d'
   386  007D4D  20                 	db	32
   387  007D4E  7C                 	db	124
   388  007D4F  20                 	db	32
   389  007D50  44                 	db	68	;'D'
   390  007D51  49                 	db	73	;'I'
   391  007D52  41                 	db	65	;'A'
   392  007D53  20                 	db	32
   393  007D54  3D                 	db	61	;'='
   394  007D55  20                 	db	32
   395  007D56  4D                 	db	77	;'M'
   396  007D57  49                 	db	73	;'I'
   397  007D58  45                 	db	69	;'E'
   398  007D59  52                 	db	82	;'R'
   399  007D5A  43                 	db	67	;'C'
   400  007D5B  4F                 	db	79	;'O'
   401  007D5C  4C                 	db	76	;'L'
   402  007D5D  45                 	db	69	;'E'
   403  007D5E  53                 	db	83	;'S'
   404  007D5F  0D                 	db	13
   405  007D60  0A                 	db	10
   406  007D61  00                 	db	0
   407  007D62                     STR_2:
   408  007D62  0D                 	db	13
   409  007D63  0A                 	db	10
   410  007D64  20                 	db	32
   411  007D65  49                 	db	73	;'I'
   412  007D66  6E                 	db	110	;'n'
   413  007D67  67                 	db	103	;'g'
   414  007D68  72                 	db	114	;'r'
   415  007D69  65                 	db	101	;'e'
   416  007D6A  73                 	db	115	;'s'
   417  007D6B  61                 	db	97	;'a'
   418  007D6C  20                 	db	32
   419  007D6D  75                 	db	117	;'u'
   420  007D6E  6E                 	db	110	;'n'
   421  007D6F  61                 	db	97	;'a'
   422  007D70  20                 	db	32
   423  007D71  6F                 	db	111	;'o'
   424  007D72  70                 	db	112	;'p'
   425  007D73  63                 	db	99	;'c'
   426  007D74  69                 	db	105	;'i'
   427  007D75  6F                 	db	111	;'o'
   428  007D76  6E                 	db	110	;'n'
   429  007D77  20                 	db	32
   430  007D78  61                 	db	97	;'a'
   431  007D79  20                 	db	32
   432  007D7A  52                 	db	82	;'R'
   433  007D7B  65                 	db	101	;'e'
   434  007D7C  61                 	db	97	;'a'
   435  007D7D  6C                 	db	108	;'l'
   436  007D7E  69                 	db	105	;'i'
   437  007D7F  7A                 	db	122	;'z'
   438  007D80  61                 	db	97	;'a'
   439  007D81  72                 	db	114	;'r'
   440  007D82  3A                 	db	58	;':'
   441  007D83  20                 	db	32
   442  007D84  0D                 	db	13
   443  007D85  0A                 	db	10
   444  007D86  00                 	db	0
   445  007D87                     STR_14:
   446  007D87  48                 	db	72	;'H'
   447  007D88  4F                 	db	79	;'O'
   448  007D89  52                 	db	82	;'R'
   449  007D8A  41                 	db	65	;'A'
   450  007D8B  20                 	db	32
   451  007D8C  3D                 	db	61	;'='
   452  007D8D  20                 	db	32
   453  007D8E  25                 	db	37
   454  007D8F  30                 	db	48	;'0'
   455  007D90  2E                 	db	46
   456  007D91  32                 	db	50	;'2'
   457  007D92  64                 	db	100	;'d'
   458  007D93  3A                 	db	58	;':'
   459  007D94  25                 	db	37
   460  007D95  30                 	db	48	;'0'
   461  007D96  2E                 	db	46
   462  007D97  32                 	db	50	;'2'
   463  007D98  64                 	db	100	;'d'
   464  007D99  20                 	db	32
   465  007D9A  7C                 	db	124
   466  007D9B  20                 	db	32
   467  007D9C  44                 	db	68	;'D'
   468  007D9D  49                 	db	73	;'I'
   469  007D9E  41                 	db	65	;'A'
   470  007D9F  20                 	db	32
   471  007DA0  3D                 	db	61	;'='
   472  007DA1  20                 	db	32
   473  007DA2  44                 	db	68	;'D'
   474  007DA3  4F                 	db	79	;'O'
   475  007DA4  4D                 	db	77	;'M'
   476  007DA5  49                 	db	73	;'I'
   477  007DA6  4E                 	db	78	;'N'
   478  007DA7  47                 	db	71	;'G'
   479  007DA8  4F                 	db	79	;'O'
   480  007DA9  0D                 	db	13
   481  007DAA  0A                 	db	10
   482  007DAB  00                 	db	0
   483  007DAC                     STR_19:
   484  007DAC  48                 	db	72	;'H'
   485  007DAD  4F                 	db	79	;'O'
   486  007DAE  52                 	db	82	;'R'
   487  007DAF  41                 	db	65	;'A'
   488  007DB0  20                 	db	32
   489  007DB1  3D                 	db	61	;'='
   490  007DB2  20                 	db	32
   491  007DB3  25                 	db	37
   492  007DB4  30                 	db	48	;'0'
   493  007DB5  2E                 	db	46
   494  007DB6  32                 	db	50	;'2'
   495  007DB7  64                 	db	100	;'d'
   496  007DB8  3A                 	db	58	;':'
   497  007DB9  25                 	db	37
   498  007DBA  30                 	db	48	;'0'
   499  007DBB  2E                 	db	46
   500  007DBC  32                 	db	50	;'2'
   501  007DBD  64                 	db	100	;'d'
   502  007DBE  20                 	db	32
   503  007DBF  7C                 	db	124
   504  007DC0  20                 	db	32
   505  007DC1  44                 	db	68	;'D'
   506  007DC2  49                 	db	73	;'I'
   507  007DC3  41                 	db	65	;'A'
   508  007DC4  20                 	db	32
   509  007DC5  3D                 	db	61	;'='
   510  007DC6  20                 	db	32
   511  007DC7  56                 	db	86	;'V'
   512  007DC8  49                 	db	73	;'I'
   513  007DC9  45                 	db	69	;'E'
   514  007DCA  52                 	db	82	;'R'
   515  007DCB  4E                 	db	78	;'N'
   516  007DCC  45                 	db	69	;'E'
   517  007DCD  53                 	db	83	;'S'
   518  007DCE  0D                 	db	13
   519  007DCF  0A                 	db	10
   520  007DD0  00                 	db	0
   521  007DD1                     STR_25:
   522  007DD1  20                 	db	32
   523  007DD2  20                 	db	32
   524  007DD3  20                 	db	32
   525  007DD4  20                 	db	32
   526  007DD5  20                 	db	32
   527  007DD6  20                 	db	32
   528  007DD7  20                 	db	32
   529  007DD8  20                 	db	32
   530  007DD9  20                 	db	32
   531  007DDA  20                 	db	32
   532  007DDB  20                 	db	32
   533  007DDC  20                 	db	32
   534  007DDD  20                 	db	32
   535  007DDE  20                 	db	32
   536  007DDF  20                 	db	32
   537  007DE0  20                 	db	32
   538  007DE1  20                 	db	32
   539  007DE2  20                 	db	32
   540  007DE3  20                 	db	32
   541  007DE4  20                 	db	32
   542  007DE5  20                 	db	32
   543  007DE6  20                 	db	32
   544  007DE7  20                 	db	32
   545  007DE8  20                 	db	32
   546  007DE9  20                 	db	32
   547  007DEA  20                 	db	32
   548  007DEB  20                 	db	32
   549  007DEC  44                 	db	68	;'D'
   550  007DED  4C                 	db	76	;'L'
   551  007DEE  4D                 	db	77	;'M'
   552  007DEF  49                 	db	73	;'I'
   553  007DF0  4A                 	db	74	;'J'
   554  007DF1  56                 	db	86	;'V'
   555  007DF2  53                 	db	83	;'S'
   556  007DF3  0D                 	db	13
   557  007DF4  0A                 	db	10
   558  007DF5  00                 	db	0
   559  007DF6  0D                 	db	13
   560  007DF7  0A                 	db	10
   561  007DF8  20                 	db	32
   562  007DF9  38                 	db	56	;'8'
   563  007DFA  2E                 	db	46
   564  007DFB  20                 	db	32
   565  007DFC  43                 	db	67	;'C'
   566  007DFD  61                 	db	97	;'a'
   567  007DFE  72                 	db	114	;'r'
   568  007DFF  67                 	db	103	;'g'
   569  007E00  61                 	db	97	;'a'
   570  007E01  72                 	db	114	;'r'
   571  007E02  20                 	db	32
   572  007E03  64                 	db	100	;'d'
   573  007E04  61                 	db	97	;'a'
   574  007E05  74                 	db	116	;'t'
   575  007E06  6F                 	db	111	;'o'
   576  007E07  73                 	db	115	;'s'
   577  007E08  20                 	db	32
   578  007E09  64                 	db	100	;'d'
   579  007E0A  65                 	db	101	;'e'
   580  007E0B  20                 	db	32
   581  007E0C  6C                 	db	108	;'l'
   582  007E0D  61                 	db	97	;'a'
   583  007E0E  20                 	db	32
   584  007E0F  6D                 	db	109	;'m'
   585  007E10  65                 	db	101	;'e'
   586  007E11  6D                 	db	109	;'m'
   587  007E12  6F                 	db	111	;'o'
   588  007E13  72                 	db	114	;'r'
   589  007E14  69                 	db	105	;'i'
   590  007E15  61                 	db	97	;'a'
   591  007E16  20                 	db	32
   592  007E17  0D                 	db	13
   593  007E18  0A                 	db	10
   594  007E19  00                 	db	0
   595  007E1A                     STR_20:
   596  007E1A  48                 	db	72	;'H'
   597  007E1B  4F                 	db	79	;'O'
   598  007E1C  52                 	db	82	;'R'
   599  007E1D  41                 	db	65	;'A'
   600  007E1E  20                 	db	32
   601  007E1F  3D                 	db	61	;'='
   602  007E20  20                 	db	32
   603  007E21  25                 	db	37
   604  007E22  30                 	db	48	;'0'
   605  007E23  2E                 	db	46
   606  007E24  32                 	db	50	;'2'
   607  007E25  64                 	db	100	;'d'
   608  007E26  3A                 	db	58	;':'
   609  007E27  25                 	db	37
   610  007E28  30                 	db	48	;'0'
   611  007E29  2E                 	db	46
   612  007E2A  32                 	db	50	;'2'
   613  007E2B  64                 	db	100	;'d'
   614  007E2C  20                 	db	32
   615  007E2D  7C                 	db	124
   616  007E2E  20                 	db	32
   617  007E2F  44                 	db	68	;'D'
   618  007E30  49                 	db	73	;'I'
   619  007E31  41                 	db	65	;'A'
   620  007E32  20                 	db	32
   621  007E33  3D                 	db	61	;'='
   622  007E34  20                 	db	32
   623  007E35  53                 	db	83	;'S'
   624  007E36  41                 	db	65	;'A'
   625  007E37  42                 	db	66	;'B'
   626  007E38  41                 	db	65	;'A'
   627  007E39  44                 	db	68	;'D'
   628  007E3A  4F                 	db	79	;'O'
   629  007E3B  0D                 	db	13
   630  007E3C  0A                 	db	10
   631  007E3D  00                 	db	0
   632  007E3E                     STR_16:
   633  007E3E  48                 	db	72	;'H'
   634  007E3F  4F                 	db	79	;'O'
   635  007E40  52                 	db	82	;'R'
   636  007E41  41                 	db	65	;'A'
   637  007E42  20                 	db	32
   638  007E43  3D                 	db	61	;'='
   639  007E44  20                 	db	32
   640  007E45  25                 	db	37
   641  007E46  30                 	db	48	;'0'
   642  007E47  2E                 	db	46
   643  007E48  32                 	db	50	;'2'
   644  007E49  64                 	db	100	;'d'
   645  007E4A  3A                 	db	58	;':'
   646  007E4B  25                 	db	37
   647  007E4C  30                 	db	48	;'0'
   648  007E4D  2E                 	db	46
   649  007E4E  32                 	db	50	;'2'
   650  007E4F  64                 	db	100	;'d'
   651  007E50  20                 	db	32
   652  007E51  7C                 	db	124
   653  007E52  20                 	db	32
   654  007E53  44                 	db	68	;'D'
   655  007E54  49                 	db	73	;'I'
   656  007E55  41                 	db	65	;'A'
   657  007E56  20                 	db	32
   658  007E57  3D                 	db	61	;'='
   659  007E58  20                 	db	32
   660  007E59  4D                 	db	77	;'M'
   661  007E5A  41                 	db	65	;'A'
   662  007E5B  52                 	db	82	;'R'
   663  007E5C  54                 	db	84	;'T'
   664  007E5D  45                 	db	69	;'E'
   665  007E5E  53                 	db	83	;'S'
   666  007E5F  0D                 	db	13
   667  007E60  0A                 	db	10
   668  007E61  00                 	db	0
   669  007E62                     STR_18:
   670  007E62  48                 	db	72	;'H'
   671  007E63  4F                 	db	79	;'O'
   672  007E64  52                 	db	82	;'R'
   673  007E65  41                 	db	65	;'A'
   674  007E66  20                 	db	32
   675  007E67  3D                 	db	61	;'='
   676  007E68  20                 	db	32
   677  007E69  25                 	db	37
   678  007E6A  30                 	db	48	;'0'
   679  007E6B  2E                 	db	46
   680  007E6C  32                 	db	50	;'2'
   681  007E6D  64                 	db	100	;'d'
   682  007E6E  3A                 	db	58	;':'
   683  007E6F  25                 	db	37
   684  007E70  30                 	db	48	;'0'
   685  007E71  2E                 	db	46
   686  007E72  32                 	db	50	;'2'
   687  007E73  64                 	db	100	;'d'
   688  007E74  20                 	db	32
   689  007E75  7C                 	db	124
   690  007E76  20                 	db	32
   691  007E77  44                 	db	68	;'D'
   692  007E78  49                 	db	73	;'I'
   693  007E79  41                 	db	65	;'A'
   694  007E7A  20                 	db	32
   695  007E7B  3D                 	db	61	;'='
   696  007E7C  20                 	db	32
   697  007E7D  4A                 	db	74	;'J'
   698  007E7E  55                 	db	85	;'U'
   699  007E7F  45                 	db	69	;'E'
   700  007E80  56                 	db	86	;'V'
   701  007E81  45                 	db	69	;'E'
   702  007E82  53                 	db	83	;'S'
   703  007E83  0D                 	db	13
   704  007E84  0A                 	db	10
   705  007E85  00                 	db	0
   706  007E86                     STR_15:
   707  007E86  48                 	db	72	;'H'
   708  007E87  4F                 	db	79	;'O'
   709  007E88  52                 	db	82	;'R'
   710  007E89  41                 	db	65	;'A'
   711  007E8A  20                 	db	32
   712  007E8B  3D                 	db	61	;'='
   713  007E8C  20                 	db	32
   714  007E8D  25                 	db	37
   715  007E8E  30                 	db	48	;'0'
   716  007E8F  2E                 	db	46
   717  007E90  32                 	db	50	;'2'
   718  007E91  64                 	db	100	;'d'
   719  007E92  3A                 	db	58	;':'
   720  007E93  25                 	db	37
   721  007E94  30                 	db	48	;'0'
   722  007E95  2E                 	db	46
   723  007E96  32                 	db	50	;'2'
   724  007E97  64                 	db	100	;'d'
   725  007E98  20                 	db	32
   726  007E99  7C                 	db	124
   727  007E9A  20                 	db	32
   728  007E9B  44                 	db	68	;'D'
   729  007E9C  49                 	db	73	;'I'
   730  007E9D  41                 	db	65	;'A'
   731  007E9E  20                 	db	32
   732  007E9F  3D                 	db	61	;'='
   733  007EA0  20                 	db	32
   734  007EA1  4C                 	db	76	;'L'
   735  007EA2  55                 	db	85	;'U'
   736  007EA3  4E                 	db	78	;'N'
   737  007EA4  45                 	db	69	;'E'
   738  007EA5  53                 	db	83	;'S'
   739  007EA6  0D                 	db	13
   740  007EA7  0A                 	db	10
   741  007EA8  00                 	db	0
   742  007EA9  0D                 	db	13
   743  007EAA  0A                 	db	10
   744  007EAB  20                 	db	32
   745  007EAC  35                 	db	53	;'5'
   746  007EAD  2E                 	db	46
   747  007EAE  20                 	db	32
   748  007EAF  4D                 	db	77	;'M'
   749  007EB0  6F                 	db	111	;'o'
   750  007EB1  73                 	db	115	;'s'
   751  007EB2  74                 	db	116	;'t'
   752  007EB3  72                 	db	114	;'r'
   753  007EB4  61                 	db	97	;'a'
   754  007EB5  72                 	db	114	;'r'
   755  007EB6  20                 	db	32
   756  007EB7  76                 	db	118	;'v'
   757  007EB8  61                 	db	97	;'a'
   758  007EB9  6C                 	db	108	;'l'
   759  007EBA  6F                 	db	111	;'o'
   760  007EBB  72                 	db	114	;'r'
   761  007EBC  65                 	db	101	;'e'
   762  007EBD  73                 	db	115	;'s'
   763  007EBE  20                 	db	32
   764  007EBF  73                 	db	115	;'s'
   765  007EC0  65                 	db	101	;'e'
   766  007EC1  6E                 	db	110	;'n'
   767  007EC2  73                 	db	115	;'s'
   768  007EC3  6F                 	db	111	;'o'
   769  007EC4  72                 	db	114	;'r'
   770  007EC5  65                 	db	101	;'e'
   771  007EC6  73                 	db	115	;'s'
   772  007EC7  20                 	db	32
   773  007EC8  0D                 	db	13
   774  007EC9  0A                 	db	10
   775  007ECA  00                 	db	0
   776  007ECB  0D                 	db	13
   777  007ECC  0A                 	db	10
   778  007ECD  20                 	db	32
   779  007ECE  34                 	db	52	;'4'
   780  007ECF  2E                 	db	46
   781  007ED0  20                 	db	32
   782  007ED1  44                 	db	68	;'D'
   783  007ED2  61                 	db	97	;'a'
   784  007ED3  6D                 	db	109	;'m'
   785  007ED4  65                 	db	101	;'e'
   786  007ED5  20                 	db	32
   787  007ED6  64                 	db	100	;'d'
   788  007ED7  61                 	db	97	;'a'
   789  007ED8  74                 	db	116	;'t'
   790  007ED9  6F                 	db	111	;'o'
   791  007EDA  73                 	db	115	;'s'
   792  007EDB  20                 	db	32
   793  007EDC  64                 	db	100	;'d'
   794  007EDD  65                 	db	101	;'e'
   795  007EDE  6C                 	db	108	;'l'
   796  007EDF  20                 	db	32
   797  007EE0  73                 	db	115	;'s'
   798  007EE1  69                 	db	105	;'i'
   799  007EE2  73                 	db	115	;'s'
   800  007EE3  74                 	db	116	;'t'
   801  007EE4  65                 	db	101	;'e'
   802  007EE5  6D                 	db	109	;'m'
   803  007EE6  61                 	db	97	;'a'
   804  007EE7  20                 	db	32
   805  007EE8  0D                 	db	13
   806  007EE9  0A                 	db	10
   807  007EEA  00                 	db	0
   808  007EEB                     STR_22:
   809  007EEB  0D                 	db	13
   810  007EEC  0A                 	db	10
   811  007EED  52                 	db	82	;'R'
   812  007EEE  20                 	db	32
   813  007EEF  3D                 	db	61	;'='
   814  007EF0  20                 	db	32
   815  007EF1  49                 	db	73	;'I'
   816  007EF2  4C                 	db	76	;'L'
   817  007EF3  55                 	db	85	;'U'
   818  007EF4  4D                 	db	77	;'M'
   819  007EF5  49                 	db	73	;'I'
   820  007EF6  4E                 	db	78	;'N'
   821  007EF7  41                 	db	65	;'A'
   822  007EF8  52                 	db	82	;'R'
   823  007EF9  28                 	db	40
   824  007EFA  20                 	db	32
   825  007EFB  31                 	db	49	;'1'
   826  007EFC  20                 	db	32
   827  007EFD  53                 	db	83	;'S'
   828  007EFE  49                 	db	73	;'I'
   829  007EFF  20                 	db	32
   830  007F00  7C                 	db	124
   831  007F01  20                 	db	32
   832  007F02  30                 	db	48	;'0'
   833  007F03  20                 	db	32
   834  007F04  4E                 	db	78	;'N'
   835  007F05  4F                 	db	79	;'O'
   836  007F06  29                 	db	41
   837  007F07  0D                 	db	13
   838  007F08  0A                 	db	10
   839  007F09  00                 	db	0
   840  007F0A  0D                 	db	13
   841  007F0B  0A                 	db	10
   842  007F0C  20                 	db	32
   843  007F0D  31                 	db	49	;'1'
   844  007F0E  2E                 	db	46
   845  007F0F  20                 	db	32
   846  007F10  46                 	db	70	;'F'
   847  007F11  69                 	db	105	;'i'
   848  007F12  6A                 	db	106	;'j'
   849  007F13  61                 	db	97	;'a'
   850  007F14  72                 	db	114	;'r'
   851  007F15  20                 	db	32
   852  007F16  48                 	db	72	;'H'
   853  007F17  6F                 	db	111	;'o'
   854  007F18  72                 	db	114	;'r'
   855  007F19  61                 	db	97	;'a'
   856  007F1A  20                 	db	32
   857  007F1B  41                 	db	65	;'A'
   858  007F1C  63                 	db	99	;'c'
   859  007F1D  74                 	db	116	;'t'
   860  007F1E  75                 	db	117	;'u'
   861  007F1F  61                 	db	97	;'a'
   862  007F20  6C                 	db	108	;'l'
   863  007F21  20                 	db	32
   864  007F22  0D                 	db	13
   865  007F23  0A                 	db	10
   866  007F24  00                 	db	0
   867  007F25  0D                 	db	13
   868  007F26  0A                 	db	10
   869  007F27  20                 	db	32
   870  007F28  37                 	db	55	;'7'
   871  007F29  2E                 	db	46
   872  007F2A  20                 	db	32
   873  007F2B  46                 	db	70	;'F'
   874  007F2C  69                 	db	105	;'i'
   875  007F2D  6A                 	db	106	;'j'
   876  007F2E  61                 	db	97	;'a'
   877  007F2F  72                 	db	114	;'r'
   878  007F30  20                 	db	32
   879  007F31  44                 	db	68	;'D'
   880  007F32  69                 	db	105	;'i'
   881  007F33  61                 	db	97	;'a'
   882  007F34  20                 	db	32
   883  007F35  41                 	db	65	;'A'
   884  007F36  63                 	db	99	;'c'
   885  007F37  74                 	db	116	;'t'
   886  007F38  75                 	db	117	;'u'
   887  007F39  61                 	db	97	;'a'
   888  007F3A  6C                 	db	108	;'l'
   889  007F3B  20                 	db	32
   890  007F3C  0D                 	db	13
   891  007F3D  0A                 	db	10
   892  007F3E  00                 	db	0
   893  007F3F  0D                 	db	13
   894  007F40  0A                 	db	10
   895  007F41  20                 	db	32
   896  007F42  36                 	db	54	;'6'
   897  007F43  2E                 	db	46
   898  007F44  20                 	db	32
   899  007F45  41                 	db	65	;'A'
   900  007F46  73                 	db	115	;'s'
   901  007F47  69                 	db	105	;'i'
   902  007F48  67                 	db	103	;'g'
   903  007F49  6E                 	db	110	;'n'
   904  007F4A  61                 	db	97	;'a'
   905  007F4B  72                 	db	114	;'r'
   906  007F4C  20                 	db	32
   907  007F4D  53                 	db	83	;'S'
   908  007F4E  65                 	db	101	;'e'
   909  007F4F  74                 	db	116	;'t'
   910  007F50  70                 	db	112	;'p'
   911  007F51  6F                 	db	111	;'o'
   912  007F52  69                 	db	105	;'i'
   913  007F53  6E                 	db	110	;'n'
   914  007F54  74                 	db	116	;'t'
   915  007F55  0D                 	db	13
   916  007F56  0A                 	db	10
   917  007F57  00                 	db	0
   918  007F58                     STR_26:
   919  007F58  48                 	db	72	;'H'
   920  007F59  3A                 	db	58	;':'
   921  007F5A  25                 	db	37
   922  007F5B  32                 	db	50	;'2'
   923  007F5C  64                 	db	100	;'d'
   924  007F5D  7C                 	db	124
   925  007F5E  52                 	db	82	;'R'
   926  007F5F  3A                 	db	58	;':'
   927  007F60  25                 	db	37
   928  007F61  64                 	db	100	;'d'
   929  007F62  7C                 	db	124
   930  007F63  54                 	db	84	;'T'
   931  007F64  3A                 	db	58	;':'
   932  007F65  25                 	db	37
   933  007F66  32                 	db	50	;'2'
   934  007F67  64                 	db	100	;'d'
   935  007F68  7C                 	db	124
   936  007F69  44                 	db	68	;'D'
   937  007F6A  3A                 	db	58	;':'
   938  007F6B  25                 	db	37
   939  007F6C  73                 	db	115	;'s'
   940  007F6D  0D                 	db	13
   941  007F6E  0A                 	db	10
   942  007F6F  00                 	db	0
   943  007F70                     STR_27:
   944  007F70  0D                 	db	13
   945  007F71  4C                 	db	76	;'L'
   946  007F72  75                 	db	117	;'u'
   947  007F73  7A                 	db	122	;'z'
   948  007F74  20                 	db	32
   949  007F75  6D                 	db	109	;'m'
   950  007F76  65                 	db	101	;'e'
   951  007F77  64                 	db	100	;'d'
   952  007F78  69                 	db	105	;'i'
   953  007F79  64                 	db	100	;'d'
   954  007F7A  61                 	db	97	;'a'
   955  007F7B  3A                 	db	58	;':'
   956  007F7C  20                 	db	32
   957  007F7D  25                 	db	37
   958  007F7E  64                 	db	100	;'d'
   959  007F7F  20                 	db	32
   960  007F80  6C                 	db	108	;'l'
   961  007F81  75                 	db	117	;'u'
   962  007F82  78                 	db	120	;'x'
   963  007F83  73                 	db	115	;'s'
   964  007F84  0A                 	db	10
   965  007F85  0D                 	db	13
   966  007F86  00                 	db	0
   967  007F87                     STR_31:
   968  007F87  0D                 	db	13
   969  007F88  0A                 	db	10
   970  007F89  53                 	db	83	;'S'
   971  007F8A  69                 	db	105	;'i'
   972  007F8B  73                 	db	115	;'s'
   973  007F8C  74                 	db	116	;'t'
   974  007F8D  65                 	db	101	;'e'
   975  007F8E  6D                 	db	109	;'m'
   976  007F8F  61                 	db	97	;'a'
   977  007F90  20                 	db	32
   978  007F91  49                 	db	73	;'I'
   979  007F92  6E                 	db	110	;'n'
   980  007F93  69                 	db	105	;'i'
   981  007F94  63                 	db	99	;'c'
   982  007F95  69                 	db	105	;'i'
   983  007F96  61                 	db	97	;'a'
   984  007F97  64                 	db	100	;'d'
   985  007F98  6F                 	db	111	;'o'
   986  007F99  0A                 	db	10
   987  007F9A  0D                 	db	13
   988  007F9B  00                 	db	0
   989  007F9C                     STR_13:
   990  007F9C  0D                 	db	13
   991  007F9D  0A                 	db	10
   992  007F9E  53                 	db	83	;'S'
   993  007F9F  65                 	db	101	;'e'
   994  007FA0  74                 	db	116	;'t'
   995  007FA1  70                 	db	112	;'p'
   996  007FA2  6F                 	db	111	;'o'
   997  007FA3  69                 	db	105	;'i'
   998  007FA4  6E                 	db	110	;'n'
   999  007FA5  74                 	db	116	;'t'
  1000  007FA6  20                 	db	32
  1001  007FA7  3D                 	db	61	;'='
  1002  007FA8  20                 	db	32
  1003  007FA9  25                 	db	37
  1004  007FAA  64                 	db	100	;'d'
  1005  007FAB  20                 	db	32
  1006  007FAC  7C                 	db	124
  1007  007FAD  20                 	db	32
  1008  007FAE  00                 	db	0
  1009  007FAF  41                 	db	65	;'A'
  1010  007FB0  54                 	db	84	;'T'
  1011  007FB1  2B                 	db	43
  1012  007FB2  4E                 	db	78	;'N'
  1013  007FB3  41                 	db	65	;'A'
  1014  007FB4  4D                 	db	77	;'M'
  1015  007FB5  45                 	db	69	;'E'
  1016  007FB6  53                 	db	83	;'S'
  1017  007FB7  4D                 	db	77	;'M'
  1018  007FB8  41                 	db	65	;'A'
  1019  007FB9  52                 	db	82	;'R'
  1020  007FBA  54                 	db	84	;'T'
  1021  007FBB  48                 	db	72	;'H'
  1022  007FBC  4F                 	db	79	;'O'
  1023  007FBD  4D                 	db	77	;'M'
  1024  007FBE  45                 	db	69	;'E'
  1025  007FBF  00                 	db	0
  1026  007FC0                     STR_1:
  1027  007FC0  0D                 	db	13
  1028  007FC1  0A                 	db	10
  1029  007FC2  52                 	db	82	;'R'
  1030  007FC3  54                 	db	84	;'T'
  1031  007FC4  43                 	db	67	;'C'
  1032  007FC5  20                 	db	32
  1033  007FC6  44                 	db	68	;'D'
  1034  007FC7  45                 	db	69	;'E'
  1035  007FC8  46                 	db	70	;'F'
  1036  007FC9  41                 	db	65	;'A'
  1037  007FCA  55                 	db	85	;'U'
  1038  007FCB  4C                 	db	76	;'L'
  1039  007FCC  54                 	db	84	;'T'
  1040  007FCD  0A                 	db	10
  1041  007FCE  0D                 	db	13
  1042  007FCF  00                 	db	0
  1043  007FD0  0D                 	db	13
  1044  007FD1  0A                 	db	10
  1045  007FD2  20                 	db	32
  1046  007FD3  4F                 	db	79	;'O'
  1047  007FD4  70                 	db	112	;'p'
  1048  007FD5  63                 	db	99	;'c'
  1049  007FD6  69                 	db	105	;'i'
  1050  007FD7  6F                 	db	111	;'o'
  1051  007FD8  6E                 	db	110	;'n'
  1052  007FD9  3A                 	db	58	;':'
  1053  007FDA  20                 	db	32
  1054  007FDB  20                 	db	32
  1055  007FDC  0D                 	db	13
  1056  007FDD  00                 	db	0
  1057  007FDE                     STR_21:
  1058  007FDE  0D                 	db	13
  1059  007FDF  0A                 	db	10
  1060  007FE0  48                 	db	72	;'H'
  1061  007FE1  20                 	db	32
  1062  007FE2  3D                 	db	61	;'='
  1063  007FE3  20                 	db	32
  1064  007FE4  48                 	db	72	;'H'
  1065  007FE5  4F                 	db	79	;'O'
  1066  007FE6  52                 	db	82	;'R'
  1067  007FE7  41                 	db	65	;'A'
  1068  007FE8  0D                 	db	13
  1069  007FE9  0A                 	db	10
  1070  007FEA  00                 	db	0
  1071  007FEB  41                 	db	65	;'A'
  1072  007FEC  54                 	db	84	;'T'
  1073  007FED  2B                 	db	43
  1074  007FEE  50                 	db	80	;'P'
  1075  007FEF  49                 	db	73	;'I'
  1076  007FF0  4E                 	db	78	;'N'
  1077  007FF1  32                 	db	50	;'2'
  1078  007FF2  35                 	db	53	;'5'
  1079  007FF3  30                 	db	48	;'0'
  1080  007FF4  31                 	db	49	;'1'
  1081  007FF5  00                 	db	0
  1082  007FF6  41                 	db	65	;'A'
  1083  007FF7  54                 	db	84	;'T'
  1084  007FF8  2B                 	db	43
  1085  007FF9  42                 	db	66	;'B'
  1086  007FFA  41                 	db	65	;'A'
  1087  007FFB  55                 	db	85	;'U'
  1088  007FFC  44                 	db	68	;'D'
  1089  007FFD  34                 	db	52	;'4'
  1090  007FFE  00                 	db	0
  1091  0000                     
  1092                           ; #config settings
  1093  007FFF  00                 	db	0	; dummy byte at the end
  1094  0000                     
  1095                           	psect	cinit
  1096  00348C                     __pcinit:
  1097                           	opt callstack 0
  1098  00348C                     start_initialization:
  1099                           	opt callstack 0
  1100  00348C                     __initialization:
  1101                           	opt callstack 0
  1102                           
  1103                           ; Initialize objects allocated to BANK0 (15 bytes)
  1104                           ; load TBLPTR registers with __pidataBANK0
  1105  00348C  0EA4               	movlw	low __pidataBANK0
  1106  00348E  6EF6               	movwf	tblptrl,c
  1107  003490  0E3A               	movlw	high __pidataBANK0
  1108  003492  6EF7               	movwf	tblptrh,c
  1109  003494  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1110  003496  6EF8               	movwf	tblptru,c
  1111  003498  EE00  F0D8         	lfsr	0,__pdataBANK0
  1112  00349C  EE10 F00F          	lfsr	1,15
  1113  0034A0                     copy_data0:
  1114  0034A0  0009               	tblrd		*+
  1115  0034A2  CFF5 FFEE          	movff	tablat,postinc0
  1116  0034A6  50E5               	movf	postdec1,w,c
  1117  0034A8  50E1               	movf	fsr1l,w,c
  1118  0034AA  E1FA               	bnz	copy_data0
  1119                           
  1120                           ; Clear objects allocated to BIGRAM (288 bytes)
  1121  0034AC  EE01  F084         	lfsr	0,__pbssBIGRAM
  1122  0034B0  EE11 F020          	lfsr	1,288
  1123  0034B4                     clear_0:
  1124  0034B4  6AEE               	clrf	postinc0,c
  1125  0034B6  50E5               	movf	postdec1,w,c
  1126  0034B8  50E1               	movf	fsr1l,w,c
  1127  0034BA  E1FC               	bnz	clear_0
  1128  0034BC  50E2               	movf	fsr1h,w,c
  1129  0034BE  E1FA               	bnz	clear_0
  1130                           
  1131                           ; Clear objects allocated to BANK1 (132 bytes)
  1132  0034C0  EE01  F000         	lfsr	0,__pbssBANK1
  1133  0034C4  0E84               	movlw	132
  1134  0034C6                     clear_1:
  1135  0034C6  6AEE               	clrf	postinc0,c
  1136  0034C8  06E8               	decf	wreg,f,c
  1137  0034CA  E1FD               	bnz	clear_1
  1138                           
  1139                           ; Clear objects allocated to BANK0 (50 bytes)
  1140  0034CC  EE00  F0A6         	lfsr	0,__pbssBANK0
  1141  0034D0  0E32               	movlw	50
  1142  0034D2                     clear_2:
  1143  0034D2  6AEE               	clrf	postinc0,c
  1144  0034D4  06E8               	decf	wreg,f,c
  1145  0034D6  E1FD               	bnz	clear_2
  1146  0034D8                     end_of_initialization:
  1147                           	opt callstack 0
  1148  0034D8                     __end_of__initialization:
  1149                           	opt callstack 0
  1150  0034D8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1151  0034DA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1152  0034DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1153  0034DE  6EF8               	movwf	tblptru,c
  1154  0034E0  0100               	movlb	0
  1155  0034E2  EF08  F018         	goto	_main	;jump to C main() function
  1156                           
  1157                           	psect	bssBANK0
  1158  0000A6                     __pbssBANK0:
  1159                           	opt callstack 0
  1160  0000A6                     PID@difAnt:
  1161                           	opt callstack 0
  1162  0000A6                     	ds	4
  1163  0000AA                     PID@D:
  1164                           	opt callstack 0
  1165  0000AA                     	ds	4
  1166  0000AE                     PID@I:
  1167                           	opt callstack 0
  1168  0000AE                     	ds	4
  1169  0000B2                     PID@P:
  1170                           	opt callstack 0
  1171  0000B2                     	ds	4
  1172  0000B6                     _luzMedida:
  1173                           	opt callstack 0
  1174  0000B6                     	ds	4
  1175  0000BA                     _nout:
  1176                           	opt callstack 0
  1177  0000BA                     	ds	2
  1178  0000BC                     _width:
  1179                           	opt callstack 0
  1180  0000BC                     	ds	2
  1181  0000BE                     _prec:
  1182                           	opt callstack 0
  1183  0000BE                     	ds	2
  1184  0000C0                     _flags:
  1185                           	opt callstack 0
  1186  0000C0                     	ds	2
  1187  0000C2                     _minutosTranscurridos:
  1188                           	opt callstack 0
  1189  0000C2                     	ds	2
  1190  0000C4                     _minutosIluminar:
  1191                           	opt callstack 0
  1192  0000C4                     	ds	2
  1193  0000C6                     _contInterrupciones:
  1194                           	opt callstack 0
  1195  0000C6                     	ds	2
  1196  0000C8                     _peticionLecturaSensores:
  1197                           	opt callstack 0
  1198  0000C8                     	ds	1
  1199  0000C9                     _setPointIntro:
  1200                           	opt callstack 0
  1201  0000C9                     	ds	1
  1202  0000CA                     _iluminando:
  1203                           	opt callstack 0
  1204  0000CA                     	ds	1
  1205  0000CB                     _flagIluminado:
  1206                           	opt callstack 0
  1207  0000CB                     	ds	1
  1208  0000CC                     _tempHora:
  1209                           	opt callstack 0
  1210  0000CC                     	ds	1
  1211  0000CD                     _overflowTimer:
  1212                           	opt callstack 0
  1213  0000CD                     	ds	1
  1214  0000CE                     _datoRecibido:
  1215                           	opt callstack 0
  1216  0000CE                     	ds	1
  1217  0000CF                     _diaActual:
  1218                           	opt callstack 0
  1219  0000CF                     	ds	1
  1220  0000D0                     _segundos:
  1221                           	opt callstack 0
  1222  0000D0                     	ds	1
  1223  0000D1                     _minutos:
  1224                           	opt callstack 0
  1225  0000D1                     	ds	1
  1226  0000D2                     _hora:
  1227                           	opt callstack 0
  1228  0000D2                     	ds	1
  1229  0000D3                     _reiniciarPID:
  1230                           	opt callstack 0
  1231  0000D3                     	ds	1
  1232  0000D4                     _esperandoDatos:
  1233                           	opt callstack 0
  1234  0000D4                     	ds	1
  1235  0000D5                     _esperaDatoConcluida:
  1236                           	opt callstack 0
  1237  0000D5                     	ds	1
  1238  0000D6                     _byteUart:
  1239                           	opt callstack 0
  1240  0000D6                     	ds	1
  1241  0000D7                     _tiempoInactividadTrans:
  1242                           	opt callstack 0
  1243  0000D7                     	ds	1
  1244                           
  1245                           	psect	dataBANK0
  1246  0000D8                     __pdataBANK0:
  1247                           	opt callstack 0
  1248  0000D8                     stoa@F1139:
  1249                           	opt callstack 0
  1250  0000D8                     	ds	7
  1251  0000DF                     _setPoint:
  1252                           	opt callstack 0
  1253  0000DF                     	ds	4
  1254  0000E3                     _VALOR_TIMER0:
  1255                           	opt callstack 0
  1256  0000E3                     	ds	2
  1257  0000E5                     _VALOR_TIMER0UART:
  1258                           	opt callstack 0
  1259  0000E5                     	ds	2
  1260                           
  1261                           	psect	bssBANK1
  1262  000100                     __pbssBANK1:
  1263                           	opt callstack 0
  1264  000100                     _buffer2:
  1265                           	opt callstack 0
  1266  000100                     	ds	50
  1267  000132                     _buffer:
  1268                           	opt callstack 0
  1269  000132                     	ds	50
  1270  000164                     _dbuf:
  1271                           	opt callstack 0
  1272  000164                     	ds	32
  1273                           
  1274                           	psect	bssBIGRAM
  1275  000184                     __pbssBIGRAM:
  1276                           	opt callstack 0
  1277  000184                     _horarios:
  1278                           	opt callstack 0
  1279  000184                     	ds	288
  1280                           
  1281                           	psect	cstackBANK0
  1282  000060                     __pcstackBANK0:
  1283                           	opt callstack 0
  1284  000060                     ?_vfprintf:
  1285                           	opt callstack 0
  1286  000060                     dameValorLux@modo:
  1287                           	opt callstack 0
  1288  000060                     vfprintf@fp:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x0
  1292  000060                     	ds	1
  1293  000061                     dameValorLux@valorLux:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 4 bytes @ 0x1
  1297  000061                     	ds	1
  1298  000062                     vfprintf@fmt:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x2
  1302  000062                     	ds	2
  1303  000064                     vfprintf@ap:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x4
  1307  000064                     	ds	2
  1308  000066                     ?_sprintf:
  1309                           	opt callstack 0
  1310  000066                     sprintf@s:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x6
  1314  000066                     	ds	2
  1315  000068                     sprintf@fmt:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x8
  1319  000068                     	ds	12
  1320  000074                     sprintf@ap:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x14
  1324  000074                     	ds	2
  1325  000076                     sprintf@f:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 6 bytes @ 0x16
  1329  000076                     	ds	6
  1330  00007C                     dameDatosSistema@bufferHorario:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 30 bytes @ 0x1C
  1334  00007C                     	ds	30
  1335  00009A                     _dameDatosSistema$1633:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x3A
  1339  00009A                     	ds	2
  1340  00009C                     _dameDatosSistema$1634:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x3C
  1344  00009C                     	ds	2
  1345  00009E                     _dameDatosSistema$1635:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x3E
  1349  00009E                     	ds	2
  1350  0000A0                     _dameDatosSistema$1636:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x40
  1354  0000A0                     	ds	2
  1355  0000A2                     dameDatosSistema@i:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x42
  1359  0000A2                     	ds	2
  1360  0000A4                     ??_sistemaPrincipal:
  1361                           
  1362                           ; 1 bytes @ 0x44
  1363  0000A4                     	ds	2
  1364                           
  1365                           	psect	cstackCOMRAM
  1366  000001                     __pcstackCOMRAM:
  1367                           	opt callstack 0
  1368  000001                     ??_i2c_espera:
  1369  000001                     ??_configPwm:
  1370  000001                     ??_convertirDato:
  1371  000001                     ?_strlen:
  1372                           	opt callstack 0
  1373  000001                     ?_isdigit:
  1374                           	opt callstack 0
  1375  000001                     ?_isspace:
  1376                           	opt callstack 0
  1377  000001                     ?_horaIluminar:
  1378                           	opt callstack 0
  1379  000001                     ?___wmul:
  1380                           	opt callstack 0
  1381  000001                     ?___awdiv:
  1382                           	opt callstack 0
  1383  000001                     ?___awmod:
  1384                           	opt callstack 0
  1385  000001                     ?___lmul:
  1386                           	opt callstack 0
  1387  000001                     ?___xxtofl:
  1388                           	opt callstack 0
  1389  000001                     ?___aodiv:
  1390                           	opt callstack 0
  1391  000001                     ?___aomod:
  1392                           	opt callstack 0
  1393  000001                     UART_write@dato:
  1394                           	opt callstack 0
  1395  000001                     limpiarBuffer@i:
  1396                           	opt callstack 0
  1397  000001                     ___wmul@multiplier:
  1398                           	opt callstack 0
  1399  000001                     ___awdiv@dividend:
  1400                           	opt callstack 0
  1401  000001                     ___awmod@dividend:
  1402                           	opt callstack 0
  1403  000001                     isdigit@c:
  1404                           	opt callstack 0
  1405  000001                     isspace@c:
  1406                           	opt callstack 0
  1407  000001                     fputc@c:
  1408                           	opt callstack 0
  1409  000001                     strlen@s:
  1410                           	opt callstack 0
  1411  000001                     ___lmul@multiplier:
  1412                           	opt callstack 0
  1413  000001                     ___xxtofl@val:
  1414                           	opt callstack 0
  1415  000001                     ___aodiv@dividend:
  1416                           	opt callstack 0
  1417  000001                     ___aomod@dividend:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 8 bytes @ 0x0
  1421  000001                     	ds	1
  1422  000002                     i2c_envia_dato@dato:
  1423                           	opt callstack 0
  1424  000002                     i2c_recibe_dato@datoleido:
  1425                           	opt callstack 0
  1426  000002                     i2c_recibe_datoACK@a:
  1427                           	opt callstack 0
  1428  000002                     convertirDato@dato:
  1429                           	opt callstack 0
  1430  000002                     UART_printf@cadena:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x1
  1434  000002                     	ds	1
  1435  000003                     ??_isdigit:
  1436  000003                     ??_isspace:
  1437  000003                     ??_horaIluminar:
  1438  000003                     i2c_recibe_datoACK@datoleido:
  1439                           	opt callstack 0
  1440  000003                     bh1750_escribir@comando:
  1441                           	opt callstack 0
  1442  000003                     configPwm@channel:
  1443                           	opt callstack 0
  1444  000003                     escribe_rtc@dato:
  1445                           	opt callstack 0
  1446  000003                     leer_rtc@direccion:
  1447                           	opt callstack 0
  1448  000003                     convertirDato@datoR:
  1449                           	opt callstack 0
  1450  000003                     leer_eeprom@direccion:
  1451                           	opt callstack 0
  1452  000003                     ___wmul@multiplicand:
  1453                           	opt callstack 0
  1454  000003                     ___awdiv@divisor:
  1455                           	opt callstack 0
  1456  000003                     ___awmod@divisor:
  1457                           	opt callstack 0
  1458  000003                     fputc@fp:
  1459                           	opt callstack 0
  1460  000003                     strlen@a:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x2
  1464  000003                     	ds	1
  1465  000004                     ??_bh1750_iniciar:
  1466  000004                     escribe_rtc@direccion:
  1467                           	opt callstack 0
  1468  000004                     leer_rtc@dato:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x3
  1472  000004                     	ds	1
  1473  000005                     ??_fputc:
  1474  000005                     ??_leer_eeprom:
  1475  000005                     ??___xxtofl:
  1476  000005                     setRtcDefault@horaRtc:
  1477                           	opt callstack 0
  1478  000005                     ___awdiv@counter:
  1479                           	opt callstack 0
  1480  000005                     ___awmod@counter:
  1481                           	opt callstack 0
  1482  000005                     ___wmul@product:
  1483                           	opt callstack 0
  1484  000005                     ___lmul@multiplicand:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x4
  1488  000005                     	ds	1
  1489  000006                     _horaIluminar$591:
  1490                           	opt callstack 0
  1491  000006                     leer_eeprom@dato:
  1492                           	opt callstack 0
  1493  000006                     ___awdiv@sign:
  1494                           	opt callstack 0
  1495  000006                     ___awmod@sign:
  1496                           	opt callstack 0
  1497                           
  1498                           ; 1 bytes @ 0x5
  1499  000006                     	ds	1
  1500  000007                     ??_leeHorariosMemoria:
  1501  000007                     _isspace$1308:
  1502                           	opt callstack 0
  1503  000007                     escribe_eeprom@direccion:
  1504                           	opt callstack 0
  1505  000007                     ___awdiv@quotient:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x6
  1509  000007                     	ds	1
  1510  000008                     ?_atoi:
  1511                           	opt callstack 0
  1512  000008                     atoi@s:
  1513                           	opt callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x7
  1516  000008                     	ds	1
  1517  000009                     escribe_eeprom@dato:
  1518                           	opt callstack 0
  1519  000009                     leeHorariosMemoria@caracterLeido:
  1520                           	opt callstack 0
  1521  000009                     ___xxtofl@sign:
  1522                           	opt callstack 0
  1523  000009                     ___lmul@product:
  1524                           	opt callstack 0
  1525  000009                     ___aodiv@divisor:
  1526                           	opt callstack 0
  1527  000009                     ___aomod@divisor:
  1528                           	opt callstack 0
  1529                           
  1530                           ; 8 bytes @ 0x8
  1531  000009                     	ds	1
  1532  00000A                     ??_atoi:
  1533  00000A                     ??_escribe_eeprom:
  1534  00000A                     ?_stoa:
  1535                           	opt callstack 0
  1536  00000A                     ___xxtofl@exp:
  1537                           	opt callstack 0
  1538  00000A                     leeHorariosMemoria@j:
  1539                           	opt callstack 0
  1540  00000A                     stoa@fp:
  1541                           	opt callstack 0
  1542  00000A                     fputs@s:
  1543                           	opt callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x9
  1546  00000A                     	ds	1
  1547  00000B                     ??_escribeHorariosMemoria:
  1548  00000B                     ___xxtofl@arg:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 4 bytes @ 0xA
  1552  00000B                     	ds	1
  1553  00000C                     leeHorariosMemoria@contMemoria:
  1554                           	opt callstack 0
  1555  00000C                     stoa@s:
  1556                           	opt callstack 0
  1557  00000C                     fputs@fp:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 2 bytes @ 0xB
  1561  00000C                     	ds	1
  1562  00000D                     ?_getValue:
  1563                           	opt callstack 0
  1564  00000D                     ?___aldiv:
  1565                           	opt callstack 0
  1566  00000D                     escribeHorariosMemoria@j:
  1567                           	opt callstack 0
  1568  00000D                     getValue@numCharacters:
  1569                           	opt callstack 0
  1570  00000D                     ___aldiv@dividend:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 4 bytes @ 0xC
  1574  00000D                     	ds	1
  1575  00000E                     ??_stoa:
  1576  00000E                     fputs@c:
  1577                           	opt callstack 0
  1578  00000E                     leeHorariosMemoria@i:
  1579                           	opt callstack 0
  1580  00000E                     atoi@neg:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 2 bytes @ 0xD
  1584  00000E                     	ds	1
  1585  00000F                     ?___fldiv:
  1586                           	opt callstack 0
  1587  00000F                     escribeHorariosMemoria@contMemoria:
  1588                           	opt callstack 0
  1589  00000F                     fputs@i:
  1590                           	opt callstack 0
  1591  00000F                     ___fldiv@b:
  1592                           	opt callstack 0
  1593  00000F                     stoa@nuls:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 7 bytes @ 0xE
  1597  00000F                     	ds	1
  1598  000010                     _atoi$1290:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0xF
  1602  000010                     	ds	1
  1603  000011                     ??_getValue:
  1604  000011                     ?_pad:
  1605                           	opt callstack 0
  1606  000011                     ___aodiv@counter:
  1607                           	opt callstack 0
  1608  000011                     ___aomod@counter:
  1609                           	opt callstack 0
  1610  000011                     escribeHorariosMemoria@i:
  1611                           	opt callstack 0
  1612  000011                     pad@fp:
  1613                           	opt callstack 0
  1614  000011                     ___aldiv@divisor:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x10
  1618  000011                     	ds	1
  1619  000012                     ___aodiv@sign:
  1620                           	opt callstack 0
  1621  000012                     ___aomod@sign:
  1622                           	opt callstack 0
  1623  000012                     _atoi$1292:
  1624                           	opt callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x11
  1627  000012                     	ds	1
  1628  000013                     ?_abs:
  1629                           	opt callstack 0
  1630  000013                     pad@buf:
  1631                           	opt callstack 0
  1632  000013                     abs@a:
  1633                           	opt callstack 0
  1634  000013                     ___fldiv@a:
  1635                           	opt callstack 0
  1636  000013                     ___aodiv@quotient:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 8 bytes @ 0x12
  1640  000013                     	ds	1
  1641  000014                     _atoi$1291:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x13
  1645  000014                     	ds	1
  1646  000015                     ??_abs:
  1647  000015                     getValue@datoIncorrecto:
  1648                           	opt callstack 0
  1649  000015                     ___aldiv@counter:
  1650                           	opt callstack 0
  1651  000015                     pad@p:
  1652                           	opt callstack 0
  1653  000015                     atoi@n:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x14
  1657  000015                     	ds	1
  1658  000016                     ___aldiv@sign:
  1659                           	opt callstack 0
  1660  000016                     getValue@i:
  1661                           	opt callstack 0
  1662  000016                     stoa@i:
  1663                           	opt callstack 0
  1664                           
  1665                           ; 2 bytes @ 0x15
  1666  000016                     	ds	1
  1667  000017                     ??___fldiv:
  1668  000017                     ??_pad:
  1669  000017                     ___aldiv@quotient:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 4 bytes @ 0x16
  1673  000017                     	ds	1
  1674  000018                     getValue@i_701:
  1675                           	opt callstack 0
  1676  000018                     pad@i:
  1677                           	opt callstack 0
  1678  000018                     stoa@w:
  1679                           	opt callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x17
  1682  000018                     	ds	2
  1683  00001A                     getValue@i_702:
  1684                           	opt callstack 0
  1685  00001A                     pad@w:
  1686                           	opt callstack 0
  1687  00001A                     stoa@cp:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 2 bytes @ 0x19
  1691  00001A                     	ds	1
  1692  00001B                     ?_map:
  1693                           	opt callstack 0
  1694  00001B                     UART_init@BAUD:
  1695                           	opt callstack 0
  1696  00001B                     map@x:
  1697                           	opt callstack 0
  1698  00001B                     ___fldiv@rem:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 4 bytes @ 0x1A
  1702  00001B                     	ds	1
  1703  00001C                     ?_dtoa:
  1704                           	opt callstack 0
  1705  00001C                     getValue@i_703:
  1706                           	opt callstack 0
  1707  00001C                     dtoa@fp:
  1708                           	opt callstack 0
  1709  00001C                     stoa@p:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x1B
  1713  00001C                     	ds	2
  1714  00001E                     stoa@l:
  1715                           	opt callstack 0
  1716  00001E                     getValue@dato:
  1717                           	opt callstack 0
  1718  00001E                     dtoa@d:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 8 bytes @ 0x1D
  1722  00001E                     	ds	1
  1723  00001F                     ___fldiv@sign:
  1724                           	opt callstack 0
  1725  00001F                     map@in_min:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 4 bytes @ 0x1E
  1729  00001F                     	ds	1
  1730  000020                     ___fldiv@new_exp:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x1F
  1734  000020                     	ds	2
  1735  000022                     getValue@Rx:
  1736                           	opt callstack 0
  1737  000022                     ___fldiv@grs:
  1738                           	opt callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x21
  1741  000022                     	ds	1
  1742  000023                     ??_asignarHorarios:
  1743  000023                     ??_setTiempoIluminar:
  1744  000023                     setRtc@direccion:
  1745                           	opt callstack 0
  1746  000023                     map@in_max:
  1747                           	opt callstack 0
  1748  000023                     _UART_init$1632:
  1749                           	opt callstack 0
  1750  000023                     _asignarSetPoint$1637:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 4 bytes @ 0x22
  1754  000023                     	ds	1
  1755  000024                     setRtc@seteado:
  1756                           	opt callstack 0
  1757  000024                     setTiempoIluminar@tiempoIluminar:
  1758                           	opt callstack 0
  1759                           
  1760                           ; 1 bytes @ 0x23
  1761  000024                     	ds	1
  1762  000025                     setRtc@datoRtc:
  1763                           	opt callstack 0
  1764  000025                     setTiempoIluminar@hora:
  1765                           	opt callstack 0
  1766  000025                     asignarHorarios@i:
  1767                           	opt callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x24
  1770  000025                     	ds	1
  1771  000026                     ??_dtoa:
  1772  000026                     setRtc@dato:
  1773                           	opt callstack 0
  1774  000026                     ___fldiv@bexp:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x25
  1778  000026                     	ds	1
  1779  000027                     asignarHorarios@diaIluminar:
  1780                           	opt callstack 0
  1781  000027                     ___fldiv@aexp:
  1782                           	opt callstack 0
  1783  000027                     map@out_min:
  1784                           	opt callstack 0
  1785  000027                     asignarSetPoint@setPointTemp:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 4 bytes @ 0x26
  1789  000027                     	ds	1
  1790  000028                     ?___flmul:
  1791                           	opt callstack 0
  1792  000028                     asignarHorarios@hora:
  1793                           	opt callstack 0
  1794  000028                     ___flmul@b:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 4 bytes @ 0x27
  1798  000028                     	ds	1
  1799  000029                     asignarHorarios@Rx:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 1 bytes @ 0x28
  1803  000029                     	ds	2
  1804  00002B                     map@out_max:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 4 bytes @ 0x2A
  1808  00002B                     	ds	1
  1809  00002C                     ___flmul@a:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 4 bytes @ 0x2B
  1813  00002C                     	ds	2
  1814  00002E                     _dtoa$805:
  1815                           	opt callstack 0
  1816                           
  1817                           ; 2 bytes @ 0x2D
  1818  00002E                     	ds	1
  1819  00002F                     
  1820                           ; 1 bytes @ 0x2E
  1821  00002F                     	ds	1
  1822  000030                     ??___flmul:
  1823  000030                     dtoa@p:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 2 bytes @ 0x2F
  1827  000030                     	ds	2
  1828  000032                     dtoa@w:
  1829                           	opt callstack 0
  1830                           
  1831                           ; 2 bytes @ 0x31
  1832  000032                     	ds	2
  1833  000034                     ___flmul@sign:
  1834                           	opt callstack 0
  1835  000034                     dtoa@s:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x33
  1839  000034                     	ds	1
  1840  000035                     ___flmul@grs:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 4 bytes @ 0x34
  1844  000035                     	ds	1
  1845  000036                     dtoa@n:
  1846                           	opt callstack 0
  1847                           
  1848                           ; 8 bytes @ 0x35
  1849  000036                     	ds	3
  1850  000039                     ___flmul@aexp:
  1851                           	opt callstack 0
  1852                           
  1853                           ; 1 bytes @ 0x38
  1854  000039                     	ds	1
  1855  00003A                     ___flmul@bexp:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 1 bytes @ 0x39
  1859  00003A                     	ds	1
  1860  00003B                     ___flmul@prod:
  1861                           	opt callstack 0
  1862                           
  1863                           ; 4 bytes @ 0x3A
  1864  00003B                     	ds	3
  1865  00003E                     dtoa@i:
  1866                           	opt callstack 0
  1867                           
  1868                           ; 2 bytes @ 0x3D
  1869  00003E                     	ds	1
  1870  00003F                     ___flmul@temp:
  1871                           	opt callstack 0
  1872                           
  1873                           ; 2 bytes @ 0x3E
  1874  00003F                     	ds	1
  1875  000040                     ?_vfpfcnvrt:
  1876                           	opt callstack 0
  1877  000040                     vfpfcnvrt@fp:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x3F
  1881  000040                     	ds	1
  1882  000041                     ?___fltol:
  1883                           	opt callstack 0
  1884  000041                     ___fltol@f1:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 4 bytes @ 0x40
  1888  000041                     	ds	1
  1889  000042                     vfpfcnvrt@fmt:
  1890                           	opt callstack 0
  1891                           
  1892                           ; 2 bytes @ 0x41
  1893  000042                     	ds	2
  1894  000044                     vfpfcnvrt@ap:
  1895                           	opt callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x43
  1898  000044                     	ds	1
  1899  000045                     ??___fltol:
  1900                           
  1901                           ; 1 bytes @ 0x44
  1902  000045                     	ds	1
  1903  000046                     ??_vfpfcnvrt:
  1904                           
  1905                           ; 1 bytes @ 0x45
  1906  000046                     	ds	3
  1907  000049                     ___fltol@sign1:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 1 bytes @ 0x48
  1911  000049                     	ds	1
  1912  00004A                     ___fltol@exp1:
  1913                           	opt callstack 0
  1914  00004A                     vfpfcnvrt@ll:
  1915                           	opt callstack 0
  1916                           
  1917                           ; 8 bytes @ 0x49
  1918  00004A                     	ds	1
  1919  00004B                     ?_bh1750_leer:
  1920                           	opt callstack 0
  1921  00004B                     pwmDuty@cicloTrabajo:
  1922                           	opt callstack 0
  1923                           
  1924                           ; 2 bytes @ 0x4A
  1925  00004B                     	ds	2
  1926  00004D                     pwmDuty@channel:
  1927                           	opt callstack 0
  1928                           
  1929                           ; 1 bytes @ 0x4C
  1930  00004D                     	ds	1
  1931  00004E                     ??_pwmDuty:
  1932                           
  1933                           ; 1 bytes @ 0x4D
  1934  00004E                     	ds	1
  1935  00004F                     ??_bh1750_leer:
  1936                           
  1937                           ; 1 bytes @ 0x4E
  1938  00004F                     	ds	2
  1939  000051                     bh1750_leer@lb:
  1940                           	opt callstack 0
  1941                           
  1942                           ; 1 bytes @ 0x50
  1943  000051                     	ds	1
  1944  000052                     bh1750_leer@hb:
  1945                           	opt callstack 0
  1946  000052                     vfpfcnvrt@cp:
  1947                           	opt callstack 0
  1948                           
  1949                           ; 2 bytes @ 0x51
  1950  000052                     	ds	1
  1951  000053                     bh1750_leer@valor:
  1952                           	opt callstack 0
  1953  000053                     pwmDuty@duty:
  1954                           	opt callstack 0
  1955                           
  1956                           ; 4 bytes @ 0x52
  1957  000053                     	ds	1
  1958  000054                     vfpfcnvrt@done:
  1959                           	opt callstack 0
  1960                           
  1961                           ; 2 bytes @ 0x53
  1962  000054                     	ds	2
  1963  000056                     _vfpfcnvrt$831:
  1964                           	opt callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x55
  1967  000056                     	ds	1
  1968  000057                     ??_inicializarObjetos:
  1969  000057                     ??_sistemaIluminado:
  1970  000057                     ?_dameValorLux:
  1971                           	opt callstack 0
  1972                           
  1973                           ; 4 bytes @ 0x56
  1974  000057                     	ds	1
  1975  000058                     _vfpfcnvrt$832:
  1976                           	opt callstack 0
  1977                           
  1978                           ; 2 bytes @ 0x57
  1979  000058                     	ds	1
  1980  000059                     inicializarObjetos@j:
  1981                           	opt callstack 0
  1982                           
  1983                           ; 2 bytes @ 0x58
  1984  000059                     	ds	1
  1985  00005A                     vfprintf@cfmt:
  1986                           	opt callstack 0
  1987                           
  1988                           ; 2 bytes @ 0x59
  1989  00005A                     	ds	1
  1990  00005B                     ??_dameValorLux:
  1991  00005B                     inicializarObjetos@i_594:
  1992                           	opt callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x5A
  1995  00005B                     	ds	1
  1996  00005C                     ??_dameDatosSistema:
  1997  00005C                     
  1998                           ; 1 bytes @ 0x5B
  1999  00005C                     	ds	1
  2000  00005D                     inicializarObjetos@i:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 2 bytes @ 0x5C
  2004  00005D                     	ds	1
  2005  00005E                     sistemaPrincipal@opcion:
  2006                           	opt callstack 0
  2007                           
  2008                           ; 1 bytes @ 0x5D
  2009  00005E                     	ds	1
  2010  00005F                     
  2011                           ; 1 bytes @ 0x5E
  2012 ;;
  2013 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2014 ;;
  2015 ;; *************** function _main *****************
  2016 ;; Defined at:
  2017 ;;		line 42 in file "main.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels required when called:   11
  2037 ;; This function calls:
  2038 ;;		_UART_init
  2039 ;;		_UART_printf
  2040 ;;		_bh1750_iniciar
  2041 ;;		_configPwm
  2042 ;;		_i2c_iniciar
  2043 ;;		_inicializarObjetos
  2044 ;;		_sistemaIluminado
  2045 ;;		_sistemaPrincipal
  2046 ;; This function is called by:
  2047 ;;		Startup code after reset
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text0
  2052  003010                     __ptext0:
  2053                           	opt callstack 0
  2054  003010                     _main:
  2055                           	opt callstack 20
  2056  003010                     
  2057                           ;main.c: 44:     i2c_iniciar();
  2058  003010  EC34  F01D         	call	_i2c_iniciar	;wreg free
  2059  003014                     
  2060                           ;main.c: 45:     bh1750_iniciar();
  2061  003014  EC3F  F01D         	call	_bh1750_iniciar	;wreg free
  2062  003018                     
  2063                           ;main.c: 46:     configPwm(1);
  2064  003018  0E01               	movlw	1
  2065  00301A  EC17  F01B         	call	_configPwm
  2066  00301E                     
  2067                           ;main.c: 47:     inicializarObjetos();
  2068  00301E  EC52  F010         	call	_inicializarObjetos	;wreg free
  2069  003022                     
  2070                           ;main.c: 50:     INTCONbits.GIE = 1;
  2071  003022  8EF2               	bsf	242,7,c	;volatile
  2072  003024                     
  2073                           ;main.c: 51:     INTCONbits.PEIE = 1;
  2074  003024  8CF2               	bsf	242,6,c	;volatile
  2075  003026                     
  2076                           ;main.c: 52:     INTCONbits.TMR0IE = 1;
  2077  003026  8AF2               	bsf	242,5,c	;volatile
  2078  003028                     
  2079                           ;main.c: 54:     PIE1bits.RCIE = 1;
  2080  003028  8A9D               	bsf	157,5,c	;volatile
  2081  00302A                     
  2082                           ;main.c: 56:     T0CON = 0b00000111;
  2083  00302A  0E07               	movlw	7
  2084  00302C  6ED5               	movwf	213,c	;volatile
  2085  00302E                     
  2086                           ;main.c: 58:     TMR0 = VALOR_TIMER0;
  2087  00302E  C0E3  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2088  003032  C0E4  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2089  003036                     
  2090                           ;main.c: 60:     INTCONbits.TMR0IF = 1;
  2091  003036  84F2               	bsf	242,2,c	;volatile
  2092  003038                     
  2093                           ;main.c: 63:     T0CONbits.TMR0ON = 1;
  2094  003038  8ED5               	bsf	213,7,c	;volatile
  2095  00303A                     
  2096                           ;main.c: 67:     UART_init(9600);
  2097  00303A  0E80               	movlw	128
  2098  00303C  6E1B               	movwf	UART_init@BAUD^0,c
  2099  00303E  0E25               	movlw	37
  2100  003040  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2101  003042  0E00               	movlw	0
  2102  003044  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2103  003046  0E00               	movlw	0
  2104  003048  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2105  00304A  EC48  F019         	call	_UART_init	;wreg free
  2106  00304E                     
  2107                           ;main.c: 68:     UART_printf("\r\nSistema Iniciado\n\r");
  2108  00304E  0E87               	movlw	low STR_31
  2109  003050  6E02               	movwf	UART_printf@cadena^0,c
  2110  003052  0E7F               	movlw	high STR_31
  2111  003054  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2112  003056  EC17  F01A         	call	_UART_printf	;wreg free
  2113  00305A                     l5290:
  2114                           
  2115                           ;main.c: 72:         if (datoRecibido) {
  2116  00305A  0100               	movlb	0	; () banked
  2117  00305C  51CE               	movf	_datoRecibido& (0+255),w,b
  2118  00305E  B4D8               	btfsc	status,2,c
  2119  003060  EF34  F018         	goto	u4551
  2120  003064  EF36  F018         	goto	u4550
  2121  003068                     u4551:
  2122  003068  EF3D  F018         	goto	l5298
  2123  00306C                     u4550:
  2124  00306C                     
  2125                           ; BSR set to: 0
  2126                           ;main.c: 74:             datoRecibido = 0;
  2127  00306C  0E00               	movlw	0
  2128  00306E  6FCE               	movwf	_datoRecibido& (0+255),b
  2129  003070                     
  2130                           ; BSR set to: 0
  2131                           ;main.c: 75:             byteUart -= 48;
  2132  003070  0E30               	movlw	48
  2133  003072  5FD6               	subwf	_byteUart& (0+255),f,b
  2134  003074                     
  2135                           ; BSR set to: 0
  2136                           ;main.c: 76:             sistemaPrincipal(byteUart);
  2137  003074  51D6               	movf	_byteUart& (0+255),w,b
  2138  003076  EC56  F017         	call	_sistemaPrincipal
  2139  00307A                     l5298:
  2140                           
  2141                           ;main.c: 81:         if (overflowTimer) {
  2142  00307A  0100               	movlb	0	; () banked
  2143  00307C  51CD               	movf	_overflowTimer& (0+255),w,b
  2144  00307E  B4D8               	btfsc	status,2,c
  2145  003080  EF44  F018         	goto	u4561
  2146  003084  EF46  F018         	goto	u4560
  2147  003088                     u4561:
  2148  003088  EF2D  F018         	goto	l5290
  2149  00308C                     u4560:
  2150  00308C                     
  2151                           ; BSR set to: 0
  2152                           ;main.c: 83:             esperandoDatos = 0;
  2153  00308C  0E00               	movlw	0
  2154  00308E  6FD4               	movwf	_esperandoDatos& (0+255),b
  2155                           
  2156                           ;main.c: 84:             overflowTimer = 0;
  2157  003090  0E00               	movlw	0
  2158  003092  6FCD               	movwf	_overflowTimer& (0+255),b
  2159  003094                     
  2160                           ; BSR set to: 0
  2161                           ;main.c: 85:             sistemaIluminado();
  2162  003094  ECC5  F013         	call	_sistemaIluminado	;wreg free
  2163  003098  EF2D  F018         	goto	l5290
  2164  00309C  EF07  F000         	goto	start
  2165  0030A0                     __end_of_main:
  2166                           	opt callstack 0
  2167                           
  2168 ;; *************** function _sistemaPrincipal *****************
  2169 ;; Defined at:
  2170 ;;		line 373 in file "./AUTOMATIZADOR.h"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  opcion          1    wreg     unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  opcion          1   93[COMRAM] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0
  2185 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2186 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2187 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2188 ;;Total ram usage:        3 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:   10
  2191 ;; This function calls:
  2192 ;;		_asignarHorarios
  2193 ;;		_asignarSetPoint
  2194 ;;		_dameDatosSistema
  2195 ;;		_fijaDiaRtc
  2196 ;;		_fijaHoraRtc
  2197 ;;		_leeHorariosMemoria
  2198 ;;		_mostrarDatosSensores
  2199 ;;		_setRtcDefault
  2200 ;;		_setTiempoIluminar
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text1
  2207  002EAC                     __ptext1:
  2208                           	opt callstack 0
  2209  002EAC                     _sistemaPrincipal:
  2210                           	opt callstack 20
  2211                           
  2212                           ;incstack = 0
  2213                           ;sistemaPrincipal@opcion stored from wreg
  2214  002EAC  6E5E               	movwf	sistemaPrincipal@opcion^0,c
  2215  002EAE                     
  2216                           ;./AUTOMATIZADOR.h: 375:     PIE1bits.RCIE = 0;
  2217  002EAE  9A9D               	bcf	157,5,c	;volatile
  2218                           
  2219                           ;./AUTOMATIZADOR.h: 377:     switch (opcion) {
  2220  002EB0  EF7C  F017         	goto	l5158
  2221  002EB4                     l5140:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;./AUTOMATIZADOR.h: 380:             fijaHoraRtc();
  2225  002EB4  ECC8  F01B         	call	_fijaHoraRtc	;wreg free
  2226                           
  2227                           ;./AUTOMATIZADOR.h: 381:             break;
  2228  002EB8  EFAE  F017         	goto	l338
  2229  002EBC                     l5142:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;./AUTOMATIZADOR.h: 384:             asignarHorarios();
  2233  002EBC  EC23  F013         	call	_asignarHorarios	;wreg free
  2234                           
  2235                           ;./AUTOMATIZADOR.h: 385:             break;
  2236  002EC0  EFAE  F017         	goto	l338
  2237  002EC4                     l5144:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;./AUTOMATIZADOR.h: 388:             setTiempoIluminar();
  2241  002EC4  EC92  F018         	call	_setTiempoIluminar	;wreg free
  2242                           
  2243                           ;./AUTOMATIZADOR.h: 389:             break;
  2244  002EC8  EFAE  F017         	goto	l338
  2245  002ECC                     l5146:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;./AUTOMATIZADOR.h: 392:             dameDatosSistema();
  2249  002ECC  EC4F  F009         	call	_dameDatosSistema	;wreg free
  2250                           
  2251                           ;./AUTOMATIZADOR.h: 393:             break;
  2252  002ED0  EFAE  F017         	goto	l338
  2253  002ED4                     l5148:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;./AUTOMATIZADOR.h: 396:             mostrarDatosSensores();
  2257  002ED4  ECEF  F01A         	call	_mostrarDatosSensores	;wreg free
  2258                           
  2259                           ;./AUTOMATIZADOR.h: 397:             break;
  2260  002ED8  EFAE  F017         	goto	l338
  2261  002EDC                     l5150:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;./AUTOMATIZADOR.h: 400:             asignarSetPoint();
  2265  002EDC  EC5A  F015         	call	_asignarSetPoint	;wreg free
  2266  002EE0                     l344:
  2267                           
  2268                           ;./AUTOMATIZADOR.h: 403:             fijaDiaRtc();
  2269  002EE0  EC05  F01C         	call	_fijaDiaRtc	;wreg free
  2270                           
  2271                           ;./AUTOMATIZADOR.h: 404:             break;
  2272  002EE4  EFAE  F017         	goto	l338
  2273  002EE8                     l5152:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;./AUTOMATIZADOR.h: 407:             leeHorariosMemoria();
  2277  002EE8  EC0F  F011         	call	_leeHorariosMemoria	;wreg free
  2278                           
  2279                           ;./AUTOMATIZADOR.h: 408:             break;
  2280  002EEC  EFAE  F017         	goto	l338
  2281  002EF0                     l5154:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;./AUTOMATIZADOR.h: 411:             setRtcDefault();
  2285  002EF0  EC58  F01C         	call	_setRtcDefault	;wreg free
  2286                           
  2287                           ;./AUTOMATIZADOR.h: 412:             break;
  2288  002EF4  EFAE  F017         	goto	l338
  2289  002EF8                     l5158:
  2290  002EF8  505E               	movf	sistemaPrincipal@opcion^0,w,c
  2291  002EFA  0100               	movlb	0	; () banked
  2292  002EFC  6FA4               	movwf	??_sistemaPrincipal& (0+255),b
  2293  002EFE  6BA5               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  2294                           
  2295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2296                           ; Switch size 1, requested type "simple"
  2297                           ; Number of cases is 1, Range of values is 0 to 0
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte            4     3 (average)
  2301                           ;	Chosen strategy is simple_byte
  2302  002F00  51A5               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  2303  002F02  0A00               	xorlw	0	; case 0
  2304  002F04  B4D8               	btfsc	status,2,c
  2305  002F06  EF87  F017         	goto	l5554
  2306  002F0A  EFAE  F017         	goto	l338
  2307  002F0E                     l5554:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ; Switch size 1, requested type "simple"
  2311                           ; Number of cases is 9, Range of values is 1 to 9
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte           28    15 (average)
  2315                           ;	Chosen strategy is simple_byte
  2316  002F0E  51A4               	movf	??_sistemaPrincipal& (0+255),w,b
  2317  002F10  0A01               	xorlw	1	; case 1
  2318  002F12  B4D8               	btfsc	status,2,c
  2319  002F14  EF5A  F017         	goto	l5140
  2320  002F18  0A03               	xorlw	3	; case 2
  2321  002F1A  B4D8               	btfsc	status,2,c
  2322  002F1C  EF5E  F017         	goto	l5142
  2323  002F20  0A01               	xorlw	1	; case 3
  2324  002F22  B4D8               	btfsc	status,2,c
  2325  002F24  EF62  F017         	goto	l5144
  2326  002F28  0A07               	xorlw	7	; case 4
  2327  002F2A  B4D8               	btfsc	status,2,c
  2328  002F2C  EF66  F017         	goto	l5146
  2329  002F30  0A01               	xorlw	1	; case 5
  2330  002F32  B4D8               	btfsc	status,2,c
  2331  002F34  EF6A  F017         	goto	l5148
  2332  002F38  0A03               	xorlw	3	; case 6
  2333  002F3A  B4D8               	btfsc	status,2,c
  2334  002F3C  EF6E  F017         	goto	l5150
  2335  002F40  0A01               	xorlw	1	; case 7
  2336  002F42  B4D8               	btfsc	status,2,c
  2337  002F44  EF70  F017         	goto	l344
  2338  002F48  0A0F               	xorlw	15	; case 8
  2339  002F4A  B4D8               	btfsc	status,2,c
  2340  002F4C  EF74  F017         	goto	l5152
  2341  002F50  0A01               	xorlw	1	; case 9
  2342  002F52  B4D8               	btfsc	status,2,c
  2343  002F54  EF78  F017         	goto	l5154
  2344  002F58  EFAE  F017         	goto	l338
  2345  002F5C                     l338:
  2346                           
  2347                           ;./AUTOMATIZADOR.h: 421:     PIE1bits.RCIE = 1;
  2348  002F5C  8A9D               	bsf	157,5,c	;volatile
  2349  002F5E  0012               	return		;funcret
  2350  002F60                     __end_of_sistemaPrincipal:
  2351                           	opt callstack 0
  2352                           
  2353 ;; *************** function _setTiempoIluminar *****************
  2354 ;; Defined at:
  2355 ;;		line 325 in file "./AUTOMATIZADOR.h"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  hora            1   36[COMRAM] unsigned char 
  2360 ;;  tiempoIlumin    1   35[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2373 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:        3 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    5
  2377 ;; This function calls:
  2378 ;;		_UART_write
  2379 ;;		_escribeHorariosMemoria
  2380 ;;		_getValue
  2381 ;; This function is called by:
  2382 ;;		_sistemaPrincipal
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text2
  2387  003124                     __ptext2:
  2388                           	opt callstack 0
  2389  003124                     _setTiempoIluminar:
  2390                           	opt callstack 24
  2391  003124                     
  2392                           ;./AUTOMATIZADOR.h: 327:     T_UBYTE hora;;./AUTOMATIZADOR.h: 328:     T_UBYTE tiempoIlu
      +                          minar;;./AUTOMATIZADOR.h: 333:     hora = getValue(2);
  2393  003124  0E00               	movlw	0
  2394  003126  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  2395  003128  0E02               	movlw	2
  2396  00312A  6E0D               	movwf	getValue@numCharacters^0,c
  2397  00312C  EC09  F000         	call	_getValue	;wreg free
  2398  003130  500D               	movf	?_getValue^0,w,c
  2399  003132  6E25               	movwf	setTiempoIluminar@hora^0,c
  2400  003134                     
  2401                           ;./AUTOMATIZADOR.h: 335:     if (hora != '@') {
  2402  003134  0E40               	movlw	64
  2403  003136  1825               	xorwf	setTiempoIluminar@hora^0,w,c
  2404  003138  B4D8               	btfsc	status,2,c
  2405  00313A  EFA1  F018         	goto	u4341
  2406  00313E  EFA3  F018         	goto	u4340
  2407  003142                     u4341:
  2408  003142  EFD1  F018         	goto	l330
  2409  003146                     u4340:
  2410  003146                     
  2411                           ;./AUTOMATIZADOR.h: 338:         tiempoIluminar = getValue(2);
  2412  003146  0E00               	movlw	0
  2413  003148  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  2414  00314A  0E02               	movlw	2
  2415  00314C  6E0D               	movwf	getValue@numCharacters^0,c
  2416  00314E  EC09  F000         	call	_getValue	;wreg free
  2417  003152  500D               	movf	?_getValue^0,w,c
  2418  003154  6E24               	movwf	setTiempoIluminar@tiempoIluminar^0,c
  2419  003156                     
  2420                           ;./AUTOMATIZADOR.h: 340:         if (tiempoIluminar != '@') {
  2421  003156  0E40               	movlw	64
  2422  003158  1824               	xorwf	setTiempoIluminar@tiempoIluminar^0,w,c
  2423  00315A  B4D8               	btfsc	status,2,c
  2424  00315C  EFB2  F018         	goto	u4351
  2425  003160  EFB4  F018         	goto	u4350
  2426  003164                     u4351:
  2427  003164  EFD1  F018         	goto	l330
  2428  003168                     u4350:
  2429  003168                     
  2430                           ;./AUTOMATIZADOR.h: 346:             horarios[hora].tiempoIluminar = tiempoIluminar;
  2431  003168  5025               	movf	setTiempoIluminar@hora^0,w,c
  2432  00316A  0D0C               	mullw	12
  2433  00316C  0E8F               	movlw	low (_horarios+11)
  2434  00316E  24F3               	addwf	243,w,c
  2435  003170  6ED9               	movwf	fsr2l,c
  2436  003172  0E01               	movlw	high (_horarios+11)
  2437  003174  20F4               	addwfc	prodh,w,c
  2438  003176  6EDA               	movwf	fsr2h,c
  2439  003178  C024  FFDF         	movff	setTiempoIluminar@tiempoIluminar,indf2
  2440                           
  2441                           ;./AUTOMATIZADOR.h: 347:             minutosIluminar = horarios[hora].tiempoIluminar;
  2442  00317C  5025               	movf	setTiempoIluminar@hora^0,w,c
  2443  00317E  0D0C               	mullw	12
  2444  003180  0E8F               	movlw	low (_horarios+11)
  2445  003182  24F3               	addwf	243,w,c
  2446  003184  6ED9               	movwf	fsr2l,c
  2447  003186  0E01               	movlw	high (_horarios+11)
  2448  003188  20F4               	addwfc	prodh,w,c
  2449  00318A  6EDA               	movwf	fsr2h,c
  2450  00318C  50DF               	movf	indf2,w,c
  2451  00318E  6E23               	movwf	??_setTiempoIluminar^0,c
  2452  003190  5023               	movf	??_setTiempoIluminar^0,w,c
  2453  003192  0100               	movlb	0	; () banked
  2454  003194  6FC4               	movwf	_minutosIluminar& (0+255),b
  2455  003196  6BC5               	clrf	(_minutosIluminar+1)& (0+255),b
  2456  003198                     
  2457                           ; BSR set to: 0
  2458                           ;./AUTOMATIZADOR.h: 349:             escribeHorariosMemoria();
  2459  003198  EC78  F012         	call	_escribeHorariosMemoria	;wreg free
  2460  00319C                     
  2461                           ;./AUTOMATIZADOR.h: 351:             UART_write('E');
  2462  00319C  0E45               	movlw	69
  2463  00319E  EC29  F01D         	call	_UART_write
  2464  0031A2                     l330:
  2465  0031A2  0012               	return		;funcret
  2466  0031A4                     __end_of_setTiempoIluminar:
  2467                           	opt callstack 0
  2468                           
  2469 ;; *************** function _setRtcDefault *****************
  2470 ;; Defined at:
  2471 ;;		line 226 in file "./AUTOMATIZADOR.h"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  horaRtc         1    4[COMRAM] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2488 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2489 ;;Total ram usage:        1 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    4
  2492 ;; This function calls:
  2493 ;;		_UART_printf
  2494 ;;		_escribe_rtc
  2495 ;; This function is called by:
  2496 ;;		_sistemaPrincipal
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text3
  2501  0038B0                     __ptext3:
  2502                           	opt callstack 0
  2503  0038B0                     _setRtcDefault:
  2504                           	opt callstack 25
  2505  0038B0                     
  2506                           ;./AUTOMATIZADOR.h: 227:     T_UBYTE horaRtc;;./AUTOMATIZADOR.h: 229:     horaRtc = ((1)
      +                           & 0x0F) << 4;
  2507  0038B0  0E10               	movlw	16
  2508  0038B2  6E05               	movwf	setRtcDefault@horaRtc^0,c
  2509  0038B4                     
  2510                           ;./AUTOMATIZADOR.h: 231:     horaRtc |= (2) & 0x0F;
  2511  0038B4  8205               	bsf	setRtcDefault@horaRtc^0,1,c
  2512  0038B6                     
  2513                           ;./AUTOMATIZADOR.h: 233:     escribe_rtc(0x02, horaRtc);
  2514  0038B6  C005  F003         	movff	setRtcDefault@horaRtc,escribe_rtc@dato
  2515  0038BA  0E02               	movlw	2
  2516  0038BC  EC01  F01D         	call	_escribe_rtc
  2517  0038C0                     
  2518                           ;./AUTOMATIZADOR.h: 235:     escribe_rtc(0x01, 0);
  2519  0038C0  0E00               	movlw	0
  2520  0038C2  6E03               	movwf	escribe_rtc@dato^0,c
  2521  0038C4  0E01               	movlw	1
  2522  0038C6  EC01  F01D         	call	_escribe_rtc
  2523  0038CA                     
  2524                           ;./AUTOMATIZADOR.h: 236:     escribe_rtc(0x00, 0);
  2525  0038CA  0E00               	movlw	0
  2526  0038CC  6E03               	movwf	escribe_rtc@dato^0,c
  2527  0038CE  0E00               	movlw	0
  2528  0038D0  EC01  F01D         	call	_escribe_rtc
  2529  0038D4                     
  2530                           ;./AUTOMATIZADOR.h: 237:     UART_printf("\r\nRTC DEFAULT\n\r");
  2531  0038D4  0EC0               	movlw	low STR_1
  2532  0038D6  6E02               	movwf	UART_printf@cadena^0,c
  2533  0038D8  0E7F               	movlw	high STR_1
  2534  0038DA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2535  0038DC  EC17  F01A         	call	_UART_printf	;wreg free
  2536  0038E0  0012               	return		;funcret
  2537  0038E2                     __end_of_setRtcDefault:
  2538                           	opt callstack 0
  2539                           
  2540 ;; *************** function _mostrarDatosSensores *****************
  2541 ;; Defined at:
  2542 ;;		line 546 in file "./AUTOMATIZADOR.h"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    9
  2563 ;; This function calls:
  2564 ;;		_UART_printf
  2565 ;;		_UART_write
  2566 ;;		_dameValorLux
  2567 ;;		_sprintf
  2568 ;; This function is called by:
  2569 ;;		_sistemaPrincipal
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text4
  2574  0035DE                     __ptext4:
  2575                           	opt callstack 0
  2576  0035DE                     _mostrarDatosSensores:
  2577                           	opt callstack 20
  2578  0035DE                     
  2579                           ;./AUTOMATIZADOR.h: 548:     luzMedida = dameValorLux(0x10);
  2580  0035DE  0E10               	movlw	16
  2581  0035E0  EC3F  F01B         	call	_dameValorLux
  2582  0035E4  C057  F0B6         	movff	?_dameValorLux,_luzMedida
  2583  0035E8  C058  F0B7         	movff	?_dameValorLux+1,_luzMedida+1
  2584  0035EC  C059  F0B8         	movff	?_dameValorLux+2,_luzMedida+2
  2585  0035F0  C05A  F0B9         	movff	?_dameValorLux+3,_luzMedida+3
  2586  0035F4                     
  2587                           ;./AUTOMATIZADOR.h: 549:     sprintf(buffer, "\rLuz medida: %d luxs\n\r", luzMedida);
  2588  0035F4  0E32               	movlw	low _buffer
  2589  0035F6  0100               	movlb	0	; () banked
  2590  0035F8  6F66               	movwf	sprintf@s& (0+255),b
  2591  0035FA  0E01               	movlw	high _buffer
  2592  0035FC  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2593  0035FE  0E70               	movlw	low STR_27
  2594  003600  6F68               	movwf	sprintf@fmt& (0+255),b
  2595  003602  0E7F               	movlw	high STR_27
  2596  003604  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2597  003606  C0B6  F06A         	movff	_luzMedida,?_sprintf+4
  2598  00360A  C0B7  F06B         	movff	_luzMedida+1,?_sprintf+5
  2599  00360E  C0B8  F06C         	movff	_luzMedida+2,?_sprintf+6
  2600  003612  C0B9  F06D         	movff	_luzMedida+3,?_sprintf+7
  2601  003616  EC9D  F01A         	call	_sprintf	;wreg free
  2602  00361A                     
  2603                           ;./AUTOMATIZADOR.h: 550:     UART_printf(buffer);
  2604  00361A  0E32               	movlw	low _buffer
  2605  00361C  6E02               	movwf	UART_printf@cadena^0,c
  2606  00361E  0E01               	movlw	high _buffer
  2607  003620  6E03               	movwf	(UART_printf@cadena+1)^0,c
  2608  003622  EC17  F01A         	call	_UART_printf	;wreg free
  2609  003626                     
  2610                           ;./AUTOMATIZADOR.h: 552:     UART_write('&');
  2611  003626  0E26               	movlw	38
  2612  003628  EC29  F01D         	call	_UART_write
  2613  00362C  0012               	return		;funcret
  2614  00362E                     __end_of_mostrarDatosSensores:
  2615                           	opt callstack 0
  2616                           
  2617 ;; *************** function _dameValorLux *****************
  2618 ;; Defined at:
  2619 ;;		line 56 in file "./bh1750.h"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  modo            1    wreg     unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  modo            1    0[BANK0 ] unsigned char 
  2624 ;;  valorLux        4    1[BANK0 ] unsigned long 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  4   86[COMRAM] unsigned long 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2634 ;;      Params:         4       0       0       0       0       0       0       0       0
  2635 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2636 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2637 ;;      Totals:         5       5       0       0       0       0       0       0       0
  2638 ;;Total ram usage:       10 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    4
  2641 ;; This function calls:
  2642 ;;		_bh1750_escribir
  2643 ;;		_bh1750_leer
  2644 ;; This function is called by:
  2645 ;;		_mostrarDatosSensores
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text5
  2650  00367E                     __ptext5:
  2651                           	opt callstack 0
  2652  00367E                     _dameValorLux:
  2653                           	opt callstack 24
  2654                           
  2655                           ;incstack = 0
  2656                           ;dameValorLux@modo stored from wreg
  2657  00367E  0100               	movlb	0	; () banked
  2658  003680  6F60               	movwf	dameValorLux@modo& (0+255),b
  2659  003682                     
  2660                           ;./bh1750.h: 58:     bh1750_escribir(0x01);
  2661  003682  0E01               	movlw	1
  2662  003684  EC1D  F01D         	call	_bh1750_escribir
  2663  003688                     
  2664                           ;./bh1750.h: 59:     bh1750_escribir(modo);
  2665  003688  0100               	movlb	0	; () banked
  2666  00368A  5160               	movf	dameValorLux@modo& (0+255),w,b
  2667  00368C  EC1D  F01D         	call	_bh1750_escribir
  2668  003690                     
  2669                           ;./bh1750.h: 60:     valorLux = bh1750_leer();
  2670  003690  ECF8  F016         	call	_bh1750_leer	;wreg free
  2671  003694  C04B  F061         	movff	?_bh1750_leer,dameValorLux@valorLux
  2672  003698  C04C  F062         	movff	?_bh1750_leer+1,dameValorLux@valorLux+1
  2673  00369C  C04D  F063         	movff	?_bh1750_leer+2,dameValorLux@valorLux+2
  2674  0036A0  C04E  F064         	movff	?_bh1750_leer+3,dameValorLux@valorLux+3
  2675  0036A4                     
  2676                           ;./bh1750.h: 61:     _delay((unsigned long)((180)*(4000000/4000.0)));
  2677  0036A4  0EEA               	movlw	234
  2678  0036A6  6E5B               	movwf	??_dameValorLux^0,c
  2679  0036A8  0EC3               	movlw	195
  2680  0036AA                     u4577:
  2681  0036AA  2EE8               	decfsz	wreg,f,c
  2682  0036AC  D7FE               	bra	u4577
  2683  0036AE  2E5B               	decfsz	??_dameValorLux^0,f,c
  2684  0036B0  D7FC               	bra	u4577
  2685  0036B2  F000               	nop	
  2686  0036B4                     
  2687                           ;./bh1750.h: 62:     bh1750_escribir(0x00);
  2688  0036B4  0E00               	movlw	0
  2689  0036B6  EC1D  F01D         	call	_bh1750_escribir
  2690  0036BA                     
  2691                           ;./bh1750.h: 64:     return valorLux;
  2692  0036BA  C061  F057         	movff	dameValorLux@valorLux,?_dameValorLux
  2693  0036BE  C062  F058         	movff	dameValorLux@valorLux+1,?_dameValorLux+1
  2694  0036C2  C063  F059         	movff	dameValorLux@valorLux+2,?_dameValorLux+2
  2695  0036C6  C064  F05A         	movff	dameValorLux@valorLux+3,?_dameValorLux+3
  2696  0036CA  0012               	return		;funcret
  2697  0036CC                     __end_of_dameValorLux:
  2698                           	opt callstack 0
  2699                           
  2700 ;; *************** function _bh1750_leer *****************
  2701 ;; Defined at:
  2702 ;;		line 39 in file "./bh1750.h"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  valor           4   82[COMRAM] unsigned long 
  2707 ;;  hb              1   81[COMRAM] unsigned char 
  2708 ;;  lb              1   80[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  4   74[COMRAM] unsigned long 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         4       0       0       0       0       0       0       0       0
  2719 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2720 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2721 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2722 ;;Total ram usage:       12 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    3
  2725 ;; This function calls:
  2726 ;;		___fldiv
  2727 ;;		___fltol
  2728 ;;		___xxtofl
  2729 ;;		_i2c_detener
  2730 ;;		_i2c_envia_dato
  2731 ;;		_i2c_inicia_com
  2732 ;;		_i2c_recibe_datoACK
  2733 ;; This function is called by:
  2734 ;;		_dameValorLux
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text6
  2739  002DF0                     __ptext6:
  2740                           	opt callstack 0
  2741  002DF0                     _bh1750_leer:
  2742                           	opt callstack 24
  2743  002DF0                     
  2744                           ;./bh1750.h: 41:     T_UBYTE lb = 0;
  2745  002DF0  0E00               	movlw	0
  2746  002DF2  6E51               	movwf	bh1750_leer@lb^0,c
  2747                           
  2748                           ;./bh1750.h: 42:     T_UBYTE hb = 0;
  2749  002DF4  0E00               	movlw	0
  2750  002DF6  6E52               	movwf	bh1750_leer@hb^0,c
  2751  002DF8                     
  2752                           ;./bh1750.h: 44:     i2c_inicia_com();
  2753  002DF8  EC64  F01D         	call	_i2c_inicia_com	;wreg free
  2754  002DFC                     
  2755                           ;./bh1750.h: 45:     i2c_envia_dato(0x47);
  2756  002DFC  0E47               	movlw	71
  2757  002DFE  EC5A  F01D         	call	_i2c_envia_dato
  2758  002E02                     
  2759                           ;./bh1750.h: 46:     hb = i2c_recibe_datoACK(1);
  2760  002E02  0E01               	movlw	1
  2761  002E04  EC89  F01C         	call	_i2c_recibe_datoACK
  2762  002E08  6E52               	movwf	bh1750_leer@hb^0,c
  2763  002E0A                     
  2764                           ;./bh1750.h: 47:     lb = i2c_recibe_datoACK(0);
  2765  002E0A  0E00               	movlw	0
  2766  002E0C  EC89  F01C         	call	_i2c_recibe_datoACK
  2767  002E10  6E51               	movwf	bh1750_leer@lb^0,c
  2768  002E12                     
  2769                           ;./bh1750.h: 48:     i2c_detener();
  2770  002E12  EC68  F01D         	call	_i2c_detener	;wreg free
  2771  002E16                     
  2772                           ;./bh1750.h: 50:     valor = (hb <<8 ) + lb;
  2773  002E16  5051               	movf	bh1750_leer@lb^0,w,c
  2774  002E18  C052  F04F         	movff	bh1750_leer@hb,??_bh1750_leer
  2775  002E1C  6A50               	clrf	(??_bh1750_leer+1)^0,c
  2776  002E1E  C04F  F050         	movff	??_bh1750_leer,??_bh1750_leer+1
  2777  002E22  6A4F               	clrf	??_bh1750_leer^0,c
  2778  002E24  264F               	addwf	??_bh1750_leer^0,f,c
  2779  002E26  0E00               	movlw	0
  2780  002E28  2250               	addwfc	(??_bh1750_leer+1)^0,f,c
  2781  002E2A  C04F  F053         	movff	??_bh1750_leer,bh1750_leer@valor
  2782  002E2E  C050  F054         	movff	??_bh1750_leer+1,bh1750_leer@valor+1
  2783  002E32  0E00               	movlw	0
  2784  002E34  BE54               	btfsc	(bh1750_leer@valor+1)^0,7,c
  2785  002E36  0EFF               	movlw	-1
  2786  002E38  6E55               	movwf	(bh1750_leer@valor+2)^0,c
  2787  002E3A  6E56               	movwf	(bh1750_leer@valor+3)^0,c
  2788  002E3C                     
  2789                           ;./bh1750.h: 51:     valor /= 1.2;
  2790  002E3C  0E9A               	movlw	154
  2791  002E3E  6E13               	movwf	___fldiv@a^0,c
  2792  002E40  0E99               	movlw	153
  2793  002E42  6E14               	movwf	(___fldiv@a+1)^0,c
  2794  002E44  0E99               	movlw	153
  2795  002E46  6E15               	movwf	(___fldiv@a+2)^0,c
  2796  002E48  0E3F               	movlw	63
  2797  002E4A  6E16               	movwf	(___fldiv@a+3)^0,c
  2798  002E4C  C053  F001         	movff	bh1750_leer@valor,___xxtofl@val
  2799  002E50  C054  F002         	movff	bh1750_leer@valor+1,___xxtofl@val+1
  2800  002E54  C055  F003         	movff	bh1750_leer@valor+2,___xxtofl@val+2
  2801  002E58  C056  F004         	movff	bh1750_leer@valor+3,___xxtofl@val+3
  2802  002E5C  0E00               	movlw	0
  2803  002E5E  EC29  F00D         	call	___xxtofl
  2804  002E62  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2805  002E66  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2806  002E6A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2807  002E6E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2808  002E72  EC82  F007         	call	___fldiv	;wreg free
  2809  002E76  C00F  F041         	movff	?___fldiv,___fltol@f1
  2810  002E7A  C010  F042         	movff	?___fldiv+1,___fltol@f1+1
  2811  002E7E  C011  F043         	movff	?___fldiv+2,___fltol@f1+2
  2812  002E82  C012  F044         	movff	?___fldiv+3,___fltol@f1+3
  2813  002E86  ECD7  F014         	call	___fltol	;wreg free
  2814  002E8A  C041  F053         	movff	?___fltol,bh1750_leer@valor
  2815  002E8E  C042  F054         	movff	?___fltol+1,bh1750_leer@valor+1
  2816  002E92  C043  F055         	movff	?___fltol+2,bh1750_leer@valor+2
  2817  002E96  C044  F056         	movff	?___fltol+3,bh1750_leer@valor+3
  2818  002E9A                     
  2819                           ;./bh1750.h: 53:     return valor;
  2820  002E9A  C053  F04B         	movff	bh1750_leer@valor,?_bh1750_leer
  2821  002E9E  C054  F04C         	movff	bh1750_leer@valor+1,?_bh1750_leer+1
  2822  002EA2  C055  F04D         	movff	bh1750_leer@valor+2,?_bh1750_leer+2
  2823  002EA6  C056  F04E         	movff	bh1750_leer@valor+3,?_bh1750_leer+3
  2824  002EAA  0012               	return		;funcret
  2825  002EAC                     __end_of_bh1750_leer:
  2826                           	opt callstack 0
  2827                           
  2828 ;; *************** function _i2c_recibe_datoACK *****************
  2829 ;; Defined at:
  2830 ;;		line 103 in file "./I2C.h"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  a               1    wreg     unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  a               1    1[COMRAM] unsigned char 
  2835 ;;  datoleido       1    2[COMRAM] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      unsigned char 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0
  2846 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2848 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2849 ;;Total ram usage:        2 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    2
  2852 ;; This function calls:
  2853 ;;		_i2c_espera
  2854 ;; This function is called by:
  2855 ;;		_bh1750_leer
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text7
  2860  003912                     __ptext7:
  2861                           	opt callstack 0
  2862  003912                     _i2c_recibe_datoACK:
  2863                           	opt callstack 24
  2864                           
  2865                           ;incstack = 0
  2866                           ;i2c_recibe_datoACK@a stored from wreg
  2867  003912  6E02               	movwf	i2c_recibe_datoACK@a^0,c
  2868  003914                     
  2869                           ;./I2C.h: 105:     T_UBYTE datoleido;;./I2C.h: 108:     i2c_espera();
  2870  003914  ECDE  F01C         	call	_i2c_espera	;wreg free
  2871  003918                     
  2872                           ;./I2C.h: 109:     SSPCON2bits.RCEN = 1;
  2873  003918  86C5               	bsf	197,3,c	;volatile
  2874                           
  2875                           ;./I2C.h: 111:     i2c_espera();
  2876  00391A  ECDE  F01C         	call	_i2c_espera	;wreg free
  2877  00391E                     
  2878                           ;./I2C.h: 112:     datoleido = SSPBUF;
  2879  00391E  CFC9 F003          	movff	4041,i2c_recibe_datoACK@datoleido	;volatile
  2880                           
  2881                           ;./I2C.h: 115:     i2c_espera();
  2882  003922  ECDE  F01C         	call	_i2c_espera	;wreg free
  2883  003926                     
  2884                           ;./I2C.h: 117:     ACKDT = (a) ? 0 : 1;
  2885  003926  5002               	movf	i2c_recibe_datoACK@a^0,w,c
  2886  003928  B4D8               	btfsc	status,2,c
  2887  00392A  EF99  F01C         	goto	u2941
  2888  00392E  EF9C  F01C         	goto	u2940
  2889  003932                     u2941:
  2890  003932  8AC5               	bsf	4037,5,c	;volatile
  2891  003934  EF9D  F01C         	goto	u2955
  2892  003938                     u2940:
  2893  003938  9AC5               	bcf	4037,5,c	;volatile
  2894  00393A                     u2955:
  2895  00393A                     
  2896                           ;./I2C.h: 118:     ACKEN = 1;
  2897  00393A  88C5               	bsf	4037,4,c	;volatile
  2898  00393C                     
  2899                           ;./I2C.h: 120:     return datoleido;
  2900  00393C  5003               	movf	i2c_recibe_datoACK@datoleido^0,w,c
  2901  00393E  0012               	return		;funcret
  2902  003940                     __end_of_i2c_recibe_datoACK:
  2903                           	opt callstack 0
  2904                           
  2905 ;; *************** function _leeHorariosMemoria *****************
  2906 ;; Defined at:
  2907 ;;		line 195 in file "./AUTOMATIZADOR.h"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  j               2    9[COMRAM] int 
  2912 ;;  i               2   13[COMRAM] int 
  2913 ;;  contMemoria     2   11[COMRAM] int 
  2914 ;;  caracterLeid    1    8[COMRAM] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0
  2925 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2926 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2927 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2928 ;;Total ram usage:        9 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    4
  2931 ;; This function calls:
  2932 ;;		_UART_write
  2933 ;;		___wmul
  2934 ;;		_leer_eeprom
  2935 ;; This function is called by:
  2936 ;;		_sistemaPrincipal
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text8
  2941  00221E                     __ptext8:
  2942                           	opt callstack 0
  2943  00221E                     _leeHorariosMemoria:
  2944                           	opt callstack 25
  2945  00221E                     
  2946                           ;./AUTOMATIZADOR.h: 197:     T_INT contMemoria = 0;
  2947  00221E  0E00               	movlw	0
  2948  002220  6E0D               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  2949  002222  0E00               	movlw	0
  2950  002224  6E0C               	movwf	leeHorariosMemoria@contMemoria^0,c
  2951  002226                     
  2952                           ;./AUTOMATIZADOR.h: 198:     T_UBYTE caracterLeido;;./AUTOMATIZADOR.h: 200:     caracter
      +                          Leido = leer_eeprom(contMemoria++);
  2953  002226  0E00               	movlw	0
  2954  002228  6E04               	movwf	(leer_eeprom@direccion+1)^0,c
  2955  00222A  0E00               	movlw	0
  2956  00222C  6E03               	movwf	leer_eeprom@direccion^0,c
  2957  00222E  ECE7  F01B         	call	_leer_eeprom	;wreg free
  2958  002232  6E09               	movwf	leeHorariosMemoria@caracterLeido^0,c
  2959  002234  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  2960  002236  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  2961  002238                     
  2962                           ;./AUTOMATIZADOR.h: 202:     if (caracterLeido == 'T') {
  2963  002238  0E54               	movlw	84
  2964  00223A  1809               	xorwf	leeHorariosMemoria@caracterLeido^0,w,c
  2965  00223C  A4D8               	btfss	status,2,c
  2966  00223E  EF23  F011         	goto	u4241
  2967  002242  EF25  F011         	goto	u4240
  2968  002246                     u4241:
  2969  002246  EFC2  F011         	goto	l4886
  2970  00224A                     u4240:
  2971  00224A                     
  2972                           ;./AUTOMATIZADOR.h: 204:         for (T_INT i = 0; i < 24; i++) {
  2973  00224A  0E00               	movlw	0
  2974  00224C  6E0F               	movwf	(leeHorariosMemoria@i+1)^0,c
  2975  00224E  0E00               	movlw	0
  2976  002250  6E0E               	movwf	leeHorariosMemoria@i^0,c
  2977  002252                     l4858:
  2978                           
  2979                           ;./AUTOMATIZADOR.h: 205:             horarios[i].hora = leer_eeprom(contMemoria++);
  2980  002252  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  2981  002256  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  2982  00225A  0E00               	movlw	0
  2983  00225C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2984  00225E  0E0C               	movlw	12
  2985  002260  6E03               	movwf	___wmul@multiplicand^0,c
  2986  002262  ECCB  F01C         	call	___wmul	;wreg free
  2987  002266  0E84               	movlw	low _horarios
  2988  002268  2401               	addwf	?___wmul^0,w,c
  2989  00226A  6ED9               	movwf	fsr2l,c
  2990  00226C  0E01               	movlw	high _horarios
  2991  00226E  2002               	addwfc	(?___wmul+1)^0,w,c
  2992  002270  6EDA               	movwf	fsr2h,c
  2993  002272  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  2994  002276  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  2995  00227A  ECE7  F01B         	call	_leer_eeprom	;wreg free
  2996  00227E  6EDF               	movwf	indf2,c
  2997  002280  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  2998  002282  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  2999  002284                     
  3000                           ;./AUTOMATIZADOR.h: 207:             for (T_INT j = 0; j < 7; j++) {
  3001  002284  0E00               	movlw	0
  3002  002286  6E0B               	movwf	(leeHorariosMemoria@j+1)^0,c
  3003  002288  0E00               	movlw	0
  3004  00228A  6E0A               	movwf	leeHorariosMemoria@j^0,c
  3005  00228C                     l4868:
  3006                           
  3007                           ;./AUTOMATIZADOR.h: 208:                 horarios[i].dias[j] = leer_eeprom(contMemoria++
      +                          );
  3008  00228C  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  3009  002290  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  3010  002294  0E00               	movlw	0
  3011  002296  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3012  002298  0E0C               	movlw	12
  3013  00229A  6E03               	movwf	___wmul@multiplicand^0,c
  3014  00229C  ECCB  F01C         	call	___wmul	;wreg free
  3015  0022A0  0E84               	movlw	low _horarios
  3016  0022A2  6E07               	movwf	??_leeHorariosMemoria^0,c
  3017  0022A4  0E01               	movlw	high _horarios
  3018  0022A6  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  3019  0022A8  0E01               	movlw	1
  3020  0022AA  2607               	addwf	??_leeHorariosMemoria^0,f,c
  3021  0022AC  0E00               	movlw	0
  3022  0022AE  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  3023  0022B0  5001               	movf	?___wmul^0,w,c
  3024  0022B2  2607               	addwf	??_leeHorariosMemoria^0,f,c
  3025  0022B4  5002               	movf	(?___wmul+1)^0,w,c
  3026  0022B6  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  3027  0022B8  500A               	movf	leeHorariosMemoria@j^0,w,c
  3028  0022BA  2407               	addwf	??_leeHorariosMemoria^0,w,c
  3029  0022BC  6ED9               	movwf	fsr2l,c
  3030  0022BE  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  3031  0022C0  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
  3032  0022C2  6EDA               	movwf	fsr2h,c
  3033  0022C4  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  3034  0022C8  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  3035  0022CC  ECE7  F01B         	call	_leer_eeprom	;wreg free
  3036  0022D0  6EDF               	movwf	indf2,c
  3037  0022D2  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  3038  0022D4  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  3039  0022D6                     
  3040                           ;./AUTOMATIZADOR.h: 209:             }
  3041  0022D6  4A0A               	infsnz	leeHorariosMemoria@j^0,f,c
  3042  0022D8  2A0B               	incf	(leeHorariosMemoria@j+1)^0,f,c
  3043  0022DA  BE0B               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
  3044  0022DC  EF79  F011         	goto	u4251
  3045  0022E0  500B               	movf	(leeHorariosMemoria@j+1)^0,w,c
  3046  0022E2  E109               	bnz	u4250
  3047  0022E4  0E07               	movlw	7
  3048  0022E6  5C0A               	subwf	leeHorariosMemoria@j^0,w,c
  3049  0022E8  A0D8               	btfss	status,0,c
  3050  0022EA  EF79  F011         	goto	u4251
  3051  0022EE  EF7B  F011         	goto	u4250
  3052  0022F2                     u4251:
  3053  0022F2  EF46  F011         	goto	l4868
  3054  0022F6                     u4250:
  3055  0022F6                     
  3056                           ;./AUTOMATIZADOR.h: 211:             horarios[i].iluminar = leer_eeprom(contMemoria++);
  3057  0022F6  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  3058  0022FA  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  3059  0022FE  0E00               	movlw	0
  3060  002300  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3061  002302  0E0C               	movlw	12
  3062  002304  6E03               	movwf	___wmul@multiplicand^0,c
  3063  002306  ECCB  F01C         	call	___wmul	;wreg free
  3064  00230A  0E8D               	movlw	low (_horarios+9)
  3065  00230C  2401               	addwf	?___wmul^0,w,c
  3066  00230E  6ED9               	movwf	fsr2l,c
  3067  002310  0E01               	movlw	high (_horarios+9)
  3068  002312  2002               	addwfc	(?___wmul+1)^0,w,c
  3069  002314  6EDA               	movwf	fsr2h,c
  3070  002316  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  3071  00231A  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  3072  00231E  ECE7  F01B         	call	_leer_eeprom	;wreg free
  3073  002322  6EDF               	movwf	indf2,c
  3074  002324  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  3075  002326  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  3076  002328                     
  3077                           ;./AUTOMATIZADOR.h: 212:             horarios[i].tiempoIluminar = leer_eeprom(contMemori
      +                          a++);
  3078  002328  C00E  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  3079  00232C  C00F  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  3080  002330  0E00               	movlw	0
  3081  002332  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3082  002334  0E0C               	movlw	12
  3083  002336  6E03               	movwf	___wmul@multiplicand^0,c
  3084  002338  ECCB  F01C         	call	___wmul	;wreg free
  3085  00233C  0E8F               	movlw	low (_horarios+11)
  3086  00233E  2401               	addwf	?___wmul^0,w,c
  3087  002340  6ED9               	movwf	fsr2l,c
  3088  002342  0E01               	movlw	high (_horarios+11)
  3089  002344  2002               	addwfc	(?___wmul+1)^0,w,c
  3090  002346  6EDA               	movwf	fsr2h,c
  3091  002348  C00C  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  3092  00234C  C00D  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  3093  002350  ECE7  F01B         	call	_leer_eeprom	;wreg free
  3094  002354  6EDF               	movwf	indf2,c
  3095  002356  4A0C               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  3096  002358  2A0D               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  3097                           
  3098                           ;./AUTOMATIZADOR.h: 213:         }
  3099  00235A  4A0E               	infsnz	leeHorariosMemoria@i^0,f,c
  3100  00235C  2A0F               	incf	(leeHorariosMemoria@i+1)^0,f,c
  3101  00235E  BE0F               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  3102  002360  EFBB  F011         	goto	u4261
  3103  002364  500F               	movf	(leeHorariosMemoria@i+1)^0,w,c
  3104  002366  E109               	bnz	u4260
  3105  002368  0E18               	movlw	24
  3106  00236A  5C0E               	subwf	leeHorariosMemoria@i^0,w,c
  3107  00236C  A0D8               	btfss	status,0,c
  3108  00236E  EFBB  F011         	goto	u4261
  3109  002372  EFBD  F011         	goto	u4260
  3110  002376                     u4261:
  3111  002376  EF29  F011         	goto	l4858
  3112  00237A                     u4260:
  3113  00237A                     
  3114                           ;./AUTOMATIZADOR.h: 216:         UART_write('E');
  3115  00237A  0E45               	movlw	69
  3116  00237C  EC29  F01D         	call	_UART_write
  3117                           
  3118                           ;./AUTOMATIZADOR.h: 218:     } else {
  3119  002380  EFC5  F011         	goto	l303
  3120  002384                     l4886:
  3121                           
  3122                           ;./AUTOMATIZADOR.h: 220:         UART_write('@');
  3123  002384  0E40               	movlw	64
  3124  002386  EC29  F01D         	call	_UART_write
  3125  00238A                     l303:
  3126  00238A  0012               	return		;funcret
  3127  00238C                     __end_of_leeHorariosMemoria:
  3128                           	opt callstack 0
  3129                           
  3130 ;; *************** function _leer_eeprom *****************
  3131 ;; Defined at:
  3132 ;;		line 159 in file "./AUTOMATIZADOR.h"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  direccion       2    2[COMRAM] unsigned short 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  dato            1    5[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      unsigned char 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3146 ;;      Params:         2       0       0       0       0       0       0       0       0
  3147 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3148 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3149 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3150 ;;Total ram usage:        4 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    3
  3153 ;; This function calls:
  3154 ;;		_i2c_detener
  3155 ;;		_i2c_envia_dato
  3156 ;;		_i2c_inicia_com
  3157 ;;		_i2c_recibe_dato
  3158 ;;		_i2c_reinicia_com
  3159 ;; This function is called by:
  3160 ;;		_leeHorariosMemoria
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text9
  3165  0037CE                     __ptext9:
  3166                           	opt callstack 0
  3167  0037CE                     _leer_eeprom:
  3168                           	opt callstack 25
  3169  0037CE                     
  3170                           ;./AUTOMATIZADOR.h: 161:     T_UBYTE dato;;./AUTOMATIZADOR.h: 163:     i2c_inicia_com();
  3171  0037CE  EC64  F01D         	call	_i2c_inicia_com	;wreg free
  3172                           
  3173                           ;./AUTOMATIZADOR.h: 164:     i2c_envia_dato(0xAE);
  3174  0037D2  0EAE               	movlw	174
  3175  0037D4  EC5A  F01D         	call	_i2c_envia_dato
  3176                           
  3177                           ;./AUTOMATIZADOR.h: 165:     i2c_envia_dato(direccion >> 8);
  3178  0037D8  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  3179  0037DA  EC5A  F01D         	call	_i2c_envia_dato
  3180                           
  3181                           ;./AUTOMATIZADOR.h: 166:     i2c_envia_dato(direccion);
  3182  0037DE  5003               	movf	leer_eeprom@direccion^0,w,c
  3183  0037E0  EC5A  F01D         	call	_i2c_envia_dato
  3184                           
  3185                           ;./AUTOMATIZADOR.h: 167:     i2c_reinicia_com();
  3186  0037E4  EC60  F01D         	call	_i2c_reinicia_com	;wreg free
  3187                           
  3188                           ;./AUTOMATIZADOR.h: 168:     i2c_envia_dato(0xAF);
  3189  0037E8  0EAF               	movlw	175
  3190  0037EA  EC5A  F01D         	call	_i2c_envia_dato
  3191                           
  3192                           ;./AUTOMATIZADOR.h: 169:     dato = i2c_recibe_dato();
  3193  0037EE  EC10  F01D         	call	_i2c_recibe_dato	;wreg free
  3194  0037F2  6E06               	movwf	leer_eeprom@dato^0,c
  3195                           
  3196                           ;./AUTOMATIZADOR.h: 170:     i2c_detener();
  3197  0037F4  EC68  F01D         	call	_i2c_detener	;wreg free
  3198  0037F8                     
  3199                           ;./AUTOMATIZADOR.h: 171:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3200  0037F8  0E0D               	movlw	13
  3201  0037FA  6E05               	movwf	??_leer_eeprom^0,c
  3202  0037FC  0EFC               	movlw	252
  3203  0037FE                     u4587:
  3204  0037FE  2EE8               	decfsz	wreg,f,c
  3205  003800  D7FE               	bra	u4587
  3206  003802  2E05               	decfsz	??_leer_eeprom^0,f,c
  3207  003804  D7FC               	bra	u4587
  3208  003806                     
  3209                           ;./AUTOMATIZADOR.h: 173:     return dato;
  3210  003806  5006               	movf	leer_eeprom@dato^0,w,c
  3211  003808  0012               	return		;funcret
  3212  00380A                     __end_of_leer_eeprom:
  3213                           	opt callstack 0
  3214                           
  3215 ;; *************** function _fijaHoraRtc *****************
  3216 ;; Defined at:
  3217 ;;		line 240 in file "./AUTOMATIZADOR.h"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3234 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    5
  3238 ;; This function calls:
  3239 ;;		_UART_write
  3240 ;;		_escribe_rtc
  3241 ;;		_setRtc
  3242 ;; This function is called by:
  3243 ;;		_sistemaPrincipal
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text10
  3248  003790                     __ptext10:
  3249                           	opt callstack 0
  3250  003790                     _fijaHoraRtc:
  3251                           	opt callstack 24
  3252  003790                     
  3253                           ;./AUTOMATIZADOR.h: 248:     if (setRtc(0x02)) {
  3254  003790  0E02               	movlw	2
  3255  003792  EC0F  F019         	call	_setRtc
  3256  003796  0900               	iorlw	0
  3257  003798  B4D8               	btfsc	status,2,c
  3258  00379A  EFD1  F01B         	goto	u4271
  3259  00379E  EFD3  F01B         	goto	u4270
  3260  0037A2                     u4271:
  3261  0037A2  EFE6  F01B         	goto	l311
  3262  0037A6                     u4270:
  3263  0037A6                     
  3264                           ;./AUTOMATIZADOR.h: 250:         if (setRtc(0x01)) {
  3265  0037A6  0E01               	movlw	1
  3266  0037A8  EC0F  F019         	call	_setRtc
  3267  0037AC  0900               	iorlw	0
  3268  0037AE  B4D8               	btfsc	status,2,c
  3269  0037B0  EFDC  F01B         	goto	u4281
  3270  0037B4  EFDE  F01B         	goto	u4280
  3271  0037B8                     u4281:
  3272  0037B8  EFE6  F01B         	goto	l311
  3273  0037BC                     u4280:
  3274  0037BC                     
  3275                           ;./AUTOMATIZADOR.h: 252:             escribe_rtc(0x00, 0);
  3276  0037BC  0E00               	movlw	0
  3277  0037BE  6E03               	movwf	escribe_rtc@dato^0,c
  3278  0037C0  0E00               	movlw	0
  3279  0037C2  EC01  F01D         	call	_escribe_rtc
  3280  0037C6                     
  3281                           ;./AUTOMATIZADOR.h: 253:             UART_write('E');
  3282  0037C6  0E45               	movlw	69
  3283  0037C8  EC29  F01D         	call	_UART_write
  3284  0037CC                     l311:
  3285  0037CC  0012               	return		;funcret
  3286  0037CE                     __end_of_fijaHoraRtc:
  3287                           	opt callstack 0
  3288                           
  3289 ;; *************** function _fijaDiaRtc *****************
  3290 ;; Defined at:
  3291 ;;		line 111 in file "./AUTOMATIZADOR.h"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    5
  3312 ;; This function calls:
  3313 ;;		_UART_write
  3314 ;;		_setRtc
  3315 ;; This function is called by:
  3316 ;;		_sistemaPrincipal
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text11
  3321  00380A                     __ptext11:
  3322                           	opt callstack 0
  3323  00380A                     _fijaDiaRtc:
  3324                           	opt callstack 24
  3325  00380A                     
  3326                           ;./AUTOMATIZADOR.h: 113:     if (!setPointIntro) {
  3327  00380A  0100               	movlb	0	; () banked
  3328  00380C  51C9               	movf	_setPointIntro& (0+255),w,b
  3329  00380E  A4D8               	btfss	status,2,c
  3330  003810  EF0C  F01C         	goto	u4221
  3331  003814  EF0E  F01C         	goto	u4220
  3332  003818                     u4221:
  3333  003818  EF1E  F01C         	goto	l4842
  3334  00381C                     u4220:
  3335  00381C                     
  3336                           ; BSR set to: 0
  3337                           ;./AUTOMATIZADOR.h: 117:         if (setRtc(0x03)) {
  3338  00381C  0E03               	movlw	3
  3339  00381E  EC0F  F019         	call	_setRtc
  3340  003822  0900               	iorlw	0
  3341  003824  B4D8               	btfsc	status,2,c
  3342  003826  EF17  F01C         	goto	u4231
  3343  00382A  EF19  F01C         	goto	u4230
  3344  00382E                     u4231:
  3345  00382E  EF20  F01C         	goto	l277
  3346  003832                     u4230:
  3347  003832                     
  3348                           ;./AUTOMATIZADOR.h: 119:             UART_write('E');
  3349  003832  0E45               	movlw	69
  3350  003834  EC29  F01D         	call	_UART_write
  3351  003838  EF20  F01C         	goto	l277
  3352  00383C                     l4842:
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;./AUTOMATIZADOR.h: 123:         setPointIntro = 0;
  3356  00383C  0E00               	movlw	0
  3357  00383E  6FC9               	movwf	_setPointIntro& (0+255),b
  3358  003840                     l277:
  3359  003840  0012               	return		;funcret
  3360  003842                     __end_of_fijaDiaRtc:
  3361                           	opt callstack 0
  3362                           
  3363 ;; *************** function _setRtc *****************
  3364 ;; Defined at:
  3365 ;;		line 128 in file "./AUTOMATIZADOR.h"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  direccion       1    wreg     unsigned char 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  direccion       1   34[COMRAM] unsigned char 
  3370 ;;  dato            1   37[COMRAM] unsigned char 
  3371 ;;  datoRtc         1   36[COMRAM] unsigned char 
  3372 ;;  seteado         1   35[COMRAM] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      unsigned char 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0
  3383 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3385 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3386 ;;Total ram usage:        4 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    4
  3389 ;; This function calls:
  3390 ;;		___awdiv
  3391 ;;		___awmod
  3392 ;;		_escribe_rtc
  3393 ;;		_getValue
  3394 ;; This function is called by:
  3395 ;;		_fijaDiaRtc
  3396 ;;		_fijaHoraRtc
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text12
  3401  00321E                     __ptext12:
  3402                           	opt callstack 0
  3403  00321E                     _setRtc:
  3404                           	opt callstack 24
  3405                           
  3406                           ;incstack = 0
  3407                           ;setRtc@direccion stored from wreg
  3408  00321E  6E23               	movwf	setRtc@direccion^0,c
  3409  003220                     
  3410                           ;./AUTOMATIZADOR.h: 131:     T_UBYTE seteado = 0;
  3411  003220  0E00               	movlw	0
  3412  003222  6E24               	movwf	setRtc@seteado^0,c
  3413                           
  3414                           ;./AUTOMATIZADOR.h: 132:     T_UBYTE datoRtc = 0;
  3415  003224  0E00               	movlw	0
  3416  003226  6E25               	movwf	setRtc@datoRtc^0,c
  3417  003228                     
  3418                           ;./AUTOMATIZADOR.h: 134:     dato = getValue(2);
  3419  003228  0E00               	movlw	0
  3420  00322A  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  3421  00322C  0E02               	movlw	2
  3422  00322E  6E0D               	movwf	getValue@numCharacters^0,c
  3423  003230  EC09  F000         	call	_getValue	;wreg free
  3424  003234  500D               	movf	?_getValue^0,w,c
  3425  003236  6E26               	movwf	setRtc@dato^0,c
  3426  003238                     
  3427                           ;./AUTOMATIZADOR.h: 136:     if (dato != '@') {
  3428  003238  0E40               	movlw	64
  3429  00323A  1826               	xorwf	setRtc@dato^0,w,c
  3430  00323C  B4D8               	btfsc	status,2,c
  3431  00323E  EF23  F019         	goto	u3931
  3432  003242  EF25  F019         	goto	u3930
  3433  003246                     u3931:
  3434  003246  EF46  F019         	goto	l4594
  3435  00324A                     u3930:
  3436  00324A                     
  3437                           ;./AUTOMATIZADOR.h: 138:         datoRtc = ((dato / 10) & 0x0F) << 4;
  3438  00324A  C026  F001         	movff	setRtc@dato,___awdiv@dividend
  3439  00324E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3440  003250  0E00               	movlw	0
  3441  003252  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3442  003254  0E0A               	movlw	10
  3443  003256  6E03               	movwf	___awdiv@divisor^0,c
  3444  003258  EC96  F016         	call	___awdiv	;wreg free
  3445  00325C  0E0F               	movlw	15
  3446  00325E  1601               	andwf	?___awdiv^0,f,c
  3447  003260  3801               	swapf	?___awdiv^0,w,c
  3448  003262  0BF0               	andlw	240
  3449  003264  6E25               	movwf	setRtc@datoRtc^0,c
  3450                           
  3451                           ;./AUTOMATIZADOR.h: 139:         datoRtc |= (dato % 10) & 0x0F;
  3452  003266  C026  F001         	movff	setRtc@dato,___awmod@dividend
  3453  00326A  6A02               	clrf	(___awmod@dividend+1)^0,c
  3454  00326C  0E00               	movlw	0
  3455  00326E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3456  003270  0E0A               	movlw	10
  3457  003272  6E03               	movwf	___awmod@divisor^0,c
  3458  003274  ECB0  F017         	call	___awmod	;wreg free
  3459  003278  5001               	movf	?___awmod^0,w,c
  3460  00327A  0B0F               	andlw	15
  3461  00327C  1225               	iorwf	setRtc@datoRtc^0,f,c
  3462                           
  3463                           ;./AUTOMATIZADOR.h: 140:         escribe_rtc(direccion, datoRtc);
  3464  00327E  C025  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  3465  003282  5023               	movf	setRtc@direccion^0,w,c
  3466  003284  EC01  F01D         	call	_escribe_rtc
  3467  003288                     
  3468                           ;./AUTOMATIZADOR.h: 141:         seteado = 1;
  3469  003288  0E01               	movlw	1
  3470  00328A  6E24               	movwf	setRtc@seteado^0,c
  3471  00328C                     l4594:
  3472                           
  3473                           ;./AUTOMATIZADOR.h: 144:     return seteado;
  3474  00328C  5024               	movf	setRtc@seteado^0,w,c
  3475  00328E  0012               	return		;funcret
  3476  003290                     __end_of_setRtc:
  3477                           	opt callstack 0
  3478                           
  3479 ;; *************** function _escribe_rtc *****************
  3480 ;; Defined at:
  3481 ;;		line 2 in file "./RTC.h"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  direccion       1    wreg     unsigned char 
  3484 ;;  dato            1    2[COMRAM] unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  direccion       1    3[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3496 ;;      Params:         1       0       0       0       0       0       0       0       0
  3497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3499 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        2 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		_i2c_detener
  3505 ;;		_i2c_envia_dato
  3506 ;;		_i2c_inicia_com
  3507 ;; This function is called by:
  3508 ;;		_setRtc
  3509 ;;		_setRtcDefault
  3510 ;;		_fijaHoraRtc
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text13
  3515  003A02                     __ptext13:
  3516                           	opt callstack 0
  3517  003A02                     _escribe_rtc:
  3518                           	opt callstack 25
  3519                           
  3520                           ;incstack = 0
  3521                           ;escribe_rtc@direccion stored from wreg
  3522  003A02  6E04               	movwf	escribe_rtc@direccion^0,c
  3523  003A04                     
  3524                           ;./RTC.h: 3:     i2c_inicia_com();
  3525  003A04  EC64  F01D         	call	_i2c_inicia_com	;wreg free
  3526                           
  3527                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  3528  003A08  0ED0               	movlw	208
  3529  003A0A  EC5A  F01D         	call	_i2c_envia_dato
  3530                           
  3531                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  3532  003A0E  5004               	movf	escribe_rtc@direccion^0,w,c
  3533  003A10  EC5A  F01D         	call	_i2c_envia_dato
  3534                           
  3535                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  3536  003A14  5003               	movf	escribe_rtc@dato^0,w,c
  3537  003A16  EC5A  F01D         	call	_i2c_envia_dato
  3538                           
  3539                           ;./RTC.h: 7:     i2c_detener();
  3540  003A1A  EC68  F01D         	call	_i2c_detener	;wreg free
  3541  003A1E  0012               	return		;funcret
  3542  003A20                     __end_of_escribe_rtc:
  3543                           	opt callstack 0
  3544                           
  3545 ;; *************** function ___awmod *****************
  3546 ;; Defined at:
  3547 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  dividend        2    0[COMRAM] int 
  3550 ;;  divisor         2    2[COMRAM] int 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  sign            1    5[COMRAM] unsigned char 
  3553 ;;  counter         1    4[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2    0[COMRAM] int 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3563 ;;      Params:         4       0       0       0       0       0       0       0       0
  3564 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3566 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3567 ;;Total ram usage:        6 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_setRtc
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text14
  3578  002F60                     __ptext14:
  3579                           	opt callstack 0
  3580  002F60                     ___awmod:
  3581                           	opt callstack 26
  3582  002F60  0E00               	movlw	0
  3583  002F62  6E06               	movwf	___awmod@sign^0,c
  3584  002F64  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3585  002F66  EFB9  F017         	goto	u3840
  3586  002F6A  EFB7  F017         	goto	u3841
  3587  002F6E                     u3841:
  3588  002F6E  EFBF  F017         	goto	l4512
  3589  002F72                     u3840:
  3590  002F72  6C01               	negf	___awmod@dividend^0,c
  3591  002F74  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3592  002F76  B0D8               	btfsc	status,0,c
  3593  002F78  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3594  002F7A  0E01               	movlw	1
  3595  002F7C  6E06               	movwf	___awmod@sign^0,c
  3596  002F7E                     l4512:
  3597  002F7E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3598  002F80  EFC6  F017         	goto	u3850
  3599  002F84  EFC4  F017         	goto	u3851
  3600  002F88                     u3851:
  3601  002F88  EFCA  F017         	goto	l4516
  3602  002F8C                     u3850:
  3603  002F8C  6C03               	negf	___awmod@divisor^0,c
  3604  002F8E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3605  002F90  B0D8               	btfsc	status,0,c
  3606  002F92  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3607  002F94                     l4516:
  3608  002F94  5003               	movf	___awmod@divisor^0,w,c
  3609  002F96  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3610  002F98  B4D8               	btfsc	status,2,c
  3611  002F9A  EFD1  F017         	goto	u3861
  3612  002F9E  EFD3  F017         	goto	u3860
  3613  002FA2                     u3861:
  3614  002FA2  EFF7  F017         	goto	l4532
  3615  002FA6                     u3860:
  3616  002FA6  0E01               	movlw	1
  3617  002FA8  6E05               	movwf	___awmod@counter^0,c
  3618  002FAA  EFDB  F017         	goto	l4522
  3619  002FAE                     l4520:
  3620  002FAE  90D8               	bcf	status,0,c
  3621  002FB0  3603               	rlcf	___awmod@divisor^0,f,c
  3622  002FB2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3623  002FB4  2A05               	incf	___awmod@counter^0,f,c
  3624  002FB6                     l4522:
  3625  002FB6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3626  002FB8  EFE0  F017         	goto	u3871
  3627  002FBC  EFE2  F017         	goto	u3870
  3628  002FC0                     u3871:
  3629  002FC0  EFD7  F017         	goto	l4520
  3630  002FC4                     u3870:
  3631  002FC4                     l4524:
  3632  002FC4  5003               	movf	___awmod@divisor^0,w,c
  3633  002FC6  5C01               	subwf	___awmod@dividend^0,w,c
  3634  002FC8  5004               	movf	(___awmod@divisor+1)^0,w,c
  3635  002FCA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3636  002FCC  A0D8               	btfss	status,0,c
  3637  002FCE  EFEB  F017         	goto	u3881
  3638  002FD2  EFED  F017         	goto	u3880
  3639  002FD6                     u3881:
  3640  002FD6  EFF1  F017         	goto	l4528
  3641  002FDA                     u3880:
  3642  002FDA  5003               	movf	___awmod@divisor^0,w,c
  3643  002FDC  5E01               	subwf	___awmod@dividend^0,f,c
  3644  002FDE  5004               	movf	(___awmod@divisor+1)^0,w,c
  3645  002FE0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3646  002FE2                     l4528:
  3647  002FE2  90D8               	bcf	status,0,c
  3648  002FE4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3649  002FE6  3203               	rrcf	___awmod@divisor^0,f,c
  3650  002FE8  2E05               	decfsz	___awmod@counter^0,f,c
  3651  002FEA  EFE2  F017         	goto	l4524
  3652  002FEE                     l4532:
  3653  002FEE  5006               	movf	___awmod@sign^0,w,c
  3654  002FF0  B4D8               	btfsc	status,2,c
  3655  002FF2  EFFD  F017         	goto	u3891
  3656  002FF6  EFFF  F017         	goto	u3890
  3657  002FFA                     u3891:
  3658  002FFA  EF03  F018         	goto	l4536
  3659  002FFE                     u3890:
  3660  002FFE  6C01               	negf	___awmod@dividend^0,c
  3661  003000  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3662  003002  B0D8               	btfsc	status,0,c
  3663  003004  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3664  003006                     l4536:
  3665  003006  C001  F001         	movff	___awmod@dividend,?___awmod
  3666  00300A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3667  00300E  0012               	return		;funcret
  3668  003010                     __end_of___awmod:
  3669                           	opt callstack 0
  3670                           
  3671 ;; *************** function ___awdiv *****************
  3672 ;; Defined at:
  3673 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  dividend        2    0[COMRAM] int 
  3676 ;;  divisor         2    2[COMRAM] int 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  quotient        2    6[COMRAM] int 
  3679 ;;  sign            1    5[COMRAM] unsigned char 
  3680 ;;  counter         1    4[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  2    0[COMRAM] int 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3690 ;;      Params:         4       0       0       0       0       0       0       0       0
  3691 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3693 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3694 ;;Total ram usage:        8 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_setRtc
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text15
  3705  002D2C                     __ptext15:
  3706                           	opt callstack 0
  3707  002D2C                     ___awdiv:
  3708                           	opt callstack 26
  3709  002D2C  0E00               	movlw	0
  3710  002D2E  6E06               	movwf	___awdiv@sign^0,c
  3711  002D30  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3712  002D32  EF9F  F016         	goto	u3780
  3713  002D36  EF9D  F016         	goto	u3781
  3714  002D3A                     u3781:
  3715  002D3A  EFA5  F016         	goto	l4468
  3716  002D3E                     u3780:
  3717  002D3E  6C03               	negf	___awdiv@divisor^0,c
  3718  002D40  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3719  002D42  B0D8               	btfsc	status,0,c
  3720  002D44  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3721  002D46  0E01               	movlw	1
  3722  002D48  6E06               	movwf	___awdiv@sign^0,c
  3723  002D4A                     l4468:
  3724  002D4A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3725  002D4C  EFAC  F016         	goto	u3790
  3726  002D50  EFAA  F016         	goto	u3791
  3727  002D54                     u3791:
  3728  002D54  EFB2  F016         	goto	l4474
  3729  002D58                     u3790:
  3730  002D58  6C01               	negf	___awdiv@dividend^0,c
  3731  002D5A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3732  002D5C  B0D8               	btfsc	status,0,c
  3733  002D5E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3734  002D60  0E01               	movlw	1
  3735  002D62  1A06               	xorwf	___awdiv@sign^0,f,c
  3736  002D64                     l4474:
  3737  002D64  0E00               	movlw	0
  3738  002D66  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3739  002D68  0E00               	movlw	0
  3740  002D6A  6E07               	movwf	___awdiv@quotient^0,c
  3741  002D6C  5003               	movf	___awdiv@divisor^0,w,c
  3742  002D6E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3743  002D70  B4D8               	btfsc	status,2,c
  3744  002D72  EFBD  F016         	goto	u3801
  3745  002D76  EFBF  F016         	goto	u3800
  3746  002D7A                     u3801:
  3747  002D7A  EFE7  F016         	goto	l4496
  3748  002D7E                     u3800:
  3749  002D7E  0E01               	movlw	1
  3750  002D80  6E05               	movwf	___awdiv@counter^0,c
  3751  002D82  EFC7  F016         	goto	l4482
  3752  002D86                     l4480:
  3753  002D86  90D8               	bcf	status,0,c
  3754  002D88  3603               	rlcf	___awdiv@divisor^0,f,c
  3755  002D8A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3756  002D8C  2A05               	incf	___awdiv@counter^0,f,c
  3757  002D8E                     l4482:
  3758  002D8E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3759  002D90  EFCC  F016         	goto	u3811
  3760  002D94  EFCE  F016         	goto	u3810
  3761  002D98                     u3811:
  3762  002D98  EFC3  F016         	goto	l4480
  3763  002D9C                     u3810:
  3764  002D9C                     l4484:
  3765  002D9C  90D8               	bcf	status,0,c
  3766  002D9E  3607               	rlcf	___awdiv@quotient^0,f,c
  3767  002DA0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3768  002DA2  5003               	movf	___awdiv@divisor^0,w,c
  3769  002DA4  5C01               	subwf	___awdiv@dividend^0,w,c
  3770  002DA6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3771  002DA8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3772  002DAA  A0D8               	btfss	status,0,c
  3773  002DAC  EFDA  F016         	goto	u3821
  3774  002DB0  EFDC  F016         	goto	u3820
  3775  002DB4                     u3821:
  3776  002DB4  EFE1  F016         	goto	l4492
  3777  002DB8                     u3820:
  3778  002DB8  5003               	movf	___awdiv@divisor^0,w,c
  3779  002DBA  5E01               	subwf	___awdiv@dividend^0,f,c
  3780  002DBC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3781  002DBE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3782  002DC0  8007               	bsf	___awdiv@quotient^0,0,c
  3783  002DC2                     l4492:
  3784  002DC2  90D8               	bcf	status,0,c
  3785  002DC4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3786  002DC6  3203               	rrcf	___awdiv@divisor^0,f,c
  3787  002DC8  2E05               	decfsz	___awdiv@counter^0,f,c
  3788  002DCA  EFCE  F016         	goto	l4484
  3789  002DCE                     l4496:
  3790  002DCE  5006               	movf	___awdiv@sign^0,w,c
  3791  002DD0  B4D8               	btfsc	status,2,c
  3792  002DD2  EFED  F016         	goto	u3831
  3793  002DD6  EFEF  F016         	goto	u3830
  3794  002DDA                     u3831:
  3795  002DDA  EFF3  F016         	goto	l4500
  3796  002DDE                     u3830:
  3797  002DDE  6C07               	negf	___awdiv@quotient^0,c
  3798  002DE0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3799  002DE2  B0D8               	btfsc	status,0,c
  3800  002DE4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3801  002DE6                     l4500:
  3802  002DE6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3803  002DEA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3804  002DEE  0012               	return		;funcret
  3805  002DF0                     __end_of___awdiv:
  3806                           	opt callstack 0
  3807                           
  3808 ;; *************** function _dameDatosSistema *****************
  3809 ;; Defined at:
  3810 ;;		line 473 in file "./AUTOMATIZADOR.h"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  i               2   66[BANK0 ] int 
  3815 ;;  bufferHorari   30   28[BANK0 ] unsigned char [30]
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0
  3826 ;;      Locals:         0      40       0       0       0       0       0       0       0
  3827 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         2      40       0       0       0       0       0       0       0
  3829 ;;Total ram usage:       42 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    9
  3832 ;; This function calls:
  3833 ;;		_UART_printf
  3834 ;;		_UART_write
  3835 ;;		___wmul
  3836 ;;		_limpiarBuffer
  3837 ;;		_sprintf
  3838 ;; This function is called by:
  3839 ;;		_sistemaPrincipal
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text16
  3844  00129E                     __ptext16:
  3845                           	opt callstack 0
  3846  00129E                     _dameDatosSistema:
  3847                           	opt callstack 20
  3848  00129E                     
  3849                           ;./AUTOMATIZADOR.h: 475:     T_BYTE bufferHorario[30];;./AUTOMATIZADOR.h: 479:     sprin
      +                          tf(buffer, "\r\nSetpoint = %d | ", setPoint);
  3850  00129E  0E32               	movlw	low _buffer
  3851  0012A0  0100               	movlb	0	; () banked
  3852  0012A2  6F66               	movwf	sprintf@s& (0+255),b
  3853  0012A4  0E01               	movlw	high _buffer
  3854  0012A6  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3855  0012A8  0E9C               	movlw	low STR_13
  3856  0012AA  6F68               	movwf	sprintf@fmt& (0+255),b
  3857  0012AC  0E7F               	movlw	high STR_13
  3858  0012AE  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3859  0012B0  C0DF  F06A         	movff	_setPoint,?_sprintf+4
  3860  0012B4  C0E0  F06B         	movff	_setPoint+1,?_sprintf+5
  3861  0012B8  C0E1  F06C         	movff	_setPoint+2,?_sprintf+6
  3862  0012BC  C0E2  F06D         	movff	_setPoint+3,?_sprintf+7
  3863  0012C0  EC9D  F01A         	call	_sprintf	;wreg free
  3864  0012C4                     
  3865                           ;./AUTOMATIZADOR.h: 480:     UART_printf(buffer);
  3866  0012C4  0E32               	movlw	low _buffer
  3867  0012C6  6E02               	movwf	UART_printf@cadena^0,c
  3868  0012C8  0E01               	movlw	high _buffer
  3869  0012CA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3870  0012CC  EC17  F01A         	call	_UART_printf	;wreg free
  3871                           
  3872                           ;./AUTOMATIZADOR.h: 482:     switch (diaActual) {
  3873  0012D0  EFE8  F009         	goto	l4992
  3874  0012D4                     l4976:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;./AUTOMATIZADOR.h: 484:             sprintf(buffer2, "HORA = %0.2d:%0.2d | DIA = DOMING
      +                          O\r\n", hora, minutos);
  3878  0012D4  0E00               	movlw	low _buffer2
  3879  0012D6  6F66               	movwf	sprintf@s& (0+255),b
  3880  0012D8  0E01               	movlw	high _buffer2
  3881  0012DA  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3882  0012DC  0E87               	movlw	low STR_14
  3883  0012DE  6F68               	movwf	sprintf@fmt& (0+255),b
  3884  0012E0  0E7D               	movlw	high STR_14
  3885  0012E2  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3886  0012E4  C0D2  F06A         	movff	_hora,?_sprintf+4
  3887  0012E8  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3888  0012EA  C0D1  F06C         	movff	_minutos,?_sprintf+6
  3889  0012EE  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3890  0012F0  EC9D  F01A         	call	_sprintf	;wreg free
  3891                           
  3892                           ;./AUTOMATIZADOR.h: 485:             break;
  3893  0012F4  EF12  F00A         	goto	l4994
  3894  0012F8                     l4978:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;./AUTOMATIZADOR.h: 488:             sprintf(buffer2, "HORA = %0.2d:%0.2d | DIA = LUNES\
      +                          r\n", hora, minutos);
  3898  0012F8  0E00               	movlw	low _buffer2
  3899  0012FA  6F66               	movwf	sprintf@s& (0+255),b
  3900  0012FC  0E01               	movlw	high _buffer2
  3901  0012FE  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3902  001300  0E86               	movlw	low STR_15
  3903  001302  6F68               	movwf	sprintf@fmt& (0+255),b
  3904  001304  0E7E               	movlw	high STR_15
  3905  001306  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3906  001308  C0D2  F06A         	movff	_hora,?_sprintf+4
  3907  00130C  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3908  00130E  C0D1  F06C         	movff	_minutos,?_sprintf+6
  3909  001312  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3910  001314  EC9D  F01A         	call	_sprintf	;wreg free
  3911                           
  3912                           ;./AUTOMATIZADOR.h: 489:             break;
  3913  001318  EF12  F00A         	goto	l4994
  3914  00131C                     l4980:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;./AUTOMATIZADOR.h: 492:             sprintf(buffer2, "HORA = %0.2d:%0.2d | DIA = MARTES
      +                          \r\n", hora, minutos);
  3918  00131C  0E00               	movlw	low _buffer2
  3919  00131E  6F66               	movwf	sprintf@s& (0+255),b
  3920  001320  0E01               	movlw	high _buffer2
  3921  001322  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3922  001324  0E3E               	movlw	low STR_16
  3923  001326  6F68               	movwf	sprintf@fmt& (0+255),b
  3924  001328  0E7E               	movlw	high STR_16
  3925  00132A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3926  00132C  C0D2  F06A         	movff	_hora,?_sprintf+4
  3927  001330  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3928  001332  C0D1  F06C         	movff	_minutos,?_sprintf+6
  3929  001336  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3930  001338  EC9D  F01A         	call	_sprintf	;wreg free
  3931                           
  3932                           ;./AUTOMATIZADOR.h: 493:             break;
  3933  00133C  EF12  F00A         	goto	l4994
  3934  001340                     l4982:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;./AUTOMATIZADOR.h: 496:             sprintf(buffer2, "HORA = %0.2d:%0.2d | DIA = MIERCO
      +                          LES\r\n", hora, minutos);
  3938  001340  0E00               	movlw	low _buffer2
  3939  001342  6F66               	movwf	sprintf@s& (0+255),b
  3940  001344  0E01               	movlw	high _buffer2
  3941  001346  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3942  001348  0E3B               	movlw	low STR_17
  3943  00134A  6F68               	movwf	sprintf@fmt& (0+255),b
  3944  00134C  0E7D               	movlw	high STR_17
  3945  00134E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3946  001350  C0D2  F06A         	movff	_hora,?_sprintf+4
  3947  001354  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3948  001356  C0D1  F06C         	movff	_minutos,?_sprintf+6
  3949  00135A  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3950  00135C  EC9D  F01A         	call	_sprintf	;wreg free
  3951                           
  3952                           ;./AUTOMATIZADOR.h: 497:             break;
  3953  001360  EF12  F00A         	goto	l4994
  3954  001364                     l4984:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;./AUTOMATIZADOR.h: 500:             sprintf(buffer2, "HORA = %0.2d:%0.2d | DIA = JUEVES
      +                          \r\n", hora, minutos);
  3958  001364  0E00               	movlw	low _buffer2
  3959  001366  6F66               	movwf	sprintf@s& (0+255),b
  3960  001368  0E01               	movlw	high _buffer2
  3961  00136A  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3962  00136C  0E62               	movlw	low STR_18
  3963  00136E  6F68               	movwf	sprintf@fmt& (0+255),b
  3964  001370  0E7E               	movlw	high STR_18
  3965  001372  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3966  001374  C0D2  F06A         	movff	_hora,?_sprintf+4
  3967  001378  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3968  00137A  C0D1  F06C         	movff	_minutos,?_sprintf+6
  3969  00137E  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3970  001380  EC9D  F01A         	call	_sprintf	;wreg free
  3971                           
  3972                           ;./AUTOMATIZADOR.h: 501:             break;
  3973  001384  EF12  F00A         	goto	l4994
  3974  001388                     l4986:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;./AUTOMATIZADOR.h: 504:             sprintf(buffer2, "HORA = %0.2d:%0.2d | DIA = VIERNE
      +                          S\r\n", hora, minutos);
  3978  001388  0E00               	movlw	low _buffer2
  3979  00138A  6F66               	movwf	sprintf@s& (0+255),b
  3980  00138C  0E01               	movlw	high _buffer2
  3981  00138E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3982  001390  0EAC               	movlw	low STR_19
  3983  001392  6F68               	movwf	sprintf@fmt& (0+255),b
  3984  001394  0E7D               	movlw	high STR_19
  3985  001396  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3986  001398  C0D2  F06A         	movff	_hora,?_sprintf+4
  3987  00139C  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  3988  00139E  C0D1  F06C         	movff	_minutos,?_sprintf+6
  3989  0013A2  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  3990  0013A4  EC9D  F01A         	call	_sprintf	;wreg free
  3991                           
  3992                           ;./AUTOMATIZADOR.h: 505:             break;
  3993  0013A8  EF12  F00A         	goto	l4994
  3994  0013AC                     l4988:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;./AUTOMATIZADOR.h: 508:             sprintf(buffer2, "HORA = %0.2d:%0.2d | DIA = SABADO
      +                          \r\n", hora, minutos);
  3998  0013AC  0E00               	movlw	low _buffer2
  3999  0013AE  6F66               	movwf	sprintf@s& (0+255),b
  4000  0013B0  0E01               	movlw	high _buffer2
  4001  0013B2  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4002  0013B4  0E1A               	movlw	low STR_20
  4003  0013B6  6F68               	movwf	sprintf@fmt& (0+255),b
  4004  0013B8  0E7E               	movlw	high STR_20
  4005  0013BA  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4006  0013BC  C0D2  F06A         	movff	_hora,?_sprintf+4
  4007  0013C0  6B6B               	clrf	(?_sprintf+5)& (0+255),b
  4008  0013C2  C0D1  F06C         	movff	_minutos,?_sprintf+6
  4009  0013C6  6B6D               	clrf	(?_sprintf+7)& (0+255),b
  4010  0013C8  EC9D  F01A         	call	_sprintf	;wreg free
  4011                           
  4012                           ;./AUTOMATIZADOR.h: 509:             break;
  4013  0013CC  EF12  F00A         	goto	l4994
  4014  0013D0                     l4992:
  4015  0013D0  0100               	movlb	0	; () banked
  4016  0013D2  51CF               	movf	_diaActual& (0+255),w,b
  4017  0013D4  6E5C               	movwf	??_dameDatosSistema^0,c
  4018  0013D6  6A5D               	clrf	(??_dameDatosSistema+1)^0,c
  4019                           
  4020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4021                           ; Switch size 1, requested type "simple"
  4022                           ; Number of cases is 1, Range of values is 0 to 0
  4023                           ; switch strategies available:
  4024                           ; Name         Instructions Cycles
  4025                           ; simple_byte            4     3 (average)
  4026                           ;	Chosen strategy is simple_byte
  4027  0013D8  505D               	movf	(??_dameDatosSistema+1)^0,w,c
  4028  0013DA  0A00               	xorlw	0	; case 0
  4029  0013DC  B4D8               	btfsc	status,2,c
  4030  0013DE  EFF3  F009         	goto	l5556
  4031  0013E2  EF12  F00A         	goto	l4994
  4032  0013E6                     l5556:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ; Switch size 1, requested type "simple"
  4036                           ; Number of cases is 7, Range of values is 1 to 7
  4037                           ; switch strategies available:
  4038                           ; Name         Instructions Cycles
  4039                           ; simple_byte           22    12 (average)
  4040                           ;	Chosen strategy is simple_byte
  4041  0013E6  505C               	movf	??_dameDatosSistema^0,w,c
  4042  0013E8  0A01               	xorlw	1	; case 1
  4043  0013EA  B4D8               	btfsc	status,2,c
  4044  0013EC  EF6A  F009         	goto	l4976
  4045  0013F0  0A03               	xorlw	3	; case 2
  4046  0013F2  B4D8               	btfsc	status,2,c
  4047  0013F4  EF7C  F009         	goto	l4978
  4048  0013F8  0A01               	xorlw	1	; case 3
  4049  0013FA  B4D8               	btfsc	status,2,c
  4050  0013FC  EF8E  F009         	goto	l4980
  4051  001400  0A07               	xorlw	7	; case 4
  4052  001402  B4D8               	btfsc	status,2,c
  4053  001404  EFA0  F009         	goto	l4982
  4054  001408  0A01               	xorlw	1	; case 5
  4055  00140A  B4D8               	btfsc	status,2,c
  4056  00140C  EFB2  F009         	goto	l4984
  4057  001410  0A03               	xorlw	3	; case 6
  4058  001412  B4D8               	btfsc	status,2,c
  4059  001414  EFC4  F009         	goto	l4986
  4060  001418  0A01               	xorlw	1	; case 7
  4061  00141A  B4D8               	btfsc	status,2,c
  4062  00141C  EFD6  F009         	goto	l4988
  4063  001420  EF12  F00A         	goto	l4994
  4064  001424                     l4994:
  4065                           
  4066                           ;./AUTOMATIZADOR.h: 516:     UART_printf(buffer2);
  4067  001424  0E00               	movlw	low _buffer2
  4068  001426  6E02               	movwf	UART_printf@cadena^0,c
  4069  001428  0E01               	movlw	high _buffer2
  4070  00142A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4071  00142C  EC17  F01A         	call	_UART_printf	;wreg free
  4072                           
  4073                           ;./AUTOMATIZADOR.h: 518:     UART_printf("\r\nH = HORA\r\n");
  4074  001430  0EDE               	movlw	low STR_21
  4075  001432  6E02               	movwf	UART_printf@cadena^0,c
  4076  001434  0E7F               	movlw	high STR_21
  4077  001436  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4078  001438  EC17  F01A         	call	_UART_printf	;wreg free
  4079                           
  4080                           ;./AUTOMATIZADOR.h: 519:     UART_printf("\r\nR = ILUMINAR( 1 SI | 0 NO)\r\n");
  4081  00143C  0EEB               	movlw	low STR_22
  4082  00143E  6E02               	movwf	UART_printf@cadena^0,c
  4083  001440  0E7E               	movlw	high STR_22
  4084  001442  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4085  001444  EC17  F01A         	call	_UART_printf	;wreg free
  4086                           
  4087                           ;./AUTOMATIZADOR.h: 520:     UART_printf("\r\nT = MINUTOS QUE DURARA LA ILUMINACION\r\n"
      +                          );
  4088  001448  0EC0               	movlw	low STR_23
  4089  00144A  6E02               	movwf	UART_printf@cadena^0,c
  4090  00144C  0E7C               	movlw	high STR_23
  4091  00144E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4092  001450  EC17  F01A         	call	_UART_printf	;wreg free
  4093                           
  4094                           ;./AUTOMATIZADOR.h: 521:     UART_printf("\r\nD = DIAS QUE EN LOS QUE SE ILUMINARA\r\n")
      +                          ;
  4095  001454  0EEA               	movlw	low STR_24
  4096  001456  6E02               	movwf	UART_printf@cadena^0,c
  4097  001458  0E7C               	movlw	high STR_24
  4098  00145A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4099  00145C  EC17  F01A         	call	_UART_printf	;wreg free
  4100                           
  4101                           ;./AUTOMATIZADOR.h: 523:     UART_printf("                           DLMIJVS\r\n");
  4102  001460  0ED1               	movlw	low STR_25
  4103  001462  6E02               	movwf	UART_printf@cadena^0,c
  4104  001464  0E7D               	movlw	high STR_25
  4105  001466  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4106  001468  EC17  F01A         	call	_UART_printf	;wreg free
  4107  00146C                     
  4108                           ;./AUTOMATIZADOR.h: 526:     for (T_INT i = 0; i < 24; i++) {
  4109  00146C  0E00               	movlw	0
  4110  00146E  0100               	movlb	0	; () banked
  4111  001470  6FA3               	movwf	(dameDatosSistema@i+1)& (0+255),b
  4112  001472  0E00               	movlw	0
  4113  001474  6FA2               	movwf	dameDatosSistema@i& (0+255),b
  4114  001476                     l5002:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;./AUTOMATIZADOR.h: 528:         if (horarios[i].iluminar) {
  4118  001476  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4119  00147A  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4120  00147E  0E00               	movlw	0
  4121  001480  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4122  001482  0E0C               	movlw	12
  4123  001484  6E03               	movwf	___wmul@multiplicand^0,c
  4124  001486  ECCB  F01C         	call	___wmul	;wreg free
  4125  00148A  0E8D               	movlw	low (_horarios+9)
  4126  00148C  2401               	addwf	?___wmul^0,w,c
  4127  00148E  6ED9               	movwf	fsr2l,c
  4128  001490  0E01               	movlw	high (_horarios+9)
  4129  001492  2002               	addwfc	(?___wmul+1)^0,w,c
  4130  001494  6EDA               	movwf	fsr2h,c
  4131  001496  50DF               	movf	indf2,w,c
  4132  001498  B4D8               	btfsc	status,2,c
  4133  00149A  EF51  F00A         	goto	u4361
  4134  00149E  EF53  F00A         	goto	u4360
  4135  0014A2                     u4361:
  4136  0014A2  EFC6  F00A         	goto	l5012
  4137  0014A6                     u4360:
  4138  0014A6                     
  4139                           ;./AUTOMATIZADOR.h: 530:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4140  0014A6  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4141  0014AA  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4142  0014AE  0E00               	movlw	0
  4143  0014B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4144  0014B2  0E0C               	movlw	12
  4145  0014B4  6E03               	movwf	___wmul@multiplicand^0,c
  4146  0014B6  ECCB  F01C         	call	___wmul	;wreg free
  4147  0014BA  0E84               	movlw	low _horarios
  4148  0014BC  2401               	addwf	?___wmul^0,w,c
  4149  0014BE  6ED9               	movwf	fsr2l,c
  4150  0014C0  0E01               	movlw	high _horarios
  4151  0014C2  2002               	addwfc	(?___wmul+1)^0,w,c
  4152  0014C4  6EDA               	movwf	fsr2h,c
  4153  0014C6  50DF               	movf	indf2,w,c
  4154  0014C8  6E5C               	movwf	??_dameDatosSistema^0,c
  4155  0014CA  505C               	movf	??_dameDatosSistema^0,w,c
  4156  0014CC  0100               	movlb	0	; () banked
  4157  0014CE  6F9A               	movwf	_dameDatosSistema$1633& (0+255),b
  4158  0014D0  6B9B               	clrf	(_dameDatosSistema$1633+1)& (0+255),b
  4159                           
  4160                           ;./AUTOMATIZADOR.h: 530:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4161  0014D2  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4162  0014D6  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4163  0014DA  0E00               	movlw	0
  4164  0014DC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4165  0014DE  0E0C               	movlw	12
  4166  0014E0  6E03               	movwf	___wmul@multiplicand^0,c
  4167  0014E2  ECCB  F01C         	call	___wmul	;wreg free
  4168  0014E6  0E8D               	movlw	low (_horarios+9)
  4169  0014E8  2401               	addwf	?___wmul^0,w,c
  4170  0014EA  6ED9               	movwf	fsr2l,c
  4171  0014EC  0E01               	movlw	high (_horarios+9)
  4172  0014EE  2002               	addwfc	(?___wmul+1)^0,w,c
  4173  0014F0  6EDA               	movwf	fsr2h,c
  4174  0014F2  50DF               	movf	indf2,w,c
  4175  0014F4  6E5C               	movwf	??_dameDatosSistema^0,c
  4176  0014F6  505C               	movf	??_dameDatosSistema^0,w,c
  4177  0014F8  0100               	movlb	0	; () banked
  4178  0014FA  6F9C               	movwf	_dameDatosSistema$1634& (0+255),b
  4179  0014FC  6B9D               	clrf	(_dameDatosSistema$1634+1)& (0+255),b
  4180                           
  4181                           ;./AUTOMATIZADOR.h: 530:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4182  0014FE  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4183  001502  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4184  001506  0E00               	movlw	0
  4185  001508  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4186  00150A  0E0C               	movlw	12
  4187  00150C  6E03               	movwf	___wmul@multiplicand^0,c
  4188  00150E  ECCB  F01C         	call	___wmul	;wreg free
  4189  001512  0E8F               	movlw	low (_horarios+11)
  4190  001514  2401               	addwf	?___wmul^0,w,c
  4191  001516  6ED9               	movwf	fsr2l,c
  4192  001518  0E01               	movlw	high (_horarios+11)
  4193  00151A  2002               	addwfc	(?___wmul+1)^0,w,c
  4194  00151C  6EDA               	movwf	fsr2h,c
  4195  00151E  50DF               	movf	indf2,w,c
  4196  001520  6E5C               	movwf	??_dameDatosSistema^0,c
  4197  001522  505C               	movf	??_dameDatosSistema^0,w,c
  4198  001524  0100               	movlb	0	; () banked
  4199  001526  6F9E               	movwf	_dameDatosSistema$1635& (0+255),b
  4200  001528  6B9F               	clrf	(_dameDatosSistema$1635+1)& (0+255),b
  4201  00152A                     
  4202                           ; BSR set to: 0
  4203                           ;./AUTOMATIZADOR.h: 530:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4204  00152A  C0A2  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  4205  00152E  C0A3  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  4206  001532  0E00               	movlw	0
  4207  001534  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4208  001536  0E0C               	movlw	12
  4209  001538  6E03               	movwf	___wmul@multiplicand^0,c
  4210  00153A  ECCB  F01C         	call	___wmul	;wreg free
  4211  00153E  0E85               	movlw	low (_horarios+1)
  4212  001540  2401               	addwf	?___wmul^0,w,c
  4213  001542  0100               	movlb	0	; () banked
  4214  001544  6FA0               	movwf	_dameDatosSistema$1636& (0+255),b
  4215  001546  0E01               	movlw	high (_horarios+1)
  4216  001548  2002               	addwfc	(?___wmul+1)^0,w,c
  4217  00154A  6FA1               	movwf	(_dameDatosSistema$1636+1)& (0+255),b
  4218  00154C                     
  4219                           ; BSR set to: 0
  4220                           ;./AUTOMATIZADOR.h: 530:             sprintf(bufferHorario, "H:%2d|R:%d|T:%2d|D:%s\r\n",
  4221  00154C  0E7C               	movlw	low dameDatosSistema@bufferHorario
  4222  00154E  6F66               	movwf	sprintf@s& (0+255),b
  4223  001550  0E00               	movlw	high dameDatosSistema@bufferHorario
  4224  001552  6F67               	movwf	(sprintf@s+1)& (0+255),b
  4225  001554  0E58               	movlw	low STR_26
  4226  001556  6F68               	movwf	sprintf@fmt& (0+255),b
  4227  001558  0E7F               	movlw	high STR_26
  4228  00155A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  4229  00155C  C09A  F06A         	movff	_dameDatosSistema$1633,?_sprintf+4
  4230  001560  C09B  F06B         	movff	_dameDatosSistema$1633+1,?_sprintf+5
  4231  001564  C09C  F06C         	movff	_dameDatosSistema$1634,?_sprintf+6
  4232  001568  C09D  F06D         	movff	_dameDatosSistema$1634+1,?_sprintf+7
  4233  00156C  C09E  F06E         	movff	_dameDatosSistema$1635,?_sprintf+8
  4234  001570  C09F  F06F         	movff	_dameDatosSistema$1635+1,?_sprintf+9
  4235  001574  C0A0  F070         	movff	_dameDatosSistema$1636,?_sprintf+10
  4236  001578  C0A1  F071         	movff	_dameDatosSistema$1636+1,?_sprintf+11
  4237  00157C  EC9D  F01A         	call	_sprintf	;wreg free
  4238  001580                     
  4239                           ;./AUTOMATIZADOR.h: 534:             UART_printf(bufferHorario);
  4240  001580  0E7C               	movlw	low dameDatosSistema@bufferHorario
  4241  001582  6E02               	movwf	UART_printf@cadena^0,c
  4242  001584  0E00               	movlw	high dameDatosSistema@bufferHorario
  4243  001586  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4244  001588  EC17  F01A         	call	_UART_printf	;wreg free
  4245  00158C                     l5012:
  4246                           
  4247                           ;./AUTOMATIZADOR.h: 538:     }
  4248  00158C  0100               	movlb	0	; () banked
  4249  00158E  4BA2               	infsnz	dameDatosSistema@i& (0+255),f,b
  4250  001590  2BA3               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  4251  001592                     
  4252                           ; BSR set to: 0
  4253  001592  BFA3               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  4254  001594  EFD5  F00A         	goto	u4371
  4255  001598  51A3               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  4256  00159A  E109               	bnz	u4370
  4257  00159C  0E18               	movlw	24
  4258  00159E  5DA2               	subwf	dameDatosSistema@i& (0+255),w,b
  4259  0015A0  A0D8               	btfss	status,0,c
  4260  0015A2  EFD5  F00A         	goto	u4371
  4261  0015A6  EFD7  F00A         	goto	u4370
  4262  0015AA                     u4371:
  4263  0015AA  EF3B  F00A         	goto	l5002
  4264  0015AE                     u4370:
  4265  0015AE                     
  4266                           ; BSR set to: 0
  4267                           ;./AUTOMATIZADOR.h: 540:     limpiarBuffer();
  4268  0015AE  ECA8  F01B         	call	_limpiarBuffer	;wreg free
  4269  0015B2                     
  4270                           ;./AUTOMATIZADOR.h: 542:     UART_write('&');
  4271  0015B2  0E26               	movlw	38
  4272  0015B4  EC29  F01D         	call	_UART_write
  4273  0015B8  0012               	return		;funcret
  4274  0015BA                     __end_of_dameDatosSistema:
  4275                           	opt callstack 0
  4276                           
  4277 ;; *************** function _sprintf *****************
  4278 ;; Defined at:
  4279 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  s               2    6[BANK0 ] PTR unsigned char 
  4282 ;;		 -> dameDatosSistema@bufferHorario(30), buffer2(50), buffer(50), 
  4283 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  4284 ;;		 -> STR_27(23), STR_26(24), STR_20(36), STR_19(37), 
  4285 ;;		 -> STR_18(36), STR_17(39), STR_16(36), STR_15(35), 
  4286 ;;		 -> STR_14(37), STR_13(19), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  f               6   22[BANK0 ] struct _IO_FILE
  4289 ;;  ap              2   20[BANK0 ] PTR void [1]
  4290 ;;		 -> ?_sprintf(2), 
  4291 ;;  ret             2    0        int 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    6[BANK0 ] int 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4301 ;;      Params:         0      12       0       0       0       0       0       0       0
  4302 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4304 ;;      Totals:         0      22       0       0       0       0       0       0       0
  4305 ;;Total ram usage:       22 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    8
  4308 ;; This function calls:
  4309 ;;		_vfprintf
  4310 ;; This function is called by:
  4311 ;;		_dameDatosSistema
  4312 ;;		_mostrarDatosSensores
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text17
  4317  00353A                     __ptext17:
  4318                           	opt callstack 0
  4319  00353A                     _sprintf:
  4320                           	opt callstack 20
  4321  00353A  0E6A               	movlw	low (?_sprintf+4)
  4322  00353C  0100               	movlb	0	; () banked
  4323  00353E  6F74               	movwf	sprintf@ap& (0+255),b
  4324  003540  0E00               	movlw	high (?_sprintf+4)
  4325  003542  6F75               	movwf	(sprintf@ap+1)& (0+255),b
  4326  003544  C066  F076         	movff	sprintf@s,sprintf@f
  4327  003548  C067  F077         	movff	sprintf@s+1,sprintf@f+1
  4328  00354C                     
  4329                           ; BSR set to: 0
  4330  00354C  0E00               	movlw	0
  4331  00354E  6F79               	movwf	(sprintf@f+3)& (0+255),b
  4332  003550  0E00               	movlw	0
  4333  003552  6F78               	movwf	(sprintf@f+2)& (0+255),b
  4334  003554                     
  4335                           ; BSR set to: 0
  4336  003554  0E00               	movlw	0
  4337  003556  6F7B               	movwf	(sprintf@f+5)& (0+255),b
  4338  003558  0E00               	movlw	0
  4339  00355A  6F7A               	movwf	(sprintf@f+4)& (0+255),b
  4340  00355C                     
  4341                           ; BSR set to: 0
  4342  00355C  0E76               	movlw	low sprintf@f
  4343  00355E  6F60               	movwf	vfprintf@fp& (0+255),b
  4344  003560  0E00               	movlw	high sprintf@f
  4345  003562  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  4346  003564  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  4347  003568  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4348  00356C  0E74               	movlw	low sprintf@ap
  4349  00356E  6F64               	movwf	vfprintf@ap& (0+255),b
  4350  003570  0E00               	movlw	high sprintf@ap
  4351  003572  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  4352  003574  ECB5  F019         	call	_vfprintf	;wreg free
  4353  003578  0100               	movlb	0	; () banked
  4354  00357A  5178               	movf	(sprintf@f+2)& (0+255),w,b
  4355  00357C  2566               	addwf	sprintf@s& (0+255),w,b
  4356  00357E  6ED9               	movwf	fsr2l,c
  4357  003580  5179               	movf	(sprintf@f+3)& (0+255),w,b
  4358  003582  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  4359  003584  6EDA               	movwf	fsr2h,c
  4360  003586  0E00               	movlw	0
  4361  003588  6EDF               	movwf	indf2,c
  4362  00358A                     
  4363                           ; BSR set to: 0
  4364  00358A  0012               	return		;funcret
  4365  00358C                     __end_of_sprintf:
  4366                           	opt callstack 0
  4367                           
  4368 ;; *************** function _vfprintf *****************
  4369 ;; Defined at:
  4370 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4373 ;;		 -> sprintf@f(6), 
  4374 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4375 ;;		 -> STR_27(23), STR_26(24), STR_20(36), STR_19(37), 
  4376 ;;		 -> STR_18(36), STR_17(39), STR_16(36), STR_15(35), 
  4377 ;;		 -> STR_14(37), STR_13(19), 
  4378 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4379 ;;		 -> sprintf@ap(2), 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  4382 ;;		 -> STR_27(23), STR_26(24), STR_20(36), STR_19(37), 
  4383 ;;		 -> STR_18(36), STR_17(39), STR_16(36), STR_15(35), 
  4384 ;;		 -> STR_14(37), STR_13(19), 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  2    0[BANK0 ] int 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         0       6       0       0       0       0       0       0       0
  4395 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4398 ;;Total ram usage:        8 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    7
  4401 ;; This function calls:
  4402 ;;		_vfpfcnvrt
  4403 ;; This function is called by:
  4404 ;;		_sprintf
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text18
  4409  00336A                     __ptext18:
  4410                           	opt callstack 0
  4411  00336A                     _vfprintf:
  4412                           	opt callstack 20
  4413  00336A                     
  4414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4415  00336A  C062  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  4416  00336E  C063  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4417  003372                     
  4418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4419  003372  0E00               	movlw	0
  4420  003374  0100               	movlb	0	; () banked
  4421  003376  6FBB               	movwf	(_nout+1)& (0+255),b
  4422  003378  0E00               	movlw	0
  4423  00337A  6FBA               	movwf	_nout& (0+255),b
  4424                           
  4425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4426  00337C  EFD3  F019         	goto	l4414
  4427  003380                     l4412:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4431  003380  C060  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  4432  003384  C061  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4433  003388  0E5A               	movlw	low vfprintf@cfmt
  4434  00338A  6E42               	movwf	vfpfcnvrt@fmt^0,c
  4435  00338C  0E00               	movlw	high vfprintf@cfmt
  4436  00338E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4437  003390  C064  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  4438  003394  C065  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4439  003398  ECE5  F002         	call	_vfpfcnvrt	;wreg free
  4440  00339C  5040               	movf	?_vfpfcnvrt^0,w,c
  4441  00339E  0100               	movlb	0	; () banked
  4442  0033A0  27BA               	addwf	_nout& (0+255),f,b
  4443  0033A2  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  4444  0033A4  23BB               	addwfc	(_nout+1)& (0+255),f,b
  4445  0033A6                     l4414:
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4449  0033A6  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  4450  0033AA  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4451  0033AE                     	if	0	;tblptru may be non-zero
  4452  0033AE                     	endif
  4453  0033AE                     	if	0	;tblptru may be non-zero
  4454  0033AE                     	endif
  4455  0033AE  0008               	tblrd		*
  4456  0033B0  50F5               	movf	tablat,w,c
  4457  0033B2  0900               	iorlw	0
  4458  0033B4  A4D8               	btfss	status,2,c
  4459  0033B6  EFDF  F019         	goto	u3711
  4460  0033BA  EFE1  F019         	goto	u3710
  4461  0033BE                     u3711:
  4462  0033BE  EFC0  F019         	goto	l4412
  4463  0033C2                     u3710:
  4464  0033C2                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4467  0033C2  C0BA  F060         	movff	_nout,?_vfprintf
  4468  0033C6  C0BB  F061         	movff	_nout+1,?_vfprintf+1
  4469  0033CA                     
  4470                           ; BSR set to: 0
  4471  0033CA  0012               	return		;funcret
  4472  0033CC                     __end_of_vfprintf:
  4473                           	opt callstack 0
  4474                           
  4475 ;; *************** function _vfpfcnvrt *****************
  4476 ;; Defined at:
  4477 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4480 ;;		 -> sprintf@f(6), 
  4481 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  4482 ;;		 -> vfprintf@cfmt(2), 
  4483 ;;  ap              2   67[COMRAM] PTR PTR void 
  4484 ;;		 -> sprintf@ap(2), 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  ll              8   73[COMRAM] long long 
  4487 ;;  llu             8    0        unsigned long long 
  4488 ;;  f               4    0        unsigned long long 
  4489 ;;  vp              3    0        PTR void 
  4490 ;;  ct              3    0        unsigned char [3]
  4491 ;;  done            2   83[COMRAM] int 
  4492 ;;  cp              2   81[COMRAM] PTR unsigned char 
  4493 ;;		 -> ?_sprintf(2), horarios(288), 
  4494 ;;  i               2    0        int 
  4495 ;;  c               1    0        unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  2   63[COMRAM] int 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4505 ;;      Params:         6       0       0       0       0       0       0       0       0
  4506 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4507 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4508 ;;      Totals:        26       0       0       0       0       0       0       0       0
  4509 ;;Total ram usage:       26 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    6
  4512 ;; This function calls:
  4513 ;;		_atoi
  4514 ;;		_dtoa
  4515 ;;		_fputc
  4516 ;;		_isdigit
  4517 ;;		_stoa
  4518 ;; This function is called by:
  4519 ;;		_vfprintf
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text19
  4524  0005CA                     __ptext19:
  4525                           	opt callstack 0
  4526  0005CA                     _vfpfcnvrt:
  4527                           	opt callstack 20
  4528  0005CA                     
  4529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4530  0005CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4531  0005CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4532  0005D2  CFDE FFF6          	movff	postinc2,tblptrl
  4533  0005D6  CFDD FFF7          	movff	postdec2,tblptrh
  4534  0005DA                     	if	0	;tblptru may be non-zero
  4535  0005DA                     	endif
  4536  0005DA                     	if	0	;tblptru may be non-zero
  4537  0005DA                     	endif
  4538  0005DA  0008               	tblrd		*
  4539  0005DC  50F5               	movf	tablat,w,c
  4540  0005DE  0A25               	xorlw	37
  4541  0005E0  A4D8               	btfss	status,2,c
  4542  0005E2  EFF5  F002         	goto	u2961
  4543  0005E6  EFF7  F002         	goto	u2960
  4544  0005EA                     u2961:
  4545  0005EA  EF51  F005         	goto	l3920
  4546  0005EE                     u2960:
  4547  0005EE                     
  4548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4549  0005EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4550  0005F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4551  0005F6  2ADE               	incf	postinc2,f,c
  4552  0005F8  0E00               	movlw	0
  4553  0005FA  22DD               	addwfc	postdec2,f,c
  4554  0005FC                     
  4555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4556  0005FC  0E00               	movlw	0
  4557  0005FE  0100               	movlb	0	; () banked
  4558  000600  6FBD               	movwf	(_width+1)& (0+255),b
  4559  000602  0E00               	movlw	0
  4560  000604  6FBC               	movwf	_width& (0+255),b
  4561  000606  C0BC  F0C0         	movff	_width,_flags
  4562  00060A  C0BD  F0C1         	movff	_width+1,_flags+1
  4563  00060E                     
  4564                           ; BSR set to: 0
  4565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4566  00060E  69BE               	setf	_prec& (0+255),b
  4567  000610  69BF               	setf	(_prec+1)& (0+255),b
  4568  000612                     
  4569                           ; BSR set to: 0
  4570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4571  000612  0E00               	movlw	0
  4572  000614  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  4573  000616  0E00               	movlw	0
  4574  000618  6E54               	movwf	vfpfcnvrt@done^0,c
  4575                           
  4576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4577  00061A  EF5A  F003         	goto	l3844
  4578  00061E                     l3818:
  4579                           
  4580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4581  00061E  0100               	movlb	0	; () banked
  4582  000620  81C0               	bsf	_flags& (0+255),0,b
  4583  000622                     l3820:
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4587  000622  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4588  000626  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4589  00062A  2ADE               	incf	postinc2,f,c
  4590  00062C  0E00               	movlw	0
  4591  00062E  22DD               	addwfc	postdec2,f,c
  4592                           
  4593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4594  000630  EF5A  F003         	goto	l3844
  4595  000634                     l3822:
  4596                           
  4597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4598  000634  0100               	movlb	0	; () banked
  4599  000636  83C0               	bsf	_flags& (0+255),1,b
  4600  000638  EF11  F003         	goto	l3820
  4601  00063C                     l3826:
  4602                           
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4604  00063C  0100               	movlb	0	; () banked
  4605  00063E  85C0               	bsf	_flags& (0+255),2,b
  4606  000640  EF11  F003         	goto	l3820
  4607  000644                     l3830:
  4608                           
  4609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4610  000644  0100               	movlb	0	; () banked
  4611  000646  87C0               	bsf	_flags& (0+255),3,b
  4612  000648  EF11  F003         	goto	l3820
  4613  00064C                     l3834:
  4614                           
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4616  00064C  0100               	movlb	0	; () banked
  4617  00064E  89C0               	bsf	_flags& (0+255),4,b
  4618  000650  EF11  F003         	goto	l3820
  4619  000654                     l3838:
  4620                           
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4622  000654  0E00               	movlw	0
  4623  000656  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  4624  000658  0E01               	movlw	1
  4625  00065A  6E54               	movwf	vfpfcnvrt@done^0,c
  4626                           
  4627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4628  00065C  EF5A  F003         	goto	l3844
  4629  000660                     l3842:
  4630  000660  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4631  000664  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4632  000668  CFDE FFF6          	movff	postinc2,tblptrl
  4633  00066C  CFDD FFF7          	movff	postdec2,tblptrh
  4634  000670                     	if	0	;tblptru may be non-zero
  4635  000670                     	endif
  4636  000670                     	if	0	;tblptru may be non-zero
  4637  000670                     	endif
  4638  000670  0008               	tblrd		*
  4639  000672  50F5               	movf	tablat,w,c
  4640  000674  6E46               	movwf	??_vfpfcnvrt^0,c
  4641  000676  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  4642                           
  4643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4644                           ; Switch size 1, requested type "simple"
  4645                           ; Number of cases is 1, Range of values is 0 to 0
  4646                           ; switch strategies available:
  4647                           ; Name         Instructions Cycles
  4648                           ; simple_byte            4     3 (average)
  4649                           ;	Chosen strategy is simple_byte
  4650  000678  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4651  00067A  0A00               	xorlw	0	; case 0
  4652  00067C  B4D8               	btfsc	status,2,c
  4653  00067E  EF43  F003         	goto	l5558
  4654  000682  EF2A  F003         	goto	l3838
  4655  000686                     l5558:
  4656                           
  4657                           ; Switch size 1, requested type "simple"
  4658                           ; Number of cases is 5, Range of values is 32 to 48
  4659                           ; switch strategies available:
  4660                           ; Name         Instructions Cycles
  4661                           ; simple_byte           16     9 (average)
  4662                           ;	Chosen strategy is simple_byte
  4663  000686  5046               	movf	??_vfpfcnvrt^0,w,c
  4664  000688  0A20               	xorlw	32	; case 32
  4665  00068A  B4D8               	btfsc	status,2,c
  4666  00068C  EF22  F003         	goto	l3830
  4667  000690  0A03               	xorlw	3	; case 35
  4668  000692  B4D8               	btfsc	status,2,c
  4669  000694  EF26  F003         	goto	l3834
  4670  000698  0A08               	xorlw	8	; case 43
  4671  00069A  B4D8               	btfsc	status,2,c
  4672  00069C  EF1E  F003         	goto	l3826
  4673  0006A0  0A06               	xorlw	6	; case 45
  4674  0006A2  B4D8               	btfsc	status,2,c
  4675  0006A4  EF0F  F003         	goto	l3818
  4676  0006A8  0A1D               	xorlw	29	; case 48
  4677  0006AA  B4D8               	btfsc	status,2,c
  4678  0006AC  EF1A  F003         	goto	l3822
  4679  0006B0  EF2A  F003         	goto	l3838
  4680  0006B4                     l3844:
  4681                           
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4683  0006B4  5054               	movf	vfpfcnvrt@done^0,w,c
  4684  0006B6  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  4685  0006B8  B4D8               	btfsc	status,2,c
  4686  0006BA  EF61  F003         	goto	u2971
  4687  0006BE  EF63  F003         	goto	u2970
  4688  0006C2                     u2971:
  4689  0006C2  EF30  F003         	goto	l3842
  4690  0006C6                     u2970:
  4691  0006C6                     
  4692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4693  0006C6  0100               	movlb	0	; () banked
  4694  0006C8  A1C0               	btfss	_flags& (0+255),0,b
  4695  0006CA  EF69  F003         	goto	u2981
  4696  0006CE  EF6B  F003         	goto	u2980
  4697  0006D2                     u2981:
  4698  0006D2  EF6C  F003         	goto	l3848
  4699  0006D6                     u2980:
  4700  0006D6                     
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4703  0006D6  93C0               	bcf	_flags& (0+255),1,b
  4704  0006D8                     l3848:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4708  0006D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4709  0006DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4710  0006E0  CFDE FFF6          	movff	postinc2,tblptrl
  4711  0006E4  CFDD FFF7          	movff	postdec2,tblptrh
  4712  0006E8                     	if	0	;tblptru may be non-zero
  4713  0006E8                     	endif
  4714  0006E8                     	if	0	;tblptru may be non-zero
  4715  0006E8                     	endif
  4716  0006E8  0008               	tblrd		*
  4717  0006EA  50F5               	movf	tablat,w,c
  4718  0006EC  0A2A               	xorlw	42
  4719  0006EE  A4D8               	btfss	status,2,c
  4720  0006F0  EF7C  F003         	goto	u2991
  4721  0006F4  EF7E  F003         	goto	u2990
  4722  0006F8                     u2991:
  4723  0006F8  EFA7  F003         	goto	l3856
  4724  0006FC                     u2990:
  4725  0006FC                     
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4728  0006FC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4729  000700  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4730  000704  2ADE               	incf	postinc2,f,c
  4731  000706  0E00               	movlw	0
  4732  000708  22DD               	addwfc	postdec2,f,c
  4733                           
  4734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4735  00070A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4736  00070E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4737  000712  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4738  000716  0E02               	movlw	2
  4739  000718  26DE               	addwf	postinc2,f,c
  4740  00071A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4741  00071E  0E00               	movlw	0
  4742  000720  22DD               	addwfc	postdec2,f,c
  4743  000722  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4744  000726  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4745  00072A  CFDE F0BC          	movff	postinc2,_width
  4746  00072E  CFDD F0BD          	movff	postdec2,_width+1
  4747  000732                     
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4750  000732  BFBD               	btfsc	(_width+1)& (0+255),7,b
  4751  000734  EFA0  F003         	goto	u3000
  4752  000738  EF9E  F003         	goto	u3001
  4753  00073C                     u3001:
  4754  00073C  EFEA  F003         	goto	l3866
  4755  000740                     u3000:
  4756  000740                     
  4757                           ; BSR set to: 0
  4758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4759  000740  81C0               	bsf	_flags& (0+255),0,b
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4762  000742  6DBC               	negf	_width& (0+255),b
  4763  000744  1FBD               	comf	(_width+1)& (0+255),f,b
  4764  000746  B0D8               	btfsc	status,0,c
  4765  000748  2BBD               	incf	(_width+1)& (0+255),f,b
  4766  00074A  EFEA  F003         	goto	l3866
  4767  00074E                     l3856:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4771  00074E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4772  000752  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4773  000756  CFDE F008          	movff	postinc2,atoi@s
  4774  00075A  CFDD F009          	movff	postdec2,atoi@s+1
  4775  00075E  EC03  F00E         	call	_atoi	;wreg free
  4776  000762  C008  F0BC         	movff	?_atoi,_width
  4777  000766  C009  F0BD         	movff	?_atoi+1,_width+1
  4778                           
  4779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4780  00076A  EFBE  F003         	goto	l3860
  4781  00076E                     l3858:
  4782                           
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4784  00076E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4785  000772  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4786  000776  2ADE               	incf	postinc2,f,c
  4787  000778  0E00               	movlw	0
  4788  00077A  22DD               	addwfc	postdec2,f,c
  4789  00077C                     l3860:
  4790  00077C  0ED0               	movlw	208
  4791  00077E  6E46               	movwf	??_vfpfcnvrt^0,c
  4792  000780  0EFF               	movlw	255
  4793  000782  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4794  000784  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4795  000788  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4796  00078C  CFDE FFF6          	movff	postinc2,tblptrl
  4797  000790  CFDD FFF7          	movff	postdec2,tblptrh
  4798  000794                     	if	0	;tblptru may be non-zero
  4799  000794                     	endif
  4800  000794                     	if	0	;tblptru may be non-zero
  4801  000794                     	endif
  4802  000794  0008               	tblrd		*
  4803  000796  50F5               	movf	tablat,w,c
  4804  000798  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4805  00079A  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4806  00079C  5046               	movf	??_vfpfcnvrt^0,w,c
  4807  00079E  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4808  0007A0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4809  0007A2  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4810  0007A4  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4811  0007A6  E10A               	bnz	u3010
  4812  0007A8  0E0A               	movlw	10
  4813  0007AA  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4814  0007AC  A0D8               	btfss	status,0,c
  4815  0007AE  EFDB  F003         	goto	u3011
  4816  0007B2  EFDE  F003         	goto	u3010
  4817  0007B6                     u3011:
  4818  0007B6  0E01               	movlw	1
  4819  0007B8  EFDF  F003         	goto	u3020
  4820  0007BC                     u3010:
  4821  0007BC  0E00               	movlw	0
  4822  0007BE                     u3020:
  4823  0007BE  6E56               	movwf	_vfpfcnvrt$831^0,c
  4824  0007C0  6A57               	clrf	(_vfpfcnvrt$831+1)^0,c
  4825  0007C2  5056               	movf	_vfpfcnvrt$831^0,w,c
  4826  0007C4  1057               	iorwf	(_vfpfcnvrt$831+1)^0,w,c
  4827  0007C6  A4D8               	btfss	status,2,c
  4828  0007C8  EFE8  F003         	goto	u3031
  4829  0007CC  EFEA  F003         	goto	u3030
  4830  0007D0                     u3031:
  4831  0007D0  EFB7  F003         	goto	l3858
  4832  0007D4                     u3030:
  4833  0007D4                     l3866:
  4834                           
  4835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4836  0007D4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4837  0007D8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4838  0007DC  CFDE FFF6          	movff	postinc2,tblptrl
  4839  0007E0  CFDD FFF7          	movff	postdec2,tblptrh
  4840  0007E4                     	if	0	;tblptru may be non-zero
  4841  0007E4                     	endif
  4842  0007E4                     	if	0	;tblptru may be non-zero
  4843  0007E4                     	endif
  4844  0007E4  0008               	tblrd		*
  4845  0007E6  50F5               	movf	tablat,w,c
  4846  0007E8  0A2E               	xorlw	46
  4847  0007EA  A4D8               	btfss	status,2,c
  4848  0007EC  EFFA  F003         	goto	u3041
  4849  0007F0  EFFC  F003         	goto	u3040
  4850  0007F4                     u3041:
  4851  0007F4  EF7A  F004         	goto	l3886
  4852  0007F8                     u3040:
  4853  0007F8                     
  4854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4855  0007F8  0E00               	movlw	0
  4856  0007FA  0100               	movlb	0	; () banked
  4857  0007FC  6FBF               	movwf	(_prec+1)& (0+255),b
  4858  0007FE  0E00               	movlw	0
  4859  000800  6FBE               	movwf	_prec& (0+255),b
  4860  000802                     
  4861                           ; BSR set to: 0
  4862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4863  000802  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4864  000806  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4865  00080A  2ADE               	incf	postinc2,f,c
  4866  00080C  0E00               	movlw	0
  4867  00080E  22DD               	addwfc	postdec2,f,c
  4868  000810                     
  4869                           ; BSR set to: 0
  4870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4871  000810  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4872  000814  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4873  000818  CFDE FFF6          	movff	postinc2,tblptrl
  4874  00081C  CFDD FFF7          	movff	postdec2,tblptrh
  4875  000820                     	if	0	;tblptru may be non-zero
  4876  000820                     	endif
  4877  000820                     	if	0	;tblptru may be non-zero
  4878  000820                     	endif
  4879  000820  0008               	tblrd		*
  4880  000822  50F5               	movf	tablat,w,c
  4881  000824  0A2A               	xorlw	42
  4882  000826  A4D8               	btfss	status,2,c
  4883  000828  EF18  F004         	goto	u3051
  4884  00082C  EF1A  F004         	goto	u3050
  4885  000830                     u3051:
  4886  000830  EF37  F004         	goto	l3876
  4887  000834                     u3050:
  4888  000834                     
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4891  000834  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4892  000838  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4893  00083C  2ADE               	incf	postinc2,f,c
  4894  00083E  0E00               	movlw	0
  4895  000840  22DD               	addwfc	postdec2,f,c
  4896                           
  4897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4898  000842  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4899  000846  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4900  00084A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4901  00084E  0E02               	movlw	2
  4902  000850  26DE               	addwf	postinc2,f,c
  4903  000852  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4904  000856  0E00               	movlw	0
  4905  000858  22DD               	addwfc	postdec2,f,c
  4906  00085A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4907  00085E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4908  000862  CFDE F0BE          	movff	postinc2,_prec
  4909  000866  CFDD F0BF          	movff	postdec2,_prec+1
  4910                           
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4912  00086A  EF7A  F004         	goto	l3886
  4913  00086E                     l3876:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4917  00086E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4918  000872  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4919  000876  CFDE F008          	movff	postinc2,atoi@s
  4920  00087A  CFDD F009          	movff	postdec2,atoi@s+1
  4921  00087E  EC03  F00E         	call	_atoi	;wreg free
  4922  000882  C008  F0BE         	movff	?_atoi,_prec
  4923  000886  C009  F0BF         	movff	?_atoi+1,_prec+1
  4924                           
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4926  00088A  EF4E  F004         	goto	l3880
  4927  00088E                     l3878:
  4928                           
  4929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4930  00088E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4931  000892  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4932  000896  2ADE               	incf	postinc2,f,c
  4933  000898  0E00               	movlw	0
  4934  00089A  22DD               	addwfc	postdec2,f,c
  4935  00089C                     l3880:
  4936  00089C  0ED0               	movlw	208
  4937  00089E  6E46               	movwf	??_vfpfcnvrt^0,c
  4938  0008A0  0EFF               	movlw	255
  4939  0008A2  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4940  0008A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4941  0008A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4942  0008AC  CFDE FFF6          	movff	postinc2,tblptrl
  4943  0008B0  CFDD FFF7          	movff	postdec2,tblptrh
  4944  0008B4                     	if	0	;tblptru may be non-zero
  4945  0008B4                     	endif
  4946  0008B4                     	if	0	;tblptru may be non-zero
  4947  0008B4                     	endif
  4948  0008B4  0008               	tblrd		*
  4949  0008B6  50F5               	movf	tablat,w,c
  4950  0008B8  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4951  0008BA  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4952  0008BC  5046               	movf	??_vfpfcnvrt^0,w,c
  4953  0008BE  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4954  0008C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4955  0008C2  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4956  0008C4  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4957  0008C6  E10A               	bnz	u3060
  4958  0008C8  0E0A               	movlw	10
  4959  0008CA  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4960  0008CC  A0D8               	btfss	status,0,c
  4961  0008CE  EF6B  F004         	goto	u3061
  4962  0008D2  EF6E  F004         	goto	u3060
  4963  0008D6                     u3061:
  4964  0008D6  0E01               	movlw	1
  4965  0008D8  EF6F  F004         	goto	u3070
  4966  0008DC                     u3060:
  4967  0008DC  0E00               	movlw	0
  4968  0008DE                     u3070:
  4969  0008DE  6E58               	movwf	_vfpfcnvrt$832^0,c
  4970  0008E0  6A59               	clrf	(_vfpfcnvrt$832+1)^0,c
  4971  0008E2  5058               	movf	_vfpfcnvrt$832^0,w,c
  4972  0008E4  1059               	iorwf	(_vfpfcnvrt$832+1)^0,w,c
  4973  0008E6  A4D8               	btfss	status,2,c
  4974  0008E8  EF78  F004         	goto	u3081
  4975  0008EC  EF7A  F004         	goto	u3080
  4976  0008F0                     u3081:
  4977  0008F0  EF47  F004         	goto	l3878
  4978  0008F4                     u3080:
  4979  0008F4                     l3886:
  4980                           
  4981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4982  0008F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4983  0008F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4984  0008FC  CFDE FFF6          	movff	postinc2,tblptrl
  4985  000900  CFDD FFF7          	movff	postdec2,tblptrh
  4986  000904                     	if	0	;tblptru may be non-zero
  4987  000904                     	endif
  4988  000904                     	if	0	;tblptru may be non-zero
  4989  000904                     	endif
  4990  000904  0008               	tblrd		*
  4991  000906  50F5               	movf	tablat,w,c
  4992  000908  0A64               	xorlw	100
  4993  00090A  B4D8               	btfsc	status,2,c
  4994  00090C  EF8A  F004         	goto	u3091
  4995  000910  EF8C  F004         	goto	u3090
  4996  000914                     u3091:
  4997  000914  EF9E  F004         	goto	l3890
  4998  000918                     u3090:
  4999  000918  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5000  00091C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5001  000920  CFDE FFF6          	movff	postinc2,tblptrl
  5002  000924  CFDD FFF7          	movff	postdec2,tblptrh
  5003  000928                     	if	0	;tblptru may be non-zero
  5004  000928                     	endif
  5005  000928                     	if	0	;tblptru may be non-zero
  5006  000928                     	endif
  5007  000928  0008               	tblrd		*
  5008  00092A  50F5               	movf	tablat,w,c
  5009  00092C  0A69               	xorlw	105
  5010  00092E  A4D8               	btfss	status,2,c
  5011  000930  EF9C  F004         	goto	u3101
  5012  000934  EF9E  F004         	goto	u3100
  5013  000938                     u3101:
  5014  000938  EFDE  F004         	goto	l3896
  5015  00093C                     u3100:
  5016  00093C                     l3890:
  5017                           
  5018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5019  00093C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5020  000940  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5021  000944  2ADE               	incf	postinc2,f,c
  5022  000946  0E00               	movlw	0
  5023  000948  22DD               	addwfc	postdec2,f,c
  5024                           
  5025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5026  00094A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5027  00094E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5028  000952  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5029  000956  0E02               	movlw	2
  5030  000958  26DE               	addwf	postinc2,f,c
  5031  00095A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5032  00095E  0E00               	movlw	0
  5033  000960  22DD               	addwfc	postdec2,f,c
  5034  000962  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5035  000966  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5036  00096A  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  5037  00096E  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  5038  000972  0E00               	movlw	0
  5039  000974  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5040  000976  0EFF               	movlw	-1
  5041  000978  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  5042  00097A  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  5043  00097C  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  5044  00097E  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  5045  000980  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  5046  000982  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  5047  000984                     
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5049  000984  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5050  000988  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5051  00098C  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5052  000990  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5053  000994  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5054  000998  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5055  00099C  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5056  0009A0  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5057  0009A4  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5058  0009A8  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5059  0009AC  ECDD  F00A         	call	_dtoa	;wreg free
  5060  0009B0  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5061  0009B4  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5062  0009B8  EF6C  F005         	goto	l590
  5063  0009BC                     l3896:
  5064                           
  5065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5066  0009BC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5067  0009C0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5068  0009C4  CFDE FFF6          	movff	postinc2,tblptrl
  5069  0009C8  CFDD FFF7          	movff	postdec2,tblptrh
  5070  0009CC                     	if	0	;tblptru may be non-zero
  5071  0009CC                     	endif
  5072  0009CC                     	if	0	;tblptru may be non-zero
  5073  0009CC                     	endif
  5074  0009CC  0008               	tblrd		*
  5075  0009CE  50F5               	movf	tablat,w,c
  5076  0009D0  0A73               	xorlw	115
  5077  0009D2  A4D8               	btfss	status,2,c
  5078  0009D4  EFEE  F004         	goto	u3111
  5079  0009D8  EFF0  F004         	goto	u3110
  5080  0009DC                     u3111:
  5081  0009DC  EF1B  F005         	goto	l3904
  5082  0009E0                     u3110:
  5083  0009E0                     
  5084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5085  0009E0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5086  0009E4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5087  0009E8  2ADE               	incf	postinc2,f,c
  5088  0009EA  0E00               	movlw	0
  5089  0009EC  22DD               	addwfc	postdec2,f,c
  5090                           
  5091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5092  0009EE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5093  0009F2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5094  0009F6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5095  0009FA  0E02               	movlw	2
  5096  0009FC  26DE               	addwf	postinc2,f,c
  5097  0009FE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5098  000A02  0E00               	movlw	0
  5099  000A04  22DD               	addwfc	postdec2,f,c
  5100  000A06  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5101  000A0A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5102  000A0E  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  5103  000A12  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  5104  000A16                     
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5106  000A16  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5107  000A1A  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5108  000A1E  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5109  000A22  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5110  000A26  EC8F  F00F         	call	_stoa	;wreg free
  5111  000A2A  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  5112  000A2E  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  5113  000A32  EF6C  F005         	goto	l590
  5114  000A36                     l3904:
  5115                           
  5116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5117  000A36  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5118  000A3A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5119  000A3E  CFDE FFF6          	movff	postinc2,tblptrl
  5120  000A42  CFDD FFF7          	movff	postdec2,tblptrh
  5121  000A46                     	if	0	;tblptru may be non-zero
  5122  000A46                     	endif
  5123  000A46                     	if	0	;tblptru may be non-zero
  5124  000A46                     	endif
  5125  000A46  0008               	tblrd		*
  5126  000A48  50F5               	movf	tablat,w,c
  5127  000A4A  0A25               	xorlw	37
  5128  000A4C  A4D8               	btfss	status,2,c
  5129  000A4E  EF2B  F005         	goto	u3121
  5130  000A52  EF2D  F005         	goto	u3120
  5131  000A56                     u3121:
  5132  000A56  EF44  F005         	goto	l3914
  5133  000A5A                     u3120:
  5134  000A5A                     
  5135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5136  000A5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5137  000A5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5138  000A62  2ADE               	incf	postinc2,f,c
  5139  000A64  0E00               	movlw	0
  5140  000A66  22DD               	addwfc	postdec2,f,c
  5141  000A68                     
  5142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5143  000A68  0E00               	movlw	0
  5144  000A6A  6E02               	movwf	(fputc@c+1)^0,c
  5145  000A6C  0E25               	movlw	37
  5146  000A6E  6E01               	movwf	fputc@c^0,c
  5147  000A70  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5148  000A74  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5149  000A78  ECCE  F015         	call	_fputc	;wreg free
  5150  000A7C                     l3910:
  5151                           
  5152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5153  000A7C  0E00               	movlw	0
  5154  000A7E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5155  000A80  0E01               	movlw	1
  5156  000A82  6E40               	movwf	?_vfpfcnvrt^0,c
  5157  000A84  EF6C  F005         	goto	l590
  5158  000A88                     l3914:
  5159                           
  5160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5161  000A88  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5162  000A8C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5163  000A90  2ADE               	incf	postinc2,f,c
  5164  000A92  0E00               	movlw	0
  5165  000A94  22DD               	addwfc	postdec2,f,c
  5166  000A96                     
  5167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5168  000A96  0E00               	movlw	0
  5169  000A98  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5170  000A9A  0E00               	movlw	0
  5171  000A9C  6E40               	movwf	?_vfpfcnvrt^0,c
  5172  000A9E  EF6C  F005         	goto	l590
  5173  000AA2                     l3920:
  5174                           
  5175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5176  000AA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5177  000AA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5178  000AAA  CFDE FFF6          	movff	postinc2,tblptrl
  5179  000AAE  CFDD FFF7          	movff	postdec2,tblptrh
  5180  000AB2                     	if	0	;tblptru may be non-zero
  5181  000AB2                     	endif
  5182  000AB2                     	if	0	;tblptru may be non-zero
  5183  000AB2                     	endif
  5184  000AB2  0008               	tblrd		*
  5185  000AB4  50F5               	movf	tablat,w,c
  5186  000AB6  6E01               	movwf	fputc@c^0,c
  5187  000AB8  6A02               	clrf	(fputc@c+1)^0,c
  5188  000ABA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5189  000ABE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5190  000AC2  ECCE  F015         	call	_fputc	;wreg free
  5191  000AC6                     
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5193  000AC6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5194  000ACA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5195  000ACE  2ADE               	incf	postinc2,f,c
  5196  000AD0  0E00               	movlw	0
  5197  000AD2  22DD               	addwfc	postdec2,f,c
  5198  000AD4  EF3E  F005         	goto	l3910
  5199  000AD8                     l590:
  5200  000AD8  0012               	return		;funcret
  5201  000ADA                     __end_of_vfpfcnvrt:
  5202                           	opt callstack 0
  5203                           
  5204 ;; *************** function _stoa *****************
  5205 ;; Defined at:
  5206 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5209 ;;		 -> sprintf@f(6), 
  5210 ;;  s               2   11[COMRAM] PTR unsigned char 
  5211 ;;		 -> ?_sprintf(2), horarios(288), 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5214 ;;  l               2   29[COMRAM] int 
  5215 ;;  p               2   27[COMRAM] int 
  5216 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5217 ;;		 -> ?_sprintf(2), stoa@nuls(7), horarios(288), 
  5218 ;;  w               2   23[COMRAM] int 
  5219 ;;  i               2   21[COMRAM] int 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    9[COMRAM] int 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5229 ;;      Params:         4       0       0       0       0       0       0       0       0
  5230 ;;      Locals:        17       0       0       0       0       0       0       0       0
  5231 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5232 ;;      Totals:        22       0       0       0       0       0       0       0       0
  5233 ;;Total ram usage:       22 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    3
  5236 ;; This function calls:
  5237 ;;		_fputc
  5238 ;;		_strlen
  5239 ;; This function is called by:
  5240 ;;		_vfpfcnvrt
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text20
  5245  001F1E                     __ptext20:
  5246                           	opt callstack 0
  5247  001F1E                     _stoa:
  5248                           	opt callstack 22
  5249  001F1E                     
  5250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5251  001F1E  EE20  F0D8         	lfsr	2,stoa@F1139
  5252  001F22  EE10  F00F         	lfsr	1,stoa@nuls
  5253  001F26  0E06               	movlw	6
  5254  001F28                     u2741:
  5255  001F28  CFDB FFE3          	movff	plusw2,plusw1
  5256  001F2C  06E8               	decf	wreg,f,c
  5257  001F2E  E2FC               	bc	u2741
  5258  001F30                     
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  5260  001F30  C00C  F01A         	movff	stoa@s,stoa@cp
  5261  001F34  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5262  001F38                     
  5263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  5264  001F38  501A               	movf	stoa@cp^0,w,c
  5265  001F3A  101B               	iorwf	(stoa@cp+1)^0,w,c
  5266  001F3C  A4D8               	btfss	status,2,c
  5267  001F3E  EFA3  F00F         	goto	u2751
  5268  001F42  EFA5  F00F         	goto	u2750
  5269  001F46                     u2751:
  5270  001F46  EFA9  F00F         	goto	l3688
  5271  001F4A                     u2750:
  5272  001F4A                     
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  5274  001F4A  0E0F               	movlw	low stoa@nuls
  5275  001F4C  6E1A               	movwf	stoa@cp^0,c
  5276  001F4E  0E00               	movlw	high stoa@nuls
  5277  001F50  6E1B               	movwf	(stoa@cp+1)^0,c
  5278  001F52                     l3688:
  5279                           
  5280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  5281  001F52  C01A  F001         	movff	stoa@cp,strlen@s
  5282  001F56  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5283  001F5A  EC3D  F01C         	call	_strlen	;wreg free
  5284  001F5E  C001  F01E         	movff	?_strlen,stoa@l
  5285  001F62  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5286  001F66                     
  5287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  5288  001F66  C0BE  F01C         	movff	_prec,stoa@p
  5289  001F6A  C0BF  F01D         	movff	_prec+1,stoa@p+1
  5290  001F6E                     
  5291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  5292  001F6E  BE1D               	btfsc	(stoa@p+1)^0,7,c
  5293  001F70  EFBC  F00F         	goto	u2761
  5294  001F74  EFBE  F00F         	goto	u2760
  5295  001F78                     u2761:
  5296  001F78  EFD3  F00F         	goto	l537
  5297  001F7C                     u2760:
  5298  001F7C  501E               	movf	stoa@l^0,w,c
  5299  001F7E  5C1C               	subwf	stoa@p^0,w,c
  5300  001F80  501D               	movf	(stoa@p+1)^0,w,c
  5301  001F82  0A80               	xorlw	128
  5302  001F84  6E0E               	movwf	??_stoa^0,c
  5303  001F86  501F               	movf	(stoa@l+1)^0,w,c
  5304  001F88  0A80               	xorlw	128
  5305  001F8A  580E               	subwfb	??_stoa^0,w,c
  5306  001F8C  A0D8               	btfss	status,0,c
  5307  001F8E  EFCB  F00F         	goto	u2771
  5308  001F92  EFCD  F00F         	goto	u2770
  5309  001F96                     u2771:
  5310  001F96  EFCF  F00F         	goto	l535
  5311  001F9A                     u2770:
  5312  001F9A  EFD3  F00F         	goto	l537
  5313  001F9E                     l535:
  5314  001F9E  C01C  F01E         	movff	stoa@p,stoa@l
  5315  001FA2  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5316  001FA6                     l537:
  5317                           
  5318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  5319  001FA6  C01E  F01C         	movff	stoa@l,stoa@p
  5320  001FAA  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5321                           
  5322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  5323  001FAE  C0BC  F018         	movff	_width,stoa@w
  5324  001FB2  C0BD  F019         	movff	_width+1,stoa@w+1
  5325                           
  5326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  5327  001FB6  0100               	movlb	0	; () banked
  5328  001FB8  B1C0               	btfsc	_flags& (0+255),0,b
  5329  001FBA  EFE1  F00F         	goto	u2781
  5330  001FBE  EFE3  F00F         	goto	u2780
  5331  001FC2                     u2781:
  5332  001FC2  EF00  F010         	goto	l3704
  5333  001FC6                     u2780:
  5334  001FC6  EFF1  F00F         	goto	l3702
  5335  001FCA                     l3698:
  5336                           
  5337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  5338  001FCA  0E00               	movlw	0
  5339  001FCC  6E02               	movwf	(fputc@c+1)^0,c
  5340  001FCE  0E20               	movlw	32
  5341  001FD0  6E01               	movwf	fputc@c^0,c
  5342  001FD2  C00A  F003         	movff	stoa@fp,fputc@fp
  5343  001FD6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5344  001FDA  ECCE  F015         	call	_fputc	;wreg free
  5345  001FDE                     
  5346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  5347  001FDE  4A1E               	infsnz	stoa@l^0,f,c
  5348  001FE0  2A1F               	incf	(stoa@l+1)^0,f,c
  5349  001FE2                     l3702:
  5350                           
  5351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  5352  001FE2  5018               	movf	stoa@w^0,w,c
  5353  001FE4  5C1E               	subwf	stoa@l^0,w,c
  5354  001FE6  501F               	movf	(stoa@l+1)^0,w,c
  5355  001FE8  0A80               	xorlw	128
  5356  001FEA  6E0E               	movwf	??_stoa^0,c
  5357  001FEC  5019               	movf	(stoa@w+1)^0,w,c
  5358  001FEE  0A80               	xorlw	128
  5359  001FF0  580E               	subwfb	??_stoa^0,w,c
  5360  001FF2  A0D8               	btfss	status,0,c
  5361  001FF4  EFFE  F00F         	goto	u2791
  5362  001FF8  EF00  F010         	goto	u2790
  5363  001FFC                     u2791:
  5364  001FFC  EFE5  F00F         	goto	l3698
  5365  002000                     u2790:
  5366  002000                     l3704:
  5367                           
  5368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  5369  002000  0E00               	movlw	0
  5370  002002  6E17               	movwf	(stoa@i+1)^0,c
  5371  002004  0E00               	movlw	0
  5372  002006  6E16               	movwf	stoa@i^0,c
  5373                           
  5374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5375  002008  EF19  F010         	goto	l3712
  5376  00200C                     l3706:
  5377                           
  5378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  5379  00200C  C01A  FFD9         	movff	stoa@cp,fsr2l
  5380  002010  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5381  002014  50DF               	movf	indf2,w,c
  5382  002016  6E0E               	movwf	??_stoa^0,c
  5383  002018  500E               	movf	??_stoa^0,w,c
  5384  00201A  6E01               	movwf	fputc@c^0,c
  5385  00201C  6A02               	clrf	(fputc@c+1)^0,c
  5386  00201E  C00A  F003         	movff	stoa@fp,fputc@fp
  5387  002022  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5388  002026  ECCE  F015         	call	_fputc	;wreg free
  5389  00202A                     
  5390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  5391  00202A  4A1A               	infsnz	stoa@cp^0,f,c
  5392  00202C  2A1B               	incf	(stoa@cp+1)^0,f,c
  5393  00202E                     
  5394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  5395  00202E  4A16               	infsnz	stoa@i^0,f,c
  5396  002030  2A17               	incf	(stoa@i+1)^0,f,c
  5397  002032                     l3712:
  5398                           
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5400  002032  501C               	movf	stoa@p^0,w,c
  5401  002034  5C16               	subwf	stoa@i^0,w,c
  5402  002036  5017               	movf	(stoa@i+1)^0,w,c
  5403  002038  0A80               	xorlw	128
  5404  00203A  6E0E               	movwf	??_stoa^0,c
  5405  00203C  501D               	movf	(stoa@p+1)^0,w,c
  5406  00203E  0A80               	xorlw	128
  5407  002040  580E               	subwfb	??_stoa^0,w,c
  5408  002042  A0D8               	btfss	status,0,c
  5409  002044  EF26  F010         	goto	u2801
  5410  002048  EF28  F010         	goto	u2800
  5411  00204C                     u2801:
  5412  00204C  EF06  F010         	goto	l3706
  5413  002050                     u2800:
  5414  002050                     
  5415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  5416  002050  0100               	movlb	0	; () banked
  5417  002052  A1C0               	btfss	_flags& (0+255),0,b
  5418  002054  EF2E  F010         	goto	u2811
  5419  002058  EF30  F010         	goto	u2810
  5420  00205C                     u2811:
  5421  00205C  EF4D  F010         	goto	l547
  5422  002060                     u2810:
  5423  002060  EF3E  F010         	goto	l3720
  5424  002064                     l3716:
  5425                           
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  5427  002064  0E00               	movlw	0
  5428  002066  6E02               	movwf	(fputc@c+1)^0,c
  5429  002068  0E20               	movlw	32
  5430  00206A  6E01               	movwf	fputc@c^0,c
  5431  00206C  C00A  F003         	movff	stoa@fp,fputc@fp
  5432  002070  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5433  002074  ECCE  F015         	call	_fputc	;wreg free
  5434  002078                     
  5435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  5436  002078  4A1E               	infsnz	stoa@l^0,f,c
  5437  00207A  2A1F               	incf	(stoa@l+1)^0,f,c
  5438  00207C                     l3720:
  5439                           
  5440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  5441  00207C  5018               	movf	stoa@w^0,w,c
  5442  00207E  5C1E               	subwf	stoa@l^0,w,c
  5443  002080  501F               	movf	(stoa@l+1)^0,w,c
  5444  002082  0A80               	xorlw	128
  5445  002084  6E0E               	movwf	??_stoa^0,c
  5446  002086  5019               	movf	(stoa@w+1)^0,w,c
  5447  002088  0A80               	xorlw	128
  5448  00208A  580E               	subwfb	??_stoa^0,w,c
  5449  00208C  A0D8               	btfss	status,0,c
  5450  00208E  EF4B  F010         	goto	u2821
  5451  002092  EF4D  F010         	goto	u2820
  5452  002096                     u2821:
  5453  002096  EF32  F010         	goto	l3716
  5454  00209A                     u2820:
  5455  00209A                     l547:
  5456                           
  5457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  5458  00209A  C01E  F00A         	movff	stoa@l,?_stoa
  5459  00209E  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5460  0020A2  0012               	return		;funcret
  5461  0020A4                     __end_of_stoa:
  5462                           	opt callstack 0
  5463                           
  5464 ;; *************** function _dtoa *****************
  5465 ;; Defined at:
  5466 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5469 ;;		 -> sprintf@f(6), 
  5470 ;;  d               8   29[COMRAM] long long 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  n               8   53[COMRAM] long long 
  5473 ;;  i               2   61[COMRAM] int 
  5474 ;;  s               2   51[COMRAM] int 
  5475 ;;  w               2   49[COMRAM] int 
  5476 ;;  p               2   47[COMRAM] int 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  2   27[COMRAM] int 
  5479 ;; Registers used:
  5480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5486 ;;      Params:        10       0       0       0       0       0       0       0       0
  5487 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5488 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5489 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5490 ;;Total ram usage:       36 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    5
  5493 ;; This function calls:
  5494 ;;		___aodiv
  5495 ;;		___aomod
  5496 ;;		_abs
  5497 ;;		_pad
  5498 ;; This function is called by:
  5499 ;;		_vfpfcnvrt
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text21
  5504  0015BA                     __ptext21:
  5505                           	opt callstack 0
  5506  0015BA                     _dtoa:
  5507                           	opt callstack 20
  5508  0015BA                     
  5509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5510  0015BA  C01E  F036         	movff	dtoa@d,dtoa@n
  5511  0015BE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5512  0015C2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5513  0015C6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5514  0015CA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5515  0015CE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5516  0015D2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5517  0015D6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5518  0015DA                     
  5519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5520  0015DA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5521  0015DC  EFF2  F00A         	goto	u2591
  5522  0015E0  EFF5  F00A         	goto	u2590
  5523  0015E4                     u2591:
  5524  0015E4  0E01               	movlw	1
  5525  0015E6  EFF6  F00A         	goto	u2600
  5526  0015EA                     u2590:
  5527  0015EA  0E00               	movlw	0
  5528  0015EC                     u2600:
  5529  0015EC  6E34               	movwf	dtoa@s^0,c
  5530  0015EE  6A35               	clrf	(dtoa@s+1)^0,c
  5531                           
  5532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5533  0015F0  5034               	movf	dtoa@s^0,w,c
  5534  0015F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  5535  0015F4  B4D8               	btfsc	status,2,c
  5536  0015F6  EFFF  F00A         	goto	u2611
  5537  0015FA  EF01  F00B         	goto	u2610
  5538  0015FE                     u2611:
  5539  0015FE  EF11  F00B         	goto	l3624
  5540  001602                     u2610:
  5541  001602                     
  5542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5543  001602  1E3D               	comf	(dtoa@n+7)^0,f,c
  5544  001604  1E3C               	comf	(dtoa@n+6)^0,f,c
  5545  001606  1E3B               	comf	(dtoa@n+5)^0,f,c
  5546  001608  1E3A               	comf	(dtoa@n+4)^0,f,c
  5547  00160A  1E39               	comf	(dtoa@n+3)^0,f,c
  5548  00160C  1E38               	comf	(dtoa@n+2)^0,f,c
  5549  00160E  1E37               	comf	(dtoa@n+1)^0,f,c
  5550  001610  6C36               	negf	dtoa@n^0,c
  5551  001612  0E00               	movlw	0
  5552  001614  2237               	addwfc	(dtoa@n+1)^0,f,c
  5553  001616  2238               	addwfc	(dtoa@n+2)^0,f,c
  5554  001618  2239               	addwfc	(dtoa@n+3)^0,f,c
  5555  00161A  223A               	addwfc	(dtoa@n+4)^0,f,c
  5556  00161C  223B               	addwfc	(dtoa@n+5)^0,f,c
  5557  00161E  223C               	addwfc	(dtoa@n+6)^0,f,c
  5558  001620  223D               	addwfc	(dtoa@n+7)^0,f,c
  5559  001622                     l3624:
  5560                           
  5561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5562  001622  0100               	movlb	0	; () banked
  5563  001624  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  5564  001626  EF17  F00B         	goto	u2621
  5565  00162A  EF19  F00B         	goto	u2620
  5566  00162E                     u2621:
  5567  00162E  EF1A  F00B         	goto	l3628
  5568  001632                     u2620:
  5569  001632                     
  5570                           ; BSR set to: 0
  5571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5572  001632  93C0               	bcf	_flags& (0+255),1,b
  5573  001634                     l3628:
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5577  001634  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  5578  001636  EF27  F00B         	goto	u2630
  5579  00163A  51BF               	movf	(_prec+1)& (0+255),w,b
  5580  00163C  E106               	bnz	u2631
  5581  00163E  05BE               	decf	_prec& (0+255),w,b
  5582  001640  B0D8               	btfsc	status,0,c
  5583  001642  EF25  F00B         	goto	u2631
  5584  001646  EF27  F00B         	goto	u2630
  5585  00164A                     u2631:
  5586  00164A  EF2D  F00B         	goto	l508
  5587  00164E                     u2630:
  5588  00164E                     
  5589                           ; BSR set to: 0
  5590  00164E  0E00               	movlw	0
  5591  001650  6E31               	movwf	(dtoa@p+1)^0,c
  5592  001652  0E01               	movlw	1
  5593  001654  6E30               	movwf	dtoa@p^0,c
  5594  001656  EF31  F00B         	goto	l510
  5595  00165A                     l508:
  5596                           
  5597                           ; BSR set to: 0
  5598  00165A  C0BE  F030         	movff	_prec,dtoa@p
  5599  00165E  C0BF  F031         	movff	_prec+1,dtoa@p+1
  5600  001662                     l510:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5604  001662  C0BC  F032         	movff	_width,dtoa@w
  5605  001666  C0BD  F033         	movff	_width+1,dtoa@w+1
  5606  00166A                     
  5607                           ; BSR set to: 0
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5609  00166A  5034               	movf	dtoa@s^0,w,c
  5610  00166C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5611  00166E  A4D8               	btfss	status,2,c
  5612  001670  EF3C  F00B         	goto	u2641
  5613  001674  EF3E  F00B         	goto	u2640
  5614  001678                     u2641:
  5615  001678  EF45  F00B         	goto	l3636
  5616  00167C                     u2640:
  5617  00167C                     
  5618                           ; BSR set to: 0
  5619  00167C  A5C0               	btfss	_flags& (0+255),2,b
  5620  00167E  EF43  F00B         	goto	u2651
  5621  001682  EF45  F00B         	goto	u2650
  5622  001686                     u2651:
  5623  001686  EF48  F00B         	goto	l3638
  5624  00168A                     u2650:
  5625  00168A                     l3636:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5629  00168A  0632               	decf	dtoa@w^0,f,c
  5630  00168C  A0D8               	btfss	status,0,c
  5631  00168E  0633               	decf	(dtoa@w+1)^0,f,c
  5632  001690                     l3638:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5636  001690  0E00               	movlw	0
  5637  001692  6E3F               	movwf	(dtoa@i+1)^0,c
  5638  001694  0E1F               	movlw	31
  5639  001696  6E3E               	movwf	dtoa@i^0,c
  5640  001698                     
  5641                           ; BSR set to: 0
  5642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5643  001698  0E00               	movlw	0
  5644  00169A  0101               	movlb	1	; () banked
  5645  00169C  6F83               	movwf	(_dbuf+31)& (0+255),b
  5646                           
  5647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5648  00169E  EFCD  F00B         	goto	l3652
  5649  0016A2                     l3642:
  5650                           
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5652  0016A2  063E               	decf	dtoa@i^0,f,c
  5653  0016A4  A0D8               	btfss	status,0,c
  5654  0016A6  063F               	decf	(dtoa@i+1)^0,f,c
  5655  0016A8                     
  5656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5657  0016A8  0E64               	movlw	low _dbuf
  5658  0016AA  243E               	addwf	dtoa@i^0,w,c
  5659  0016AC  6ED9               	movwf	fsr2l,c
  5660  0016AE  0E01               	movlw	high _dbuf
  5661  0016B0  203F               	addwfc	(dtoa@i+1)^0,w,c
  5662  0016B2  6EDA               	movwf	fsr2h,c
  5663  0016B4  C036  F001         	movff	dtoa@n,___aomod@dividend
  5664  0016B8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5665  0016BC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5666  0016C0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5667  0016C4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5668  0016C8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5669  0016CC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5670  0016D0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5671  0016D4  0E0A               	movlw	10
  5672  0016D6  6E09               	movwf	___aomod@divisor^0,c
  5673  0016D8  0E00               	movlw	0
  5674  0016DA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5675  0016DC  0E00               	movlw	0
  5676  0016DE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5677  0016E0  0E00               	movlw	0
  5678  0016E2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5679  0016E4  0E00               	movlw	0
  5680  0016E6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5681  0016E8  0E00               	movlw	0
  5682  0016EA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5683  0016EC  0E00               	movlw	0
  5684  0016EE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5685  0016F0  0E00               	movlw	0
  5686  0016F2  6E10               	movwf	(___aomod@divisor+7)^0,c
  5687  0016F4  ECC6  F011         	call	___aomod	;wreg free
  5688  0016F8  C001  F026         	movff	?___aomod,??_dtoa
  5689  0016FC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5690  001700  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5691  001704  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5692  001708  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5693  00170C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5694  001710  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5695  001714  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5696  001718  C026  F013         	movff	??_dtoa,abs@a
  5697  00171C  C028  F014         	movff	??_dtoa+2,abs@a+1
  5698  001720  EC88  F01B         	call	_abs	;wreg free
  5699  001724  5013               	movf	?_abs^0,w,c
  5700  001726  0F30               	addlw	48
  5701  001728  6EDF               	movwf	indf2,c
  5702  00172A                     
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5704  00172A  0630               	decf	dtoa@p^0,f,c
  5705  00172C  A0D8               	btfss	status,0,c
  5706  00172E  0631               	decf	(dtoa@p+1)^0,f,c
  5707  001730                     
  5708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5709  001730  0632               	decf	dtoa@w^0,f,c
  5710  001732  A0D8               	btfss	status,0,c
  5711  001734  0633               	decf	(dtoa@w+1)^0,f,c
  5712  001736                     
  5713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5714  001736  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5715  00173A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5716  00173E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5717  001742  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5718  001746  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5719  00174A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5720  00174E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5721  001752  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5722  001756  0E0A               	movlw	10
  5723  001758  6E09               	movwf	___aodiv@divisor^0,c
  5724  00175A  0E00               	movlw	0
  5725  00175C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5726  00175E  0E00               	movlw	0
  5727  001760  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5728  001762  0E00               	movlw	0
  5729  001764  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5730  001766  0E00               	movlw	0
  5731  001768  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5732  00176A  0E00               	movlw	0
  5733  00176C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5734  00176E  0E00               	movlw	0
  5735  001770  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5736  001772  0E00               	movlw	0
  5737  001774  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5738  001776  ECCB  F00E         	call	___aodiv	;wreg free
  5739  00177A  C001  F036         	movff	?___aodiv,dtoa@n
  5740  00177E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5741  001782  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5742  001786  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5743  00178A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5744  00178E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5745  001792  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5746  001796  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5747  00179A                     l3652:
  5748                           
  5749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5750  00179A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5751  00179C  EFD8  F00B         	goto	u2661
  5752  0017A0  503F               	movf	(dtoa@i+1)^0,w,c
  5753  0017A2  E108               	bnz	u2660
  5754  0017A4  043E               	decf	dtoa@i^0,w,c
  5755  0017A6  A0D8               	btfss	status,0,c
  5756  0017A8  EFD8  F00B         	goto	u2661
  5757  0017AC  EFDA  F00B         	goto	u2660
  5758  0017B0                     u2661:
  5759  0017B0  EF0B  F00C         	goto	l3662
  5760  0017B4                     u2660:
  5761  0017B4  5036               	movf	dtoa@n^0,w,c
  5762  0017B6  1037               	iorwf	(dtoa@n+1)^0,w,c
  5763  0017B8  1038               	iorwf	(dtoa@n+2)^0,w,c
  5764  0017BA  1039               	iorwf	(dtoa@n+3)^0,w,c
  5765  0017BC  103A               	iorwf	(dtoa@n+4)^0,w,c
  5766  0017BE  103B               	iorwf	(dtoa@n+5)^0,w,c
  5767  0017C0  103C               	iorwf	(dtoa@n+6)^0,w,c
  5768  0017C2  103D               	iorwf	(dtoa@n+7)^0,w,c
  5769  0017C4  A4D8               	btfss	status,2,c
  5770  0017C6  EFE7  F00B         	goto	u2671
  5771  0017CA  EFE9  F00B         	goto	u2670
  5772  0017CE                     u2671:
  5773  0017CE  EF51  F00B         	goto	l3642
  5774  0017D2                     u2670:
  5775  0017D2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5776  0017D4  EFF6  F00B         	goto	u2680
  5777  0017D8  5031               	movf	(dtoa@p+1)^0,w,c
  5778  0017DA  E106               	bnz	u2681
  5779  0017DC  0430               	decf	dtoa@p^0,w,c
  5780  0017DE  B0D8               	btfsc	status,0,c
  5781  0017E0  EFF4  F00B         	goto	u2681
  5782  0017E4  EFF6  F00B         	goto	u2680
  5783  0017E8                     u2681:
  5784  0017E8  EF51  F00B         	goto	l3642
  5785  0017EC                     u2680:
  5786  0017EC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5787  0017EE  EF01  F00C         	goto	u2691
  5788  0017F2  5033               	movf	(dtoa@w+1)^0,w,c
  5789  0017F4  E108               	bnz	u2690
  5790  0017F6  0432               	decf	dtoa@w^0,w,c
  5791  0017F8  A0D8               	btfss	status,0,c
  5792  0017FA  EF01  F00C         	goto	u2691
  5793  0017FE  EF03  F00C         	goto	u2690
  5794  001802                     u2691:
  5795  001802  EF0B  F00C         	goto	l3662
  5796  001806                     u2690:
  5797  001806  0100               	movlb	0	; () banked
  5798  001808  B3C0               	btfsc	_flags& (0+255),1,b
  5799  00180A  EF09  F00C         	goto	u2701
  5800  00180E  EF0B  F00C         	goto	u2700
  5801  001812                     u2701:
  5802  001812  EF51  F00B         	goto	l3642
  5803  001816                     u2700:
  5804  001816                     l3662:
  5805                           
  5806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5807  001816  5034               	movf	dtoa@s^0,w,c
  5808  001818  1035               	iorwf	(dtoa@s+1)^0,w,c
  5809  00181A  A4D8               	btfss	status,2,c
  5810  00181C  EF12  F00C         	goto	u2711
  5811  001820  EF14  F00C         	goto	u2710
  5812  001824                     u2711:
  5813  001824  EF1C  F00C         	goto	l3666
  5814  001828                     u2710:
  5815  001828  0100               	movlb	0	; () banked
  5816  00182A  A5C0               	btfss	_flags& (0+255),2,b
  5817  00182C  EF1A  F00C         	goto	u2721
  5818  001830  EF1C  F00C         	goto	u2720
  5819  001834                     u2721:
  5820  001834  EF3A  F00C         	goto	l3676
  5821  001838                     u2720:
  5822  001838                     l3666:
  5823                           
  5824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5825  001838  063E               	decf	dtoa@i^0,f,c
  5826  00183A  A0D8               	btfss	status,0,c
  5827  00183C  063F               	decf	(dtoa@i+1)^0,f,c
  5828  00183E                     
  5829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5830  00183E  5034               	movf	dtoa@s^0,w,c
  5831  001840  1035               	iorwf	(dtoa@s+1)^0,w,c
  5832  001842  A4D8               	btfss	status,2,c
  5833  001844  EF26  F00C         	goto	u2731
  5834  001848  EF28  F00C         	goto	u2730
  5835  00184C                     u2731:
  5836  00184C  EF2E  F00C         	goto	l3672
  5837  001850                     u2730:
  5838  001850  0E00               	movlw	0
  5839  001852  6E2F               	movwf	(_dtoa$805+1)^0,c
  5840  001854  0E2B               	movlw	43
  5841  001856  6E2E               	movwf	_dtoa$805^0,c
  5842  001858  EF32  F00C         	goto	l3674
  5843  00185C                     l3672:
  5844  00185C  0E00               	movlw	0
  5845  00185E  6E2F               	movwf	(_dtoa$805+1)^0,c
  5846  001860  0E2D               	movlw	45
  5847  001862  6E2E               	movwf	_dtoa$805^0,c
  5848  001864                     l3674:
  5849  001864  0E64               	movlw	low _dbuf
  5850  001866  243E               	addwf	dtoa@i^0,w,c
  5851  001868  6ED9               	movwf	fsr2l,c
  5852  00186A  0E01               	movlw	high _dbuf
  5853  00186C  203F               	addwfc	(dtoa@i+1)^0,w,c
  5854  00186E  6EDA               	movwf	fsr2h,c
  5855  001870  C02E  FFDF         	movff	_dtoa$805,indf2
  5856  001874                     l3676:
  5857                           
  5858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5859  001874  C01C  F011         	movff	dtoa@fp,pad@fp
  5860  001878  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5861  00187C  0E64               	movlw	low _dbuf
  5862  00187E  243E               	addwf	dtoa@i^0,w,c
  5863  001880  6E13               	movwf	pad@buf^0,c
  5864  001882  0E01               	movlw	high _dbuf
  5865  001884  203F               	addwfc	(dtoa@i+1)^0,w,c
  5866  001886  6E14               	movwf	(pad@buf+1)^0,c
  5867  001888  C032  F015         	movff	dtoa@w,pad@p
  5868  00188C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5869  001890  EC33  F016         	call	_pad	;wreg free
  5870  001894  C011  F01C         	movff	?_pad,?_dtoa
  5871  001898  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5872  00189C  0012               	return		;funcret
  5873  00189E                     __end_of_dtoa:
  5874                           	opt callstack 0
  5875                           
  5876 ;; *************** function _pad *****************
  5877 ;; Defined at:
  5878 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5881 ;;		 -> sprintf@f(6), 
  5882 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5883 ;;		 -> dbuf(32), 
  5884 ;;  p               2   20[COMRAM] int 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  w               2   25[COMRAM] int 
  5887 ;;  i               2   23[COMRAM] int 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  2   16[COMRAM] int 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5897 ;;      Params:         6       0       0       0       0       0       0       0       0
  5898 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5899 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5900 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5901 ;;Total ram usage:       11 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    4
  5904 ;; This function calls:
  5905 ;;		_fputc
  5906 ;;		_fputs
  5907 ;;		_strlen
  5908 ;; This function is called by:
  5909 ;;		_dtoa
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text22
  5914  002C66                     __ptext22:
  5915                           	opt callstack 0
  5916  002C66                     _pad:
  5917                           	opt callstack 20
  5918  002C66                     
  5919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5920  002C66  0100               	movlb	0	; () banked
  5921  002C68  A1C0               	btfss	_flags& (0+255),0,b
  5922  002C6A  EF39  F016         	goto	u2351
  5923  002C6E  EF3B  F016         	goto	u2350
  5924  002C72                     u2351:
  5925  002C72  EF45  F016         	goto	l3488
  5926  002C76                     u2350:
  5927  002C76                     
  5928                           ; BSR set to: 0
  5929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5930  002C76  C013  F00A         	movff	pad@buf,fputs@s
  5931  002C7A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5932  002C7E  C011  F00C         	movff	pad@fp,fputs@fp
  5933  002C82  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5934  002C86  EC66  F01B         	call	_fputs	;wreg free
  5935  002C8A                     l3488:
  5936                           
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5938  002C8A  BE16               	btfsc	(pad@p+1)^0,7,c
  5939  002C8C  EF4A  F016         	goto	u2361
  5940  002C90  EF4C  F016         	goto	u2360
  5941  002C94                     u2361:
  5942  002C94  EF52  F016         	goto	l3492
  5943  002C98                     u2360:
  5944  002C98  C015  F01A         	movff	pad@p,pad@w
  5945  002C9C  C016  F01B         	movff	pad@p+1,pad@w+1
  5946  002CA0  EF56  F016         	goto	l497
  5947  002CA4                     l3492:
  5948  002CA4  0E00               	movlw	0
  5949  002CA6  6E1B               	movwf	(pad@w+1)^0,c
  5950  002CA8  0E00               	movlw	0
  5951  002CAA  6E1A               	movwf	pad@w^0,c
  5952  002CAC                     l497:
  5953                           
  5954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5955  002CAC  0E00               	movlw	0
  5956  002CAE  6E19               	movwf	(pad@i+1)^0,c
  5957  002CB0  0E00               	movlw	0
  5958  002CB2  6E18               	movwf	pad@i^0,c
  5959                           
  5960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5961  002CB4  EF68  F016         	goto	l3498
  5962  002CB8                     l3494:
  5963                           
  5964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5965  002CB8  0E00               	movlw	0
  5966  002CBA  6E02               	movwf	(fputc@c+1)^0,c
  5967  002CBC  0E20               	movlw	32
  5968  002CBE  6E01               	movwf	fputc@c^0,c
  5969  002CC0  C011  F003         	movff	pad@fp,fputc@fp
  5970  002CC4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5971  002CC8  ECCE  F015         	call	_fputc	;wreg free
  5972  002CCC                     
  5973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5974  002CCC  4A18               	infsnz	pad@i^0,f,c
  5975  002CCE  2A19               	incf	(pad@i+1)^0,f,c
  5976  002CD0                     l3498:
  5977                           
  5978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5979  002CD0  501A               	movf	pad@w^0,w,c
  5980  002CD2  5C18               	subwf	pad@i^0,w,c
  5981  002CD4  5019               	movf	(pad@i+1)^0,w,c
  5982  002CD6  0A80               	xorlw	128
  5983  002CD8  6E17               	movwf	??_pad^0,c
  5984  002CDA  501B               	movf	(pad@w+1)^0,w,c
  5985  002CDC  0A80               	xorlw	128
  5986  002CDE  5817               	subwfb	??_pad^0,w,c
  5987  002CE0  A0D8               	btfss	status,0,c
  5988  002CE2  EF75  F016         	goto	u2371
  5989  002CE6  EF77  F016         	goto	u2370
  5990  002CEA                     u2371:
  5991  002CEA  EF5C  F016         	goto	l3494
  5992  002CEE                     u2370:
  5993  002CEE                     
  5994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5995  002CEE  0100               	movlb	0	; () banked
  5996  002CF0  B1C0               	btfsc	_flags& (0+255),0,b
  5997  002CF2  EF7D  F016         	goto	u2381
  5998  002CF6  EF7F  F016         	goto	u2380
  5999  002CFA                     u2381:
  6000  002CFA  EF89  F016         	goto	l3502
  6001  002CFE                     u2380:
  6002  002CFE                     
  6003                           ; BSR set to: 0
  6004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6005  002CFE  C013  F00A         	movff	pad@buf,fputs@s
  6006  002D02  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6007  002D06  C011  F00C         	movff	pad@fp,fputs@fp
  6008  002D0A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6009  002D0E  EC66  F01B         	call	_fputs	;wreg free
  6010  002D12                     l3502:
  6011                           
  6012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6013  002D12  C013  F001         	movff	pad@buf,strlen@s
  6014  002D16  C014  F002         	movff	pad@buf+1,strlen@s+1
  6015  002D1A  EC3D  F01C         	call	_strlen	;wreg free
  6016  002D1E  501A               	movf	pad@w^0,w,c
  6017  002D20  2401               	addwf	?_strlen^0,w,c
  6018  002D22  6E11               	movwf	?_pad^0,c
  6019  002D24  501B               	movf	(pad@w+1)^0,w,c
  6020  002D26  2002               	addwfc	(?_strlen+1)^0,w,c
  6021  002D28  6E12               	movwf	(?_pad+1)^0,c
  6022  002D2A  0012               	return		;funcret
  6023  002D2C                     __end_of_pad:
  6024                           	opt callstack 0
  6025                           
  6026 ;; *************** function _strlen *****************
  6027 ;; Defined at:
  6028 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6031 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6034 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), horarios(288), 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  2    0[COMRAM] unsigned int 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6044 ;;      Params:         2       0       0       0       0       0       0       0       0
  6045 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6047 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6048 ;;Total ram usage:        4 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    1
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_pad
  6055 ;;		_stoa
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text23
  6060  00387A                     __ptext23:
  6061                           	opt callstack 0
  6062  00387A                     _strlen:
  6063                           	opt callstack 23
  6064  00387A  C001  F003         	movff	strlen@s,strlen@a
  6065  00387E  C002  F004         	movff	strlen@s+1,strlen@a+1
  6066  003882  EF45  F01C         	goto	l3478
  6067  003886                     l3476:
  6068  003886  4A01               	infsnz	strlen@s^0,f,c
  6069  003888  2A02               	incf	(strlen@s+1)^0,f,c
  6070  00388A                     l3478:
  6071  00388A  C001  FFD9         	movff	strlen@s,fsr2l
  6072  00388E  C002  FFDA         	movff	strlen@s+1,fsr2h
  6073  003892  50DF               	movf	indf2,w,c
  6074  003894  A4D8               	btfss	status,2,c
  6075  003896  EF4F  F01C         	goto	u2341
  6076  00389A  EF51  F01C         	goto	u2340
  6077  00389E                     u2341:
  6078  00389E  EF43  F01C         	goto	l3476
  6079  0038A2                     u2340:
  6080  0038A2  5003               	movf	strlen@a^0,w,c
  6081  0038A4  5C01               	subwf	strlen@s^0,w,c
  6082  0038A6  6E01               	movwf	?_strlen^0,c
  6083  0038A8  5004               	movf	(strlen@a+1)^0,w,c
  6084  0038AA  5802               	subwfb	(strlen@s+1)^0,w,c
  6085  0038AC  6E02               	movwf	(?_strlen+1)^0,c
  6086  0038AE  0012               	return		;funcret
  6087  0038B0                     __end_of_strlen:
  6088                           	opt callstack 0
  6089                           
  6090 ;; *************** function _fputs *****************
  6091 ;; Defined at:
  6092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6095 ;;		 -> dbuf(32), 
  6096 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6097 ;;		 -> sprintf@f(6), 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  i               2   14[COMRAM] int 
  6100 ;;  c               1   13[COMRAM] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  2    9[COMRAM] int 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6110 ;;      Params:         4       0       0       0       0       0       0       0       0
  6111 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6113 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6114 ;;Total ram usage:        7 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    3
  6117 ;; This function calls:
  6118 ;;		_fputc
  6119 ;; This function is called by:
  6120 ;;		_pad
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text24
  6125  0036CC                     __ptext24:
  6126                           	opt callstack 0
  6127  0036CC                     _fputs:
  6128                           	opt callstack 20
  6129  0036CC  0E00               	movlw	0
  6130  0036CE  6E10               	movwf	(fputs@i+1)^0,c
  6131  0036D0  0E00               	movlw	0
  6132  0036D2  6E0F               	movwf	fputs@i^0,c
  6133  0036D4  EF77  F01B         	goto	l3472
  6134  0036D8                     l3468:
  6135  0036D8  C00E  F001         	movff	fputs@c,fputc@c
  6136  0036DC  6A02               	clrf	(fputc@c+1)^0,c
  6137  0036DE  C00C  F003         	movff	fputs@fp,fputc@fp
  6138  0036E2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6139  0036E6  ECCE  F015         	call	_fputc	;wreg free
  6140  0036EA  4A0F               	infsnz	fputs@i^0,f,c
  6141  0036EC  2A10               	incf	(fputs@i+1)^0,f,c
  6142  0036EE                     l3472:
  6143  0036EE  500F               	movf	fputs@i^0,w,c
  6144  0036F0  240A               	addwf	fputs@s^0,w,c
  6145  0036F2  6ED9               	movwf	fsr2l,c
  6146  0036F4  5010               	movf	(fputs@i+1)^0,w,c
  6147  0036F6  200B               	addwfc	(fputs@s+1)^0,w,c
  6148  0036F8  6EDA               	movwf	fsr2h,c
  6149  0036FA  50DF               	movf	indf2,w,c
  6150  0036FC  6E0E               	movwf	fputs@c^0,c
  6151  0036FE  500E               	movf	fputs@c^0,w,c
  6152  003700  A4D8               	btfss	status,2,c
  6153  003702  EF85  F01B         	goto	u2331
  6154  003706  EF87  F01B         	goto	u2330
  6155  00370A                     u2331:
  6156  00370A  EF6C  F01B         	goto	l3468
  6157  00370E                     u2330:
  6158  00370E  0012               	return		;funcret
  6159  003710                     __end_of_fputs:
  6160                           	opt callstack 0
  6161                           
  6162 ;; *************** function _fputc *****************
  6163 ;; Defined at:
  6164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  c               2    0[COMRAM] int 
  6167 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6168 ;;		 -> sprintf@f(6), 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  2    0[COMRAM] int 
  6173 ;; Registers used:
  6174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6180 ;;      Params:         4       0       0       0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6182 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6183 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6184 ;;Total ram usage:        9 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    2
  6187 ;; This function calls:
  6188 ;;		_putch
  6189 ;; This function is called by:
  6190 ;;		_pad
  6191 ;;		_stoa
  6192 ;;		_vfpfcnvrt
  6193 ;;		_fputs
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text25
  6198  002B9C                     __ptext25:
  6199                           	opt callstack 0
  6200  002B9C                     _fputc:
  6201                           	opt callstack 22
  6202  002B9C  5003               	movf	fputc@fp^0,w,c
  6203  002B9E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6204  002BA0  B4D8               	btfsc	status,2,c
  6205  002BA2  EFD5  F015         	goto	u2291
  6206  002BA6  EFD7  F015         	goto	u2290
  6207  002BAA                     u2291:
  6208  002BAA  EFE0  F015         	goto	l3456
  6209  002BAE                     u2290:
  6210  002BAE  5003               	movf	fputc@fp^0,w,c
  6211  002BB0  1004               	iorwf	(fputc@fp+1)^0,w,c
  6212  002BB2  A4D8               	btfss	status,2,c
  6213  002BB4  EFDE  F015         	goto	u2301
  6214  002BB8  EFE0  F015         	goto	u2300
  6215  002BBC                     u2301:
  6216  002BBC  EFE5  F015         	goto	l3458
  6217  002BC0                     u2300:
  6218  002BC0                     l3456:
  6219  002BC0  5001               	movf	fputc@c^0,w,c
  6220  002BC2  EC6C  F01D         	call	_putch
  6221  002BC6  EF32  F016         	goto	l1336
  6222  002BCA                     l3458:
  6223  002BCA  EE20 F004          	lfsr	2,4
  6224  002BCE  5003               	movf	fputc@fp^0,w,c
  6225  002BD0  26D9               	addwf	fsr2l,f,c
  6226  002BD2  5004               	movf	(fputc@fp+1)^0,w,c
  6227  002BD4  22DA               	addwfc	fsr2h,f,c
  6228  002BD6  50DE               	movf	postinc2,w,c
  6229  002BD8  10DE               	iorwf	postinc2,w,c
  6230  002BDA  B4D8               	btfsc	status,2,c
  6231  002BDC  EFF2  F015         	goto	u2311
  6232  002BE0  EFF4  F015         	goto	u2310
  6233  002BE4                     u2311:
  6234  002BE4  EF0F  F016         	goto	l3462
  6235  002BE8                     u2310:
  6236  002BE8  EE20 F004          	lfsr	2,4
  6237  002BEC  5003               	movf	fputc@fp^0,w,c
  6238  002BEE  26D9               	addwf	fsr2l,f,c
  6239  002BF0  5004               	movf	(fputc@fp+1)^0,w,c
  6240  002BF2  22DA               	addwfc	fsr2h,f,c
  6241  002BF4  EE10 F002          	lfsr	1,2
  6242  002BF8  5003               	movf	fputc@fp^0,w,c
  6243  002BFA  26E1               	addwf	fsr1l,f,c
  6244  002BFC  5004               	movf	(fputc@fp+1)^0,w,c
  6245  002BFE  22E2               	addwfc	fsr1h,f,c
  6246  002C00  50DE               	movf	postinc2,w,c
  6247  002C02  5CE6               	subwf	postinc1,w,c
  6248  002C04  50E6               	movf	postinc1,w,c
  6249  002C06  0A80               	xorlw	128
  6250  002C08  6E09               	movwf	(??_fputc+4)^0,c
  6251  002C0A  50DE               	movf	postinc2,w,c
  6252  002C0C  0A80               	xorlw	128
  6253  002C0E  5809               	subwfb	(??_fputc+4)^0,w,c
  6254  002C10  B0D8               	btfsc	status,0,c
  6255  002C12  EF0D  F016         	goto	u2321
  6256  002C16  EF0F  F016         	goto	u2320
  6257  002C1A                     u2321:
  6258  002C1A  EF32  F016         	goto	l1336
  6259  002C1E                     u2320:
  6260  002C1E                     l3462:
  6261  002C1E  EE20 F002          	lfsr	2,2
  6262  002C22  5003               	movf	fputc@fp^0,w,c
  6263  002C24  26D9               	addwf	fsr2l,f,c
  6264  002C26  5004               	movf	(fputc@fp+1)^0,w,c
  6265  002C28  22DA               	addwfc	fsr2h,f,c
  6266  002C2A  CFDE F005          	movff	postinc2,??_fputc
  6267  002C2E  CFDD F006          	movff	postdec2,??_fputc+1
  6268  002C32  C003  FFD9         	movff	fputc@fp,fsr2l
  6269  002C36  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6270  002C3A  CFDE F007          	movff	postinc2,??_fputc+2
  6271  002C3E  CFDD F008          	movff	postdec2,??_fputc+3
  6272  002C42  5005               	movf	??_fputc^0,w,c
  6273  002C44  2407               	addwf	(??_fputc+2)^0,w,c
  6274  002C46  6ED9               	movwf	fsr2l,c
  6275  002C48  5006               	movf	(??_fputc+1)^0,w,c
  6276  002C4A  2008               	addwfc	(??_fputc+3)^0,w,c
  6277  002C4C  6EDA               	movwf	fsr2h,c
  6278  002C4E  C001  FFDF         	movff	fputc@c,indf2
  6279  002C52  EE20 F002          	lfsr	2,2
  6280  002C56  5003               	movf	fputc@fp^0,w,c
  6281  002C58  26D9               	addwf	fsr2l,f,c
  6282  002C5A  5004               	movf	(fputc@fp+1)^0,w,c
  6283  002C5C  22DA               	addwfc	fsr2h,f,c
  6284  002C5E  2ADE               	incf	postinc2,f,c
  6285  002C60  0E00               	movlw	0
  6286  002C62  22DD               	addwfc	postdec2,f,c
  6287  002C64                     l1336:
  6288  002C64  0012               	return		;funcret
  6289  002C66                     __end_of_fputc:
  6290                           	opt callstack 0
  6291                           
  6292 ;; *************** function _putch *****************
  6293 ;; Defined at:
  6294 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  c               1    wreg     unsigned char 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  c               1    0[COMRAM] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6308 ;;      Params:         0       0       0       0       0       0       0       0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6312 ;;Total ram usage:        0 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_fputc
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text26
  6323  003AD8                     __ptext26:
  6324                           	opt callstack 0
  6325  003AD8                     _putch:
  6326                           	opt callstack 22
  6327  003AD8  0012               	return		;funcret
  6328  003ADA                     __end_of_putch:
  6329                           	opt callstack 0
  6330                           
  6331 ;; *************** function _abs *****************
  6332 ;; Defined at:
  6333 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  a               2   18[COMRAM] int 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  2   18[COMRAM] int 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6347 ;;      Params:         2       0       0       0       0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6349 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6350 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6351 ;;Total ram usage:        4 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_dtoa
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text27
  6362  003710                     __ptext27:
  6363                           	opt callstack 0
  6364  003710                     _abs:
  6365                           	opt callstack 23
  6366  003710  BE14               	btfsc	(abs@a+1)^0,7,c
  6367  003712  EF95  F01B         	goto	u2390
  6368  003716  5014               	movf	(abs@a+1)^0,w,c
  6369  003718  E106               	bnz	u2391
  6370  00371A  0413               	decf	abs@a^0,w,c
  6371  00371C  B0D8               	btfsc	status,0,c
  6372  00371E  EF93  F01B         	goto	u2391
  6373  003722  EF95  F01B         	goto	u2390
  6374  003726                     u2391:
  6375  003726  EFA3  F01B         	goto	l1276
  6376  00372A                     u2390:
  6377  00372A  C013  F015         	movff	abs@a,??_abs
  6378  00372E  C014  F016         	movff	abs@a+1,??_abs+1
  6379  003732  1E15               	comf	??_abs^0,f,c
  6380  003734  1E16               	comf	(??_abs+1)^0,f,c
  6381  003736  4A15               	infsnz	??_abs^0,f,c
  6382  003738  2A16               	incf	(??_abs+1)^0,f,c
  6383  00373A  C015  F013         	movff	??_abs,?_abs
  6384  00373E  C016  F014         	movff	??_abs+1,?_abs+1
  6385  003742  EFA7  F01B         	goto	l1279
  6386  003746                     l1276:
  6387  003746  C013  F013         	movff	abs@a,?_abs
  6388  00374A  C014  F014         	movff	abs@a+1,?_abs+1
  6389  00374E                     l1279:
  6390  00374E  0012               	return		;funcret
  6391  003750                     __end_of_abs:
  6392                           	opt callstack 0
  6393                           
  6394 ;; *************** function ___aomod *****************
  6395 ;; Defined at:
  6396 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  dividend        8    0[COMRAM] long long 
  6399 ;;  divisor         8    8[COMRAM] long long 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  sign            1   17[COMRAM] unsigned char 
  6402 ;;  counter         1   16[COMRAM] unsigned char 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  8    0[COMRAM] long long 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6412 ;;      Params:        16       0       0       0       0       0       0       0       0
  6413 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6415 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:       18 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:    1
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_dtoa
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text28
  6427  00238C                     __ptext28:
  6428                           	opt callstack 0
  6429  00238C                     ___aomod:
  6430                           	opt callstack 23
  6431  00238C  0E00               	movlw	0
  6432  00238E  6E12               	movwf	___aomod@sign^0,c
  6433  002390  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6434  002392  EFCF  F011         	goto	u2490
  6435  002396  EFCD  F011         	goto	u2491
  6436  00239A                     u2491:
  6437  00239A  EFE1  F011         	goto	l3572
  6438  00239E                     u2490:
  6439  00239E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6440  0023A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6441  0023A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6442  0023A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6443  0023A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6444  0023A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6445  0023AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6446  0023AC  6C01               	negf	___aomod@dividend^0,c
  6447  0023AE  0E00               	movlw	0
  6448  0023B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6449  0023B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6450  0023B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6451  0023B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6452  0023B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6453  0023BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6454  0023BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6455  0023BE  0E01               	movlw	1
  6456  0023C0  6E12               	movwf	___aomod@sign^0,c
  6457  0023C2                     l3572:
  6458  0023C2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6459  0023C4  EFE8  F011         	goto	u2500
  6460  0023C8  EFE6  F011         	goto	u2501
  6461  0023CC                     u2501:
  6462  0023CC  EFF8  F011         	goto	l3576
  6463  0023D0                     u2500:
  6464  0023D0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6465  0023D2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6466  0023D4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6467  0023D6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6468  0023D8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6469  0023DA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6470  0023DC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6471  0023DE  6C09               	negf	___aomod@divisor^0,c
  6472  0023E0  0E00               	movlw	0
  6473  0023E2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6474  0023E4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6475  0023E6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6476  0023E8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6477  0023EA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6478  0023EC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6479  0023EE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6480  0023F0                     l3576:
  6481  0023F0  5009               	movf	___aomod@divisor^0,w,c
  6482  0023F2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6483  0023F4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6484  0023F6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6485  0023F8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6486  0023FA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6487  0023FC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6488  0023FE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6489  002400  B4D8               	btfsc	status,2,c
  6490  002402  EF05  F012         	goto	u2511
  6491  002406  EF07  F012         	goto	u2510
  6492  00240A                     u2511:
  6493  00240A  EF4F  F012         	goto	l3592
  6494  00240E                     u2510:
  6495  00240E  0E01               	movlw	1
  6496  002410  6E11               	movwf	___aomod@counter^0,c
  6497  002412  EF15  F012         	goto	l3582
  6498  002416                     l3580:
  6499  002416  90D8               	bcf	status,0,c
  6500  002418  3609               	rlcf	___aomod@divisor^0,f,c
  6501  00241A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6502  00241C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6503  00241E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6504  002420  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6505  002422  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6506  002424  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6507  002426  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6508  002428  2A11               	incf	___aomod@counter^0,f,c
  6509  00242A                     l3582:
  6510  00242A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6511  00242C  EF1A  F012         	goto	u2521
  6512  002430  EF1C  F012         	goto	u2520
  6513  002434                     u2521:
  6514  002434  EF0B  F012         	goto	l3580
  6515  002438                     u2520:
  6516  002438                     l3584:
  6517  002438  5009               	movf	___aomod@divisor^0,w,c
  6518  00243A  5C01               	subwf	___aomod@dividend^0,w,c
  6519  00243C  500A               	movf	(___aomod@divisor+1)^0,w,c
  6520  00243E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6521  002440  500B               	movf	(___aomod@divisor+2)^0,w,c
  6522  002442  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6523  002444  500C               	movf	(___aomod@divisor+3)^0,w,c
  6524  002446  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6525  002448  500D               	movf	(___aomod@divisor+4)^0,w,c
  6526  00244A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6527  00244C  500E               	movf	(___aomod@divisor+5)^0,w,c
  6528  00244E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6529  002450  500F               	movf	(___aomod@divisor+6)^0,w,c
  6530  002452  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6531  002454  5010               	movf	(___aomod@divisor+7)^0,w,c
  6532  002456  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6533  002458  A0D8               	btfss	status,0,c
  6534  00245A  EF31  F012         	goto	u2531
  6535  00245E  EF33  F012         	goto	u2530
  6536  002462                     u2531:
  6537  002462  EF43  F012         	goto	l3588
  6538  002466                     u2530:
  6539  002466  5009               	movf	___aomod@divisor^0,w,c
  6540  002468  5E01               	subwf	___aomod@dividend^0,f,c
  6541  00246A  500A               	movf	(___aomod@divisor+1)^0,w,c
  6542  00246C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6543  00246E  500B               	movf	(___aomod@divisor+2)^0,w,c
  6544  002470  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6545  002472  500C               	movf	(___aomod@divisor+3)^0,w,c
  6546  002474  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6547  002476  500D               	movf	(___aomod@divisor+4)^0,w,c
  6548  002478  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6549  00247A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6550  00247C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6551  00247E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6552  002480  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6553  002482  5010               	movf	(___aomod@divisor+7)^0,w,c
  6554  002484  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6555  002486                     l3588:
  6556  002486  90D8               	bcf	status,0,c
  6557  002488  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6558  00248A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6559  00248C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6560  00248E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6561  002490  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6562  002492  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6563  002494  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6564  002496  3209               	rrcf	___aomod@divisor^0,f,c
  6565  002498  2E11               	decfsz	___aomod@counter^0,f,c
  6566  00249A  EF1C  F012         	goto	l3584
  6567  00249E                     l3592:
  6568  00249E  5012               	movf	___aomod@sign^0,w,c
  6569  0024A0  B4D8               	btfsc	status,2,c
  6570  0024A2  EF55  F012         	goto	u2541
  6571  0024A6  EF57  F012         	goto	u2540
  6572  0024AA                     u2541:
  6573  0024AA  EF67  F012         	goto	l3596
  6574  0024AE                     u2540:
  6575  0024AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6576  0024B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6577  0024B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6578  0024B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6579  0024B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6580  0024B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6581  0024BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6582  0024BC  6C01               	negf	___aomod@dividend^0,c
  6583  0024BE  0E00               	movlw	0
  6584  0024C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6585  0024C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6586  0024C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6587  0024C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6588  0024C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6589  0024CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6590  0024CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6591  0024CE                     l3596:
  6592  0024CE  C001  F001         	movff	___aomod@dividend,?___aomod
  6593  0024D2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6594  0024D6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6595  0024DA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6596  0024DE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6597  0024E2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6598  0024E6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6599  0024EA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6600  0024EE  0012               	return		;funcret
  6601  0024F0                     __end_of___aomod:
  6602                           	opt callstack 0
  6603                           
  6604 ;; *************** function ___aodiv *****************
  6605 ;; Defined at:
  6606 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  dividend        8    0[COMRAM] long long 
  6609 ;;  divisor         8    8[COMRAM] long long 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  quotient        8   18[COMRAM] long long 
  6612 ;;  sign            1   17[COMRAM] unsigned char 
  6613 ;;  counter         1   16[COMRAM] unsigned char 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  8    0[COMRAM] long long 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6623 ;;      Params:        16       0       0       0       0       0       0       0       0
  6624 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6626 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6627 ;;Total ram usage:       26 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    1
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_dtoa
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text29
  6638  001D96                     __ptext29:
  6639                           	opt callstack 0
  6640  001D96                     ___aodiv:
  6641                           	opt callstack 23
  6642  001D96  0E00               	movlw	0
  6643  001D98  6E12               	movwf	___aodiv@sign^0,c
  6644  001D9A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6645  001D9C  EFD4  F00E         	goto	u2420
  6646  001DA0  EFD2  F00E         	goto	u2421
  6647  001DA4                     u2421:
  6648  001DA4  EFE6  F00E         	goto	l3528
  6649  001DA8                     u2420:
  6650  001DA8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6651  001DAA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6652  001DAC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6653  001DAE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6654  001DB0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6655  001DB2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6656  001DB4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6657  001DB6  6C09               	negf	___aodiv@divisor^0,c
  6658  001DB8  0E00               	movlw	0
  6659  001DBA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6660  001DBC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6661  001DBE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6662  001DC0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6663  001DC2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6664  001DC4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6665  001DC6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6666  001DC8  0E01               	movlw	1
  6667  001DCA  6E12               	movwf	___aodiv@sign^0,c
  6668  001DCC                     l3528:
  6669  001DCC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6670  001DCE  EFED  F00E         	goto	u2430
  6671  001DD2  EFEB  F00E         	goto	u2431
  6672  001DD6                     u2431:
  6673  001DD6  EFFF  F00E         	goto	l3534
  6674  001DDA                     u2430:
  6675  001DDA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6676  001DDC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6677  001DDE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6678  001DE0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6679  001DE2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6680  001DE4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6681  001DE6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6682  001DE8  6C01               	negf	___aodiv@dividend^0,c
  6683  001DEA  0E00               	movlw	0
  6684  001DEC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6685  001DEE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6686  001DF0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6687  001DF2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6688  001DF4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6689  001DF6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6690  001DF8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6691  001DFA  0E01               	movlw	1
  6692  001DFC  1A12               	xorwf	___aodiv@sign^0,f,c
  6693  001DFE                     l3534:
  6694  001DFE  EE20  F013         	lfsr	2,___aodiv@quotient
  6695  001E02  0E07               	movlw	7
  6696  001E04                     u2441:
  6697  001E04  6ADE               	clrf	postinc2,c
  6698  001E06  06E8               	decf	wreg,f,c
  6699  001E08  E2FD               	bc	u2441
  6700  001E0A  5009               	movf	___aodiv@divisor^0,w,c
  6701  001E0C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6702  001E0E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6703  001E10  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6704  001E12  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6705  001E14  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6706  001E16  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6707  001E18  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6708  001E1A  B4D8               	btfsc	status,2,c
  6709  001E1C  EF12  F00F         	goto	u2451
  6710  001E20  EF14  F00F         	goto	u2450
  6711  001E24                     u2451:
  6712  001E24  EF66  F00F         	goto	l3556
  6713  001E28                     u2450:
  6714  001E28  0E01               	movlw	1
  6715  001E2A  6E11               	movwf	___aodiv@counter^0,c
  6716  001E2C  EF22  F00F         	goto	l3542
  6717  001E30                     l3540:
  6718  001E30  90D8               	bcf	status,0,c
  6719  001E32  3609               	rlcf	___aodiv@divisor^0,f,c
  6720  001E34  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6721  001E36  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6722  001E38  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6723  001E3A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6724  001E3C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6725  001E3E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6726  001E40  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6727  001E42  2A11               	incf	___aodiv@counter^0,f,c
  6728  001E44                     l3542:
  6729  001E44  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6730  001E46  EF27  F00F         	goto	u2461
  6731  001E4A  EF29  F00F         	goto	u2460
  6732  001E4E                     u2461:
  6733  001E4E  EF18  F00F         	goto	l3540
  6734  001E52                     u2460:
  6735  001E52                     l3544:
  6736  001E52  90D8               	bcf	status,0,c
  6737  001E54  3613               	rlcf	___aodiv@quotient^0,f,c
  6738  001E56  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6739  001E58  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6740  001E5A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6741  001E5C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6742  001E5E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6743  001E60  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6744  001E62  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6745  001E64  5009               	movf	___aodiv@divisor^0,w,c
  6746  001E66  5C01               	subwf	___aodiv@dividend^0,w,c
  6747  001E68  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6748  001E6A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6749  001E6C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6750  001E6E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6751  001E70  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6752  001E72  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6753  001E74  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6754  001E76  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6755  001E78  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6756  001E7A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6757  001E7C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6758  001E7E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6759  001E80  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6760  001E82  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6761  001E84  A0D8               	btfss	status,0,c
  6762  001E86  EF47  F00F         	goto	u2471
  6763  001E8A  EF49  F00F         	goto	u2470
  6764  001E8E                     u2471:
  6765  001E8E  EF5A  F00F         	goto	l3552
  6766  001E92                     u2470:
  6767  001E92  5009               	movf	___aodiv@divisor^0,w,c
  6768  001E94  5E01               	subwf	___aodiv@dividend^0,f,c
  6769  001E96  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6770  001E98  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6771  001E9A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6772  001E9C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6773  001E9E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6774  001EA0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6775  001EA2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6776  001EA4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6777  001EA6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6778  001EA8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6779  001EAA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6780  001EAC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6781  001EAE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6782  001EB0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6783  001EB2  8013               	bsf	___aodiv@quotient^0,0,c
  6784  001EB4                     l3552:
  6785  001EB4  90D8               	bcf	status,0,c
  6786  001EB6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6787  001EB8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6788  001EBA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6789  001EBC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6790  001EBE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6791  001EC0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6792  001EC2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6793  001EC4  3209               	rrcf	___aodiv@divisor^0,f,c
  6794  001EC6  2E11               	decfsz	___aodiv@counter^0,f,c
  6795  001EC8  EF29  F00F         	goto	l3544
  6796  001ECC                     l3556:
  6797  001ECC  5012               	movf	___aodiv@sign^0,w,c
  6798  001ECE  B4D8               	btfsc	status,2,c
  6799  001ED0  EF6C  F00F         	goto	u2481
  6800  001ED4  EF6E  F00F         	goto	u2480
  6801  001ED8                     u2481:
  6802  001ED8  EF7E  F00F         	goto	l3560
  6803  001EDC                     u2480:
  6804  001EDC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6805  001EDE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6806  001EE0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6807  001EE2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6808  001EE4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6809  001EE6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6810  001EE8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6811  001EEA  6C13               	negf	___aodiv@quotient^0,c
  6812  001EEC  0E00               	movlw	0
  6813  001EEE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6814  001EF0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6815  001EF2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6816  001EF4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6817  001EF6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6818  001EF8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6819  001EFA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6820  001EFC                     l3560:
  6821  001EFC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6822  001F00  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6823  001F04  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6824  001F08  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6825  001F0C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6826  001F10  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6827  001F14  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6828  001F18  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6829  001F1C  0012               	return		;funcret
  6830  001F1E                     __end_of___aodiv:
  6831                           	opt callstack 0
  6832                           
  6833 ;; *************** function _atoi *****************
  6834 ;; Defined at:
  6835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6838 ;;		 -> STR_27(23), STR_26(24), STR_20(36), STR_19(37), 
  6839 ;;		 -> STR_18(36), STR_17(39), STR_16(36), STR_15(35), 
  6840 ;;		 -> STR_14(37), STR_13(19), 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  n               2   20[COMRAM] int 
  6843 ;;  neg             2   13[COMRAM] int 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2    7[COMRAM] int 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6853 ;;      Params:         2       0       0       0       0       0       0       0       0
  6854 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6855 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6856 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6857 ;;Total ram usage:       15 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    2
  6860 ;; This function calls:
  6861 ;;		___wmul
  6862 ;;		_isdigit
  6863 ;;		_isspace
  6864 ;; This function is called by:
  6865 ;;		_vfpfcnvrt
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text30
  6870  001C06                     __ptext30:
  6871                           	opt callstack 0
  6872  001C06                     _atoi:
  6873                           	opt callstack 23
  6874  001C06  0E00               	movlw	0
  6875  001C08  6E16               	movwf	(atoi@n+1)^0,c
  6876  001C0A  0E00               	movlw	0
  6877  001C0C  6E15               	movwf	atoi@n^0,c
  6878  001C0E  0E00               	movlw	0
  6879  001C10  6E0F               	movwf	(atoi@neg+1)^0,c
  6880  001C12  0E00               	movlw	0
  6881  001C14  6E0E               	movwf	atoi@neg^0,c
  6882  001C16  EF0F  F00E         	goto	l3726
  6883  001C1A                     l3724:
  6884  001C1A  4A08               	infsnz	atoi@s^0,f,c
  6885  001C1C  2A09               	incf	(atoi@s+1)^0,f,c
  6886  001C1E                     l3726:
  6887  001C1E  0E01               	movlw	1
  6888  001C20  6E14               	movwf	_atoi$1291^0,c
  6889  001C22  C008  FFF6         	movff	atoi@s,tblptrl
  6890  001C26  C009  FFF7         	movff	atoi@s+1,tblptrh
  6891  001C2A                     	if	0	;tblptru may be non-zero
  6892  001C2A                     	endif
  6893  001C2A                     	if	0	;tblptru may be non-zero
  6894  001C2A                     	endif
  6895  001C2A  0008               	tblrd		*
  6896  001C2C  50F5               	movf	tablat,w,c
  6897  001C2E  0A20               	xorlw	32
  6898  001C30  B4D8               	btfsc	status,2,c
  6899  001C32  EF1D  F00E         	goto	u2831
  6900  001C36  EF1F  F00E         	goto	u2830
  6901  001C3A                     u2831:
  6902  001C3A  EF3C  F00E         	goto	l3734
  6903  001C3E                     u2830:
  6904  001C3E  0EF7               	movlw	247
  6905  001C40  6E0A               	movwf	??_atoi^0,c
  6906  001C42  0EFF               	movlw	255
  6907  001C44  6E0B               	movwf	(??_atoi+1)^0,c
  6908  001C46  C008  FFF6         	movff	atoi@s,tblptrl
  6909  001C4A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6910  001C4E                     	if	0	;tblptru may be non-zero
  6911  001C4E                     	endif
  6912  001C4E                     	if	0	;tblptru may be non-zero
  6913  001C4E                     	endif
  6914  001C4E  0008               	tblrd		*
  6915  001C50  50F5               	movf	tablat,w,c
  6916  001C52  6E0C               	movwf	(??_atoi+2)^0,c
  6917  001C54  6A0D               	clrf	(??_atoi+3)^0,c
  6918  001C56  500A               	movf	??_atoi^0,w,c
  6919  001C58  260C               	addwf	(??_atoi+2)^0,f,c
  6920  001C5A  500B               	movf	(??_atoi+1)^0,w,c
  6921  001C5C  220D               	addwfc	(??_atoi+3)^0,f,c
  6922  001C5E  500D               	movf	(??_atoi+3)^0,w,c
  6923  001C60  E109               	bnz	u2840
  6924  001C62  0E05               	movlw	5
  6925  001C64  5C0C               	subwf	(??_atoi+2)^0,w,c
  6926  001C66  A0D8               	btfss	status,0,c
  6927  001C68  EF38  F00E         	goto	u2841
  6928  001C6C  EF3A  F00E         	goto	u2840
  6929  001C70                     u2841:
  6930  001C70  EF3C  F00E         	goto	l3734
  6931  001C74                     u2840:
  6932  001C74  0E00               	movlw	0
  6933  001C76  6E14               	movwf	_atoi$1291^0,c
  6934  001C78                     l3734:
  6935  001C78  C014  F010         	movff	_atoi$1291,_atoi$1290
  6936  001C7C  6A11               	clrf	(_atoi$1290+1)^0,c
  6937  001C7E  5010               	movf	_atoi$1290^0,w,c
  6938  001C80  1011               	iorwf	(_atoi$1290+1)^0,w,c
  6939  001C82  A4D8               	btfss	status,2,c
  6940  001C84  EF46  F00E         	goto	u2851
  6941  001C88  EF48  F00E         	goto	u2850
  6942  001C8C                     u2851:
  6943  001C8C  EF0D  F00E         	goto	l3724
  6944  001C90                     u2850:
  6945  001C90  EF52  F00E         	goto	l3744
  6946  001C94                     l3740:
  6947  001C94  0E00               	movlw	0
  6948  001C96  6E0F               	movwf	(atoi@neg+1)^0,c
  6949  001C98  0E01               	movlw	1
  6950  001C9A  6E0E               	movwf	atoi@neg^0,c
  6951  001C9C                     l3742:
  6952  001C9C  4A08               	infsnz	atoi@s^0,f,c
  6953  001C9E  2A09               	incf	(atoi@s+1)^0,f,c
  6954  001CA0  EF87  F00E         	goto	l3750
  6955  001CA4                     l3744:
  6956  001CA4  C008  FFF6         	movff	atoi@s,tblptrl
  6957  001CA8  C009  FFF7         	movff	atoi@s+1,tblptrh
  6958  001CAC                     	if	0	;tblptru may be non-zero
  6959  001CAC                     	endif
  6960  001CAC                     	if	0	;tblptru may be non-zero
  6961  001CAC                     	endif
  6962  001CAC  0008               	tblrd		*
  6963  001CAE  50F5               	movf	tablat,w,c
  6964  001CB0  6E0A               	movwf	??_atoi^0,c
  6965  001CB2  6A0B               	clrf	(??_atoi+1)^0,c
  6966                           
  6967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6968                           ; Switch size 1, requested type "simple"
  6969                           ; Number of cases is 1, Range of values is 0 to 0
  6970                           ; switch strategies available:
  6971                           ; Name         Instructions Cycles
  6972                           ; simple_byte            4     3 (average)
  6973                           ;	Chosen strategy is simple_byte
  6974  001CB4  500B               	movf	(??_atoi+1)^0,w,c
  6975  001CB6  0A00               	xorlw	0	; case 0
  6976  001CB8  B4D8               	btfsc	status,2,c
  6977  001CBA  EF61  F00E         	goto	l5560
  6978  001CBE  EF87  F00E         	goto	l3750
  6979  001CC2                     l5560:
  6980                           
  6981                           ; Switch size 1, requested type "simple"
  6982                           ; Number of cases is 2, Range of values is 43 to 45
  6983                           ; switch strategies available:
  6984                           ; Name         Instructions Cycles
  6985                           ; simple_byte            7     4 (average)
  6986                           ;	Chosen strategy is simple_byte
  6987  001CC2  500A               	movf	??_atoi^0,w,c
  6988  001CC4  0A2B               	xorlw	43	; case 43
  6989  001CC6  B4D8               	btfsc	status,2,c
  6990  001CC8  EF4E  F00E         	goto	l3742
  6991  001CCC  0A06               	xorlw	6	; case 45
  6992  001CCE  B4D8               	btfsc	status,2,c
  6993  001CD0  EF4A  F00E         	goto	l3740
  6994  001CD4  EF87  F00E         	goto	l3750
  6995  001CD8                     l3746:
  6996  001CD8  C015  F001         	movff	atoi@n,___wmul@multiplier
  6997  001CDC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6998  001CE0  0E00               	movlw	0
  6999  001CE2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7000  001CE4  0E0A               	movlw	10
  7001  001CE6  6E03               	movwf	___wmul@multiplicand^0,c
  7002  001CE8  ECCB  F01C         	call	___wmul	;wreg free
  7003  001CEC  C008  FFF6         	movff	atoi@s,tblptrl
  7004  001CF0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7005  001CF4                     	if	0	;tblptru may be non-zero
  7006  001CF4                     	endif
  7007  001CF4                     	if	0	;tblptru may be non-zero
  7008  001CF4                     	endif
  7009  001CF4  0008               	tblrd		*
  7010  001CF6  50F5               	movf	tablat,w,c
  7011  001CF8  5E01               	subwf	?___wmul^0,f,c
  7012  001CFA  0E00               	movlw	0
  7013  001CFC  5A02               	subwfb	(?___wmul+1)^0,f,c
  7014  001CFE  0E30               	movlw	48
  7015  001D00  2401               	addwf	?___wmul^0,w,c
  7016  001D02  6E15               	movwf	atoi@n^0,c
  7017  001D04  0E00               	movlw	0
  7018  001D06  2002               	addwfc	(?___wmul+1)^0,w,c
  7019  001D08  6E16               	movwf	(atoi@n+1)^0,c
  7020  001D0A  EF4E  F00E         	goto	l3742
  7021  001D0E                     l3750:
  7022  001D0E  0ED0               	movlw	208
  7023  001D10  6E0A               	movwf	??_atoi^0,c
  7024  001D12  0EFF               	movlw	255
  7025  001D14  6E0B               	movwf	(??_atoi+1)^0,c
  7026  001D16  C008  FFF6         	movff	atoi@s,tblptrl
  7027  001D1A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7028  001D1E                     	if	0	;tblptru may be non-zero
  7029  001D1E                     	endif
  7030  001D1E                     	if	0	;tblptru may be non-zero
  7031  001D1E                     	endif
  7032  001D1E  0008               	tblrd		*
  7033  001D20  50F5               	movf	tablat,w,c
  7034  001D22  6E0C               	movwf	(??_atoi+2)^0,c
  7035  001D24  6A0D               	clrf	(??_atoi+3)^0,c
  7036  001D26  500A               	movf	??_atoi^0,w,c
  7037  001D28  260C               	addwf	(??_atoi+2)^0,f,c
  7038  001D2A  500B               	movf	(??_atoi+1)^0,w,c
  7039  001D2C  220D               	addwfc	(??_atoi+3)^0,f,c
  7040  001D2E  500D               	movf	(??_atoi+3)^0,w,c
  7041  001D30  E10A               	bnz	u2860
  7042  001D32  0E0A               	movlw	10
  7043  001D34  5C0C               	subwf	(??_atoi+2)^0,w,c
  7044  001D36  A0D8               	btfss	status,0,c
  7045  001D38  EFA0  F00E         	goto	u2861
  7046  001D3C  EFA3  F00E         	goto	u2860
  7047  001D40                     u2861:
  7048  001D40  0E01               	movlw	1
  7049  001D42  EFA4  F00E         	goto	u2870
  7050  001D46                     u2860:
  7051  001D46  0E00               	movlw	0
  7052  001D48                     u2870:
  7053  001D48  6E12               	movwf	_atoi$1292^0,c
  7054  001D4A  6A13               	clrf	(_atoi$1292+1)^0,c
  7055  001D4C  5012               	movf	_atoi$1292^0,w,c
  7056  001D4E  1013               	iorwf	(_atoi$1292+1)^0,w,c
  7057  001D50  A4D8               	btfss	status,2,c
  7058  001D52  EFAD  F00E         	goto	u2881
  7059  001D56  EFAF  F00E         	goto	u2880
  7060  001D5A                     u2881:
  7061  001D5A  EF6C  F00E         	goto	l3746
  7062  001D5E                     u2880:
  7063  001D5E  500E               	movf	atoi@neg^0,w,c
  7064  001D60  100F               	iorwf	(atoi@neg+1)^0,w,c
  7065  001D62  A4D8               	btfss	status,2,c
  7066  001D64  EFB6  F00E         	goto	u2891
  7067  001D68  EFB8  F00E         	goto	u2890
  7068  001D6C                     u2891:
  7069  001D6C  EFC6  F00E         	goto	l1307
  7070  001D70                     u2890:
  7071  001D70  C015  F00A         	movff	atoi@n,??_atoi
  7072  001D74  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7073  001D78  1E0A               	comf	??_atoi^0,f,c
  7074  001D7A  1E0B               	comf	(??_atoi+1)^0,f,c
  7075  001D7C  4A0A               	infsnz	??_atoi^0,f,c
  7076  001D7E  2A0B               	incf	(??_atoi+1)^0,f,c
  7077  001D80  C00A  F008         	movff	??_atoi,?_atoi
  7078  001D84  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7079  001D88  EFCA  F00E         	goto	l1310
  7080  001D8C                     l1307:
  7081  001D8C  C015  F008         	movff	atoi@n,?_atoi
  7082  001D90  C016  F009         	movff	atoi@n+1,?_atoi+1
  7083  001D94                     l1310:
  7084  001D94  0012               	return		;funcret
  7085  001D96                     __end_of_atoi:
  7086                           	opt callstack 0
  7087                           
  7088 ;; *************** function _isspace *****************
  7089 ;; Defined at:
  7090 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;  c               2    0[COMRAM] int 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  2    0[COMRAM] int 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7104 ;;      Params:         2       0       0       0       0       0       0       0       0
  7105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7106 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7107 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7108 ;;Total ram usage:        7 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    1
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_atoi
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text31
  7119  00358C                     __ptext31:
  7120                           	opt callstack 0
  7121  00358C                     _isspace:
  7122                           	opt callstack 23
  7123  00358C  0E01               	movlw	1
  7124  00358E  6E07               	movwf	_isspace$1308^0,c
  7125  003590  0E20               	movlw	32
  7126  003592  1801               	xorwf	isspace@c^0,w,c
  7127  003594  1002               	iorwf	(isspace@c+1)^0,w,c
  7128  003596  B4D8               	btfsc	status,2,c
  7129  003598  EFD0  F01A         	goto	u2551
  7130  00359C  EFD2  F01A         	goto	u2550
  7131  0035A0                     u2551:
  7132  0035A0  EFEB  F01A         	goto	l3608
  7133  0035A4                     u2550:
  7134  0035A4  0EF7               	movlw	247
  7135  0035A6  6E03               	movwf	??_isspace^0,c
  7136  0035A8  0EFF               	movlw	255
  7137  0035AA  6E04               	movwf	(??_isspace+1)^0,c
  7138  0035AC  C001  F005         	movff	isspace@c,??_isspace+2
  7139  0035B0  C002  F006         	movff	isspace@c+1,??_isspace+3
  7140  0035B4  5003               	movf	??_isspace^0,w,c
  7141  0035B6  2605               	addwf	(??_isspace+2)^0,f,c
  7142  0035B8  5004               	movf	(??_isspace+1)^0,w,c
  7143  0035BA  2206               	addwfc	(??_isspace+3)^0,f,c
  7144  0035BC  5006               	movf	(??_isspace+3)^0,w,c
  7145  0035BE  E109               	bnz	u2560
  7146  0035C0  0E05               	movlw	5
  7147  0035C2  5C05               	subwf	(??_isspace+2)^0,w,c
  7148  0035C4  A0D8               	btfss	status,0,c
  7149  0035C6  EFE7  F01A         	goto	u2561
  7150  0035CA  EFE9  F01A         	goto	u2560
  7151  0035CE                     u2561:
  7152  0035CE  EFEB  F01A         	goto	l3608
  7153  0035D2                     u2560:
  7154  0035D2  0E00               	movlw	0
  7155  0035D4  6E07               	movwf	_isspace$1308^0,c
  7156  0035D6                     l3608:
  7157  0035D6  C007  F001         	movff	_isspace$1308,?_isspace
  7158  0035DA  6A02               	clrf	(?_isspace+1)^0,c
  7159  0035DC  0012               	return		;funcret
  7160  0035DE                     __end_of_isspace:
  7161                           	opt callstack 0
  7162                           
  7163 ;; *************** function _isdigit *****************
  7164 ;; Defined at:
  7165 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  c               2    0[COMRAM] int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2    0[COMRAM] int 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7179 ;;      Params:         2       0       0       0       0       0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7181 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7182 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7183 ;;Total ram usage:        6 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    1
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_vfpfcnvrt
  7190 ;;		_atoi
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text32
  7195  003842                     __ptext32:
  7196                           	opt callstack 0
  7197  003842                     _isdigit:
  7198                           	opt callstack 24
  7199  003842  0ED0               	movlw	208
  7200  003844  6E03               	movwf	??_isdigit^0,c
  7201  003846  0EFF               	movlw	255
  7202  003848  6E04               	movwf	(??_isdigit+1)^0,c
  7203  00384A  C001  F005         	movff	isdigit@c,??_isdigit+2
  7204  00384E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7205  003852  5003               	movf	??_isdigit^0,w,c
  7206  003854  2605               	addwf	(??_isdigit+2)^0,f,c
  7207  003856  5004               	movf	(??_isdigit+1)^0,w,c
  7208  003858  2206               	addwfc	(??_isdigit+3)^0,f,c
  7209  00385A  5006               	movf	(??_isdigit+3)^0,w,c
  7210  00385C  E10A               	bnz	u2400
  7211  00385E  0E0A               	movlw	10
  7212  003860  5C05               	subwf	(??_isdigit+2)^0,w,c
  7213  003862  A0D8               	btfss	status,0,c
  7214  003864  EF36  F01C         	goto	u2401
  7215  003868  EF39  F01C         	goto	u2400
  7216  00386C                     u2401:
  7217  00386C  0E01               	movlw	1
  7218  00386E  EF3A  F01C         	goto	u2410
  7219  003872                     u2400:
  7220  003872  0E00               	movlw	0
  7221  003874                     u2410:
  7222  003874  6E01               	movwf	?_isdigit^0,c
  7223  003876  6A02               	clrf	(?_isdigit+1)^0,c
  7224  003878  0012               	return		;funcret
  7225  00387A                     __end_of_isdigit:
  7226                           	opt callstack 0
  7227                           
  7228 ;; *************** function _limpiarBuffer *****************
  7229 ;; Defined at:
  7230 ;;		line 753 in file "./AUTOMATIZADOR.h"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;		None
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  i               2    0[COMRAM] int 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7244 ;;      Params:         0       0       0       0       0       0       0       0       0
  7245 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7247 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7248 ;;Total ram usage:        2 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    1
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_dameDatosSistema
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text33
  7259  003750                     __ptext33:
  7260                           	opt callstack 0
  7261  003750                     _limpiarBuffer:
  7262                           	opt callstack 27
  7263  003750                     
  7264                           ;./AUTOMATIZADOR.h: 754:     for (T_INT i = 0; i < 50; i++) {
  7265  003750  0E00               	movlw	0
  7266  003752  6E02               	movwf	(limpiarBuffer@i+1)^0,c
  7267  003754  0E00               	movlw	0
  7268  003756  6E01               	movwf	limpiarBuffer@i^0,c
  7269  003758                     l4662:
  7270                           
  7271                           ;./AUTOMATIZADOR.h: 755:         buffer[i] = 0;
  7272  003758  0E32               	movlw	low _buffer
  7273  00375A  2401               	addwf	limpiarBuffer@i^0,w,c
  7274  00375C  6ED9               	movwf	fsr2l,c
  7275  00375E  0E01               	movlw	high _buffer
  7276  003760  2002               	addwfc	(limpiarBuffer@i+1)^0,w,c
  7277  003762  6EDA               	movwf	fsr2h,c
  7278  003764  0E00               	movlw	0
  7279  003766  6EDF               	movwf	indf2,c
  7280  003768                     
  7281                           ;./AUTOMATIZADOR.h: 756:     }
  7282  003768  4A01               	infsnz	limpiarBuffer@i^0,f,c
  7283  00376A  2A02               	incf	(limpiarBuffer@i+1)^0,f,c
  7284  00376C  BE02               	btfsc	(limpiarBuffer@i+1)^0,7,c
  7285  00376E  EFC2  F01B         	goto	u3961
  7286  003772  5002               	movf	(limpiarBuffer@i+1)^0,w,c
  7287  003774  E109               	bnz	u3960
  7288  003776  0E32               	movlw	50
  7289  003778  5C01               	subwf	limpiarBuffer@i^0,w,c
  7290  00377A  A0D8               	btfss	status,0,c
  7291  00377C  EFC2  F01B         	goto	u3961
  7292  003780  EFC4  F01B         	goto	u3960
  7293  003784                     u3961:
  7294  003784  EFAC  F01B         	goto	l4662
  7295  003788                     u3960:
  7296  003788                     
  7297                           ;./AUTOMATIZADOR.h: 758:     buffer[50 - 1] = '\0';
  7298  003788  0E00               	movlw	0
  7299  00378A  0101               	movlb	1	; () banked
  7300  00378C  6F63               	movwf	(_buffer+49)& (0+255),b
  7301  00378E                     
  7302                           ; BSR set to: 1
  7303  00378E  0012               	return		;funcret
  7304  003790                     __end_of_limpiarBuffer:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _UART_printf *****************
  7308 ;; Defined at:
  7309 ;;		line 57 in file "./UART.h"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  7312 ;;		 -> STR_31(21), STR_30(11), STR_29(9), STR_28(17), 
  7313 ;;		 -> dameDatosSistema@bufferHorario(30), STR_25(37), STR_24(41), STR_23(42), 
  7314 ;;		 -> STR_22(31), STR_21(13), buffer2(50), buffer(50), 
  7315 ;;		 -> STR_12(3), STR_11(14), STR_10(36), STR_9(26), 
  7316 ;;		 -> STR_8(25), STR_7(34), STR_6(32), STR_5(55), 
  7317 ;;		 -> STR_4(40), STR_3(27), STR_2(37), STR_1(16), 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7329 ;;      Params:         2       0       0       0       0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7332 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7333 ;;Total ram usage:        2 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; Hardware stack levels required when called:    2
  7336 ;; This function calls:
  7337 ;;		_UART_write
  7338 ;; This function is called by:
  7339 ;;		_setRtcDefault
  7340 ;;		_dameDatosSistema
  7341 ;;		_mostrarDatosSensores
  7342 ;;		_main
  7343 ;;		_mostrarMenu
  7344 ;;		_configBluetoothHC_06
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text34
  7349  00342E                     __ptext34:
  7350                           	opt callstack 0
  7351  00342E                     _UART_printf:
  7352                           	opt callstack 26
  7353  00342E                     
  7354                           ;./UART.h: 58:     while (*cadena) {
  7355  00342E  EF2D  F01A         	goto	l4546
  7356  003432                     l4542:
  7357                           
  7358                           ;./UART.h: 59:         UART_write(*cadena++);
  7359  003432  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7360  003436  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7361  00343A  6AF8               	clrf	tblptru,c
  7362  00343C  0E07               	movlw	(high __ramtop+-1)
  7363  00343E  64F7               	cpfsgt	tblptrh,c
  7364  003440  D003               	bra	u3907
  7365  003442  0008               	tblrd		*
  7366  003444  50F5               	movf	tablat,w,c
  7367  003446  D005               	bra	u3900
  7368  003448                     u3907:
  7369  003448  CFF6 FFE1          	movff	tblptrl,fsr1l
  7370  00344C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7371  003450  50E7               	movf	indf1,w,c
  7372  003452                     u3900:
  7373  003452  EC29  F01D         	call	_UART_write
  7374  003456  4A02               	infsnz	UART_printf@cadena^0,f,c
  7375  003458  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  7376  00345A                     l4546:
  7377                           
  7378                           ;./UART.h: 58:     while (*cadena) {
  7379  00345A  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7380  00345E  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7381  003462  6AF8               	clrf	tblptru,c
  7382  003464  0E07               	movlw	(high __ramtop+-1)
  7383  003466  64F7               	cpfsgt	tblptrh,c
  7384  003468  D003               	bra	u3917
  7385  00346A  0008               	tblrd		*
  7386  00346C  50F5               	movf	tablat,w,c
  7387  00346E  D005               	bra	u3910
  7388  003470                     u3917:
  7389  003470  CFF6 FFE1          	movff	tblptrl,fsr1l
  7390  003474  CFF7 FFE2          	movff	tblptrh,fsr1h
  7391  003478  50E7               	movf	indf1,w,c
  7392  00347A                     u3910:
  7393  00347A  0900               	iorlw	0
  7394  00347C  A4D8               	btfss	status,2,c
  7395  00347E  EF43  F01A         	goto	u3921
  7396  003482  EF45  F01A         	goto	u3920
  7397  003486                     u3921:
  7398  003486  EF19  F01A         	goto	l4542
  7399  00348A                     u3920:
  7400  00348A  0012               	return		;funcret
  7401  00348C                     __end_of_UART_printf:
  7402                           	opt callstack 0
  7403                           
  7404 ;; *************** function _asignarSetPoint *****************
  7405 ;; Defined at:
  7406 ;;		line 761 in file "./AUTOMATIZADOR.h"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;		None
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  setPointTemp    4   38[COMRAM] unsigned long 
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7420 ;;      Params:         0       0       0       0       0       0       0       0       0
  7421 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7423 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7424 ;;Total ram usage:        8 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    3
  7427 ;; This function calls:
  7428 ;;		_UART_write
  7429 ;;		___lmul
  7430 ;;		_getValue
  7431 ;; This function is called by:
  7432 ;;		_sistemaPrincipal
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text35
  7437  002AB4                     __ptext35:
  7438                           	opt callstack 0
  7439  002AB4                     _asignarSetPoint:
  7440                           	opt callstack 26
  7441  002AB4                     
  7442                           ;./AUTOMATIZADOR.h: 765:     setPointIntro = 0;
  7443  002AB4  0E00               	movlw	0
  7444  002AB6  0100               	movlb	0	; () banked
  7445  002AB8  6FC9               	movwf	_setPointIntro& (0+255),b
  7446  002ABA                     
  7447                           ; BSR set to: 0
  7448                           ;./AUTOMATIZADOR.h: 767:     setPointTemp = getValue(1) * 1000;
  7449  002ABA  0E00               	movlw	0
  7450  002ABC  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7451  002ABE  0E01               	movlw	1
  7452  002AC0  6E0D               	movwf	getValue@numCharacters^0,c
  7453  002AC2  EC09  F000         	call	_getValue	;wreg free
  7454  002AC6  C00D  F023         	movff	?_getValue,_asignarSetPoint$1637
  7455  002ACA  C00E  F024         	movff	?_getValue+1,_asignarSetPoint$1637+1
  7456  002ACE  C00F  F025         	movff	?_getValue+2,_asignarSetPoint$1637+2
  7457  002AD2  C010  F026         	movff	?_getValue+3,_asignarSetPoint$1637+3
  7458  002AD6  C023  F001         	movff	_asignarSetPoint$1637,___lmul@multiplier
  7459  002ADA  C024  F002         	movff	_asignarSetPoint$1637+1,___lmul@multiplier+1
  7460  002ADE  C025  F003         	movff	_asignarSetPoint$1637+2,___lmul@multiplier+2
  7461  002AE2  C026  F004         	movff	_asignarSetPoint$1637+3,___lmul@multiplier+3
  7462  002AE6  0EE8               	movlw	232
  7463  002AE8  6E05               	movwf	___lmul@multiplicand^0,c
  7464  002AEA  0E03               	movlw	3
  7465  002AEC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7466  002AEE  0E00               	movlw	0
  7467  002AF0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7468  002AF2  0E00               	movlw	0
  7469  002AF4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7470  002AF6  EC80  F019         	call	___lmul	;wreg free
  7471  002AFA                     
  7472                           ;./AUTOMATIZADOR.h: 768:     setPointTemp = getValue(1) * 100;
  7473  002AFA  0E00               	movlw	0
  7474  002AFC  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7475  002AFE  0E01               	movlw	1
  7476  002B00  6E0D               	movwf	getValue@numCharacters^0,c
  7477  002B02  EC09  F000         	call	_getValue	;wreg free
  7478  002B06  C00D  F023         	movff	?_getValue,_asignarSetPoint$1637
  7479  002B0A  C00E  F024         	movff	?_getValue+1,_asignarSetPoint$1637+1
  7480  002B0E  C00F  F025         	movff	?_getValue+2,_asignarSetPoint$1637+2
  7481  002B12  C010  F026         	movff	?_getValue+3,_asignarSetPoint$1637+3
  7482  002B16                     
  7483                           ;./AUTOMATIZADOR.h: 768:     setPointTemp = getValue(1) * 100;
  7484  002B16  C023  F001         	movff	_asignarSetPoint$1637,___lmul@multiplier
  7485  002B1A  C024  F002         	movff	_asignarSetPoint$1637+1,___lmul@multiplier+1
  7486  002B1E  C025  F003         	movff	_asignarSetPoint$1637+2,___lmul@multiplier+2
  7487  002B22  C026  F004         	movff	_asignarSetPoint$1637+3,___lmul@multiplier+3
  7488  002B26  0E64               	movlw	100
  7489  002B28  6E05               	movwf	___lmul@multiplicand^0,c
  7490  002B2A  0E00               	movlw	0
  7491  002B2C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7492  002B2E  0E00               	movlw	0
  7493  002B30  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7494  002B32  0E00               	movlw	0
  7495  002B34  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7496  002B36  EC80  F019         	call	___lmul	;wreg free
  7497  002B3A  C001  F027         	movff	?___lmul,asignarSetPoint@setPointTemp
  7498  002B3E  C002  F028         	movff	?___lmul+1,asignarSetPoint@setPointTemp+1
  7499  002B42  C003  F029         	movff	?___lmul+2,asignarSetPoint@setPointTemp+2
  7500  002B46  C004  F02A         	movff	?___lmul+3,asignarSetPoint@setPointTemp+3
  7501  002B4A                     
  7502                           ;./AUTOMATIZADOR.h: 769:     setPointTemp += getValue(2);
  7503  002B4A  0E00               	movlw	0
  7504  002B4C  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7505  002B4E  0E02               	movlw	2
  7506  002B50  6E0D               	movwf	getValue@numCharacters^0,c
  7507  002B52  EC09  F000         	call	_getValue	;wreg free
  7508  002B56  500D               	movf	?_getValue^0,w,c
  7509  002B58  2627               	addwf	asignarSetPoint@setPointTemp^0,f,c
  7510  002B5A  500E               	movf	(?_getValue+1)^0,w,c
  7511  002B5C  2228               	addwfc	(asignarSetPoint@setPointTemp+1)^0,f,c
  7512  002B5E  500F               	movf	(?_getValue+2)^0,w,c
  7513  002B60  2229               	addwfc	(asignarSetPoint@setPointTemp+2)^0,f,c
  7514  002B62  5010               	movf	(?_getValue+3)^0,w,c
  7515  002B64  222A               	addwfc	(asignarSetPoint@setPointTemp+3)^0,f,c
  7516  002B66                     
  7517                           ;./AUTOMATIZADOR.h: 771:     if (setPointTemp != '@') {
  7518  002B66  0E40               	movlw	64
  7519  002B68  1827               	xorwf	asignarSetPoint@setPointTemp^0,w,c
  7520  002B6A  1028               	iorwf	(asignarSetPoint@setPointTemp+1)^0,w,c
  7521  002B6C  1029               	iorwf	(asignarSetPoint@setPointTemp+2)^0,w,c
  7522  002B6E  102A               	iorwf	(asignarSetPoint@setPointTemp+3)^0,w,c
  7523  002B70  B4D8               	btfsc	status,2,c
  7524  002B72  EFBD  F015         	goto	u4381
  7525  002B76  EFBF  F015         	goto	u4380
  7526  002B7A                     u4381:
  7527  002B7A  EFCA  F015         	goto	l5050
  7528  002B7E                     u4380:
  7529  002B7E                     
  7530                           ;./AUTOMATIZADOR.h: 773:         setPoint = setPointTemp;
  7531  002B7E  C027  F0DF         	movff	asignarSetPoint@setPointTemp,_setPoint
  7532  002B82  C028  F0E0         	movff	asignarSetPoint@setPointTemp+1,_setPoint+1
  7533  002B86  C029  F0E1         	movff	asignarSetPoint@setPointTemp+2,_setPoint+2
  7534  002B8A  C02A  F0E2         	movff	asignarSetPoint@setPointTemp+3,_setPoint+3
  7535  002B8E                     
  7536                           ;./AUTOMATIZADOR.h: 774:         UART_write('E');
  7537  002B8E  0E45               	movlw	69
  7538  002B90  EC29  F01D         	call	_UART_write
  7539  002B94                     l5050:
  7540                           
  7541                           ;./AUTOMATIZADOR.h: 778:     setPointIntro = 1;
  7542  002B94  0E01               	movlw	1
  7543  002B96  0100               	movlb	0	; () banked
  7544  002B98  6FC9               	movwf	_setPointIntro& (0+255),b
  7545  002B9A                     
  7546                           ; BSR set to: 0
  7547  002B9A  0012               	return		;funcret
  7548  002B9C                     __end_of_asignarSetPoint:
  7549                           	opt callstack 0
  7550                           
  7551 ;; *************** function _asignarHorarios *****************
  7552 ;; Defined at:
  7553 ;;		line 260 in file "./AUTOMATIZADOR.h"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;		None
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  i               2   36[COMRAM] int 
  7558 ;;  Rx              1   40[COMRAM] unsigned char 
  7559 ;;  hora            1   39[COMRAM] unsigned char 
  7560 ;;  diaIluminar     1   38[COMRAM] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0
  7571 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7572 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7573 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7574 ;;Total ram usage:        7 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    5
  7577 ;; This function calls:
  7578 ;;		_UART_write
  7579 ;;		_escribeHorariosMemoria
  7580 ;;		_getValue
  7581 ;; This function is called by:
  7582 ;;		_sistemaPrincipal
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text36
  7587  002646                     __ptext36:
  7588                           	opt callstack 0
  7589  002646                     _asignarHorarios:
  7590                           	opt callstack 24
  7591  002646                     
  7592                           ;./AUTOMATIZADOR.h: 262:     T_UBYTE hora;;./AUTOMATIZADOR.h: 263:     T_UBYTE Rx;;./AUT
      +                          OMATIZADOR.h: 264:     T_UBYTE diaIluminar;;./AUTOMATIZADOR.h: 269:     hora = getValue(
      +                          2);
  7593  002646  0E00               	movlw	0
  7594  002648  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7595  00264A  0E02               	movlw	2
  7596  00264C  6E0D               	movwf	getValue@numCharacters^0,c
  7597  00264E  EC09  F000         	call	_getValue	;wreg free
  7598  002652  500D               	movf	?_getValue^0,w,c
  7599  002654  6E28               	movwf	asignarHorarios@hora^0,c
  7600  002656                     
  7601                           ;./AUTOMATIZADOR.h: 271:     if (hora != '@') {
  7602  002656  0E40               	movlw	64
  7603  002658  1828               	xorwf	asignarHorarios@hora^0,w,c
  7604  00265A  B4D8               	btfsc	status,2,c
  7605  00265C  EF32  F013         	goto	u4291
  7606  002660  EF34  F013         	goto	u4290
  7607  002664                     u4291:
  7608  002664  EFC4  F013         	goto	l325
  7609  002668                     u4290:
  7610  002668                     
  7611                           ;./AUTOMATIZADOR.h: 275:         Rx = getValue(1);
  7612  002668  0E00               	movlw	0
  7613  00266A  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7614  00266C  0E01               	movlw	1
  7615  00266E  6E0D               	movwf	getValue@numCharacters^0,c
  7616  002670  EC09  F000         	call	_getValue	;wreg free
  7617  002674  500D               	movf	?_getValue^0,w,c
  7618  002676  6E29               	movwf	asignarHorarios@Rx^0,c
  7619  002678                     
  7620                           ;./AUTOMATIZADOR.h: 278:         if (Rx == 1) {
  7621  002678  0429               	decf	asignarHorarios@Rx^0,w,c
  7622  00267A  A4D8               	btfss	status,2,c
  7623  00267C  EF42  F013         	goto	u4301
  7624  002680  EF44  F013         	goto	u4300
  7625  002684                     u4301:
  7626  002684  EFAF  F013         	goto	l4948
  7627  002688                     u4300:
  7628  002688                     
  7629                           ;./AUTOMATIZADOR.h: 283:             for (T_INT i = 0; i < 7; i++) {
  7630  002688  0E00               	movlw	0
  7631  00268A  6E26               	movwf	(asignarHorarios@i+1)^0,c
  7632  00268C  0E00               	movlw	0
  7633  00268E  6E25               	movwf	asignarHorarios@i^0,c
  7634  002690                     l4922:
  7635                           
  7636                           ;./AUTOMATIZADOR.h: 287:                 diaIluminar = getValue(1);
  7637  002690  0E00               	movlw	0
  7638  002692  6E0E               	movwf	(getValue@numCharacters+1)^0,c
  7639  002694  0E01               	movlw	1
  7640  002696  6E0D               	movwf	getValue@numCharacters^0,c
  7641  002698  EC09  F000         	call	_getValue	;wreg free
  7642  00269C  500D               	movf	?_getValue^0,w,c
  7643  00269E  6E27               	movwf	asignarHorarios@diaIluminar^0,c
  7644  0026A0                     
  7645                           ;./AUTOMATIZADOR.h: 289:                 if (diaIluminar != '@') {
  7646  0026A0  0E40               	movlw	64
  7647  0026A2  1827               	xorwf	asignarHorarios@diaIluminar^0,w,c
  7648  0026A4  B4D8               	btfsc	status,2,c
  7649  0026A6  EF57  F013         	goto	u4311
  7650  0026AA  EF59  F013         	goto	u4310
  7651  0026AE                     u4311:
  7652  0026AE  EF8E  F013         	goto	l4938
  7653  0026B2                     u4310:
  7654  0026B2  EF63  F013         	goto	l4934
  7655  0026B6                     l4928:
  7656                           
  7657                           ;./AUTOMATIZADOR.h: 293:                             diaIluminar = '0';
  7658  0026B6  0E30               	movlw	48
  7659  0026B8  6E27               	movwf	asignarHorarios@diaIluminar^0,c
  7660                           
  7661                           ;./AUTOMATIZADOR.h: 294:                             break;
  7662  0026BA  EF78  F013         	goto	l4936
  7663  0026BE                     l4930:
  7664                           
  7665                           ;./AUTOMATIZADOR.h: 297:                             diaIluminar = '1';
  7666  0026BE  0E31               	movlw	49
  7667  0026C0  6E27               	movwf	asignarHorarios@diaIluminar^0,c
  7668                           
  7669                           ;./AUTOMATIZADOR.h: 298:                             break;
  7670  0026C2  EF78  F013         	goto	l4936
  7671  0026C6                     l4934:
  7672  0026C6  5027               	movf	asignarHorarios@diaIluminar^0,w,c
  7673  0026C8  6E23               	movwf	??_asignarHorarios^0,c
  7674  0026CA  6A24               	clrf	(??_asignarHorarios+1)^0,c
  7675                           
  7676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7677                           ; Switch size 1, requested type "simple"
  7678                           ; Number of cases is 1, Range of values is 0 to 0
  7679                           ; switch strategies available:
  7680                           ; Name         Instructions Cycles
  7681                           ; simple_byte            4     3 (average)
  7682                           ;	Chosen strategy is simple_byte
  7683  0026CC  5024               	movf	(??_asignarHorarios+1)^0,w,c
  7684  0026CE  0A00               	xorlw	0	; case 0
  7685  0026D0  B4D8               	btfsc	status,2,c
  7686  0026D2  EF6D  F013         	goto	l5562
  7687  0026D6  EF78  F013         	goto	l4936
  7688  0026DA                     l5562:
  7689                           
  7690                           ; Switch size 1, requested type "simple"
  7691                           ; Number of cases is 2, Range of values is 0 to 1
  7692                           ; switch strategies available:
  7693                           ; Name         Instructions Cycles
  7694                           ; simple_byte            7     4 (average)
  7695                           ;	Chosen strategy is simple_byte
  7696  0026DA  5023               	movf	??_asignarHorarios^0,w,c
  7697  0026DC  0A00               	xorlw	0	; case 0
  7698  0026DE  B4D8               	btfsc	status,2,c
  7699  0026E0  EF5B  F013         	goto	l4928
  7700  0026E4  0A01               	xorlw	1	; case 1
  7701  0026E6  B4D8               	btfsc	status,2,c
  7702  0026E8  EF5F  F013         	goto	l4930
  7703  0026EC  EF78  F013         	goto	l4936
  7704  0026F0                     l4936:
  7705                           
  7706                           ;./AUTOMATIZADOR.h: 302:                     horarios[hora].dias[i] = diaIluminar;
  7707  0026F0  5028               	movf	asignarHorarios@hora^0,w,c
  7708  0026F2  0D0C               	mullw	12
  7709  0026F4  0E84               	movlw	low _horarios
  7710  0026F6  6E23               	movwf	??_asignarHorarios^0,c
  7711  0026F8  0E01               	movlw	high _horarios
  7712  0026FA  6E24               	movwf	(??_asignarHorarios+1)^0,c
  7713  0026FC  0E01               	movlw	1
  7714  0026FE  2623               	addwf	??_asignarHorarios^0,f,c
  7715  002700  0E00               	movlw	0
  7716  002702  2224               	addwfc	(??_asignarHorarios+1)^0,f,c
  7717  002704  50F3               	movf	243,w,c
  7718  002706  2623               	addwf	??_asignarHorarios^0,f,c
  7719  002708  50F4               	movf	244,w,c
  7720  00270A  2224               	addwfc	(??_asignarHorarios+1)^0,f,c
  7721  00270C  5025               	movf	asignarHorarios@i^0,w,c
  7722  00270E  2423               	addwf	??_asignarHorarios^0,w,c
  7723  002710  6ED9               	movwf	fsr2l,c
  7724  002712  5026               	movf	(asignarHorarios@i+1)^0,w,c
  7725  002714  2024               	addwfc	(??_asignarHorarios+1)^0,w,c
  7726  002716  6EDA               	movwf	fsr2h,c
  7727  002718  C027  FFDF         	movff	asignarHorarios@diaIluminar,indf2
  7728  00271C                     l4938:
  7729                           
  7730                           ;./AUTOMATIZADOR.h: 305:             }
  7731  00271C  4A25               	infsnz	asignarHorarios@i^0,f,c
  7732  00271E  2A26               	incf	(asignarHorarios@i+1)^0,f,c
  7733  002720  BE26               	btfsc	(asignarHorarios@i+1)^0,7,c
  7734  002722  EF9C  F013         	goto	u4321
  7735  002726  5026               	movf	(asignarHorarios@i+1)^0,w,c
  7736  002728  E109               	bnz	u4320
  7737  00272A  0E07               	movlw	7
  7738  00272C  5C25               	subwf	asignarHorarios@i^0,w,c
  7739  00272E  A0D8               	btfss	status,0,c
  7740  002730  EF9C  F013         	goto	u4321
  7741  002734  EF9E  F013         	goto	u4320
  7742  002738                     u4321:
  7743  002738  EF48  F013         	goto	l4922
  7744  00273C                     u4320:
  7745  00273C                     
  7746                           ;./AUTOMATIZADOR.h: 307:             horarios[hora].iluminar = Rx;
  7747  00273C  5028               	movf	asignarHorarios@hora^0,w,c
  7748  00273E  0D0C               	mullw	12
  7749  002740  0E8D               	movlw	low (_horarios+9)
  7750  002742  24F3               	addwf	243,w,c
  7751  002744  6ED9               	movwf	fsr2l,c
  7752  002746  0E01               	movlw	high (_horarios+9)
  7753  002748  20F4               	addwfc	prodh,w,c
  7754  00274A  6EDA               	movwf	fsr2h,c
  7755  00274C  C029  FFDF         	movff	asignarHorarios@Rx,indf2
  7756  002750                     
  7757                           ;./AUTOMATIZADOR.h: 309:             escribeHorariosMemoria();
  7758  002750  EC78  F012         	call	_escribeHorariosMemoria	;wreg free
  7759  002754                     
  7760                           ;./AUTOMATIZADOR.h: 313:             UART_write('E');
  7761  002754  0E45               	movlw	69
  7762  002756  EC29  F01D         	call	_UART_write
  7763                           
  7764                           ;./AUTOMATIZADOR.h: 315:         } else if (Rx == 0) {
  7765  00275A  EFC4  F013         	goto	l325
  7766  00275E                     l4948:
  7767  00275E  5029               	movf	asignarHorarios@Rx^0,w,c
  7768  002760  A4D8               	btfss	status,2,c
  7769  002762  EFB5  F013         	goto	u4331
  7770  002766  EFB7  F013         	goto	u4330
  7771  00276A                     u4331:
  7772  00276A  EFC4  F013         	goto	l325
  7773  00276E                     u4330:
  7774  00276E                     
  7775                           ;./AUTOMATIZADOR.h: 316:             horarios[hora].iluminar = Rx;
  7776  00276E  5028               	movf	asignarHorarios@hora^0,w,c
  7777  002770  0D0C               	mullw	12
  7778  002772  0E8D               	movlw	low (_horarios+9)
  7779  002774  24F3               	addwf	243,w,c
  7780  002776  6ED9               	movwf	fsr2l,c
  7781  002778  0E01               	movlw	high (_horarios+9)
  7782  00277A  20F4               	addwfc	prodh,w,c
  7783  00277C  6EDA               	movwf	fsr2h,c
  7784  00277E  C029  FFDF         	movff	asignarHorarios@Rx,indf2
  7785  002782                     
  7786                           ;./AUTOMATIZADOR.h: 318:             UART_write('E');
  7787  002782  0E45               	movlw	69
  7788  002784  EC29  F01D         	call	_UART_write
  7789  002788                     l325:
  7790  002788  0012               	return		;funcret
  7791  00278A                     __end_of_asignarHorarios:
  7792                           	opt callstack 0
  7793                           
  7794 ;; *************** function _getValue *****************
  7795 ;; Defined at:
  7796 ;;		line 566 in file "./AUTOMATIZADOR.h"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  numCharacter    2   12[COMRAM] short 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  i               2   27[COMRAM] int 
  7801 ;;  i               2   25[COMRAM] int 
  7802 ;;  i               2   23[COMRAM] int 
  7803 ;;  i               2   21[COMRAM] int 
  7804 ;;  dato            4   29[COMRAM] unsigned long 
  7805 ;;  Rx              1   33[COMRAM] unsigned char 
  7806 ;;  datoIncorrec    1   20[COMRAM] unsigned char 
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  4   12[COMRAM] unsigned long 
  7809 ;; Registers used:
  7810 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7816 ;;      Params:         4       0       0       0       0       0       0       0       0
  7817 ;;      Locals:        14       0       0       0       0       0       0       0       0
  7818 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7819 ;;      Totals:        22       0       0       0       0       0       0       0       0
  7820 ;;Total ram usage:       22 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    2
  7823 ;; This function calls:
  7824 ;;		_UART_read
  7825 ;;		_UART_write
  7826 ;;		___lmul
  7827 ;;		___wmul
  7828 ;; This function is called by:
  7829 ;;		_setRtc
  7830 ;;		_asignarHorarios
  7831 ;;		_setTiempoIluminar
  7832 ;;		_asignarSetPoint
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text37
  7837  000012                     __ptext37:
  7838                           	opt callstack 0
  7839  000012                     _getValue:
  7840                           	opt callstack 26
  7841  000012                     
  7842                           ;./AUTOMATIZADOR.h: 569:     T_UBYTE datoIncorrecto = 0;
  7843  000012  0E00               	movlw	0
  7844  000014  6E15               	movwf	getValue@datoIncorrecto^0,c
  7845                           
  7846                           ;./AUTOMATIZADOR.h: 570:     T_ULONG dato = 0;
  7847  000016  0E00               	movlw	0
  7848  000018  6E1E               	movwf	getValue@dato^0,c
  7849  00001A  0E00               	movlw	0
  7850  00001C  6E1F               	movwf	(getValue@dato+1)^0,c
  7851  00001E  0E00               	movlw	0
  7852  000020  6E20               	movwf	(getValue@dato+2)^0,c
  7853  000022  0E00               	movlw	0
  7854  000024  6E21               	movwf	(getValue@dato+3)^0,c
  7855                           
  7856                           ;./AUTOMATIZADOR.h: 572:     switch (numCharacters) {
  7857  000026  EF9F  F002         	goto	l4372
  7858  00002A                     l4216:
  7859                           
  7860                           ;./AUTOMATIZADOR.h: 575:             Rx = UART_read();
  7861  00002A  EC73  F01A         	call	_UART_read	;wreg free
  7862  00002E  6E22               	movwf	getValue@Rx^0,c
  7863  000030                     
  7864                           ;./AUTOMATIZADOR.h: 577:             if (Rx >= 48 && Rx <= 57) {
  7865  000030  0E2F               	movlw	47
  7866  000032  6422               	cpfsgt	getValue@Rx^0,c
  7867  000034  EF1E  F000         	goto	u3551
  7868  000038  EF20  F000         	goto	u3550
  7869  00003C                     u3551:
  7870  00003C  EF31  F000         	goto	l4226
  7871  000040                     u3550:
  7872  000040  0E3A               	movlw	58
  7873  000042  6022               	cpfslt	getValue@Rx^0,c
  7874  000044  EF26  F000         	goto	u3561
  7875  000048  EF28  F000         	goto	u3560
  7876  00004C                     u3561:
  7877  00004C  EF31  F000         	goto	l4226
  7878  000050                     u3560:
  7879  000050                     
  7880                           ;./AUTOMATIZADOR.h: 578:                 Rx -= 48;
  7881  000050  0E30               	movlw	48
  7882  000052  5E22               	subwf	getValue@Rx^0,f,c
  7883  000054                     
  7884                           ;./AUTOMATIZADOR.h: 579:                 dato = Rx;
  7885  000054  5022               	movf	getValue@Rx^0,w,c
  7886  000056  6E1E               	movwf	getValue@dato^0,c
  7887  000058  6A1F               	clrf	(getValue@dato+1)^0,c
  7888  00005A  6A20               	clrf	(getValue@dato+2)^0,c
  7889  00005C  6A21               	clrf	(getValue@dato+3)^0,c
  7890                           
  7891                           ;./AUTOMATIZADOR.h: 580:             } else {
  7892  00005E  EFC1  F002         	goto	l4374
  7893  000062                     l4226:
  7894                           
  7895                           ;./AUTOMATIZADOR.h: 581:                 UART_write('@');
  7896  000062  0E40               	movlw	64
  7897  000064  EC29  F01D         	call	_UART_write
  7898  000068                     
  7899                           ;./AUTOMATIZADOR.h: 582:                 datoIncorrecto = 1;
  7900  000068  0E01               	movlw	1
  7901  00006A  6E15               	movwf	getValue@datoIncorrecto^0,c
  7902  00006C  EFC1  F002         	goto	l4374
  7903  000070                     l4230:
  7904                           
  7905                           ;./AUTOMATIZADOR.h: 588:             for (T_INT i = 0; i < 2; i++) {
  7906  000070  0E00               	movlw	0
  7907  000072  6E17               	movwf	(getValue@i+1)^0,c
  7908  000074  0E00               	movlw	0
  7909  000076  6E16               	movwf	getValue@i^0,c
  7910  000078                     l4236:
  7911                           
  7912                           ;./AUTOMATIZADOR.h: 590:                 Rx = UART_read();
  7913  000078  EC73  F01A         	call	_UART_read	;wreg free
  7914  00007C  6E22               	movwf	getValue@Rx^0,c
  7915  00007E                     
  7916                           ;./AUTOMATIZADOR.h: 592:                 if (Rx >= 48 && Rx <= 57) {
  7917  00007E  0E2F               	movlw	47
  7918  000080  6422               	cpfsgt	getValue@Rx^0,c
  7919  000082  EF45  F000         	goto	u3571
  7920  000086  EF47  F000         	goto	u3570
  7921  00008A                     u3571:
  7922  00008A  EF92  F000         	goto	l4254
  7923  00008E                     u3570:
  7924  00008E  0E3A               	movlw	58
  7925  000090  6022               	cpfslt	getValue@Rx^0,c
  7926  000092  EF4D  F000         	goto	u3581
  7927  000096  EF4F  F000         	goto	u3580
  7928  00009A                     u3581:
  7929  00009A  EF92  F000         	goto	l4254
  7930  00009E                     u3580:
  7931  00009E                     
  7932                           ;./AUTOMATIZADOR.h: 594:                     Rx -= 48;
  7933  00009E  0E30               	movlw	48
  7934  0000A0  5E22               	subwf	getValue@Rx^0,f,c
  7935                           
  7936                           ;./AUTOMATIZADOR.h: 596:                     switch (i) {
  7937  0000A2  EF7C  F000         	goto	l4252
  7938  0000A6                     l4244:
  7939                           
  7940                           ;./AUTOMATIZADOR.h: 598:                             dato = Rx;
  7941  0000A6  5022               	movf	getValue@Rx^0,w,c
  7942  0000A8  6E1E               	movwf	getValue@dato^0,c
  7943  0000AA  6A1F               	clrf	(getValue@dato+1)^0,c
  7944  0000AC  6A20               	clrf	(getValue@dato+2)^0,c
  7945  0000AE  6A21               	clrf	(getValue@dato+3)^0,c
  7946  0000B0                     
  7947                           ;./AUTOMATIZADOR.h: 599:                             dato *= 10;
  7948  0000B0  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  7949  0000B4  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  7950  0000B8  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  7951  0000BC  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  7952  0000C0  0E0A               	movlw	10
  7953  0000C2  6E05               	movwf	___lmul@multiplicand^0,c
  7954  0000C4  0E00               	movlw	0
  7955  0000C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7956  0000C8  0E00               	movlw	0
  7957  0000CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7958  0000CC  0E00               	movlw	0
  7959  0000CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7960  0000D0  EC80  F019         	call	___lmul	;wreg free
  7961  0000D4  C001  F01E         	movff	?___lmul,getValue@dato
  7962  0000D8  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  7963  0000DC  C003  F020         	movff	?___lmul+2,getValue@dato+2
  7964  0000E0  C004  F021         	movff	?___lmul+3,getValue@dato+3
  7965                           
  7966                           ;./AUTOMATIZADOR.h: 600:                             break;
  7967  0000E4  EF99  F000         	goto	l4258
  7968  0000E8                     l4248:
  7969                           
  7970                           ;./AUTOMATIZADOR.h: 603:                             dato += Rx;
  7971  0000E8  5022               	movf	getValue@Rx^0,w,c
  7972  0000EA  261E               	addwf	getValue@dato^0,f,c
  7973  0000EC  0E00               	movlw	0
  7974  0000EE  221F               	addwfc	(getValue@dato+1)^0,f,c
  7975  0000F0  2220               	addwfc	(getValue@dato+2)^0,f,c
  7976  0000F2  2221               	addwfc	(getValue@dato+3)^0,f,c
  7977                           
  7978                           ;./AUTOMATIZADOR.h: 604:                             break;
  7979  0000F4  EF99  F000         	goto	l4258
  7980  0000F8                     l4252:
  7981  0000F8  C016  F011         	movff	getValue@i,??_getValue
  7982  0000FC  C017  F012         	movff	getValue@i+1,??_getValue+1
  7983                           
  7984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7985                           ; Switch size 1, requested type "simple"
  7986                           ; Number of cases is 1, Range of values is 0 to 0
  7987                           ; switch strategies available:
  7988                           ; Name         Instructions Cycles
  7989                           ; simple_byte            4     3 (average)
  7990                           ;	Chosen strategy is simple_byte
  7991  000100  5012               	movf	(??_getValue+1)^0,w,c
  7992  000102  0A00               	xorlw	0	; case 0
  7993  000104  B4D8               	btfsc	status,2,c
  7994  000106  EF87  F000         	goto	l5564
  7995  00010A  EF99  F000         	goto	l4258
  7996  00010E                     l5564:
  7997                           
  7998                           ; Switch size 1, requested type "simple"
  7999                           ; Number of cases is 2, Range of values is 0 to 1
  8000                           ; switch strategies available:
  8001                           ; Name         Instructions Cycles
  8002                           ; simple_byte            7     4 (average)
  8003                           ;	Chosen strategy is simple_byte
  8004  00010E  5011               	movf	??_getValue^0,w,c
  8005  000110  0A00               	xorlw	0	; case 0
  8006  000112  B4D8               	btfsc	status,2,c
  8007  000114  EF53  F000         	goto	l4244
  8008  000118  0A01               	xorlw	1	; case 1
  8009  00011A  B4D8               	btfsc	status,2,c
  8010  00011C  EF74  F000         	goto	l4248
  8011  000120  EF99  F000         	goto	l4258
  8012  000124                     l4254:
  8013                           
  8014                           ;./AUTOMATIZADOR.h: 612:                     datoIncorrecto = 1;
  8015  000124  0E01               	movlw	1
  8016  000126  6E15               	movwf	getValue@datoIncorrecto^0,c
  8017  000128                     
  8018                           ;./AUTOMATIZADOR.h: 613:                     UART_write('@');
  8019  000128  0E40               	movlw	64
  8020  00012A  EC29  F01D         	call	_UART_write
  8021                           
  8022                           ;./AUTOMATIZADOR.h: 614:                     break;
  8023  00012E  EFC1  F002         	goto	l4374
  8024  000132                     l4258:
  8025                           
  8026                           ;./AUTOMATIZADOR.h: 616:             }
  8027  000132  4A16               	infsnz	getValue@i^0,f,c
  8028  000134  2A17               	incf	(getValue@i+1)^0,f,c
  8029  000136  BE17               	btfsc	(getValue@i+1)^0,7,c
  8030  000138  EFA7  F000         	goto	u3591
  8031  00013C  5017               	movf	(getValue@i+1)^0,w,c
  8032  00013E  E109               	bnz	u3590
  8033  000140  0E02               	movlw	2
  8034  000142  5C16               	subwf	getValue@i^0,w,c
  8035  000144  A0D8               	btfss	status,0,c
  8036  000146  EFA7  F000         	goto	u3591
  8037  00014A  EFA9  F000         	goto	u3590
  8038  00014E                     u3591:
  8039  00014E  EF3C  F000         	goto	l4236
  8040  000152                     u3590:
  8041  000152  EFC1  F002         	goto	l4374
  8042  000156                     l4262:
  8043                           
  8044                           ;./AUTOMATIZADOR.h: 620:             for (T_INT i = 0; i < 3; i++) {
  8045  000156  0E00               	movlw	0
  8046  000158  6E19               	movwf	(getValue@i_701+1)^0,c
  8047  00015A  0E00               	movlw	0
  8048  00015C  6E18               	movwf	getValue@i_701^0,c
  8049  00015E                     l4268:
  8050                           
  8051                           ;./AUTOMATIZADOR.h: 622:                 Rx = UART_read();
  8052  00015E  EC73  F01A         	call	_UART_read	;wreg free
  8053  000162  6E22               	movwf	getValue@Rx^0,c
  8054  000164                     
  8055                           ;./AUTOMATIZADOR.h: 624:                 if (Rx >= 48 && Rx <= 57) {
  8056  000164  0E2F               	movlw	47
  8057  000166  6422               	cpfsgt	getValue@Rx^0,c
  8058  000168  EFB8  F000         	goto	u3601
  8059  00016C  EFBA  F000         	goto	u3600
  8060  000170                     u3601:
  8061  000170  EF1E  F001         	goto	l4288
  8062  000174                     u3600:
  8063  000174  0E3A               	movlw	58
  8064  000176  6022               	cpfslt	getValue@Rx^0,c
  8065  000178  EFC0  F000         	goto	u3611
  8066  00017C  EFC2  F000         	goto	u3610
  8067  000180                     u3611:
  8068  000180  EF1E  F001         	goto	l4288
  8069  000184                     u3610:
  8070  000184                     
  8071                           ;./AUTOMATIZADOR.h: 626:                     Rx -= 48;
  8072  000184  0E30               	movlw	48
  8073  000186  5E22               	subwf	getValue@Rx^0,f,c
  8074                           
  8075                           ;./AUTOMATIZADOR.h: 628:                     switch (i) {
  8076  000188  EF04  F001         	goto	l4286
  8077  00018C                     l4276:
  8078                           
  8079                           ;./AUTOMATIZADOR.h: 630:                             dato = Rx;
  8080  00018C  5022               	movf	getValue@Rx^0,w,c
  8081  00018E  6E1E               	movwf	getValue@dato^0,c
  8082  000190  6A1F               	clrf	(getValue@dato+1)^0,c
  8083  000192  6A20               	clrf	(getValue@dato+2)^0,c
  8084  000194  6A21               	clrf	(getValue@dato+3)^0,c
  8085  000196                     
  8086                           ;./AUTOMATIZADOR.h: 631:                             dato *= 100;
  8087  000196  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  8088  00019A  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  8089  00019E  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  8090  0001A2  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  8091  0001A6  0E64               	movlw	100
  8092  0001A8  6E05               	movwf	___lmul@multiplicand^0,c
  8093  0001AA  0E00               	movlw	0
  8094  0001AC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  8095  0001AE  0E00               	movlw	0
  8096  0001B0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  8097  0001B2  0E00               	movlw	0
  8098  0001B4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  8099  0001B6  EC80  F019         	call	___lmul	;wreg free
  8100  0001BA  C001  F01E         	movff	?___lmul,getValue@dato
  8101  0001BE  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  8102  0001C2  C003  F020         	movff	?___lmul+2,getValue@dato+2
  8103  0001C6  C004  F021         	movff	?___lmul+3,getValue@dato+3
  8104                           
  8105                           ;./AUTOMATIZADOR.h: 632:                             break;
  8106  0001CA  EF25  F001         	goto	l4292
  8107  0001CE                     l4280:
  8108                           
  8109                           ;./AUTOMATIZADOR.h: 635:                             dato += (Rx * 10);
  8110  0001CE  5022               	movf	getValue@Rx^0,w,c
  8111  0001D0  0D0A               	mullw	10
  8112  0001D2  CFF3 F011          	movff	prodl,??_getValue
  8113  0001D6  CFF4 F012          	movff	prodh,??_getValue+1
  8114  0001DA  0E00               	movlw	0
  8115  0001DC  BE12               	btfsc	(??_getValue+1)^0,7,c
  8116  0001DE  0EFF               	movlw	255
  8117  0001E0  6E13               	movwf	(??_getValue+2)^0,c
  8118  0001E2  6E14               	movwf	(??_getValue+3)^0,c
  8119  0001E4  5011               	movf	??_getValue^0,w,c
  8120  0001E6  261E               	addwf	getValue@dato^0,f,c
  8121  0001E8  5012               	movf	(??_getValue+1)^0,w,c
  8122  0001EA  221F               	addwfc	(getValue@dato+1)^0,f,c
  8123  0001EC  5013               	movf	(??_getValue+2)^0,w,c
  8124  0001EE  2220               	addwfc	(getValue@dato+2)^0,f,c
  8125  0001F0  5014               	movf	(??_getValue+3)^0,w,c
  8126  0001F2  2221               	addwfc	(getValue@dato+3)^0,f,c
  8127                           
  8128                           ;./AUTOMATIZADOR.h: 636:                             break;
  8129  0001F4  EF25  F001         	goto	l4292
  8130  0001F8                     l4282:
  8131                           
  8132                           ;./AUTOMATIZADOR.h: 639:                             dato += Rx;
  8133  0001F8  5022               	movf	getValue@Rx^0,w,c
  8134  0001FA  261E               	addwf	getValue@dato^0,f,c
  8135  0001FC  0E00               	movlw	0
  8136  0001FE  221F               	addwfc	(getValue@dato+1)^0,f,c
  8137  000200  2220               	addwfc	(getValue@dato+2)^0,f,c
  8138  000202  2221               	addwfc	(getValue@dato+3)^0,f,c
  8139                           
  8140                           ;./AUTOMATIZADOR.h: 640:                             break;
  8141  000204  EF25  F001         	goto	l4292
  8142  000208                     l4286:
  8143  000208  C018  F011         	movff	getValue@i_701,??_getValue
  8144  00020C  C019  F012         	movff	getValue@i_701+1,??_getValue+1
  8145                           
  8146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8147                           ; Switch size 1, requested type "simple"
  8148                           ; Number of cases is 1, Range of values is 0 to 0
  8149                           ; switch strategies available:
  8150                           ; Name         Instructions Cycles
  8151                           ; simple_byte            4     3 (average)
  8152                           ;	Chosen strategy is simple_byte
  8153  000210  5012               	movf	(??_getValue+1)^0,w,c
  8154  000212  0A00               	xorlw	0	; case 0
  8155  000214  B4D8               	btfsc	status,2,c
  8156  000216  EF0F  F001         	goto	l5566
  8157  00021A  EF25  F001         	goto	l4292
  8158  00021E                     l5566:
  8159                           
  8160                           ; Switch size 1, requested type "simple"
  8161                           ; Number of cases is 3, Range of values is 0 to 2
  8162                           ; switch strategies available:
  8163                           ; Name         Instructions Cycles
  8164                           ; simple_byte           10     6 (average)
  8165                           ;	Chosen strategy is simple_byte
  8166  00021E  5011               	movf	??_getValue^0,w,c
  8167  000220  0A00               	xorlw	0	; case 0
  8168  000222  B4D8               	btfsc	status,2,c
  8169  000224  EFC6  F000         	goto	l4276
  8170  000228  0A01               	xorlw	1	; case 1
  8171  00022A  B4D8               	btfsc	status,2,c
  8172  00022C  EFE7  F000         	goto	l4280
  8173  000230  0A03               	xorlw	3	; case 2
  8174  000232  B4D8               	btfsc	status,2,c
  8175  000234  EFFC  F000         	goto	l4282
  8176  000238  EF25  F001         	goto	l4292
  8177  00023C                     l4288:
  8178                           
  8179                           ;./AUTOMATIZADOR.h: 648:                     datoIncorrecto = 1;
  8180  00023C  0E01               	movlw	1
  8181  00023E  6E15               	movwf	getValue@datoIncorrecto^0,c
  8182  000240                     
  8183                           ;./AUTOMATIZADOR.h: 649:                     UART_write('@');
  8184  000240  0E40               	movlw	64
  8185  000242  EC29  F01D         	call	_UART_write
  8186                           
  8187                           ;./AUTOMATIZADOR.h: 650:                     break;
  8188  000246  EFC1  F002         	goto	l4374
  8189  00024A                     l4292:
  8190                           
  8191                           ;./AUTOMATIZADOR.h: 652:             }
  8192  00024A  4A18               	infsnz	getValue@i_701^0,f,c
  8193  00024C  2A19               	incf	(getValue@i_701+1)^0,f,c
  8194  00024E  BE19               	btfsc	(getValue@i_701+1)^0,7,c
  8195  000250  EF33  F001         	goto	u3621
  8196  000254  5019               	movf	(getValue@i_701+1)^0,w,c
  8197  000256  E109               	bnz	u3620
  8198  000258  0E03               	movlw	3
  8199  00025A  5C18               	subwf	getValue@i_701^0,w,c
  8200  00025C  A0D8               	btfss	status,0,c
  8201  00025E  EF33  F001         	goto	u3621
  8202  000262  EF35  F001         	goto	u3620
  8203  000266                     u3621:
  8204  000266  EFAF  F000         	goto	l4268
  8205  00026A                     u3620:
  8206  00026A  EFC1  F002         	goto	l4374
  8207  00026E                     l4296:
  8208                           
  8209                           ;./AUTOMATIZADOR.h: 656:             for (T_INT i = 0; i < 4; i++) {
  8210  00026E  0E00               	movlw	0
  8211  000270  6E1B               	movwf	(getValue@i_702+1)^0,c
  8212  000272  0E00               	movlw	0
  8213  000274  6E1A               	movwf	getValue@i_702^0,c
  8214  000276                     l4302:
  8215                           
  8216                           ;./AUTOMATIZADOR.h: 658:                 Rx = UART_read();
  8217  000276  EC73  F01A         	call	_UART_read	;wreg free
  8218  00027A  6E22               	movwf	getValue@Rx^0,c
  8219  00027C                     
  8220                           ;./AUTOMATIZADOR.h: 660:                 if (Rx >= 48 && Rx <= 57) {
  8221  00027C  0E2F               	movlw	47
  8222  00027E  6422               	cpfsgt	getValue@Rx^0,c
  8223  000280  EF44  F001         	goto	u3631
  8224  000284  EF46  F001         	goto	u3630
  8225  000288                     u3631:
  8226  000288  EFC3  F001         	goto	l4324
  8227  00028C                     u3630:
  8228  00028C  0E3A               	movlw	58
  8229  00028E  6022               	cpfslt	getValue@Rx^0,c
  8230  000290  EF4C  F001         	goto	u3641
  8231  000294  EF4E  F001         	goto	u3640
  8232  000298                     u3641:
  8233  000298  EFC3  F001         	goto	l4324
  8234  00029C                     u3640:
  8235  00029C                     
  8236                           ;./AUTOMATIZADOR.h: 662:                     Rx -= 48;
  8237  00029C  0E30               	movlw	48
  8238  00029E  5E22               	subwf	getValue@Rx^0,f,c
  8239                           
  8240                           ;./AUTOMATIZADOR.h: 664:                     switch (i) {
  8241  0002A0  EFA5  F001         	goto	l4322
  8242  0002A4                     l4310:
  8243                           
  8244                           ;./AUTOMATIZADOR.h: 666:                             dato = Rx;
  8245  0002A4  5022               	movf	getValue@Rx^0,w,c
  8246  0002A6  6E1E               	movwf	getValue@dato^0,c
  8247  0002A8  6A1F               	clrf	(getValue@dato+1)^0,c
  8248  0002AA  6A20               	clrf	(getValue@dato+2)^0,c
  8249  0002AC  6A21               	clrf	(getValue@dato+3)^0,c
  8250  0002AE                     
  8251                           ;./AUTOMATIZADOR.h: 667:                             dato *= 1000;
  8252  0002AE  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  8253  0002B2  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  8254  0002B6  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  8255  0002BA  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  8256  0002BE  0EE8               	movlw	232
  8257  0002C0  6E05               	movwf	___lmul@multiplicand^0,c
  8258  0002C2  0E03               	movlw	3
  8259  0002C4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  8260  0002C6  0E00               	movlw	0
  8261  0002C8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  8262  0002CA  0E00               	movlw	0
  8263  0002CC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  8264  0002CE  EC80  F019         	call	___lmul	;wreg free
  8265  0002D2  C001  F01E         	movff	?___lmul,getValue@dato
  8266  0002D6  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  8267  0002DA  C003  F020         	movff	?___lmul+2,getValue@dato+2
  8268  0002DE  C004  F021         	movff	?___lmul+3,getValue@dato+3
  8269                           
  8270                           ;./AUTOMATIZADOR.h: 668:                             break;
  8271  0002E2  EFCA  F001         	goto	l4328
  8272  0002E6                     l4314:
  8273                           
  8274                           ;./AUTOMATIZADOR.h: 671:                             dato += (Rx * 100);
  8275  0002E6  5022               	movf	getValue@Rx^0,w,c
  8276  0002E8  0D64               	mullw	100
  8277  0002EA  CFF3 F011          	movff	prodl,??_getValue
  8278  0002EE  CFF4 F012          	movff	prodh,??_getValue+1
  8279  0002F2  0E00               	movlw	0
  8280  0002F4  BE12               	btfsc	(??_getValue+1)^0,7,c
  8281  0002F6  0EFF               	movlw	255
  8282  0002F8  6E13               	movwf	(??_getValue+2)^0,c
  8283  0002FA  6E14               	movwf	(??_getValue+3)^0,c
  8284  0002FC  5011               	movf	??_getValue^0,w,c
  8285  0002FE  261E               	addwf	getValue@dato^0,f,c
  8286  000300  5012               	movf	(??_getValue+1)^0,w,c
  8287  000302  221F               	addwfc	(getValue@dato+1)^0,f,c
  8288  000304  5013               	movf	(??_getValue+2)^0,w,c
  8289  000306  2220               	addwfc	(getValue@dato+2)^0,f,c
  8290  000308  5014               	movf	(??_getValue+3)^0,w,c
  8291  00030A  2221               	addwfc	(getValue@dato+3)^0,f,c
  8292                           
  8293                           ;./AUTOMATIZADOR.h: 672:                             break;
  8294  00030C  EFCA  F001         	goto	l4328
  8295  000310                     l4316:
  8296                           
  8297                           ;./AUTOMATIZADOR.h: 675:                             dato += (Rx * 10);
  8298  000310  5022               	movf	getValue@Rx^0,w,c
  8299  000312  0D0A               	mullw	10
  8300  000314  CFF3 F011          	movff	prodl,??_getValue
  8301  000318  CFF4 F012          	movff	prodh,??_getValue+1
  8302  00031C  0E00               	movlw	0
  8303  00031E  BE12               	btfsc	(??_getValue+1)^0,7,c
  8304  000320  0EFF               	movlw	255
  8305  000322  6E13               	movwf	(??_getValue+2)^0,c
  8306  000324  6E14               	movwf	(??_getValue+3)^0,c
  8307  000326  5011               	movf	??_getValue^0,w,c
  8308  000328  261E               	addwf	getValue@dato^0,f,c
  8309  00032A  5012               	movf	(??_getValue+1)^0,w,c
  8310  00032C  221F               	addwfc	(getValue@dato+1)^0,f,c
  8311  00032E  5013               	movf	(??_getValue+2)^0,w,c
  8312  000330  2220               	addwfc	(getValue@dato+2)^0,f,c
  8313  000332  5014               	movf	(??_getValue+3)^0,w,c
  8314  000334  2221               	addwfc	(getValue@dato+3)^0,f,c
  8315                           
  8316                           ;./AUTOMATIZADOR.h: 676:                             break;
  8317  000336  EFCA  F001         	goto	l4328
  8318  00033A                     l4318:
  8319                           
  8320                           ;./AUTOMATIZADOR.h: 679:                             dato += Rx;
  8321  00033A  5022               	movf	getValue@Rx^0,w,c
  8322  00033C  261E               	addwf	getValue@dato^0,f,c
  8323  00033E  0E00               	movlw	0
  8324  000340  221F               	addwfc	(getValue@dato+1)^0,f,c
  8325  000342  2220               	addwfc	(getValue@dato+2)^0,f,c
  8326  000344  2221               	addwfc	(getValue@dato+3)^0,f,c
  8327                           
  8328                           ;./AUTOMATIZADOR.h: 680:                             break;
  8329  000346  EFCA  F001         	goto	l4328
  8330  00034A                     l4322:
  8331  00034A  C01A  F011         	movff	getValue@i_702,??_getValue
  8332  00034E  C01B  F012         	movff	getValue@i_702+1,??_getValue+1
  8333                           
  8334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8335                           ; Switch size 1, requested type "simple"
  8336                           ; Number of cases is 1, Range of values is 0 to 0
  8337                           ; switch strategies available:
  8338                           ; Name         Instructions Cycles
  8339                           ; simple_byte            4     3 (average)
  8340                           ;	Chosen strategy is simple_byte
  8341  000352  5012               	movf	(??_getValue+1)^0,w,c
  8342  000354  0A00               	xorlw	0	; case 0
  8343  000356  B4D8               	btfsc	status,2,c
  8344  000358  EFB0  F001         	goto	l5568
  8345  00035C  EFCA  F001         	goto	l4328
  8346  000360                     l5568:
  8347                           
  8348                           ; Switch size 1, requested type "simple"
  8349                           ; Number of cases is 4, Range of values is 0 to 3
  8350                           ; switch strategies available:
  8351                           ; Name         Instructions Cycles
  8352                           ; simple_byte           13     7 (average)
  8353                           ;	Chosen strategy is simple_byte
  8354  000360  5011               	movf	??_getValue^0,w,c
  8355  000362  0A00               	xorlw	0	; case 0
  8356  000364  B4D8               	btfsc	status,2,c
  8357  000366  EF52  F001         	goto	l4310
  8358  00036A  0A01               	xorlw	1	; case 1
  8359  00036C  B4D8               	btfsc	status,2,c
  8360  00036E  EF73  F001         	goto	l4314
  8361  000372  0A03               	xorlw	3	; case 2
  8362  000374  B4D8               	btfsc	status,2,c
  8363  000376  EF88  F001         	goto	l4316
  8364  00037A  0A01               	xorlw	1	; case 3
  8365  00037C  B4D8               	btfsc	status,2,c
  8366  00037E  EF9D  F001         	goto	l4318
  8367  000382  EFCA  F001         	goto	l4328
  8368  000386                     l4324:
  8369                           
  8370                           ;./AUTOMATIZADOR.h: 688:                     datoIncorrecto = 1;
  8371  000386  0E01               	movlw	1
  8372  000388  6E15               	movwf	getValue@datoIncorrecto^0,c
  8373  00038A                     
  8374                           ;./AUTOMATIZADOR.h: 689:                     UART_write('@');
  8375  00038A  0E40               	movlw	64
  8376  00038C  EC29  F01D         	call	_UART_write
  8377                           
  8378                           ;./AUTOMATIZADOR.h: 690:                     break;
  8379  000390  EFC1  F002         	goto	l4374
  8380  000394                     l4328:
  8381                           
  8382                           ;./AUTOMATIZADOR.h: 692:             }
  8383  000394  4A1A               	infsnz	getValue@i_702^0,f,c
  8384  000396  2A1B               	incf	(getValue@i_702+1)^0,f,c
  8385  000398  BE1B               	btfsc	(getValue@i_702+1)^0,7,c
  8386  00039A  EFD8  F001         	goto	u3651
  8387  00039E  501B               	movf	(getValue@i_702+1)^0,w,c
  8388  0003A0  E109               	bnz	u3650
  8389  0003A2  0E04               	movlw	4
  8390  0003A4  5C1A               	subwf	getValue@i_702^0,w,c
  8391  0003A6  A0D8               	btfss	status,0,c
  8392  0003A8  EFD8  F001         	goto	u3651
  8393  0003AC  EFDA  F001         	goto	u3650
  8394  0003B0                     u3651:
  8395  0003B0  EF3B  F001         	goto	l4302
  8396  0003B4                     u3650:
  8397  0003B4  EFC1  F002         	goto	l4374
  8398  0003B8                     l4332:
  8399                           
  8400                           ;./AUTOMATIZADOR.h: 696:             for (T_INT i = 0; i < 5; i++) {
  8401  0003B8  0E00               	movlw	0
  8402  0003BA  6E1D               	movwf	(getValue@i_703+1)^0,c
  8403  0003BC  0E00               	movlw	0
  8404  0003BE  6E1C               	movwf	getValue@i_703^0,c
  8405  0003C0                     l4338:
  8406                           
  8407                           ;./AUTOMATIZADOR.h: 698:                 Rx = UART_read();
  8408  0003C0  EC73  F01A         	call	_UART_read	;wreg free
  8409  0003C4  6E22               	movwf	getValue@Rx^0,c
  8410  0003C6                     
  8411                           ;./AUTOMATIZADOR.h: 700:                 if (Rx >= 48 && Rx <= 57) {
  8412  0003C6  0E2F               	movlw	47
  8413  0003C8  6422               	cpfsgt	getValue@Rx^0,c
  8414  0003CA  EFE9  F001         	goto	u3661
  8415  0003CE  EFEB  F001         	goto	u3660
  8416  0003D2                     u3661:
  8417  0003D2  EF86  F002         	goto	l4362
  8418  0003D6                     u3660:
  8419  0003D6  0E3A               	movlw	58
  8420  0003D8  6022               	cpfslt	getValue@Rx^0,c
  8421  0003DA  EFF1  F001         	goto	u3671
  8422  0003DE  EFF3  F001         	goto	u3670
  8423  0003E2                     u3671:
  8424  0003E2  EF86  F002         	goto	l4362
  8425  0003E6                     u3670:
  8426  0003E6                     
  8427                           ;./AUTOMATIZADOR.h: 702:                     Rx -= 48;
  8428  0003E6  0E30               	movlw	48
  8429  0003E8  5E22               	subwf	getValue@Rx^0,f,c
  8430                           
  8431                           ;./AUTOMATIZADOR.h: 704:                     switch (i) {
  8432  0003EA  EF64  F002         	goto	l4360
  8433  0003EE                     l4346:
  8434                           
  8435                           ;./AUTOMATIZADOR.h: 706:                             dato = Rx;
  8436  0003EE  5022               	movf	getValue@Rx^0,w,c
  8437  0003F0  6E1E               	movwf	getValue@dato^0,c
  8438  0003F2  6A1F               	clrf	(getValue@dato+1)^0,c
  8439  0003F4  6A20               	clrf	(getValue@dato+2)^0,c
  8440  0003F6  6A21               	clrf	(getValue@dato+3)^0,c
  8441  0003F8                     
  8442                           ;./AUTOMATIZADOR.h: 707:                             dato *= 10000;
  8443  0003F8  C01E  F001         	movff	getValue@dato,___lmul@multiplier
  8444  0003FC  C01F  F002         	movff	getValue@dato+1,___lmul@multiplier+1
  8445  000400  C020  F003         	movff	getValue@dato+2,___lmul@multiplier+2
  8446  000404  C021  F004         	movff	getValue@dato+3,___lmul@multiplier+3
  8447  000408  0E10               	movlw	16
  8448  00040A  6E05               	movwf	___lmul@multiplicand^0,c
  8449  00040C  0E27               	movlw	39
  8450  00040E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  8451  000410  0E00               	movlw	0
  8452  000412  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  8453  000414  0E00               	movlw	0
  8454  000416  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  8455  000418  EC80  F019         	call	___lmul	;wreg free
  8456  00041C  C001  F01E         	movff	?___lmul,getValue@dato
  8457  000420  C002  F01F         	movff	?___lmul+1,getValue@dato+1
  8458  000424  C003  F020         	movff	?___lmul+2,getValue@dato+2
  8459  000428  C004  F021         	movff	?___lmul+3,getValue@dato+3
  8460                           
  8461                           ;./AUTOMATIZADOR.h: 708:                             break;
  8462  00042C  EF8D  F002         	goto	l4366
  8463  000430                     l4350:
  8464                           
  8465                           ;./AUTOMATIZADOR.h: 711:                             dato += (Rx * 1000);
  8466  000430  C022  F001         	movff	getValue@Rx,___wmul@multiplier
  8467  000434  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8468  000436  0E03               	movlw	3
  8469  000438  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8470  00043A  0EE8               	movlw	232
  8471  00043C  6E03               	movwf	___wmul@multiplicand^0,c
  8472  00043E  ECCB  F01C         	call	___wmul	;wreg free
  8473  000442  C001  F011         	movff	?___wmul,??_getValue
  8474  000446  C002  F012         	movff	?___wmul+1,??_getValue+1
  8475  00044A  0E00               	movlw	0
  8476  00044C  BE12               	btfsc	(??_getValue+1)^0,7,c
  8477  00044E  0EFF               	movlw	255
  8478  000450  6E13               	movwf	(??_getValue+2)^0,c
  8479  000452  6E14               	movwf	(??_getValue+3)^0,c
  8480  000454  5011               	movf	??_getValue^0,w,c
  8481  000456  261E               	addwf	getValue@dato^0,f,c
  8482  000458  5012               	movf	(??_getValue+1)^0,w,c
  8483  00045A  221F               	addwfc	(getValue@dato+1)^0,f,c
  8484  00045C  5013               	movf	(??_getValue+2)^0,w,c
  8485  00045E  2220               	addwfc	(getValue@dato+2)^0,f,c
  8486  000460  5014               	movf	(??_getValue+3)^0,w,c
  8487  000462  2221               	addwfc	(getValue@dato+3)^0,f,c
  8488                           
  8489                           ;./AUTOMATIZADOR.h: 712:                             break;
  8490  000464  EF8D  F002         	goto	l4366
  8491  000468                     l4352:
  8492                           
  8493                           ;./AUTOMATIZADOR.h: 715:                             dato += (Rx * 100);
  8494  000468  5022               	movf	getValue@Rx^0,w,c
  8495  00046A  0D64               	mullw	100
  8496  00046C  CFF3 F011          	movff	prodl,??_getValue
  8497  000470  CFF4 F012          	movff	prodh,??_getValue+1
  8498  000474  0E00               	movlw	0
  8499  000476  BE12               	btfsc	(??_getValue+1)^0,7,c
  8500  000478  0EFF               	movlw	255
  8501  00047A  6E13               	movwf	(??_getValue+2)^0,c
  8502  00047C  6E14               	movwf	(??_getValue+3)^0,c
  8503  00047E  5011               	movf	??_getValue^0,w,c
  8504  000480  261E               	addwf	getValue@dato^0,f,c
  8505  000482  5012               	movf	(??_getValue+1)^0,w,c
  8506  000484  221F               	addwfc	(getValue@dato+1)^0,f,c
  8507  000486  5013               	movf	(??_getValue+2)^0,w,c
  8508  000488  2220               	addwfc	(getValue@dato+2)^0,f,c
  8509  00048A  5014               	movf	(??_getValue+3)^0,w,c
  8510  00048C  2221               	addwfc	(getValue@dato+3)^0,f,c
  8511                           
  8512                           ;./AUTOMATIZADOR.h: 716:                             break;
  8513  00048E  EF8D  F002         	goto	l4366
  8514  000492                     l4354:
  8515                           
  8516                           ;./AUTOMATIZADOR.h: 719:                             dato += (Rx * 10);
  8517  000492  5022               	movf	getValue@Rx^0,w,c
  8518  000494  0D0A               	mullw	10
  8519  000496  CFF3 F011          	movff	prodl,??_getValue
  8520  00049A  CFF4 F012          	movff	prodh,??_getValue+1
  8521  00049E  0E00               	movlw	0
  8522  0004A0  BE12               	btfsc	(??_getValue+1)^0,7,c
  8523  0004A2  0EFF               	movlw	255
  8524  0004A4  6E13               	movwf	(??_getValue+2)^0,c
  8525  0004A6  6E14               	movwf	(??_getValue+3)^0,c
  8526  0004A8  5011               	movf	??_getValue^0,w,c
  8527  0004AA  261E               	addwf	getValue@dato^0,f,c
  8528  0004AC  5012               	movf	(??_getValue+1)^0,w,c
  8529  0004AE  221F               	addwfc	(getValue@dato+1)^0,f,c
  8530  0004B0  5013               	movf	(??_getValue+2)^0,w,c
  8531  0004B2  2220               	addwfc	(getValue@dato+2)^0,f,c
  8532  0004B4  5014               	movf	(??_getValue+3)^0,w,c
  8533  0004B6  2221               	addwfc	(getValue@dato+3)^0,f,c
  8534  0004B8                     l4356:
  8535                           
  8536                           ;./AUTOMATIZADOR.h: 722:                             dato += Rx;
  8537  0004B8  5022               	movf	getValue@Rx^0,w,c
  8538  0004BA  261E               	addwf	getValue@dato^0,f,c
  8539  0004BC  0E00               	movlw	0
  8540  0004BE  221F               	addwfc	(getValue@dato+1)^0,f,c
  8541  0004C0  2220               	addwfc	(getValue@dato+2)^0,f,c
  8542  0004C2  2221               	addwfc	(getValue@dato+3)^0,f,c
  8543                           
  8544                           ;./AUTOMATIZADOR.h: 723:                             break;
  8545  0004C4  EF8D  F002         	goto	l4366
  8546  0004C8                     l4360:
  8547  0004C8  C01C  F011         	movff	getValue@i_703,??_getValue
  8548  0004CC  C01D  F012         	movff	getValue@i_703+1,??_getValue+1
  8549                           
  8550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8551                           ; Switch size 1, requested type "simple"
  8552                           ; Number of cases is 1, Range of values is 0 to 0
  8553                           ; switch strategies available:
  8554                           ; Name         Instructions Cycles
  8555                           ; simple_byte            4     3 (average)
  8556                           ;	Chosen strategy is simple_byte
  8557  0004D0  5012               	movf	(??_getValue+1)^0,w,c
  8558  0004D2  0A00               	xorlw	0	; case 0
  8559  0004D4  B4D8               	btfsc	status,2,c
  8560  0004D6  EF6F  F002         	goto	l5570
  8561  0004DA  EF8D  F002         	goto	l4366
  8562  0004DE                     l5570:
  8563                           
  8564                           ; Switch size 1, requested type "simple"
  8565                           ; Number of cases is 5, Range of values is 0 to 4
  8566                           ; switch strategies available:
  8567                           ; Name         Instructions Cycles
  8568                           ; simple_byte           16     9 (average)
  8569                           ;	Chosen strategy is simple_byte
  8570  0004DE  5011               	movf	??_getValue^0,w,c
  8571  0004E0  0A00               	xorlw	0	; case 0
  8572  0004E2  B4D8               	btfsc	status,2,c
  8573  0004E4  EFF7  F001         	goto	l4346
  8574  0004E8  0A01               	xorlw	1	; case 1
  8575  0004EA  B4D8               	btfsc	status,2,c
  8576  0004EC  EF18  F002         	goto	l4350
  8577  0004F0  0A03               	xorlw	3	; case 2
  8578  0004F2  B4D8               	btfsc	status,2,c
  8579  0004F4  EF34  F002         	goto	l4352
  8580  0004F8  0A01               	xorlw	1	; case 3
  8581  0004FA  B4D8               	btfsc	status,2,c
  8582  0004FC  EF49  F002         	goto	l4354
  8583  000500  0A07               	xorlw	7	; case 4
  8584  000502  B4D8               	btfsc	status,2,c
  8585  000504  EF5C  F002         	goto	l4356
  8586  000508  EF8D  F002         	goto	l4366
  8587  00050C                     l4362:
  8588                           
  8589                           ;./AUTOMATIZADOR.h: 731:                     datoIncorrecto = 1;
  8590  00050C  0E01               	movlw	1
  8591  00050E  6E15               	movwf	getValue@datoIncorrecto^0,c
  8592  000510                     
  8593                           ;./AUTOMATIZADOR.h: 732:                     UART_write('@');
  8594  000510  0E40               	movlw	64
  8595  000512  EC29  F01D         	call	_UART_write
  8596                           
  8597                           ;./AUTOMATIZADOR.h: 733:                     break;
  8598  000516  EFC1  F002         	goto	l4374
  8599  00051A                     l4366:
  8600                           
  8601                           ;./AUTOMATIZADOR.h: 735:             }
  8602  00051A  4A1C               	infsnz	getValue@i_703^0,f,c
  8603  00051C  2A1D               	incf	(getValue@i_703+1)^0,f,c
  8604  00051E  BE1D               	btfsc	(getValue@i_703+1)^0,7,c
  8605  000520  EF9B  F002         	goto	u3681
  8606  000524  501D               	movf	(getValue@i_703+1)^0,w,c
  8607  000526  E109               	bnz	u3680
  8608  000528  0E05               	movlw	5
  8609  00052A  5C1C               	subwf	getValue@i_703^0,w,c
  8610  00052C  A0D8               	btfss	status,0,c
  8611  00052E  EF9B  F002         	goto	u3681
  8612  000532  EF9D  F002         	goto	u3680
  8613  000536                     u3681:
  8614  000536  EFE0  F001         	goto	l4338
  8615  00053A                     u3680:
  8616  00053A  EFC1  F002         	goto	l4374
  8617  00053E                     l4372:
  8618  00053E  C00D  F011         	movff	getValue@numCharacters,??_getValue
  8619  000542  C00E  F012         	movff	getValue@numCharacters+1,??_getValue+1
  8620                           
  8621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8622                           ; Switch size 1, requested type "simple"
  8623                           ; Number of cases is 1, Range of values is 0 to 0
  8624                           ; switch strategies available:
  8625                           ; Name         Instructions Cycles
  8626                           ; simple_byte            4     3 (average)
  8627                           ;	Chosen strategy is simple_byte
  8628  000546  5012               	movf	(??_getValue+1)^0,w,c
  8629  000548  0A00               	xorlw	0	; case 0
  8630  00054A  B4D8               	btfsc	status,2,c
  8631  00054C  EFAA  F002         	goto	l5572
  8632  000550  EFC1  F002         	goto	l4374
  8633  000554                     l5572:
  8634                           
  8635                           ; Switch size 1, requested type "simple"
  8636                           ; Number of cases is 5, Range of values is 1 to 5
  8637                           ; switch strategies available:
  8638                           ; Name         Instructions Cycles
  8639                           ; simple_byte           16     9 (average)
  8640                           ;	Chosen strategy is simple_byte
  8641  000554  5011               	movf	??_getValue^0,w,c
  8642  000556  0A01               	xorlw	1	; case 1
  8643  000558  B4D8               	btfsc	status,2,c
  8644  00055A  EF15  F000         	goto	l4216
  8645  00055E  0A03               	xorlw	3	; case 2
  8646  000560  B4D8               	btfsc	status,2,c
  8647  000562  EF38  F000         	goto	l4230
  8648  000566  0A01               	xorlw	1	; case 3
  8649  000568  B4D8               	btfsc	status,2,c
  8650  00056A  EFAB  F000         	goto	l4262
  8651  00056E  0A07               	xorlw	7	; case 4
  8652  000570  B4D8               	btfsc	status,2,c
  8653  000572  EF37  F001         	goto	l4296
  8654  000576  0A01               	xorlw	1	; case 5
  8655  000578  B4D8               	btfsc	status,2,c
  8656  00057A  EFDC  F001         	goto	l4332
  8657  00057E  EFC1  F002         	goto	l4374
  8658  000582                     l4374:
  8659                           
  8660                           ;./AUTOMATIZADOR.h: 744:     if (esperandoDatos || datoIncorrecto) {
  8661  000582  0100               	movlb	0	; () banked
  8662  000584  51D4               	movf	_esperandoDatos& (0+255),w,b
  8663  000586  A4D8               	btfss	status,2,c
  8664  000588  EFC8  F002         	goto	u3691
  8665  00058C  EFCA  F002         	goto	u3690
  8666  000590                     u3691:
  8667  000590  EFD2  F002         	goto	l4378
  8668  000594                     u3690:
  8669  000594                     
  8670                           ; BSR set to: 0
  8671  000594  5015               	movf	getValue@datoIncorrecto^0,w,c
  8672  000596  B4D8               	btfsc	status,2,c
  8673  000598  EFD0  F002         	goto	u3701
  8674  00059C  EFD2  F002         	goto	u3700
  8675  0005A0                     u3701:
  8676  0005A0  EFDC  F002         	goto	l434
  8677  0005A4                     u3700:
  8678  0005A4                     l4378:
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;./AUTOMATIZADOR.h: 747:         return '@';
  8682  0005A4  0E40               	movlw	64
  8683  0005A6  6E0D               	movwf	?_getValue^0,c
  8684  0005A8  0E00               	movlw	0
  8685  0005AA  6E0E               	movwf	(?_getValue+1)^0,c
  8686  0005AC  0E00               	movlw	0
  8687  0005AE  6E0F               	movwf	(?_getValue+2)^0,c
  8688  0005B0  0E00               	movlw	0
  8689  0005B2  6E10               	movwf	(?_getValue+3)^0,c
  8690  0005B4  EFE4  F002         	goto	l437
  8691  0005B8                     l434:
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;./AUTOMATIZADOR.h: 749:         return dato;
  8695  0005B8  C01E  F00D         	movff	getValue@dato,?_getValue
  8696  0005BC  C01F  F00E         	movff	getValue@dato+1,?_getValue+1
  8697  0005C0  C020  F00F         	movff	getValue@dato+2,?_getValue+2
  8698  0005C4  C021  F010         	movff	getValue@dato+3,?_getValue+3
  8699  0005C8                     l437:
  8700                           
  8701                           ; BSR set to: 0
  8702  0005C8  0012               	return		;funcret
  8703  0005CA                     __end_of_getValue:
  8704                           	opt callstack 0
  8705                           
  8706 ;; *************** function _UART_write *****************
  8707 ;; Defined at:
  8708 ;;		line 52 in file "./UART.h"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  dato            1    wreg     unsigned char 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  dato            1    0[COMRAM] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0
  8723 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8725 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8726 ;;Total ram usage:        1 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    1
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_UART_printf
  8733 ;;		_fijaDiaRtc
  8734 ;;		_leeHorariosMemoria
  8735 ;;		_fijaHoraRtc
  8736 ;;		_asignarHorarios
  8737 ;;		_setTiempoIluminar
  8738 ;;		_dameDatosSistema
  8739 ;;		_mostrarDatosSensores
  8740 ;;		_getValue
  8741 ;;		_asignarSetPoint
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text38
  8746  003A52                     __ptext38:
  8747                           	opt callstack 0
  8748  003A52                     _UART_write:
  8749                           	opt callstack 26
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;incstack = 0
  8753                           ;UART_write@dato stored from wreg
  8754  003A52  6E01               	movwf	UART_write@dato^0,c
  8755  003A54                     
  8756                           ;./UART.h: 53:     TXREG = dato;
  8757  003A54  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8758  003A58                     l115:
  8759  003A58  A2AC               	btfss	172,1,c	;volatile
  8760  003A5A  EF31  F01D         	goto	u2931
  8761  003A5E  EF33  F01D         	goto	u2930
  8762  003A62                     u2931:
  8763  003A62  EF2C  F01D         	goto	l115
  8764  003A66                     u2930:
  8765  003A66  0012               	return		;funcret
  8766  003A68                     __end_of_UART_write:
  8767                           	opt callstack 0
  8768                           
  8769 ;; *************** function _UART_read *****************
  8770 ;; Defined at:
  8771 ;;		line 34 in file "./UART.h"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      unsigned char 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0
  8786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8788 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8789 ;;Total ram usage:        0 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    1
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_getValue
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text39
  8800  0034E6                     __ptext39:
  8801                           	opt callstack 0
  8802  0034E6                     _UART_read:
  8803                           	opt callstack 26
  8804  0034E6                     
  8805                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  8806  0034E6  0E67               	movlw	103
  8807  0034E8  6ED7               	movwf	215,c	;volatile
  8808  0034EA  0E69               	movlw	105
  8809  0034EC  6ED6               	movwf	214,c	;volatile
  8810                           
  8811                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  8812  0034EE  0E00               	movlw	0
  8813  0034F0  0100               	movlb	0	; () banked
  8814  0034F2  6FD5               	movwf	_esperaDatoConcluida& (0+255),b
  8815                           
  8816                           ;./UART.h: 38:     esperandoDatos = 1;
  8817  0034F4  0E01               	movlw	1
  8818  0034F6  6FD4               	movwf	_esperandoDatos& (0+255),b
  8819                           
  8820                           ;./UART.h: 39:     byteUart = 0;
  8821  0034F8  0E00               	movlw	0
  8822  0034FA  6FD6               	movwf	_byteUart& (0+255),b
  8823                           
  8824                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  8825  0034FC  0E00               	movlw	0
  8826  0034FE  6FD7               	movwf	_tiempoInactividadTrans& (0+255),b
  8827  003500                     l106:
  8828                           
  8829                           ; BSR set to: 0
  8830  003500  BA9E               	btfsc	158,5,c	;volatile
  8831  003502  EF85  F01A         	goto	u2901
  8832  003506  EF87  F01A         	goto	u2900
  8833  00350A                     u2901:
  8834  00350A  EF8F  F01A         	goto	l3768
  8835  00350E                     u2900:
  8836  00350E                     
  8837                           ; BSR set to: 0
  8838  00350E  51D5               	movf	_esperaDatoConcluida& (0+255),w,b
  8839  003510  B4D8               	btfsc	status,2,c
  8840  003512  EF8D  F01A         	goto	u2911
  8841  003516  EF8F  F01A         	goto	u2910
  8842  00351A                     u2911:
  8843  00351A  EF80  F01A         	goto	l106
  8844  00351E                     u2910:
  8845  00351E                     l3768:
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  8849  00351E  51D5               	movf	_esperaDatoConcluida& (0+255),w,b
  8850  003520  A4D8               	btfss	status,2,c
  8851  003522  EF95  F01A         	goto	u2921
  8852  003526  EF97  F01A         	goto	u2920
  8853  00352A                     u2921:
  8854  00352A  EF9B  F01A         	goto	l111
  8855  00352E                     u2920:
  8856  00352E                     
  8857                           ; BSR set to: 0
  8858                           ;./UART.h: 45:         byteUart = RCREG;
  8859  00352E  CFAE F0D6          	movff	4014,_byteUart	;volatile
  8860  003532                     
  8861                           ; BSR set to: 0
  8862                           ;./UART.h: 46:         esperandoDatos = 0;
  8863  003532  0E00               	movlw	0
  8864  003534  6FD4               	movwf	_esperandoDatos& (0+255),b
  8865  003536                     l111:
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;./UART.h: 49:     return byteUart;
  8869  003536  51D6               	movf	_byteUart& (0+255),w,b
  8870  003538                     
  8871                           ; BSR set to: 0
  8872  003538  0012               	return		;funcret
  8873  00353A                     __end_of_UART_read:
  8874                           	opt callstack 0
  8875                           
  8876 ;; *************** function _escribeHorariosMemoria *****************
  8877 ;; Defined at:
  8878 ;;		line 176 in file "./AUTOMATIZADOR.h"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;		None
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;  j               2   12[COMRAM] int 
  8883 ;;  i               2   16[COMRAM] int 
  8884 ;;  contMemoria     2   14[COMRAM] int 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8894 ;;      Params:         0       0       0       0       0       0       0       0       0
  8895 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8896 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8897 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8898 ;;Total ram usage:        8 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:    4
  8901 ;; This function calls:
  8902 ;;		___wmul
  8903 ;;		_escribe_eeprom
  8904 ;; This function is called by:
  8905 ;;		_asignarHorarios
  8906 ;;		_setTiempoIluminar
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910                           	psect	text40
  8911  0024F0                     __ptext40:
  8912                           	opt callstack 0
  8913  0024F0                     _escribeHorariosMemoria:
  8914                           	opt callstack 24
  8915  0024F0                     
  8916                           ;./AUTOMATIZADOR.h: 178:     T_INT contMemoria = 0;
  8917  0024F0  0E00               	movlw	0
  8918  0024F2  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  8919  0024F4  0E00               	movlw	0
  8920  0024F6  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
  8921  0024F8                     
  8922                           ;./AUTOMATIZADOR.h: 180:     escribe_eeprom(contMemoria++, 'T');
  8923  0024F8  0E00               	movlw	0
  8924  0024FA  6E08               	movwf	(escribe_eeprom@direccion+1)^0,c
  8925  0024FC  0E00               	movlw	0
  8926  0024FE  6E07               	movwf	escribe_eeprom@direccion^0,c
  8927  002500  0E54               	movlw	84
  8928  002502  6E09               	movwf	escribe_eeprom@dato^0,c
  8929  002504  EC71  F01C         	call	_escribe_eeprom	;wreg free
  8930  002508  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8931  00250A  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8932  00250C                     
  8933                           ;./AUTOMATIZADOR.h: 183:     for (T_INT i = 0; i < 24; i++) {
  8934  00250C  0E00               	movlw	0
  8935  00250E  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
  8936  002510  0E00               	movlw	0
  8937  002512  6E11               	movwf	escribeHorariosMemoria@i^0,c
  8938  002514                     l4618:
  8939                           
  8940                           ;./AUTOMATIZADOR.h: 184:         escribe_eeprom(contMemoria++, horarios[i].hora);
  8941  002514  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8942  002518  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8943  00251C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8944  002520  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8945  002524  0E00               	movlw	0
  8946  002526  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8947  002528  0E0C               	movlw	12
  8948  00252A  6E03               	movwf	___wmul@multiplicand^0,c
  8949  00252C  ECCB  F01C         	call	___wmul	;wreg free
  8950  002530  0E84               	movlw	low _horarios
  8951  002532  2401               	addwf	?___wmul^0,w,c
  8952  002534  6ED9               	movwf	fsr2l,c
  8953  002536  0E01               	movlw	high _horarios
  8954  002538  2002               	addwfc	(?___wmul+1)^0,w,c
  8955  00253A  6EDA               	movwf	fsr2h,c
  8956  00253C  50DF               	movf	indf2,w,c
  8957  00253E  6E09               	movwf	escribe_eeprom@dato^0,c
  8958  002540  EC71  F01C         	call	_escribe_eeprom	;wreg free
  8959  002544  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  8960  002546  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  8961  002548                     
  8962                           ;./AUTOMATIZADOR.h: 186:         for (T_INT j = 0; j < 7; j++) {
  8963  002548  0E00               	movlw	0
  8964  00254A  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
  8965  00254C  0E00               	movlw	0
  8966  00254E  6E0D               	movwf	escribeHorariosMemoria@j^0,c
  8967  002550                     l4628:
  8968                           
  8969                           ;./AUTOMATIZADOR.h: 187:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
  8970  002550  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  8971  002554  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  8972  002558  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  8973  00255C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  8974  002560  0E00               	movlw	0
  8975  002562  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8976  002564  0E0C               	movlw	12
  8977  002566  6E03               	movwf	___wmul@multiplicand^0,c
  8978  002568  ECCB  F01C         	call	___wmul	;wreg free
  8979  00256C  0E84               	movlw	low _horarios
  8980  00256E  6E0B               	movwf	??_escribeHorariosMemoria^0,c
  8981  002570  0E01               	movlw	high _horarios
  8982  002572  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
  8983  002574  0E01               	movlw	1
  8984  002576  260B               	addwf	??_escribeHorariosMemoria^0,f,c
  8985  002578  0E00               	movlw	0
  8986  00257A  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
  8987  00257C  5001               	movf	?___wmul^0,w,c
  8988  00257E  260B               	addwf	??_escribeHorariosMemoria^0,f,c
  8989  002580  5002               	movf	(?___wmul+1)^0,w,c
  8990  002582  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
  8991  002584  500D               	movf	escribeHorariosMemoria@j^0,w,c
  8992  002586  240B               	addwf	??_escribeHorariosMemoria^0,w,c
  8993  002588  6ED9               	movwf	fsr2l,c
  8994  00258A  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
  8995  00258C  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
  8996  00258E  6EDA               	movwf	fsr2h,c
  8997  002590  50DF               	movf	indf2,w,c
  8998  002592  6E09               	movwf	escribe_eeprom@dato^0,c
  8999  002594  EC71  F01C         	call	_escribe_eeprom	;wreg free
  9000  002598  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  9001  00259A  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  9002  00259C                     
  9003                           ;./AUTOMATIZADOR.h: 188:         }
  9004  00259C  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
  9005  00259E  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
  9006  0025A0  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
  9007  0025A2  EFDC  F012         	goto	u3941
  9008  0025A6  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
  9009  0025A8  E109               	bnz	u3940
  9010  0025AA  0E07               	movlw	7
  9011  0025AC  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
  9012  0025AE  A0D8               	btfss	status,0,c
  9013  0025B0  EFDC  F012         	goto	u3941
  9014  0025B4  EFDE  F012         	goto	u3940
  9015  0025B8                     u3941:
  9016  0025B8  EFA8  F012         	goto	l4628
  9017  0025BC                     u3940:
  9018  0025BC                     
  9019                           ;./AUTOMATIZADOR.h: 190:         escribe_eeprom(contMemoria++, horarios[i].iluminar);
  9020  0025BC  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  9021  0025C0  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  9022  0025C4  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  9023  0025C8  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  9024  0025CC  0E00               	movlw	0
  9025  0025CE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9026  0025D0  0E0C               	movlw	12
  9027  0025D2  6E03               	movwf	___wmul@multiplicand^0,c
  9028  0025D4  ECCB  F01C         	call	___wmul	;wreg free
  9029  0025D8  0E8D               	movlw	low (_horarios+9)
  9030  0025DA  2401               	addwf	?___wmul^0,w,c
  9031  0025DC  6ED9               	movwf	fsr2l,c
  9032  0025DE  0E01               	movlw	high (_horarios+9)
  9033  0025E0  2002               	addwfc	(?___wmul+1)^0,w,c
  9034  0025E2  6EDA               	movwf	fsr2h,c
  9035  0025E4  50DF               	movf	indf2,w,c
  9036  0025E6  6E09               	movwf	escribe_eeprom@dato^0,c
  9037  0025E8  EC71  F01C         	call	_escribe_eeprom	;wreg free
  9038  0025EC  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  9039  0025EE  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  9040  0025F0                     
  9041                           ;./AUTOMATIZADOR.h: 191:         escribe_eeprom(contMemoria++, horarios[i].tiempoIlumina
      +                          r);
  9042  0025F0  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  9043  0025F4  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  9044  0025F8  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  9045  0025FC  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  9046  002600  0E00               	movlw	0
  9047  002602  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9048  002604  0E0C               	movlw	12
  9049  002606  6E03               	movwf	___wmul@multiplicand^0,c
  9050  002608  ECCB  F01C         	call	___wmul	;wreg free
  9051  00260C  0E8F               	movlw	low (_horarios+11)
  9052  00260E  2401               	addwf	?___wmul^0,w,c
  9053  002610  6ED9               	movwf	fsr2l,c
  9054  002612  0E01               	movlw	high (_horarios+11)
  9055  002614  2002               	addwfc	(?___wmul+1)^0,w,c
  9056  002616  6EDA               	movwf	fsr2h,c
  9057  002618  50DF               	movf	indf2,w,c
  9058  00261A  6E09               	movwf	escribe_eeprom@dato^0,c
  9059  00261C  EC71  F01C         	call	_escribe_eeprom	;wreg free
  9060  002620  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  9061  002622  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  9062                           
  9063                           ;./AUTOMATIZADOR.h: 192:     }
  9064  002624  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
  9065  002626  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  9066  002628  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  9067  00262A  EF20  F013         	goto	u3951
  9068  00262E  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  9069  002630  E109               	bnz	u3950
  9070  002632  0E18               	movlw	24
  9071  002634  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
  9072  002636  A0D8               	btfss	status,0,c
  9073  002638  EF20  F013         	goto	u3951
  9074  00263C  EF22  F013         	goto	u3950
  9075  002640                     u3951:
  9076  002640  EF8A  F012         	goto	l4618
  9077  002644                     u3950:
  9078  002644  0012               	return		;funcret
  9079  002646                     __end_of_escribeHorariosMemoria:
  9080                           	opt callstack 0
  9081                           
  9082 ;; *************** function _escribe_eeprom *****************
  9083 ;; Defined at:
  9084 ;;		line 147 in file "./AUTOMATIZADOR.h"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  direccion       2    6[COMRAM] unsigned short 
  9087 ;;  dato            1    8[COMRAM] unsigned char 
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0, cstack
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9099 ;;      Params:         3       0       0       0       0       0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9101 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9102 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9103 ;;Total ram usage:        4 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:    3
  9106 ;; This function calls:
  9107 ;;		_i2c_detener
  9108 ;;		_i2c_envia_dato
  9109 ;;		_i2c_inicia_com
  9110 ;; This function is called by:
  9111 ;;		_escribeHorariosMemoria
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text41
  9116  0038E2                     __ptext41:
  9117                           	opt callstack 0
  9118  0038E2                     _escribe_eeprom:
  9119                           	opt callstack 24
  9120  0038E2                     
  9121                           ;./AUTOMATIZADOR.h: 148:     i2c_inicia_com();
  9122  0038E2  EC64  F01D         	call	_i2c_inicia_com	;wreg free
  9123                           
  9124                           ;./AUTOMATIZADOR.h: 149:     i2c_envia_dato(0xAE);
  9125  0038E6  0EAE               	movlw	174
  9126  0038E8  EC5A  F01D         	call	_i2c_envia_dato
  9127                           
  9128                           ;./AUTOMATIZADOR.h: 150:     i2c_envia_dato(direccion >> 8);
  9129  0038EC  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  9130  0038EE  EC5A  F01D         	call	_i2c_envia_dato
  9131                           
  9132                           ;./AUTOMATIZADOR.h: 152:     i2c_envia_dato(direccion);
  9133  0038F2  5007               	movf	escribe_eeprom@direccion^0,w,c
  9134  0038F4  EC5A  F01D         	call	_i2c_envia_dato
  9135                           
  9136                           ;./AUTOMATIZADOR.h: 154:     i2c_envia_dato(dato);
  9137  0038F8  5009               	movf	escribe_eeprom@dato^0,w,c
  9138  0038FA  EC5A  F01D         	call	_i2c_envia_dato
  9139                           
  9140                           ;./AUTOMATIZADOR.h: 155:     i2c_detener();
  9141  0038FE  EC68  F01D         	call	_i2c_detener	;wreg free
  9142  003902                     
  9143                           ;./AUTOMATIZADOR.h: 156:     _delay((unsigned long)((10)*(4000000/4000.0)));
  9144  003902  0E0D               	movlw	13
  9145  003904  6E0A               	movwf	??_escribe_eeprom^0,c
  9146  003906  0EFC               	movlw	252
  9147  003908                     u4597:
  9148  003908  2EE8               	decfsz	wreg,f,c
  9149  00390A  D7FE               	bra	u4597
  9150  00390C  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  9151  00390E  D7FC               	bra	u4597
  9152  003910  0012               	return		;funcret
  9153  003912                     __end_of_escribe_eeprom:
  9154                           	opt callstack 0
  9155                           
  9156 ;; *************** function _sistemaIluminado *****************
  9157 ;; Defined at:
  9158 ;;		line 425 in file "./AUTOMATIZADOR.h"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      void 
  9165 ;; Registers used:
  9166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9172 ;;      Params:         0       0       0       0       0       0       0       0       0
  9173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9174 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9175 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9176 ;;Total ram usage:        1 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    5
  9179 ;; This function calls:
  9180 ;;		_dameDiaActual
  9181 ;;		_dameHoraActual
  9182 ;;		_horaIluminar
  9183 ;;		_pwmDuty
  9184 ;; This function is called by:
  9185 ;;		_main
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text42
  9190  00278A                     __ptext42:
  9191                           	opt callstack 0
  9192  00278A                     _sistemaIluminado:
  9193                           	opt callstack 25
  9194  00278A                     
  9195                           ;./AUTOMATIZADOR.h: 429:     if (iluminando) {
  9196  00278A  0100               	movlb	0	; () banked
  9197  00278C  51CA               	movf	_iluminando& (0+255),w,b
  9198  00278E  B4D8               	btfsc	status,2,c
  9199  002790  EFCC  F013         	goto	u4421
  9200  002794  EFCE  F013         	goto	u4420
  9201  002798                     u4421:
  9202  002798  EF0A  F014         	goto	l5188
  9203  00279C                     u4420:
  9204  00279C                     
  9205                           ; BSR set to: 0
  9206                           ;./AUTOMATIZADOR.h: 434:         contInterrupciones++;
  9207  00279C  4BC6               	infsnz	_contInterrupciones& (0+255),f,b
  9208  00279E  2BC7               	incf	(_contInterrupciones+1)& (0+255),f,b
  9209  0027A0                     
  9210                           ; BSR set to: 0
  9211                           ;./AUTOMATIZADOR.h: 436:         if (contInterrupciones == 6) {
  9212  0027A0  0E06               	movlw	6
  9213  0027A2  19C6               	xorwf	_contInterrupciones& (0+255),w,b
  9214  0027A4  11C7               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  9215  0027A6  A4D8               	btfss	status,2,c
  9216  0027A8  EFD8  F013         	goto	u4431
  9217  0027AC  EFDA  F013         	goto	u4430
  9218  0027B0                     u4431:
  9219  0027B0  EF50  F014         	goto	l357
  9220  0027B4                     u4430:
  9221  0027B4                     
  9222                           ; BSR set to: 0
  9223                           ;./AUTOMATIZADOR.h: 437:             contInterrupciones = 0;
  9224  0027B4  0E00               	movlw	0
  9225  0027B6  6FC7               	movwf	(_contInterrupciones+1)& (0+255),b
  9226  0027B8  0E00               	movlw	0
  9227  0027BA  6FC6               	movwf	_contInterrupciones& (0+255),b
  9228  0027BC                     
  9229                           ; BSR set to: 0
  9230                           ;./AUTOMATIZADOR.h: 438:             minutosTranscurridos++;
  9231  0027BC  4BC2               	infsnz	_minutosTranscurridos& (0+255),f,b
  9232  0027BE  2BC3               	incf	(_minutosTranscurridos+1)& (0+255),f,b
  9233  0027C0                     
  9234                           ; BSR set to: 0
  9235                           ;./AUTOMATIZADOR.h: 441:             if (minutosTranscurridos >= minutosIluminar) {
  9236  0027C0  51C4               	movf	_minutosIluminar& (0+255),w,b
  9237  0027C2  5DC2               	subwf	_minutosTranscurridos& (0+255),w,b
  9238  0027C4  51C5               	movf	(_minutosIluminar+1)& (0+255),w,b
  9239  0027C6  59C3               	subwfb	(_minutosTranscurridos+1)& (0+255),w,b
  9240  0027C8  A0D8               	btfss	status,0,c
  9241  0027CA  EFE9  F013         	goto	u4441
  9242  0027CE  EFEB  F013         	goto	u4440
  9243  0027D2                     u4441:
  9244  0027D2  EF50  F014         	goto	l357
  9245  0027D6                     u4440:
  9246  0027D6                     
  9247                           ; BSR set to: 0
  9248                           ;./AUTOMATIZADOR.h: 443:                 pwmDuty(0, 1);
  9249  0027D6  0E00               	movlw	0
  9250  0027D8  6E4C               	movwf	(pwmDuty@cicloTrabajo+1)^0,c
  9251  0027DA  0E00               	movlw	0
  9252  0027DC  6E4B               	movwf	pwmDuty@cicloTrabajo^0,c
  9253  0027DE  0E01               	movlw	1
  9254  0027E0  6E4D               	movwf	pwmDuty@channel^0,c
  9255  0027E2  EC4F  F00C         	call	_pwmDuty	;wreg free
  9256  0027E6                     
  9257                           ;./AUTOMATIZADOR.h: 444:                 minutosTranscurridos = 0;
  9258  0027E6  0E00               	movlw	0
  9259  0027E8  0100               	movlb	0	; () banked
  9260  0027EA  6FC3               	movwf	(_minutosTranscurridos+1)& (0+255),b
  9261  0027EC  0E00               	movlw	0
  9262  0027EE  6FC2               	movwf	_minutosTranscurridos& (0+255),b
  9263  0027F0                     
  9264                           ; BSR set to: 0
  9265                           ;./AUTOMATIZADOR.h: 445:                 iluminando = 0;
  9266  0027F0  0E00               	movlw	0
  9267  0027F2  6FCA               	movwf	_iluminando& (0+255),b
  9268  0027F4                     
  9269                           ; BSR set to: 0
  9270                           ;./AUTOMATIZADOR.h: 446:                 horarios[hora].iluminado = 1;
  9271  0027F4  51D2               	movf	_hora& (0+255),w,b
  9272  0027F6  0D0C               	mullw	12
  9273  0027F8  0E8E               	movlw	low (_horarios+10)
  9274  0027FA  24F3               	addwf	243,w,c
  9275  0027FC  6ED9               	movwf	fsr2l,c
  9276  0027FE  0E01               	movlw	high (_horarios+10)
  9277  002800  20F4               	addwfc	prodh,w,c
  9278  002802  6EDA               	movwf	fsr2h,c
  9279  002804  0E01               	movlw	1
  9280  002806  6EDF               	movwf	indf2,c
  9281  002808                     
  9282                           ; BSR set to: 0
  9283                           ;./AUTOMATIZADOR.h: 447:                 tempHora = hora;
  9284  002808  C0D2  F0CC         	movff	_hora,_tempHora
  9285  00280C                     
  9286                           ; BSR set to: 0
  9287                           ;./AUTOMATIZADOR.h: 448:                 flagIluminado = 0;
  9288  00280C  0E00               	movlw	0
  9289  00280E  6FCB               	movwf	_flagIluminado& (0+255),b
  9290  002810  EF50  F014         	goto	l357
  9291  002814                     l5188:
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;./AUTOMATIZADOR.h: 454:         dameHoraActual();
  9295  002814  ECA0  F01C         	call	_dameHoraActual	;wreg free
  9296                           
  9297                           ;./AUTOMATIZADOR.h: 455:         dameDiaActual();
  9298  002818  EC4A  F01D         	call	_dameDiaActual	;wreg free
  9299  00281C                     
  9300                           ;./AUTOMATIZADOR.h: 457:         if (hora != tempHora && !flagIluminado) {
  9301  00281C  0100               	movlb	0	; () banked
  9302  00281E  51CC               	movf	_tempHora& (0+255),w,b
  9303  002820  19D2               	xorwf	_hora& (0+255),w,b
  9304  002822  B4D8               	btfsc	status,2,c
  9305  002824  EF16  F014         	goto	u4451
  9306  002828  EF18  F014         	goto	u4450
  9307  00282C                     u4451:
  9308  00282C  EF2C  F014         	goto	l5198
  9309  002830                     u4450:
  9310  002830                     
  9311                           ; BSR set to: 0
  9312  002830  51CB               	movf	_flagIluminado& (0+255),w,b
  9313  002832  A4D8               	btfss	status,2,c
  9314  002834  EF1E  F014         	goto	u4461
  9315  002838  EF20  F014         	goto	u4460
  9316  00283C                     u4461:
  9317  00283C  EF2C  F014         	goto	l5198
  9318  002840                     u4460:
  9319  002840                     
  9320                           ; BSR set to: 0
  9321                           ;./AUTOMATIZADOR.h: 458:             horarios[tempHora].iluminado = 0;
  9322  002840  51CC               	movf	_tempHora& (0+255),w,b
  9323  002842  0D0C               	mullw	12
  9324  002844  0E8E               	movlw	low (_horarios+10)
  9325  002846  24F3               	addwf	243,w,c
  9326  002848  6ED9               	movwf	fsr2l,c
  9327  00284A  0E01               	movlw	high (_horarios+10)
  9328  00284C  20F4               	addwfc	prodh,w,c
  9329  00284E  6EDA               	movwf	fsr2h,c
  9330  002850  0E00               	movlw	0
  9331  002852  6EDF               	movwf	indf2,c
  9332  002854                     
  9333                           ; BSR set to: 0
  9334                           ;./AUTOMATIZADOR.h: 459:             flagIluminado = 1;
  9335  002854  0E01               	movlw	1
  9336  002856  6FCB               	movwf	_flagIluminado& (0+255),b
  9337  002858                     l5198:
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;./AUTOMATIZADOR.h: 462:         if (horaIluminar()) {
  9341  002858  EC50  F018         	call	_horaIluminar	;wreg free
  9342  00285C  5001               	movf	?_horaIluminar^0,w,c
  9343  00285E  1002               	iorwf	(?_horaIluminar+1)^0,w,c
  9344  002860  B4D8               	btfsc	status,2,c
  9345  002862  EF35  F014         	goto	u4471
  9346  002866  EF37  F014         	goto	u4470
  9347  00286A                     u4471:
  9348  00286A  EF50  F014         	goto	l357
  9349  00286E                     u4470:
  9350  00286E                     
  9351                           ;./AUTOMATIZADOR.h: 465:             minutosIluminar = (horarios[hora].tiempoIluminar) *
      +                           60;
  9352  00286E  0100               	movlb	0	; () banked
  9353  002870  51D2               	movf	_hora& (0+255),w,b
  9354  002872  0D0C               	mullw	12
  9355  002874  0E8F               	movlw	low (_horarios+11)
  9356  002876  24F3               	addwf	243,w,c
  9357  002878  6ED9               	movwf	fsr2l,c
  9358  00287A  0E01               	movlw	high (_horarios+11)
  9359  00287C  20F4               	addwfc	prodh,w,c
  9360  00287E  6EDA               	movwf	fsr2h,c
  9361  002880  50DF               	movf	indf2,w,c
  9362  002882  6E57               	movwf	??_sistemaIluminado^0,c
  9363  002884  5057               	movf	??_sistemaIluminado^0,w,c
  9364  002886  0D3C               	mullw	60
  9365  002888  CFF3 F0C4          	movff	prodl,_minutosIluminar
  9366  00288C  CFF4 F0C5          	movff	prodh,_minutosIluminar+1
  9367  002890                     
  9368                           ; BSR set to: 0
  9369                           ;./AUTOMATIZADOR.h: 466:             pwmDuty(100, 1);
  9370  002890  0E00               	movlw	0
  9371  002892  6E4C               	movwf	(pwmDuty@cicloTrabajo+1)^0,c
  9372  002894  0E64               	movlw	100
  9373  002896  6E4B               	movwf	pwmDuty@cicloTrabajo^0,c
  9374  002898  0E01               	movlw	1
  9375  00289A  6E4D               	movwf	pwmDuty@channel^0,c
  9376  00289C  EC4F  F00C         	call	_pwmDuty	;wreg free
  9377  0028A0                     l357:
  9378  0028A0  0012               	return		;funcret
  9379  0028A2                     __end_of_sistemaIluminado:
  9380                           	opt callstack 0
  9381                           
  9382 ;; *************** function _horaIluminar *****************
  9383 ;; Defined at:
  9384 ;;		line 72 in file "./AUTOMATIZADOR.h"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;		None
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  2    0[COMRAM] int 
  9391 ;; Registers used:
  9392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9398 ;;      Params:         2       0       0       0       0       0       0       0       0
  9399 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9400 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9401 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9402 ;;Total ram usage:        6 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:    1
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_sistemaIluminado
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text43
  9413  0030A0                     __ptext43:
  9414                           	opt callstack 0
  9415  0030A0                     _horaIluminar:
  9416                           	opt callstack 28
  9417  0030A0                     
  9418                           ;./AUTOMATIZADOR.h: 74:     return (horarios[hora].iluminar) && (!horarios[hora].ilumina
      +                          do) &&
  9419  0030A0  0E00               	movlw	0
  9420  0030A2  6E06               	movwf	_horaIluminar$591^0,c
  9421  0030A4  0100               	movlb	0	; () banked
  9422  0030A6  51D2               	movf	_hora& (0+255),w,b
  9423  0030A8  0D0C               	mullw	12
  9424  0030AA  0E8D               	movlw	low (_horarios+9)
  9425  0030AC  24F3               	addwf	243,w,c
  9426  0030AE  6ED9               	movwf	fsr2l,c
  9427  0030B0  0E01               	movlw	high (_horarios+9)
  9428  0030B2  20F4               	addwfc	prodh,w,c
  9429  0030B4  6EDA               	movwf	fsr2h,c
  9430  0030B6  50DF               	movf	indf2,w,c
  9431  0030B8  B4D8               	btfsc	status,2,c
  9432  0030BA  EF61  F018         	goto	u4191
  9433  0030BE  EF63  F018         	goto	u4190
  9434  0030C2                     u4191:
  9435  0030C2  EF8E  F018         	goto	l4828
  9436  0030C6                     u4190:
  9437  0030C6                     
  9438                           ; BSR set to: 0
  9439  0030C6  51D2               	movf	_hora& (0+255),w,b
  9440  0030C8  0D0C               	mullw	12
  9441  0030CA  0E8E               	movlw	low (_horarios+10)
  9442  0030CC  24F3               	addwf	243,w,c
  9443  0030CE  6ED9               	movwf	fsr2l,c
  9444  0030D0  0E01               	movlw	high (_horarios+10)
  9445  0030D2  20F4               	addwfc	prodh,w,c
  9446  0030D4  6EDA               	movwf	fsr2h,c
  9447  0030D6  50DF               	movf	indf2,w,c
  9448  0030D8  A4D8               	btfss	status,2,c
  9449  0030DA  EF71  F018         	goto	u4201
  9450  0030DE  EF73  F018         	goto	u4200
  9451  0030E2                     u4201:
  9452  0030E2  EF8E  F018         	goto	l4828
  9453  0030E6                     u4200:
  9454  0030E6                     
  9455                           ; BSR set to: 0
  9456  0030E6  51D2               	movf	_hora& (0+255),w,b
  9457  0030E8  0D0C               	mullw	12
  9458  0030EA  0E84               	movlw	low _horarios
  9459  0030EC  6E03               	movwf	??_horaIluminar^0,c
  9460  0030EE  0E01               	movlw	high _horarios
  9461  0030F0  6E04               	movwf	(??_horaIluminar+1)^0,c
  9462  0030F2  50F3               	movf	243,w,c
  9463  0030F4  2603               	addwf	??_horaIluminar^0,f,c
  9464  0030F6  50F4               	movf	244,w,c
  9465  0030F8  2204               	addwfc	(??_horaIluminar+1)^0,f,c
  9466  0030FA  51CF               	movf	_diaActual& (0+255),w,b
  9467  0030FC  2403               	addwf	??_horaIluminar^0,w,c
  9468  0030FE  6ED9               	movwf	fsr2l,c
  9469  003100  0E00               	movlw	0
  9470  003102  2004               	addwfc	(??_horaIluminar+1)^0,w,c
  9471  003104  6EDA               	movwf	fsr2h,c
  9472  003106  0E31               	movlw	49
  9473  003108  18DE               	xorwf	postinc2,w,c
  9474  00310A  A4D8               	btfss	status,2,c
  9475  00310C  EF8A  F018         	goto	u4211
  9476  003110  EF8C  F018         	goto	u4210
  9477  003114                     u4211:
  9478  003114  EF8E  F018         	goto	l4828
  9479  003118                     u4210:
  9480  003118                     
  9481                           ; BSR set to: 0
  9482  003118  0E01               	movlw	1
  9483  00311A  6E06               	movwf	_horaIluminar$591^0,c
  9484  00311C                     l4828:
  9485                           
  9486                           ; BSR set to: 0
  9487  00311C  C006  F001         	movff	_horaIluminar$591,?_horaIluminar
  9488  003120  6A02               	clrf	(?_horaIluminar+1)^0,c
  9489  003122                     
  9490                           ; BSR set to: 0
  9491  003122  0012               	return		;funcret
  9492  003124                     __end_of_horaIluminar:
  9493                           	opt callstack 0
  9494                           
  9495 ;; *************** function _dameHoraActual *****************
  9496 ;; Defined at:
  9497 ;;		line 99 in file "./AUTOMATIZADOR.h"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;		None
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1    wreg      void 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9511 ;;      Params:         0       0       0       0       0       0       0       0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9515 ;;Total ram usage:        0 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:    4
  9518 ;; This function calls:
  9519 ;;		_convertirDato
  9520 ;;		_leer_rtc
  9521 ;; This function is called by:
  9522 ;;		_sistemaIluminado
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           	psect	text44
  9527  003940                     __ptext44:
  9528                           	opt callstack 0
  9529  003940                     _dameHoraActual:
  9530                           	opt callstack 25
  9531  003940                     
  9532                           ;./AUTOMATIZADOR.h: 101:     segundos = convertirDato(leer_rtc(0x00));
  9533  003940  0E00               	movlw	0
  9534  003942  ECB6  F01C         	call	_leer_rtc
  9535  003946  ECF1  F01C         	call	_convertirDato
  9536  00394A  0100               	movlb	0	; () banked
  9537  00394C  6FD0               	movwf	_segundos& (0+255),b
  9538                           
  9539                           ;./AUTOMATIZADOR.h: 102:     minutos = convertirDato(leer_rtc(0x01));
  9540  00394E  0E01               	movlw	1
  9541  003950  ECB6  F01C         	call	_leer_rtc
  9542  003954  ECF1  F01C         	call	_convertirDato
  9543  003958  0100               	movlb	0	; () banked
  9544  00395A  6FD1               	movwf	_minutos& (0+255),b
  9545                           
  9546                           ;./AUTOMATIZADOR.h: 103:     hora = convertirDato(leer_rtc(0x02));
  9547  00395C  0E02               	movlw	2
  9548  00395E  ECB6  F01C         	call	_leer_rtc
  9549  003962  ECF1  F01C         	call	_convertirDato
  9550  003966  0100               	movlb	0	; () banked
  9551  003968  6FD2               	movwf	_hora& (0+255),b
  9552  00396A                     
  9553                           ; BSR set to: 0
  9554  00396A  0012               	return		;funcret
  9555  00396C                     __end_of_dameHoraActual:
  9556                           	opt callstack 0
  9557                           
  9558 ;; *************** function _dameDiaActual *****************
  9559 ;; Defined at:
  9560 ;;		line 106 in file "./AUTOMATIZADOR.h"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    4
  9581 ;; This function calls:
  9582 ;;		_convertirDato
  9583 ;;		_leer_rtc
  9584 ;; This function is called by:
  9585 ;;		_sistemaIluminado
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text45
  9590  003A94                     __ptext45:
  9591                           	opt callstack 0
  9592  003A94                     _dameDiaActual:
  9593                           	opt callstack 25
  9594  003A94                     
  9595                           ;./AUTOMATIZADOR.h: 108:     diaActual = convertirDato(leer_rtc(0x03));
  9596  003A94  0E03               	movlw	3
  9597  003A96  ECB6  F01C         	call	_leer_rtc
  9598  003A9A  ECF1  F01C         	call	_convertirDato
  9599  003A9E  0100               	movlb	0	; () banked
  9600  003AA0  6FCF               	movwf	_diaActual& (0+255),b
  9601  003AA2                     
  9602                           ; BSR set to: 0
  9603  003AA2  0012               	return		;funcret
  9604  003AA4                     __end_of_dameDiaActual:
  9605                           	opt callstack 0
  9606                           
  9607 ;; *************** function _leer_rtc *****************
  9608 ;; Defined at:
  9609 ;;		line 13 in file "./RTC.h"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  direccion       1    wreg     unsigned char 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  direccion       1    2[COMRAM] unsigned char 
  9614 ;;  dato            1    3[COMRAM] unsigned char 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      unsigned char 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2, status,0, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0
  9625 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9627 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9628 ;;Total ram usage:        2 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    3
  9631 ;; This function calls:
  9632 ;;		_i2c_detener
  9633 ;;		_i2c_envia_dato
  9634 ;;		_i2c_inicia_com
  9635 ;;		_i2c_recibe_dato
  9636 ;;		_i2c_reinicia_com
  9637 ;; This function is called by:
  9638 ;;		_dameHoraActual
  9639 ;;		_dameDiaActual
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text46
  9644  00396C                     __ptext46:
  9645                           	opt callstack 0
  9646  00396C                     _leer_rtc:
  9647                           	opt callstack 25
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;incstack = 0
  9651                           ;leer_rtc@direccion stored from wreg
  9652  00396C  6E03               	movwf	leer_rtc@direccion^0,c
  9653  00396E                     
  9654                           ;./RTC.h: 14:     T_UBYTE dato;;./RTC.h: 15:     i2c_inicia_com();
  9655  00396E  EC64  F01D         	call	_i2c_inicia_com	;wreg free
  9656                           
  9657                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  9658  003972  0ED0               	movlw	208
  9659  003974  EC5A  F01D         	call	_i2c_envia_dato
  9660                           
  9661                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  9662  003978  5003               	movf	leer_rtc@direccion^0,w,c
  9663  00397A  EC5A  F01D         	call	_i2c_envia_dato
  9664                           
  9665                           ;./RTC.h: 18:     i2c_reinicia_com();
  9666  00397E  EC60  F01D         	call	_i2c_reinicia_com	;wreg free
  9667                           
  9668                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  9669  003982  0ED1               	movlw	209
  9670  003984  EC5A  F01D         	call	_i2c_envia_dato
  9671                           
  9672                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  9673  003988  EC10  F01D         	call	_i2c_recibe_dato	;wreg free
  9674  00398C  6E04               	movwf	leer_rtc@dato^0,c
  9675                           
  9676                           ;./RTC.h: 21:     i2c_detener();
  9677  00398E  EC68  F01D         	call	_i2c_detener	;wreg free
  9678  003992                     
  9679                           ;./RTC.h: 22:     return dato;
  9680  003992  5004               	movf	leer_rtc@dato^0,w,c
  9681  003994  0012               	return		;funcret
  9682  003996                     __end_of_leer_rtc:
  9683                           	opt callstack 0
  9684                           
  9685 ;; *************** function _i2c_reinicia_com *****************
  9686 ;; Defined at:
  9687 ;;		line 46 in file "./I2C.h"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;		None
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;		None
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, status,2, status,0, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9701 ;;      Params:         0       0       0       0       0       0       0       0       0
  9702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9704 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9705 ;;Total ram usage:        0 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:    2
  9708 ;; This function calls:
  9709 ;;		_i2c_espera
  9710 ;; This function is called by:
  9711 ;;		_leer_rtc
  9712 ;;		_leer_eeprom
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text47
  9717  003AC0                     __ptext47:
  9718                           	opt callstack 0
  9719  003AC0                     _i2c_reinicia_com:
  9720                           	opt callstack 25
  9721  003AC0                     
  9722                           ;./I2C.h: 47:     i2c_espera();
  9723  003AC0  ECDE  F01C         	call	_i2c_espera	;wreg free
  9724  003AC4                     
  9725                           ;./I2C.h: 48:     SSPCON2bits.RSEN = 1;
  9726  003AC4  82C5               	bsf	197,1,c	;volatile
  9727  003AC6  0012               	return		;funcret
  9728  003AC8                     __end_of_i2c_reinicia_com:
  9729                           	opt callstack 0
  9730                           
  9731 ;; *************** function _i2c_recibe_dato *****************
  9732 ;; Defined at:
  9733 ;;		line 77 in file "./I2C.h"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;		None
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  datoleido       1    1[COMRAM] unsigned char 
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      unsigned char 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2, status,0, cstack
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9747 ;;      Params:         0       0       0       0       0       0       0       0       0
  9748 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9750 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9751 ;;Total ram usage:        1 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; Hardware stack levels required when called:    2
  9754 ;; This function calls:
  9755 ;;		_i2c_espera
  9756 ;; This function is called by:
  9757 ;;		_leer_rtc
  9758 ;;		_leer_eeprom
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text48
  9763  003A20                     __ptext48:
  9764                           	opt callstack 0
  9765  003A20                     _i2c_recibe_dato:
  9766                           	opt callstack 25
  9767  003A20                     
  9768                           ;./I2C.h: 79:     T_UBYTE datoleido;;./I2C.h: 82:     i2c_espera();
  9769  003A20  ECDE  F01C         	call	_i2c_espera	;wreg free
  9770  003A24                     
  9771                           ;./I2C.h: 83:     SSPCON2bits.RCEN = 1;
  9772  003A24  86C5               	bsf	197,3,c	;volatile
  9773                           
  9774                           ;./I2C.h: 85:     i2c_espera();
  9775  003A26  ECDE  F01C         	call	_i2c_espera	;wreg free
  9776  003A2A                     
  9777                           ;./I2C.h: 86:     datoleido = SSPBUF;
  9778  003A2A  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  9779                           
  9780                           ;./I2C.h: 89:     i2c_espera();
  9781  003A2E  ECDE  F01C         	call	_i2c_espera	;wreg free
  9782  003A32                     
  9783                           ;./I2C.h: 91:     SSPCON2bits.ACKDT = 1;
  9784  003A32  8AC5               	bsf	197,5,c	;volatile
  9785  003A34                     
  9786                           ;./I2C.h: 96:     SSPCON2bits.ACKEN = 1;
  9787  003A34  88C5               	bsf	197,4,c	;volatile
  9788  003A36                     
  9789                           ;./I2C.h: 100:     return datoleido;
  9790  003A36  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  9791  003A38  0012               	return		;funcret
  9792  003A3A                     __end_of_i2c_recibe_dato:
  9793                           	opt callstack 0
  9794                           
  9795 ;; *************** function _convertirDato *****************
  9796 ;; Defined at:
  9797 ;;		line 28 in file "./RTC.h"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  dato            1    wreg     unsigned char 
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;  dato            1    1[COMRAM] unsigned char 
  9802 ;;  datoR           1    2[COMRAM] unsigned char 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      unsigned char 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0, prodl, prodh
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9812 ;;      Params:         0       0       0       0       0       0       0       0       0
  9813 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9814 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9815 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9816 ;;Total ram usage:        3 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    1
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_dameHoraActual
  9823 ;;		_dameDiaActual
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text49
  9828  0039E2                     __ptext49:
  9829                           	opt callstack 0
  9830  0039E2                     _convertirDato:
  9831                           	opt callstack 27
  9832                           
  9833                           ;incstack = 0
  9834                           ;convertirDato@dato stored from wreg
  9835  0039E2  6E02               	movwf	convertirDato@dato^0,c
  9836  0039E4                     
  9837                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  9838  0039E4  3802               	swapf	convertirDato@dato^0,w,c
  9839  0039E6  0B0F               	andlw	15
  9840  0039E8  0B0F               	andlw	15
  9841  0039EA  6E03               	movwf	convertirDato@datoR^0,c
  9842  0039EC                     
  9843                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  9844  0039EC  C002  F001         	movff	convertirDato@dato,??_convertirDato
  9845  0039F0  0E0F               	movlw	15
  9846  0039F2  1601               	andwf	??_convertirDato^0,f,c
  9847  0039F4  5003               	movf	convertirDato@datoR^0,w,c
  9848  0039F6  0D0A               	mullw	10
  9849  0039F8  50F3               	movf	243,w,c
  9850  0039FA  2401               	addwf	??_convertirDato^0,w,c
  9851  0039FC  6E03               	movwf	convertirDato@datoR^0,c
  9852  0039FE                     
  9853                           ;./RTC.h: 32:     return datoR;
  9854  0039FE  5003               	movf	convertirDato@datoR^0,w,c
  9855  003A00  0012               	return		;funcret
  9856  003A02                     __end_of_convertirDato:
  9857                           	opt callstack 0
  9858                           
  9859 ;; *************** function _inicializarObjetos *****************
  9860 ;; Defined at:
  9861 ;;		line 78 in file "./AUTOMATIZADOR.h"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  j               2   88[COMRAM] int 
  9866 ;;  i               2   90[COMRAM] int 
  9867 ;;  i               2   92[COMRAM] int 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9877 ;;      Params:         0       0       0       0       0       0       0       0       0
  9878 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9879 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9880 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9881 ;;Total ram usage:        8 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    4
  9884 ;; This function calls:
  9885 ;;		___wmul
  9886 ;;		_pwmDuty
  9887 ;; This function is called by:
  9888 ;;		_main
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text50
  9893  0020A4                     __ptext50:
  9894                           	opt callstack 0
  9895  0020A4                     _inicializarObjetos:
  9896                           	opt callstack 26
  9897  0020A4                     
  9898                           ;./AUTOMATIZADOR.h: 80:     for (T_INT i = 0; i < 24; i++) {
  9899  0020A4  0E00               	movlw	0
  9900  0020A6  6E5E               	movwf	(inicializarObjetos@i+1)^0,c
  9901  0020A8  0E00               	movlw	0
  9902  0020AA  6E5D               	movwf	inicializarObjetos@i^0,c
  9903  0020AC                     l5106:
  9904                           
  9905                           ;./AUTOMATIZADOR.h: 81:         horarios[i].hora = i;
  9906  0020AC  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9907  0020B0  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9908  0020B4  0E00               	movlw	0
  9909  0020B6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9910  0020B8  0E0C               	movlw	12
  9911  0020BA  6E03               	movwf	___wmul@multiplicand^0,c
  9912  0020BC  ECCB  F01C         	call	___wmul	;wreg free
  9913  0020C0  0E84               	movlw	low _horarios
  9914  0020C2  2401               	addwf	?___wmul^0,w,c
  9915  0020C4  6ED9               	movwf	fsr2l,c
  9916  0020C6  0E01               	movlw	high _horarios
  9917  0020C8  2002               	addwfc	(?___wmul+1)^0,w,c
  9918  0020CA  6EDA               	movwf	fsr2h,c
  9919  0020CC  C05D  FFDF         	movff	inicializarObjetos@i,indf2
  9920                           
  9921                           ;./AUTOMATIZADOR.h: 82:         horarios[i].iluminar = 0;
  9922  0020D0  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9923  0020D4  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9924  0020D8  0E00               	movlw	0
  9925  0020DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9926  0020DC  0E0C               	movlw	12
  9927  0020DE  6E03               	movwf	___wmul@multiplicand^0,c
  9928  0020E0  ECCB  F01C         	call	___wmul	;wreg free
  9929  0020E4  0E8D               	movlw	low (_horarios+9)
  9930  0020E6  2401               	addwf	?___wmul^0,w,c
  9931  0020E8  6ED9               	movwf	fsr2l,c
  9932  0020EA  0E01               	movlw	high (_horarios+9)
  9933  0020EC  2002               	addwfc	(?___wmul+1)^0,w,c
  9934  0020EE  6EDA               	movwf	fsr2h,c
  9935  0020F0  0E00               	movlw	0
  9936  0020F2  6EDF               	movwf	indf2,c
  9937                           
  9938                           ;./AUTOMATIZADOR.h: 83:         horarios[i].iluminado = 0;
  9939  0020F4  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9940  0020F8  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9941  0020FC  0E00               	movlw	0
  9942  0020FE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9943  002100  0E0C               	movlw	12
  9944  002102  6E03               	movwf	___wmul@multiplicand^0,c
  9945  002104  ECCB  F01C         	call	___wmul	;wreg free
  9946  002108  0E8E               	movlw	low (_horarios+10)
  9947  00210A  2401               	addwf	?___wmul^0,w,c
  9948  00210C  6ED9               	movwf	fsr2l,c
  9949  00210E  0E01               	movlw	high (_horarios+10)
  9950  002110  2002               	addwfc	(?___wmul+1)^0,w,c
  9951  002112  6EDA               	movwf	fsr2h,c
  9952  002114  0E00               	movlw	0
  9953  002116  6EDF               	movwf	indf2,c
  9954                           
  9955                           ;./AUTOMATIZADOR.h: 84:         horarios[i].tiempoIluminar = 1;
  9956  002118  C05D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  9957  00211C  C05E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  9958  002120  0E00               	movlw	0
  9959  002122  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9960  002124  0E0C               	movlw	12
  9961  002126  6E03               	movwf	___wmul@multiplicand^0,c
  9962  002128  ECCB  F01C         	call	___wmul	;wreg free
  9963  00212C  0E8F               	movlw	low (_horarios+11)
  9964  00212E  2401               	addwf	?___wmul^0,w,c
  9965  002130  6ED9               	movwf	fsr2l,c
  9966  002132  0E01               	movlw	high (_horarios+11)
  9967  002134  2002               	addwfc	(?___wmul+1)^0,w,c
  9968  002136  6EDA               	movwf	fsr2h,c
  9969  002138  0E01               	movlw	1
  9970  00213A  6EDF               	movwf	indf2,c
  9971  00213C                     
  9972                           ;./AUTOMATIZADOR.h: 85:     }
  9973  00213C  4A5D               	infsnz	inicializarObjetos@i^0,f,c
  9974  00213E  2A5E               	incf	(inicializarObjetos@i+1)^0,f,c
  9975  002140  BE5E               	btfsc	(inicializarObjetos@i+1)^0,7,c
  9976  002142  EFAC  F010         	goto	u4391
  9977  002146  505E               	movf	(inicializarObjetos@i+1)^0,w,c
  9978  002148  E109               	bnz	u4390
  9979  00214A  0E18               	movlw	24
  9980  00214C  5C5D               	subwf	inicializarObjetos@i^0,w,c
  9981  00214E  A0D8               	btfss	status,0,c
  9982  002150  EFAC  F010         	goto	u4391
  9983  002154  EFAE  F010         	goto	u4390
  9984  002158                     u4391:
  9985  002158  EF56  F010         	goto	l5106
  9986  00215C                     u4390:
  9987  00215C                     
  9988                           ;./AUTOMATIZADOR.h: 87:     for (T_INT i = 0; i < 24; i++) {
  9989  00215C  0E00               	movlw	0
  9990  00215E  6E5C               	movwf	(inicializarObjetos@i_594+1)^0,c
  9991  002160  0E00               	movlw	0
  9992  002162  6E5B               	movwf	inicializarObjetos@i_594^0,c
  9993  002164                     l5118:
  9994                           
  9995                           ;./AUTOMATIZADOR.h: 89:         for (T_INT j = 0; j < 7; j++)
  9996  002164  0E00               	movlw	0
  9997  002166  6E5A               	movwf	(inicializarObjetos@j+1)^0,c
  9998  002168  0E00               	movlw	0
  9999  00216A  6E59               	movwf	inicializarObjetos@j^0,c
 10000  00216C                     l5124:
 10001                           
 10002                           ;./AUTOMATIZADOR.h: 90:             horarios[i].dias[j] = 0;
 10003  00216C  C05B  F001         	movff	inicializarObjetos@i_594,___wmul@multiplier
 10004  002170  C05C  F002         	movff	inicializarObjetos@i_594+1,___wmul@multiplier+1
 10005  002174  0E00               	movlw	0
 10006  002176  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10007  002178  0E0C               	movlw	12
 10008  00217A  6E03               	movwf	___wmul@multiplicand^0,c
 10009  00217C  ECCB  F01C         	call	___wmul	;wreg free
 10010  002180  0E84               	movlw	low _horarios
 10011  002182  6E57               	movwf	??_inicializarObjetos^0,c
 10012  002184  0E01               	movlw	high _horarios
 10013  002186  6E58               	movwf	(??_inicializarObjetos+1)^0,c
 10014  002188  0E01               	movlw	1
 10015  00218A  2657               	addwf	??_inicializarObjetos^0,f,c
 10016  00218C  0E00               	movlw	0
 10017  00218E  2258               	addwfc	(??_inicializarObjetos+1)^0,f,c
 10018  002190  5001               	movf	?___wmul^0,w,c
 10019  002192  2657               	addwf	??_inicializarObjetos^0,f,c
 10020  002194  5002               	movf	(?___wmul+1)^0,w,c
 10021  002196  2258               	addwfc	(??_inicializarObjetos+1)^0,f,c
 10022  002198  5059               	movf	inicializarObjetos@j^0,w,c
 10023  00219A  2457               	addwf	??_inicializarObjetos^0,w,c
 10024  00219C  6ED9               	movwf	fsr2l,c
 10025  00219E  505A               	movf	(inicializarObjetos@j+1)^0,w,c
 10026  0021A0  2058               	addwfc	(??_inicializarObjetos+1)^0,w,c
 10027  0021A2  6EDA               	movwf	fsr2h,c
 10028  0021A4  0E00               	movlw	0
 10029  0021A6  6EDF               	movwf	indf2,c
 10030  0021A8  4A59               	infsnz	inicializarObjetos@j^0,f,c
 10031  0021AA  2A5A               	incf	(inicializarObjetos@j+1)^0,f,c
 10032  0021AC  BE5A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 10033  0021AE  EFE2  F010         	goto	u4401
 10034  0021B2  505A               	movf	(inicializarObjetos@j+1)^0,w,c
 10035  0021B4  E109               	bnz	u4400
 10036  0021B6  0E07               	movlw	7
 10037  0021B8  5C59               	subwf	inicializarObjetos@j^0,w,c
 10038  0021BA  A0D8               	btfss	status,0,c
 10039  0021BC  EFE2  F010         	goto	u4401
 10040  0021C0  EFE4  F010         	goto	u4400
 10041  0021C4                     u4401:
 10042  0021C4  EFB6  F010         	goto	l5124
 10043  0021C8                     u4400:
 10044  0021C8                     
 10045                           ;./AUTOMATIZADOR.h: 92:         horarios[i].dias[7 - 1] = '\0';
 10046  0021C8  C05B  F001         	movff	inicializarObjetos@i_594,___wmul@multiplier
 10047  0021CC  C05C  F002         	movff	inicializarObjetos@i_594+1,___wmul@multiplier+1
 10048  0021D0  0E00               	movlw	0
 10049  0021D2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10050  0021D4  0E0C               	movlw	12
 10051  0021D6  6E03               	movwf	___wmul@multiplicand^0,c
 10052  0021D8  ECCB  F01C         	call	___wmul	;wreg free
 10053  0021DC  0E8B               	movlw	low (_horarios+7)
 10054  0021DE  2401               	addwf	?___wmul^0,w,c
 10055  0021E0  6ED9               	movwf	fsr2l,c
 10056  0021E2  0E01               	movlw	high (_horarios+7)
 10057  0021E4  2002               	addwfc	(?___wmul+1)^0,w,c
 10058  0021E6  6EDA               	movwf	fsr2h,c
 10059  0021E8  0E00               	movlw	0
 10060  0021EA  6EDF               	movwf	indf2,c
 10061  0021EC                     
 10062                           ;./AUTOMATIZADOR.h: 93:     }
 10063  0021EC  4A5B               	infsnz	inicializarObjetos@i_594^0,f,c
 10064  0021EE  2A5C               	incf	(inicializarObjetos@i_594+1)^0,f,c
 10065  0021F0  BE5C               	btfsc	(inicializarObjetos@i_594+1)^0,7,c
 10066  0021F2  EF04  F011         	goto	u4411
 10067  0021F6  505C               	movf	(inicializarObjetos@i_594+1)^0,w,c
 10068  0021F8  E109               	bnz	u4410
 10069  0021FA  0E18               	movlw	24
 10070  0021FC  5C5B               	subwf	inicializarObjetos@i_594^0,w,c
 10071  0021FE  A0D8               	btfss	status,0,c
 10072  002200  EF04  F011         	goto	u4411
 10073  002204  EF06  F011         	goto	u4410
 10074  002208                     u4411:
 10075  002208  EFB2  F010         	goto	l5118
 10076  00220C                     u4410:
 10077  00220C                     
 10078                           ;./AUTOMATIZADOR.h: 95:     pwmDuty(0, 1);
 10079  00220C  0E00               	movlw	0
 10080  00220E  6E4C               	movwf	(pwmDuty@cicloTrabajo+1)^0,c
 10081  002210  0E00               	movlw	0
 10082  002212  6E4B               	movwf	pwmDuty@cicloTrabajo^0,c
 10083  002214  0E01               	movlw	1
 10084  002216  6E4D               	movwf	pwmDuty@channel^0,c
 10085  002218  EC4F  F00C         	call	_pwmDuty	;wreg free
 10086  00221C  0012               	return		;funcret
 10087  00221E                     __end_of_inicializarObjetos:
 10088                           	opt callstack 0
 10089                           
 10090 ;; *************** function _pwmDuty *****************
 10091 ;; Defined at:
 10092 ;;		line 20 in file "./pwm.h"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;  cicloTrabajo    2   74[COMRAM] unsigned int 
 10095 ;;  channel         1   76[COMRAM] unsigned char 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  duty            4   82[COMRAM] long 
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10107 ;;      Params:         3       0       0       0       0       0       0       0       0
 10108 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10109 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10110 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10111 ;;Total ram usage:       12 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    3
 10114 ;; This function calls:
 10115 ;;		___fldiv
 10116 ;;		___flmul
 10117 ;;		___fltol
 10118 ;;		___xxtofl
 10119 ;;		_map
 10120 ;; This function is called by:
 10121 ;;		_inicializarObjetos
 10122 ;;		_sistemaIluminado
 10123 ;;		_PID
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text51
 10128  00189E                     __ptext51:
 10129                           	opt callstack 0
 10130  00189E                     _pwmDuty:
 10131                           	opt callstack 26
 10132  00189E                     
 10133                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
 10134  00189E  C04B  F01B         	movff	pwmDuty@cicloTrabajo,map@x
 10135  0018A2  C04C  F01C         	movff	pwmDuty@cicloTrabajo+1,map@x+1
 10136  0018A6  6A1D               	clrf	(map@x+2)^0,c
 10137  0018A8  6A1E               	clrf	(map@x+3)^0,c
 10138  0018AA  0E00               	movlw	0
 10139  0018AC  6E1F               	movwf	map@in_min^0,c
 10140  0018AE  0E00               	movlw	0
 10141  0018B0  6E20               	movwf	(map@in_min+1)^0,c
 10142  0018B2  0E00               	movlw	0
 10143  0018B4  6E21               	movwf	(map@in_min+2)^0,c
 10144  0018B6  0E00               	movlw	0
 10145  0018B8  6E22               	movwf	(map@in_min+3)^0,c
 10146  0018BA  0E64               	movlw	100
 10147  0018BC  6E23               	movwf	map@in_max^0,c
 10148  0018BE  0E00               	movlw	0
 10149  0018C0  6E24               	movwf	(map@in_max+1)^0,c
 10150  0018C2  0E00               	movlw	0
 10151  0018C4  6E25               	movwf	(map@in_max+2)^0,c
 10152  0018C6  0E00               	movlw	0
 10153  0018C8  6E26               	movwf	(map@in_max+3)^0,c
 10154  0018CA  0E00               	movlw	0
 10155  0018CC  6E27               	movwf	map@out_min^0,c
 10156  0018CE  0E00               	movlw	0
 10157  0018D0  6E28               	movwf	(map@out_min+1)^0,c
 10158  0018D2  0E00               	movlw	0
 10159  0018D4  6E29               	movwf	(map@out_min+2)^0,c
 10160  0018D6  0E00               	movlw	0
 10161  0018D8  6E2A               	movwf	(map@out_min+3)^0,c
 10162  0018DA  0EFF               	movlw	255
 10163  0018DC  6E2B               	movwf	map@out_max^0,c
 10164  0018DE  0E03               	movlw	3
 10165  0018E0  6E2C               	movwf	(map@out_max+1)^0,c
 10166  0018E2  0E00               	movlw	0
 10167  0018E4  6E2D               	movwf	(map@out_max+2)^0,c
 10168  0018E6  0E00               	movlw	0
 10169  0018E8  6E2E               	movwf	(map@out_max+3)^0,c
 10170  0018EA  ECD2  F018         	call	_map	;wreg free
 10171  0018EE  C01B  F053         	movff	?_map,pwmDuty@duty
 10172  0018F2  C01C  F054         	movff	?_map+1,pwmDuty@duty+1
 10173  0018F6  C01D  F055         	movff	?_map+2,pwmDuty@duty+2
 10174  0018FA  C01E  F056         	movff	?_map+3,pwmDuty@duty+3
 10175  0018FE                     
 10176                           ;./pwm.h: 24:     if (duty < 1024) {
 10177  0018FE  BE56               	btfsc	(pwmDuty@duty+3)^0,7,c
 10178  001900  EF8E  F00C         	goto	u4160
 10179  001904  5056               	movf	(pwmDuty@duty+3)^0,w,c
 10180  001906  1055               	iorwf	(pwmDuty@duty+2)^0,w,c
 10181  001908  E107               	bnz	u4161
 10182  00190A  0E04               	movlw	4
 10183  00190C  5C54               	subwf	(pwmDuty@duty+1)^0,w,c
 10184  00190E  B0D8               	btfsc	status,0,c
 10185  001910  EF8C  F00C         	goto	u4161
 10186  001914  EF8E  F00C         	goto	u4160
 10187  001918                     u4161:
 10188  001918  EF28  F00D         	goto	l174
 10189  00191C                     u4160:
 10190  00191C                     
 10191                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
 10192  00191C  0E00               	movlw	0
 10193  00191E  6E2C               	movwf	___flmul@a^0,c
 10194  001920  0E00               	movlw	0
 10195  001922  6E2D               	movwf	(___flmul@a+1)^0,c
 10196  001924  0EFA               	movlw	250
 10197  001926  6E2E               	movwf	(___flmul@a+2)^0,c
 10198  001928  0E43               	movlw	67
 10199  00192A  6E2F               	movwf	(___flmul@a+3)^0,c
 10200  00192C  0E00               	movlw	0
 10201  00192E  6E13               	movwf	___fldiv@a^0,c
 10202  001930  0EC0               	movlw	192
 10203  001932  6E14               	movwf	(___fldiv@a+1)^0,c
 10204  001934  0E7F               	movlw	127
 10205  001936  6E15               	movwf	(___fldiv@a+2)^0,c
 10206  001938  0E44               	movlw	68
 10207  00193A  6E16               	movwf	(___fldiv@a+3)^0,c
 10208  00193C  C053  F001         	movff	pwmDuty@duty,___xxtofl@val
 10209  001940  C054  F002         	movff	pwmDuty@duty+1,___xxtofl@val+1
 10210  001944  C055  F003         	movff	pwmDuty@duty+2,___xxtofl@val+2
 10211  001948  C056  F004         	movff	pwmDuty@duty+3,___xxtofl@val+3
 10212  00194C  0E01               	movlw	1
 10213  00194E  EC29  F00D         	call	___xxtofl
 10214  001952  C001  F00F         	movff	?___xxtofl,___fldiv@b
 10215  001956  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 10216  00195A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 10217  00195E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 10218  001962  EC82  F007         	call	___fldiv	;wreg free
 10219  001966  C00F  F028         	movff	?___fldiv,___flmul@b
 10220  00196A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
 10221  00196E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
 10222  001972  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
 10223  001976  EC6D  F005         	call	___flmul	;wreg free
 10224  00197A  C028  F041         	movff	?___flmul,___fltol@f1
 10225  00197E  C029  F042         	movff	?___flmul+1,___fltol@f1+1
 10226  001982  C02A  F043         	movff	?___flmul+2,___fltol@f1+2
 10227  001986  C02B  F044         	movff	?___flmul+3,___fltol@f1+3
 10228  00198A  ECD7  F014         	call	___fltol	;wreg free
 10229  00198E  C041  F053         	movff	?___fltol,pwmDuty@duty
 10230  001992  C042  F054         	movff	?___fltol+1,pwmDuty@duty+1
 10231  001996  C043  F055         	movff	?___fltol+2,pwmDuty@duty+2
 10232  00199A  C044  F056         	movff	?___fltol+3,pwmDuty@duty+3
 10233                           
 10234                           ;./pwm.h: 28:         switch (channel) {
 10235  00199E  EF13  F00D         	goto	l4812
 10236  0019A2                     l4806:
 10237                           
 10238                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
 10239  0019A2  0E02               	movlw	2
 10240  0019A4  6E4E               	movwf	??_pwmDuty^0,c
 10241  0019A6  C053  F04F         	movff	pwmDuty@duty,??_pwmDuty+1
 10242  0019AA  C054  F050         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10243  0019AE  C055  F051         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10244  0019B2  C056  F052         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10245  0019B6                     u4175:
 10246  0019B6  664E               	tstfsz	??_pwmDuty^0,c
 10247  0019B8  EFE0  F00C         	goto	u4176
 10248  0019BC  EFE8  F00C         	goto	u4177
 10249  0019C0                     u4176:
 10250  0019C0  3452               	rlcf	(??_pwmDuty+4)^0,w,c
 10251  0019C2  3252               	rrcf	(??_pwmDuty+4)^0,f,c
 10252  0019C4  3251               	rrcf	(??_pwmDuty+3)^0,f,c
 10253  0019C6  3250               	rrcf	(??_pwmDuty+2)^0,f,c
 10254  0019C8  324F               	rrcf	(??_pwmDuty+1)^0,f,c
 10255  0019CA  2E4E               	decfsz	??_pwmDuty^0,f,c
 10256  0019CC  EFDB  F00C         	goto	u4175
 10257  0019D0                     u4177:
 10258  0019D0  504F               	movf	(??_pwmDuty+1)^0,w,c
 10259  0019D2  6EBE               	movwf	190,c	;volatile
 10260                           
 10261                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
 10262  0019D4  0ECF               	movlw	207
 10263  0019D6  16BD               	andwf	189,f,c	;volatile
 10264                           
 10265                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
 10266  0019D8  3853               	swapf	pwmDuty@duty^0,w,c	;volatile
 10267  0019DA  0BF0               	andlw	240
 10268  0019DC  0B30               	andlw	48
 10269  0019DE  12BD               	iorwf	189,f,c	;volatile
 10270                           
 10271                           ;./pwm.h: 34:                 break;
 10272  0019E0  EF28  F00D         	goto	l174
 10273  0019E4                     l4808:
 10274                           
 10275                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
 10276  0019E4  0E02               	movlw	2
 10277  0019E6  6E4E               	movwf	??_pwmDuty^0,c
 10278  0019E8  C053  F04F         	movff	pwmDuty@duty,??_pwmDuty+1
 10279  0019EC  C054  F050         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10280  0019F0  C055  F051         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10281  0019F4  C056  F052         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10282  0019F8                     u4185:
 10283  0019F8  664E               	tstfsz	??_pwmDuty^0,c
 10284  0019FA  EF01  F00D         	goto	u4186
 10285  0019FE  EF09  F00D         	goto	u4187
 10286  001A02                     u4186:
 10287  001A02  3452               	rlcf	(??_pwmDuty+4)^0,w,c
 10288  001A04  3252               	rrcf	(??_pwmDuty+4)^0,f,c
 10289  001A06  3251               	rrcf	(??_pwmDuty+3)^0,f,c
 10290  001A08  3250               	rrcf	(??_pwmDuty+2)^0,f,c
 10291  001A0A  324F               	rrcf	(??_pwmDuty+1)^0,f,c
 10292  001A0C  2E4E               	decfsz	??_pwmDuty^0,f,c
 10293  001A0E  EFFC  F00C         	goto	u4185
 10294  001A12                     u4187:
 10295  001A12  504F               	movf	(??_pwmDuty+1)^0,w,c
 10296  001A14  6EBB               	movwf	187,c	;volatile
 10297                           
 10298                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
 10299  001A16  0ECF               	movlw	207
 10300  001A18  16BA               	andwf	186,f,c	;volatile
 10301                           
 10302                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
 10303  001A1A  3853               	swapf	pwmDuty@duty^0,w,c	;volatile
 10304  001A1C  0BF0               	andlw	240
 10305  001A1E  0B30               	andlw	48
 10306  001A20  12BA               	iorwf	186,f,c	;volatile
 10307                           
 10308                           ;./pwm.h: 40:                 break;
 10309  001A22  EF28  F00D         	goto	l174
 10310  001A26                     l4812:
 10311  001A26  504D               	movf	pwmDuty@channel^0,w,c
 10312  001A28  6E4E               	movwf	??_pwmDuty^0,c
 10313  001A2A  6A4F               	clrf	(??_pwmDuty+1)^0,c
 10314                           
 10315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10316                           ; Switch size 1, requested type "simple"
 10317                           ; Number of cases is 1, Range of values is 0 to 0
 10318                           ; switch strategies available:
 10319                           ; Name         Instructions Cycles
 10320                           ; simple_byte            4     3 (average)
 10321                           ;	Chosen strategy is simple_byte
 10322  001A2C  504F               	movf	(??_pwmDuty+1)^0,w,c
 10323  001A2E  0A00               	xorlw	0	; case 0
 10324  001A30  B4D8               	btfsc	status,2,c
 10325  001A32  EF1D  F00D         	goto	l5574
 10326  001A36  EF28  F00D         	goto	l174
 10327  001A3A                     l5574:
 10328                           
 10329                           ; Switch size 1, requested type "simple"
 10330                           ; Number of cases is 2, Range of values is 1 to 2
 10331                           ; switch strategies available:
 10332                           ; Name         Instructions Cycles
 10333                           ; simple_byte            7     4 (average)
 10334                           ;	Chosen strategy is simple_byte
 10335  001A3A  504E               	movf	??_pwmDuty^0,w,c
 10336  001A3C  0A01               	xorlw	1	; case 1
 10337  001A3E  B4D8               	btfsc	status,2,c
 10338  001A40  EFD1  F00C         	goto	l4806
 10339  001A44  0A03               	xorlw	3	; case 2
 10340  001A46  B4D8               	btfsc	status,2,c
 10341  001A48  EFF2  F00C         	goto	l4808
 10342  001A4C  EF28  F00D         	goto	l174
 10343  001A50                     l174:
 10344  001A50  0012               	return		;funcret
 10345  001A52                     __end_of_pwmDuty:
 10346                           	opt callstack 0
 10347                           
 10348 ;; *************** function _map *****************
 10349 ;; Defined at:
 10350 ;;		line 16 in file "./pwm.h"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  x               4   26[COMRAM] long 
 10353 ;;  in_min          4   30[COMRAM] long 
 10354 ;;  in_max          4   34[COMRAM] long 
 10355 ;;  out_min         4   38[COMRAM] long 
 10356 ;;  out_max         4   42[COMRAM] long 
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;		None
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  4   26[COMRAM] long 
 10361 ;; Registers used:
 10362 ;;		wreg, status,2, status,0, cstack
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10368 ;;      Params:        20       0       0       0       0       0       0       0       0
 10369 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10370 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10371 ;;      Totals:        20       0       0       0       0       0       0       0       0
 10372 ;;Total ram usage:       20 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:    2
 10375 ;; This function calls:
 10376 ;;		___aldiv
 10377 ;;		___lmul
 10378 ;; This function is called by:
 10379 ;;		_pwmDuty
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text52
 10384  0031A4                     __ptext52:
 10385                           	opt callstack 0
 10386  0031A4                     _map:
 10387                           	opt callstack 26
 10388  0031A4                     
 10389                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
 10390  0031A4  501F               	movf	map@in_min^0,w,c
 10391  0031A6  5C1B               	subwf	map@x^0,w,c
 10392  0031A8  6E01               	movwf	___lmul@multiplier^0,c
 10393  0031AA  5020               	movf	(map@in_min+1)^0,w,c
 10394  0031AC  581C               	subwfb	(map@x+1)^0,w,c
 10395  0031AE  6E02               	movwf	(___lmul@multiplier+1)^0,c
 10396  0031B0  5021               	movf	(map@in_min+2)^0,w,c
 10397  0031B2  581D               	subwfb	(map@x+2)^0,w,c
 10398  0031B4  6E03               	movwf	(___lmul@multiplier+2)^0,c
 10399  0031B6  5022               	movf	(map@in_min+3)^0,w,c
 10400  0031B8  581E               	subwfb	(map@x+3)^0,w,c
 10401  0031BA  6E04               	movwf	(___lmul@multiplier+3)^0,c
 10402  0031BC  5027               	movf	map@out_min^0,w,c
 10403  0031BE  5C2B               	subwf	map@out_max^0,w,c
 10404  0031C0  6E05               	movwf	___lmul@multiplicand^0,c
 10405  0031C2  5028               	movf	(map@out_min+1)^0,w,c
 10406  0031C4  582C               	subwfb	(map@out_max+1)^0,w,c
 10407  0031C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10408  0031C8  5029               	movf	(map@out_min+2)^0,w,c
 10409  0031CA  582D               	subwfb	(map@out_max+2)^0,w,c
 10410  0031CC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10411  0031CE  502A               	movf	(map@out_min+3)^0,w,c
 10412  0031D0  582E               	subwfb	(map@out_max+3)^0,w,c
 10413  0031D2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10414  0031D4  EC80  F019         	call	___lmul	;wreg free
 10415  0031D8  C001  F00D         	movff	?___lmul,___aldiv@dividend
 10416  0031DC  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
 10417  0031E0  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
 10418  0031E4  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
 10419  0031E8  501F               	movf	map@in_min^0,w,c
 10420  0031EA  5C23               	subwf	map@in_max^0,w,c
 10421  0031EC  6E11               	movwf	___aldiv@divisor^0,c
 10422  0031EE  5020               	movf	(map@in_min+1)^0,w,c
 10423  0031F0  5824               	subwfb	(map@in_max+1)^0,w,c
 10424  0031F2  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10425  0031F4  5021               	movf	(map@in_min+2)^0,w,c
 10426  0031F6  5825               	subwfb	(map@in_max+2)^0,w,c
 10427  0031F8  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10428  0031FA  5022               	movf	(map@in_min+3)^0,w,c
 10429  0031FC  5826               	subwfb	(map@in_max+3)^0,w,c
 10430  0031FE  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10431  003200  EC51  F014         	call	___aldiv	;wreg free
 10432  003204  5027               	movf	map@out_min^0,w,c
 10433  003206  240D               	addwf	?___aldiv^0,w,c
 10434  003208  6E1B               	movwf	?_map^0,c
 10435  00320A  5028               	movf	(map@out_min+1)^0,w,c
 10436  00320C  200E               	addwfc	(?___aldiv+1)^0,w,c
 10437  00320E  6E1C               	movwf	(?_map+1)^0,c
 10438  003210  5029               	movf	(map@out_min+2)^0,w,c
 10439  003212  200F               	addwfc	(?___aldiv+2)^0,w,c
 10440  003214  6E1D               	movwf	(?_map+2)^0,c
 10441  003216  502A               	movf	(map@out_min+3)^0,w,c
 10442  003218  2010               	addwfc	(?___aldiv+3)^0,w,c
 10443  00321A  6E1E               	movwf	(?_map+3)^0,c
 10444  00321C  0012               	return		;funcret
 10445  00321E                     __end_of_map:
 10446                           	opt callstack 0
 10447                           
 10448 ;; *************** function ___lmul *****************
 10449 ;; Defined at:
 10450 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  multiplier      4    0[COMRAM] unsigned long 
 10453 ;;  multiplicand    4    4[COMRAM] unsigned long 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;  product         4    8[COMRAM] unsigned long 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  4    0[COMRAM] unsigned long 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2, status,0
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10465 ;;      Params:         8       0       0       0       0       0       0       0       0
 10466 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10468 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10469 ;;Total ram usage:       12 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    1
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_map
 10476 ;;		_getValue
 10477 ;;		_asignarSetPoint
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text53
 10482  003300                     __ptext53:
 10483                           	opt callstack 0
 10484  003300                     ___lmul:
 10485                           	opt callstack 26
 10486  003300  0E00               	movlw	0
 10487  003302  6E09               	movwf	___lmul@product^0,c
 10488  003304  0E00               	movlw	0
 10489  003306  6E0A               	movwf	(___lmul@product+1)^0,c
 10490  003308  0E00               	movlw	0
 10491  00330A  6E0B               	movwf	(___lmul@product+2)^0,c
 10492  00330C  0E00               	movlw	0
 10493  00330E  6E0C               	movwf	(___lmul@product+3)^0,c
 10494  003310                     l3936:
 10495  003310  A001               	btfss	___lmul@multiplier^0,0,c
 10496  003312  EF8D  F019         	goto	u3131
 10497  003316  EF8F  F019         	goto	u3130
 10498  00331A                     u3131:
 10499  00331A  EF97  F019         	goto	l3940
 10500  00331E                     u3130:
 10501  00331E  5005               	movf	___lmul@multiplicand^0,w,c
 10502  003320  2609               	addwf	___lmul@product^0,f,c
 10503  003322  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 10504  003324  220A               	addwfc	(___lmul@product+1)^0,f,c
 10505  003326  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 10506  003328  220B               	addwfc	(___lmul@product+2)^0,f,c
 10507  00332A  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 10508  00332C  220C               	addwfc	(___lmul@product+3)^0,f,c
 10509  00332E                     l3940:
 10510  00332E  90D8               	bcf	status,0,c
 10511  003330  3605               	rlcf	___lmul@multiplicand^0,f,c
 10512  003332  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 10513  003334  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 10514  003336  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 10515  003338  90D8               	bcf	status,0,c
 10516  00333A  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 10517  00333C  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 10518  00333E  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 10519  003340  3201               	rrcf	___lmul@multiplier^0,f,c
 10520  003342  5001               	movf	___lmul@multiplier^0,w,c
 10521  003344  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 10522  003346  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 10523  003348  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 10524  00334A  A4D8               	btfss	status,2,c
 10525  00334C  EFAA  F019         	goto	u3141
 10526  003350  EFAC  F019         	goto	u3140
 10527  003354                     u3141:
 10528  003354  EF88  F019         	goto	l3936
 10529  003358                     u3140:
 10530  003358  C009  F001         	movff	___lmul@product,?___lmul
 10531  00335C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 10532  003360  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 10533  003364  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 10534  003368  0012               	return		;funcret
 10535  00336A                     __end_of___lmul:
 10536                           	opt callstack 0
 10537                           
 10538 ;; *************** function ___xxtofl *****************
 10539 ;; Defined at:
 10540 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  sign            1    wreg     unsigned char 
 10543 ;;  val             4    0[COMRAM] long 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  sign            1    8[COMRAM] unsigned char 
 10546 ;;  arg             4   10[COMRAM] unsigned long 
 10547 ;;  exp             1    9[COMRAM] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  4    0[COMRAM] unsigned char 
 10550 ;; Registers used:
 10551 ;;		wreg, status,2, status,0
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10557 ;;      Params:         4       0       0       0       0       0       0       0       0
 10558 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10559 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10560 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10561 ;;Total ram usage:       14 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    1
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		_bh1750_leer
 10568 ;;		_pwmDuty
 10569 ;;		_PID
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text54
 10574  001A52                     __ptext54:
 10575                           	opt callstack 0
 10576  001A52                     ___xxtofl:
 10577                           	opt callstack 25
 10578                           
 10579                           ;incstack = 0
 10580                           ;___xxtofl@sign stored from wreg
 10581  001A52  6E09               	movwf	___xxtofl@sign^0,c
 10582  001A54  5009               	movf	___xxtofl@sign^0,w,c
 10583  001A56  B4D8               	btfsc	status,2,c
 10584  001A58  EF30  F00D         	goto	u3451
 10585  001A5C  EF32  F00D         	goto	u3450
 10586  001A60                     u3451:
 10587  001A60  EF54  F00D         	goto	l1256
 10588  001A64                     u3450:
 10589  001A64  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10590  001A66  EF39  F00D         	goto	u3460
 10591  001A6A  EF37  F00D         	goto	u3461
 10592  001A6E                     u3461:
 10593  001A6E  EF54  F00D         	goto	l1256
 10594  001A72                     u3460:
 10595  001A72  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10596  001A76  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10597  001A7A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10598  001A7E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10599  001A82  1E05               	comf	??___xxtofl^0,f,c
 10600  001A84  1E06               	comf	(??___xxtofl+1)^0,f,c
 10601  001A86  1E07               	comf	(??___xxtofl+2)^0,f,c
 10602  001A88  1E08               	comf	(??___xxtofl+3)^0,f,c
 10603  001A8A  2A05               	incf	??___xxtofl^0,f,c
 10604  001A8C  0E00               	movlw	0
 10605  001A8E  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10606  001A90  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10607  001A92  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10608  001A94  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10609  001A98  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10610  001A9C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10611  001AA0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10612  001AA4  EF5C  F00D         	goto	l4132
 10613  001AA8                     l1256:
 10614  001AA8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10615  001AAC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10616  001AB0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10617  001AB4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10618  001AB8                     l4132:
 10619  001AB8  5001               	movf	___xxtofl@val^0,w,c
 10620  001ABA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10621  001ABC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10622  001ABE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10623  001AC0  A4D8               	btfss	status,2,c
 10624  001AC2  EF65  F00D         	goto	u3471
 10625  001AC6  EF67  F00D         	goto	u3470
 10626  001ACA                     u3471:
 10627  001ACA  EF71  F00D         	goto	l4138
 10628  001ACE                     u3470:
 10629  001ACE  0E00               	movlw	0
 10630  001AD0  6E01               	movwf	?___xxtofl^0,c
 10631  001AD2  0E00               	movlw	0
 10632  001AD4  6E02               	movwf	(?___xxtofl+1)^0,c
 10633  001AD6  0E00               	movlw	0
 10634  001AD8  6E03               	movwf	(?___xxtofl+2)^0,c
 10635  001ADA  0E00               	movlw	0
 10636  001ADC  6E04               	movwf	(?___xxtofl+3)^0,c
 10637  001ADE  EF02  F00E         	goto	l1259
 10638  001AE2                     l4138:
 10639  001AE2  0E96               	movlw	150
 10640  001AE4  6E0A               	movwf	___xxtofl@exp^0,c
 10641  001AE6  EF7B  F00D         	goto	l4142
 10642  001AEA                     l4140:
 10643  001AEA  2A0A               	incf	___xxtofl@exp^0,f,c
 10644  001AEC  90D8               	bcf	status,0,c
 10645  001AEE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10646  001AF0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10647  001AF2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10648  001AF4  320B               	rrcf	___xxtofl@arg^0,f,c
 10649  001AF6                     l4142:
 10650  001AF6  0E00               	movlw	0
 10651  001AF8  140B               	andwf	___xxtofl@arg^0,w,c
 10652  001AFA  6E05               	movwf	??___xxtofl^0,c
 10653  001AFC  0E00               	movlw	0
 10654  001AFE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10655  001B00  6E06               	movwf	(??___xxtofl+1)^0,c
 10656  001B02  0E00               	movlw	0
 10657  001B04  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10658  001B06  6E07               	movwf	(??___xxtofl+2)^0,c
 10659  001B08  0EFE               	movlw	254
 10660  001B0A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10661  001B0C  6E08               	movwf	(??___xxtofl+3)^0,c
 10662  001B0E  5005               	movf	??___xxtofl^0,w,c
 10663  001B10  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10664  001B12  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10665  001B14  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10666  001B16  A4D8               	btfss	status,2,c
 10667  001B18  EF90  F00D         	goto	u3481
 10668  001B1C  EF92  F00D         	goto	u3480
 10669  001B20                     u3481:
 10670  001B20  EF75  F00D         	goto	l4140
 10671  001B24                     u3480:
 10672  001B24  EFA0  F00D         	goto	l1263
 10673  001B28                     l4144:
 10674  001B28  2A0A               	incf	___xxtofl@exp^0,f,c
 10675  001B2A  0E01               	movlw	1
 10676  001B2C  260B               	addwf	___xxtofl@arg^0,f,c
 10677  001B2E  0E00               	movlw	0
 10678  001B30  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10679  001B32  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10680  001B34  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10681  001B36  90D8               	bcf	status,0,c
 10682  001B38  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10683  001B3A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10684  001B3C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10685  001B3E  320B               	rrcf	___xxtofl@arg^0,f,c
 10686  001B40                     l1263:
 10687  001B40  0E00               	movlw	0
 10688  001B42  140B               	andwf	___xxtofl@arg^0,w,c
 10689  001B44  6E05               	movwf	??___xxtofl^0,c
 10690  001B46  0E00               	movlw	0
 10691  001B48  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10692  001B4A  6E06               	movwf	(??___xxtofl+1)^0,c
 10693  001B4C  0E00               	movlw	0
 10694  001B4E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10695  001B50  6E07               	movwf	(??___xxtofl+2)^0,c
 10696  001B52  0EFF               	movlw	255
 10697  001B54  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10698  001B56  6E08               	movwf	(??___xxtofl+3)^0,c
 10699  001B58  5005               	movf	??___xxtofl^0,w,c
 10700  001B5A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10701  001B5C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10702  001B5E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10703  001B60  A4D8               	btfss	status,2,c
 10704  001B62  EFB5  F00D         	goto	u3491
 10705  001B66  EFB7  F00D         	goto	u3490
 10706  001B6A                     u3491:
 10707  001B6A  EF94  F00D         	goto	l4144
 10708  001B6E                     u3490:
 10709  001B6E  EFBF  F00D         	goto	l4152
 10710  001B72                     l4150:
 10711  001B72  060A               	decf	___xxtofl@exp^0,f,c
 10712  001B74  90D8               	bcf	status,0,c
 10713  001B76  360B               	rlcf	___xxtofl@arg^0,f,c
 10714  001B78  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10715  001B7A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10716  001B7C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10717  001B7E                     l4152:
 10718  001B7E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10719  001B80  EFC4  F00D         	goto	u3501
 10720  001B84  EFC6  F00D         	goto	u3500
 10721  001B88                     u3501:
 10722  001B88  EFCE  F00D         	goto	l1270
 10723  001B8C                     u3500:
 10724  001B8C  0E02               	movlw	2
 10725  001B8E  600A               	cpfslt	___xxtofl@exp^0,c
 10726  001B90  EFCC  F00D         	goto	u3511
 10727  001B94  EFCE  F00D         	goto	u3510
 10728  001B98                     u3511:
 10729  001B98  EFB9  F00D         	goto	l4150
 10730  001B9C                     u3510:
 10731  001B9C                     l1270:
 10732  001B9C  B00A               	btfsc	___xxtofl@exp^0,0,c
 10733  001B9E  EFD3  F00D         	goto	u3521
 10734  001BA2  EFD5  F00D         	goto	u3520
 10735  001BA6                     u3521:
 10736  001BA6  EFD6  F00D         	goto	l4158
 10737  001BAA                     u3520:
 10738  001BAA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10739  001BAC                     l4158:
 10740  001BAC  90D8               	bcf	status,0,c
 10741  001BAE  320A               	rrcf	___xxtofl@exp^0,f,c
 10742  001BB0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10743  001BB4  6A06               	clrf	(??___xxtofl+1)^0,c
 10744  001BB6  6A07               	clrf	(??___xxtofl+2)^0,c
 10745  001BB8  6A08               	clrf	(??___xxtofl+3)^0,c
 10746  001BBA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10747  001BBE  6A07               	clrf	(??___xxtofl+2)^0,c
 10748  001BC0  6A06               	clrf	(??___xxtofl+1)^0,c
 10749  001BC2  6A05               	clrf	??___xxtofl^0,c
 10750  001BC4  5005               	movf	??___xxtofl^0,w,c
 10751  001BC6  120B               	iorwf	___xxtofl@arg^0,f,c
 10752  001BC8  5006               	movf	(??___xxtofl+1)^0,w,c
 10753  001BCA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10754  001BCC  5007               	movf	(??___xxtofl+2)^0,w,c
 10755  001BCE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10756  001BD0  5008               	movf	(??___xxtofl+3)^0,w,c
 10757  001BD2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10758  001BD4  5009               	movf	___xxtofl@sign^0,w,c
 10759  001BD6  B4D8               	btfsc	status,2,c
 10760  001BD8  EFF0  F00D         	goto	u3531
 10761  001BDC  EFF2  F00D         	goto	u3530
 10762  001BE0                     u3531:
 10763  001BE0  EFFA  F00D         	goto	l4168
 10764  001BE4                     u3530:
 10765  001BE4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10766  001BE6  EFF9  F00D         	goto	u3540
 10767  001BEA  EFF7  F00D         	goto	u3541
 10768  001BEE                     u3541:
 10769  001BEE  EFFA  F00D         	goto	l4168
 10770  001BF2                     u3540:
 10771  001BF2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10772  001BF4                     l4168:
 10773  001BF4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10774  001BF8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10775  001BFC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10776  001C00  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10777  001C04                     l1259:
 10778  001C04  0012               	return		;funcret
 10779  001C06                     __end_of___xxtofl:
 10780                           	opt callstack 0
 10781                           
 10782 ;; *************** function ___fltol *****************
 10783 ;; Defined at:
 10784 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;  f1              4   64[COMRAM] unsigned char 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  exp1            1   73[COMRAM] unsigned char 
 10789 ;;  sign1           1   72[COMRAM] unsigned char 
 10790 ;; Return value:  Size  Location     Type
 10791 ;;                  4   64[COMRAM] long 
 10792 ;; Registers used:
 10793 ;;		wreg, status,2, status,0
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/0
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10799 ;;      Params:         4       0       0       0       0       0       0       0       0
 10800 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10801 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10802 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10803 ;;Total ram usage:       10 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:    1
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_bh1750_leer
 10810 ;;		_pwmDuty
 10811 ;;		_PID
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           	psect	text55
 10816  0029AE                     __ptext55:
 10817                           	opt callstack 0
 10818  0029AE                     ___fltol:
 10819                           	opt callstack 25
 10820  0029AE  3443               	rlcf	(___fltol@f1+2)^0,w,c
 10821  0029B0  3444               	rlcf	(___fltol@f1+3)^0,w,c
 10822  0029B2  6E4A               	movwf	___fltol@exp1^0,c
 10823  0029B4  504A               	movf	___fltol@exp1^0,w,c
 10824  0029B6  A4D8               	btfss	status,2,c
 10825  0029B8  EFE0  F014         	goto	u3381
 10826  0029BC  EFE2  F014         	goto	u3380
 10827  0029C0                     u3381:
 10828  0029C0  EFEC  F014         	goto	l4088
 10829  0029C4                     u3380:
 10830  0029C4                     l4084:
 10831  0029C4  0E00               	movlw	0
 10832  0029C6  6E41               	movwf	?___fltol^0,c
 10833  0029C8  0E00               	movlw	0
 10834  0029CA  6E42               	movwf	(?___fltol+1)^0,c
 10835  0029CC  0E00               	movlw	0
 10836  0029CE  6E43               	movwf	(?___fltol+2)^0,c
 10837  0029D0  0E00               	movlw	0
 10838  0029D2  6E44               	movwf	(?___fltol+3)^0,c
 10839  0029D4  EF59  F015         	goto	l898
 10840  0029D8                     l4088:
 10841  0029D8  C041  F045         	movff	___fltol@f1,??___fltol
 10842  0029DC  C042  F046         	movff	___fltol@f1+1,??___fltol+1
 10843  0029E0  C043  F047         	movff	___fltol@f1+2,??___fltol+2
 10844  0029E4  C044  F048         	movff	___fltol@f1+3,??___fltol+3
 10845  0029E8  0E20               	movlw	32
 10846  0029EA  EFFC  F014         	goto	u3390
 10847  0029EE                     u3395:
 10848  0029EE  90D8               	bcf	status,0,c
 10849  0029F0  3248               	rrcf	(??___fltol+3)^0,f,c
 10850  0029F2  3247               	rrcf	(??___fltol+2)^0,f,c
 10851  0029F4  3246               	rrcf	(??___fltol+1)^0,f,c
 10852  0029F6  3245               	rrcf	??___fltol^0,f,c
 10853  0029F8                     u3390:
 10854  0029F8  2EE8               	decfsz	wreg,f,c
 10855  0029FA  EFF7  F014         	goto	u3395
 10856  0029FE  5045               	movf	??___fltol^0,w,c
 10857  002A00  6E49               	movwf	___fltol@sign1^0,c
 10858  002A02  8E43               	bsf	(___fltol@f1+2)^0,7,c
 10859  002A04  0EFF               	movlw	255
 10860  002A06  1641               	andwf	___fltol@f1^0,f,c
 10861  002A08  0EFF               	movlw	255
 10862  002A0A  1642               	andwf	(___fltol@f1+1)^0,f,c
 10863  002A0C  0EFF               	movlw	255
 10864  002A0E  1643               	andwf	(___fltol@f1+2)^0,f,c
 10865  002A10  0E00               	movlw	0
 10866  002A12  1644               	andwf	(___fltol@f1+3)^0,f,c
 10867  002A14  0E96               	movlw	150
 10868  002A16  5E4A               	subwf	___fltol@exp1^0,f,c
 10869  002A18  BE4A               	btfsc	___fltol@exp1^0,7,c
 10870  002A1A  EF13  F015         	goto	u3400
 10871  002A1E  EF11  F015         	goto	u3401
 10872  002A22                     u3401:
 10873  002A22  EF29  F015         	goto	l4108
 10874  002A26                     u3400:
 10875  002A26  504A               	movf	___fltol@exp1^0,w,c
 10876  002A28  0A80               	xorlw	128
 10877  002A2A  0F97               	addlw	151
 10878  002A2C  B0D8               	btfsc	status,0,c
 10879  002A2E  EF1B  F015         	goto	u3411
 10880  002A32  EF1D  F015         	goto	u3410
 10881  002A36                     u3411:
 10882  002A36  EF1F  F015         	goto	l4104
 10883  002A3A                     u3410:
 10884  002A3A  EFE2  F014         	goto	l4084
 10885  002A3E                     l4104:
 10886  002A3E  90D8               	bcf	status,0,c
 10887  002A40  3244               	rrcf	(___fltol@f1+3)^0,f,c
 10888  002A42  3243               	rrcf	(___fltol@f1+2)^0,f,c
 10889  002A44  3242               	rrcf	(___fltol@f1+1)^0,f,c
 10890  002A46  3241               	rrcf	___fltol@f1^0,f,c
 10891  002A48  3E4A               	incfsz	___fltol@exp1^0,f,c
 10892  002A4A  EF1F  F015         	goto	l4104
 10893  002A4E  EF41  F015         	goto	l4118
 10894  002A52                     l4108:
 10895  002A52  0E1F               	movlw	31
 10896  002A54  644A               	cpfsgt	___fltol@exp1^0,c
 10897  002A56  EF2F  F015         	goto	u3421
 10898  002A5A  EF31  F015         	goto	u3420
 10899  002A5E                     u3421:
 10900  002A5E  EF39  F015         	goto	l4116
 10901  002A62                     u3420:
 10902  002A62  EFE2  F014         	goto	l4084
 10903  002A66                     l4114:
 10904  002A66  90D8               	bcf	status,0,c
 10905  002A68  3641               	rlcf	___fltol@f1^0,f,c
 10906  002A6A  3642               	rlcf	(___fltol@f1+1)^0,f,c
 10907  002A6C  3643               	rlcf	(___fltol@f1+2)^0,f,c
 10908  002A6E  3644               	rlcf	(___fltol@f1+3)^0,f,c
 10909  002A70  064A               	decf	___fltol@exp1^0,f,c
 10910  002A72                     l4116:
 10911  002A72  504A               	movf	___fltol@exp1^0,w,c
 10912  002A74  A4D8               	btfss	status,2,c
 10913  002A76  EF3F  F015         	goto	u3431
 10914  002A7A  EF41  F015         	goto	u3430
 10915  002A7E                     u3431:
 10916  002A7E  EF33  F015         	goto	l4114
 10917  002A82                     u3430:
 10918  002A82                     l4118:
 10919  002A82  5049               	movf	___fltol@sign1^0,w,c
 10920  002A84  B4D8               	btfsc	status,2,c
 10921  002A86  EF47  F015         	goto	u3441
 10922  002A8A  EF49  F015         	goto	u3440
 10923  002A8E                     u3441:
 10924  002A8E  EF51  F015         	goto	l4122
 10925  002A92                     u3440:
 10926  002A92  1E44               	comf	(___fltol@f1+3)^0,f,c
 10927  002A94  1E43               	comf	(___fltol@f1+2)^0,f,c
 10928  002A96  1E42               	comf	(___fltol@f1+1)^0,f,c
 10929  002A98  6C41               	negf	___fltol@f1^0,c
 10930  002A9A  0E00               	movlw	0
 10931  002A9C  2242               	addwfc	(___fltol@f1+1)^0,f,c
 10932  002A9E  2243               	addwfc	(___fltol@f1+2)^0,f,c
 10933  002AA0  2244               	addwfc	(___fltol@f1+3)^0,f,c
 10934  002AA2                     l4122:
 10935  002AA2  C041  F041         	movff	___fltol@f1,?___fltol
 10936  002AA6  C042  F042         	movff	___fltol@f1+1,?___fltol+1
 10937  002AAA  C043  F043         	movff	___fltol@f1+2,?___fltol+2
 10938  002AAE  C044  F044         	movff	___fltol@f1+3,?___fltol+3
 10939  002AB2                     l898:
 10940  002AB2  0012               	return		;funcret
 10941  002AB4                     __end_of___fltol:
 10942                           	opt callstack 0
 10943                           
 10944 ;; *************** function ___flmul *****************
 10945 ;; Defined at:
 10946 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;  b               4   39[COMRAM] long 
 10949 ;;  a               4   43[COMRAM] long 
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;  prod            4   58[COMRAM] struct .
 10952 ;;  grs             4   52[COMRAM] unsigned long 
 10953 ;;  temp            2   62[COMRAM] struct .
 10954 ;;  bexp            1   57[COMRAM] unsigned char 
 10955 ;;  aexp            1   56[COMRAM] unsigned char 
 10956 ;;  sign            1   51[COMRAM] unsigned char 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  4   39[COMRAM] unsigned char 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0, prodl, prodh
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10966 ;;      Params:         8       0       0       0       0       0       0       0       0
 10967 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10968 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10969 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10970 ;;Total ram usage:       25 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    1
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_pwmDuty
 10977 ;;		_PID
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text56
 10982  000ADA                     __ptext56:
 10983                           	opt callstack 0
 10984  000ADA                     ___flmul:
 10985                           	opt callstack 27
 10986  000ADA  502B               	movf	(___flmul@b+3)^0,w,c
 10987  000ADC  0B80               	andlw	128
 10988  000ADE  6E34               	movwf	___flmul@sign^0,c
 10989  000AE0  502B               	movf	(___flmul@b+3)^0,w,c
 10990  000AE2  242B               	addwf	(___flmul@b+3)^0,w,c
 10991  000AE4  6E3A               	movwf	___flmul@bexp^0,c
 10992  000AE6  AE2A               	btfss	(___flmul@b+2)^0,7,c
 10993  000AE8  EF78  F005         	goto	u3971
 10994  000AEC  EF7A  F005         	goto	u3970
 10995  000AF0                     u3971:
 10996  000AF0  EF7B  F005         	goto	l4676
 10997  000AF4                     u3970:
 10998  000AF4  803A               	bsf	___flmul@bexp^0,0,c
 10999  000AF6                     l4676:
 11000  000AF6  503A               	movf	___flmul@bexp^0,w,c
 11001  000AF8  B4D8               	btfsc	status,2,c
 11002  000AFA  EF81  F005         	goto	u3981
 11003  000AFE  EF83  F005         	goto	u3980
 11004  000B02                     u3981:
 11005  000B02  EF96  F005         	goto	l4684
 11006  000B06                     u3980:
 11007  000B06  283A               	incf	___flmul@bexp^0,w,c
 11008  000B08  A4D8               	btfss	status,2,c
 11009  000B0A  EF89  F005         	goto	u3991
 11010  000B0E  EF8B  F005         	goto	u3990
 11011  000B12                     u3991:
 11012  000B12  EF93  F005         	goto	l4682
 11013  000B16                     u3990:
 11014  000B16  0E00               	movlw	0
 11015  000B18  6E28               	movwf	___flmul@b^0,c
 11016  000B1A  0E00               	movlw	0
 11017  000B1C  6E29               	movwf	(___flmul@b+1)^0,c
 11018  000B1E  0E00               	movlw	0
 11019  000B20  6E2A               	movwf	(___flmul@b+2)^0,c
 11020  000B22  0E00               	movlw	0
 11021  000B24  6E2B               	movwf	(___flmul@b+3)^0,c
 11022  000B26                     l4682:
 11023  000B26  8E2A               	bsf	(___flmul@b+2)^0,7,c
 11024  000B28  EF9E  F005         	goto	l4686
 11025  000B2C                     l4684:
 11026  000B2C  0E00               	movlw	0
 11027  000B2E  6E28               	movwf	___flmul@b^0,c
 11028  000B30  0E00               	movlw	0
 11029  000B32  6E29               	movwf	(___flmul@b+1)^0,c
 11030  000B34  0E00               	movlw	0
 11031  000B36  6E2A               	movwf	(___flmul@b+2)^0,c
 11032  000B38  0E00               	movlw	0
 11033  000B3A  6E2B               	movwf	(___flmul@b+3)^0,c
 11034  000B3C                     l4686:
 11035  000B3C  502F               	movf	(___flmul@a+3)^0,w,c
 11036  000B3E  0B80               	andlw	128
 11037  000B40  1A34               	xorwf	___flmul@sign^0,f,c
 11038  000B42  502F               	movf	(___flmul@a+3)^0,w,c
 11039  000B44  242F               	addwf	(___flmul@a+3)^0,w,c
 11040  000B46  6E39               	movwf	___flmul@aexp^0,c
 11041  000B48  AE2E               	btfss	(___flmul@a+2)^0,7,c
 11042  000B4A  EFA9  F005         	goto	u4001
 11043  000B4E  EFAB  F005         	goto	u4000
 11044  000B52                     u4001:
 11045  000B52  EFAC  F005         	goto	l4694
 11046  000B56                     u4000:
 11047  000B56  8039               	bsf	___flmul@aexp^0,0,c
 11048  000B58                     l4694:
 11049  000B58  5039               	movf	___flmul@aexp^0,w,c
 11050  000B5A  B4D8               	btfsc	status,2,c
 11051  000B5C  EFB2  F005         	goto	u4011
 11052  000B60  EFB4  F005         	goto	u4010
 11053  000B64                     u4011:
 11054  000B64  EFC7  F005         	goto	l4702
 11055  000B68                     u4010:
 11056  000B68  2839               	incf	___flmul@aexp^0,w,c
 11057  000B6A  A4D8               	btfss	status,2,c
 11058  000B6C  EFBA  F005         	goto	u4021
 11059  000B70  EFBC  F005         	goto	u4020
 11060  000B74                     u4021:
 11061  000B74  EFC4  F005         	goto	l4700
 11062  000B78                     u4020:
 11063  000B78  0E00               	movlw	0
 11064  000B7A  6E2C               	movwf	___flmul@a^0,c
 11065  000B7C  0E00               	movlw	0
 11066  000B7E  6E2D               	movwf	(___flmul@a+1)^0,c
 11067  000B80  0E00               	movlw	0
 11068  000B82  6E2E               	movwf	(___flmul@a+2)^0,c
 11069  000B84  0E00               	movlw	0
 11070  000B86  6E2F               	movwf	(___flmul@a+3)^0,c
 11071  000B88                     l4700:
 11072  000B88  8E2E               	bsf	(___flmul@a+2)^0,7,c
 11073  000B8A  EFCF  F005         	goto	l1215
 11074  000B8E                     l4702:
 11075  000B8E  0E00               	movlw	0
 11076  000B90  6E2C               	movwf	___flmul@a^0,c
 11077  000B92  0E00               	movlw	0
 11078  000B94  6E2D               	movwf	(___flmul@a+1)^0,c
 11079  000B96  0E00               	movlw	0
 11080  000B98  6E2E               	movwf	(___flmul@a+2)^0,c
 11081  000B9A  0E00               	movlw	0
 11082  000B9C  6E2F               	movwf	(___flmul@a+3)^0,c
 11083  000B9E                     l1215:
 11084  000B9E  5039               	movf	___flmul@aexp^0,w,c
 11085  000BA0  B4D8               	btfsc	status,2,c
 11086  000BA2  EFD5  F005         	goto	u4031
 11087  000BA6  EFD7  F005         	goto	u4030
 11088  000BAA                     u4031:
 11089  000BAA  EFDF  F005         	goto	l4706
 11090  000BAE                     u4030:
 11091  000BAE  503A               	movf	___flmul@bexp^0,w,c
 11092  000BB0  A4D8               	btfss	status,2,c
 11093  000BB2  EFDD  F005         	goto	u4041
 11094  000BB6  EFDF  F005         	goto	u4040
 11095  000BBA                     u4041:
 11096  000BBA  EFE9  F005         	goto	l4710
 11097  000BBE                     u4040:
 11098  000BBE                     l4706:
 11099  000BBE  0E00               	movlw	0
 11100  000BC0  6E28               	movwf	?___flmul^0,c
 11101  000BC2  0E00               	movlw	0
 11102  000BC4  6E29               	movwf	(?___flmul+1)^0,c
 11103  000BC6  0E00               	movlw	0
 11104  000BC8  6E2A               	movwf	(?___flmul+2)^0,c
 11105  000BCA  0E00               	movlw	0
 11106  000BCC  6E2B               	movwf	(?___flmul+3)^0,c
 11107  000BCE  EF81  F007         	goto	l1219
 11108  000BD2                     l4710:
 11109  000BD2  502E               	movf	(___flmul@a+2)^0,w,c
 11110  000BD4  0228               	mulwf	___flmul@b^0,c
 11111  000BD6  CFF3 F03F          	movff	prodl,___flmul@temp
 11112  000BDA  CFF4 F040          	movff	prodh,___flmul@temp+1
 11113  000BDE  503F               	movf	___flmul@temp^0,w,c
 11114  000BE0  6E35               	movwf	___flmul@grs^0,c
 11115  000BE2  6A36               	clrf	(___flmul@grs+1)^0,c
 11116  000BE4  6A37               	clrf	(___flmul@grs+2)^0,c
 11117  000BE6  6A38               	clrf	(___flmul@grs+3)^0,c
 11118  000BE8  5040               	movf	(___flmul@temp+1)^0,w,c
 11119  000BEA  6E3B               	movwf	___flmul@prod^0,c
 11120  000BEC  6A3C               	clrf	(___flmul@prod+1)^0,c
 11121  000BEE  6A3D               	clrf	(___flmul@prod+2)^0,c
 11122  000BF0  6A3E               	clrf	(___flmul@prod+3)^0,c
 11123  000BF2  502D               	movf	(___flmul@a+1)^0,w,c
 11124  000BF4  0229               	mulwf	(___flmul@b+1)^0,c
 11125  000BF6  CFF3 F03F          	movff	prodl,___flmul@temp
 11126  000BFA  CFF4 F040          	movff	prodh,___flmul@temp+1
 11127  000BFE  503F               	movf	___flmul@temp^0,w,c
 11128  000C00  2635               	addwf	___flmul@grs^0,f,c
 11129  000C02  0E00               	movlw	0
 11130  000C04  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11131  000C06  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11132  000C08  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11133  000C0A  5040               	movf	(___flmul@temp+1)^0,w,c
 11134  000C0C  263B               	addwf	___flmul@prod^0,f,c
 11135  000C0E  0E00               	movlw	0
 11136  000C10  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11137  000C12  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11138  000C14  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11139  000C16  502C               	movf	___flmul@a^0,w,c
 11140  000C18  022A               	mulwf	(___flmul@b+2)^0,c
 11141  000C1A  CFF3 F03F          	movff	prodl,___flmul@temp
 11142  000C1E  CFF4 F040          	movff	prodh,___flmul@temp+1
 11143  000C22  503F               	movf	___flmul@temp^0,w,c
 11144  000C24  2635               	addwf	___flmul@grs^0,f,c
 11145  000C26  0E00               	movlw	0
 11146  000C28  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11147  000C2A  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11148  000C2C  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11149  000C2E  5040               	movf	(___flmul@temp+1)^0,w,c
 11150  000C30  263B               	addwf	___flmul@prod^0,f,c
 11151  000C32  0E00               	movlw	0
 11152  000C34  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11153  000C36  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11154  000C38  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11155  000C3A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11156  000C3E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11157  000C42  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11158  000C46  6A35               	clrf	___flmul@grs^0,c
 11159  000C48  502C               	movf	___flmul@a^0,w,c
 11160  000C4A  0229               	mulwf	(___flmul@b+1)^0,c
 11161  000C4C  CFF3 F03F          	movff	prodl,___flmul@temp
 11162  000C50  CFF4 F040          	movff	prodh,___flmul@temp+1
 11163  000C54  503F               	movf	___flmul@temp^0,w,c
 11164  000C56  2635               	addwf	___flmul@grs^0,f,c
 11165  000C58  5040               	movf	(___flmul@temp+1)^0,w,c
 11166  000C5A  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11167  000C5C  0E00               	movlw	0
 11168  000C5E  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11169  000C60  0E00               	movlw	0
 11170  000C62  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11171  000C64  502D               	movf	(___flmul@a+1)^0,w,c
 11172  000C66  0228               	mulwf	___flmul@b^0,c
 11173  000C68  CFF3 F03F          	movff	prodl,___flmul@temp
 11174  000C6C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11175  000C70  503F               	movf	___flmul@temp^0,w,c
 11176  000C72  2635               	addwf	___flmul@grs^0,f,c
 11177  000C74  5040               	movf	(___flmul@temp+1)^0,w,c
 11178  000C76  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11179  000C78  0E00               	movlw	0
 11180  000C7A  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11181  000C7C  0E00               	movlw	0
 11182  000C7E  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11183  000C80  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11184  000C84  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11185  000C88  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11186  000C8C  6A35               	clrf	___flmul@grs^0,c
 11187  000C8E  502C               	movf	___flmul@a^0,w,c
 11188  000C90  0228               	mulwf	___flmul@b^0,c
 11189  000C92  CFF3 F03F          	movff	prodl,___flmul@temp
 11190  000C96  CFF4 F040          	movff	prodh,___flmul@temp+1
 11191  000C9A  503F               	movf	___flmul@temp^0,w,c
 11192  000C9C  2635               	addwf	___flmul@grs^0,f,c
 11193  000C9E  5040               	movf	(___flmul@temp+1)^0,w,c
 11194  000CA0  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11195  000CA2  0E00               	movlw	0
 11196  000CA4  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11197  000CA6  0E00               	movlw	0
 11198  000CA8  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11199  000CAA  502E               	movf	(___flmul@a+2)^0,w,c
 11200  000CAC  0229               	mulwf	(___flmul@b+1)^0,c
 11201  000CAE  CFF3 F03F          	movff	prodl,___flmul@temp
 11202  000CB2  CFF4 F040          	movff	prodh,___flmul@temp+1
 11203  000CB6  503F               	movf	___flmul@temp^0,w,c
 11204  000CB8  263B               	addwf	___flmul@prod^0,f,c
 11205  000CBA  5040               	movf	(___flmul@temp+1)^0,w,c
 11206  000CBC  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11207  000CBE  0E00               	movlw	0
 11208  000CC0  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11209  000CC2  0E00               	movlw	0
 11210  000CC4  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11211  000CC6  502D               	movf	(___flmul@a+1)^0,w,c
 11212  000CC8  022A               	mulwf	(___flmul@b+2)^0,c
 11213  000CCA  CFF3 F03F          	movff	prodl,___flmul@temp
 11214  000CCE  CFF4 F040          	movff	prodh,___flmul@temp+1
 11215  000CD2  503F               	movf	___flmul@temp^0,w,c
 11216  000CD4  263B               	addwf	___flmul@prod^0,f,c
 11217  000CD6  5040               	movf	(___flmul@temp+1)^0,w,c
 11218  000CD8  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11219  000CDA  0E00               	movlw	0
 11220  000CDC  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11221  000CDE  0E00               	movlw	0
 11222  000CE0  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11223  000CE2  502E               	movf	(___flmul@a+2)^0,w,c
 11224  000CE4  022A               	mulwf	(___flmul@b+2)^0,c
 11225  000CE6  CFF3 F03F          	movff	prodl,___flmul@temp
 11226  000CEA  CFF4 F040          	movff	prodh,___flmul@temp+1
 11227  000CEE  503F               	movf	___flmul@temp^0,w,c
 11228  000CF0  6E30               	movwf	??___flmul^0,c
 11229  000CF2  5040               	movf	(___flmul@temp+1)^0,w,c
 11230  000CF4  6E31               	movwf	(??___flmul+1)^0,c
 11231  000CF6  6A32               	clrf	(??___flmul+2)^0,c
 11232  000CF8  6A33               	clrf	(??___flmul+3)^0,c
 11233  000CFA  C032  F033         	movff	??___flmul+2,??___flmul+3
 11234  000CFE  C031  F032         	movff	??___flmul+1,??___flmul+2
 11235  000D02  C030  F031         	movff	??___flmul,??___flmul+1
 11236  000D06  6A30               	clrf	??___flmul^0,c
 11237  000D08  5030               	movf	??___flmul^0,w,c
 11238  000D0A  263B               	addwf	___flmul@prod^0,f,c
 11239  000D0C  5031               	movf	(??___flmul+1)^0,w,c
 11240  000D0E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11241  000D10  5032               	movf	(??___flmul+2)^0,w,c
 11242  000D12  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11243  000D14  5033               	movf	(??___flmul+3)^0,w,c
 11244  000D16  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11245  000D18  C035  F030         	movff	___flmul@grs,??___flmul
 11246  000D1C  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11247  000D20  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11248  000D24  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11249  000D28  0E19               	movlw	25
 11250  000D2A  EF9C  F006         	goto	u4050
 11251  000D2E                     u4055:
 11252  000D2E  90D8               	bcf	status,0,c
 11253  000D30  3233               	rrcf	(??___flmul+3)^0,f,c
 11254  000D32  3232               	rrcf	(??___flmul+2)^0,f,c
 11255  000D34  3231               	rrcf	(??___flmul+1)^0,f,c
 11256  000D36  3230               	rrcf	??___flmul^0,f,c
 11257  000D38                     u4050:
 11258  000D38  2EE8               	decfsz	wreg,f,c
 11259  000D3A  EF97  F006         	goto	u4055
 11260  000D3E  5030               	movf	??___flmul^0,w,c
 11261  000D40  263B               	addwf	___flmul@prod^0,f,c
 11262  000D42  5031               	movf	(??___flmul+1)^0,w,c
 11263  000D44  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11264  000D46  5032               	movf	(??___flmul+2)^0,w,c
 11265  000D48  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11266  000D4A  5033               	movf	(??___flmul+3)^0,w,c
 11267  000D4C  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11268  000D4E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11269  000D52  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11270  000D56  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11271  000D5A  6A35               	clrf	___flmul@grs^0,c
 11272  000D5C  5039               	movf	___flmul@aexp^0,w,c
 11273  000D5E  C03A  F030         	movff	___flmul@bexp,??___flmul
 11274  000D62  6A31               	clrf	(??___flmul+1)^0,c
 11275  000D64  2630               	addwf	??___flmul^0,f,c
 11276  000D66  0E00               	movlw	0
 11277  000D68  2231               	addwfc	(??___flmul+1)^0,f,c
 11278  000D6A  0E82               	movlw	130
 11279  000D6C  2430               	addwf	??___flmul^0,w,c
 11280  000D6E  6E3F               	movwf	___flmul@temp^0,c
 11281  000D70  0EFF               	movlw	255
 11282  000D72  2031               	addwfc	(??___flmul+1)^0,w,c
 11283  000D74  6E40               	movwf	(___flmul@temp+1)^0,c
 11284  000D76  EFD2  F006         	goto	l4758
 11285  000D7A                     l4752:
 11286  000D7A  90D8               	bcf	status,0,c
 11287  000D7C  363B               	rlcf	___flmul@prod^0,f,c
 11288  000D7E  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11289  000D80  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11290  000D82  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11291  000D84  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11292  000D86  EFC7  F006         	goto	u4061
 11293  000D8A  EFC9  F006         	goto	u4060
 11294  000D8E                     u4061:
 11295  000D8E  EFCA  F006         	goto	l1222
 11296  000D92                     u4060:
 11297  000D92  803B               	bsf	___flmul@prod^0,0,c
 11298  000D94                     l1222:
 11299  000D94  90D8               	bcf	status,0,c
 11300  000D96  3635               	rlcf	___flmul@grs^0,f,c
 11301  000D98  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11302  000D9A  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11303  000D9C  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11304  000D9E  063F               	decf	___flmul@temp^0,f,c
 11305  000DA0  A0D8               	btfss	status,0,c
 11306  000DA2  0640               	decf	(___flmul@temp+1)^0,f,c
 11307  000DA4                     l4758:
 11308  000DA4  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11309  000DA6  EFD7  F006         	goto	u4071
 11310  000DAA  EFD9  F006         	goto	u4070
 11311  000DAE                     u4071:
 11312  000DAE  EFBD  F006         	goto	l4752
 11313  000DB2                     u4070:
 11314  000DB2  0E00               	movlw	0
 11315  000DB4  6E39               	movwf	___flmul@aexp^0,c
 11316  000DB6  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11317  000DB8  EFE0  F006         	goto	u4081
 11318  000DBC  EFE2  F006         	goto	u4080
 11319  000DC0                     u4081:
 11320  000DC0  EF06  F007         	goto	l1224
 11321  000DC4                     u4080:
 11322  000DC4  0EFF               	movlw	255
 11323  000DC6  1435               	andwf	___flmul@grs^0,w,c
 11324  000DC8  6E30               	movwf	??___flmul^0,c
 11325  000DCA  0EFF               	movlw	255
 11326  000DCC  1436               	andwf	(___flmul@grs+1)^0,w,c
 11327  000DCE  6E31               	movwf	(??___flmul+1)^0,c
 11328  000DD0  0EFF               	movlw	255
 11329  000DD2  1437               	andwf	(___flmul@grs+2)^0,w,c
 11330  000DD4  6E32               	movwf	(??___flmul+2)^0,c
 11331  000DD6  0E7F               	movlw	127
 11332  000DD8  1438               	andwf	(___flmul@grs+3)^0,w,c
 11333  000DDA  6E33               	movwf	(??___flmul+3)^0,c
 11334  000DDC  5030               	movf	??___flmul^0,w,c
 11335  000DDE  1031               	iorwf	(??___flmul+1)^0,w,c
 11336  000DE0  1032               	iorwf	(??___flmul+2)^0,w,c
 11337  000DE2  1033               	iorwf	(??___flmul+3)^0,w,c
 11338  000DE4  B4D8               	btfsc	status,2,c
 11339  000DE6  EFF7  F006         	goto	u4091
 11340  000DEA  EFF9  F006         	goto	u4090
 11341  000DEE                     u4091:
 11342  000DEE  EFFD  F006         	goto	l1225
 11343  000DF2                     u4090:
 11344  000DF2                     l4766:
 11345  000DF2  0E01               	movlw	1
 11346  000DF4  6E39               	movwf	___flmul@aexp^0,c
 11347  000DF6  EF06  F007         	goto	l1224
 11348  000DFA                     l1225:
 11349  000DFA  A03B               	btfss	___flmul@prod^0,0,c
 11350  000DFC  EF02  F007         	goto	u4101
 11351  000E00  EF04  F007         	goto	u4100
 11352  000E04                     u4101:
 11353  000E04  EF06  F007         	goto	l1224
 11354  000E08                     u4100:
 11355  000E08  EFF9  F006         	goto	l4766
 11356  000E0C                     l1224:
 11357  000E0C  5039               	movf	___flmul@aexp^0,w,c
 11358  000E0E  B4D8               	btfsc	status,2,c
 11359  000E10  EF0C  F007         	goto	u4111
 11360  000E14  EF0E  F007         	goto	u4110
 11361  000E18                     u4111:
 11362  000E18  EF32  F007         	goto	l4778
 11363  000E1C                     u4110:
 11364  000E1C  0E01               	movlw	1
 11365  000E1E  263B               	addwf	___flmul@prod^0,f,c
 11366  000E20  0E00               	movlw	0
 11367  000E22  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11368  000E24  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11369  000E26  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11370  000E28  A03E               	btfss	(___flmul@prod+3)^0,0,c
 11371  000E2A  EF19  F007         	goto	u4121
 11372  000E2E  EF1B  F007         	goto	u4120
 11373  000E32                     u4121:
 11374  000E32  EF32  F007         	goto	l4778
 11375  000E36                     u4120:
 11376  000E36  C03B  F030         	movff	___flmul@prod,??___flmul
 11377  000E3A  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 11378  000E3E  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 11379  000E42  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 11380  000E46  3433               	rlcf	(??___flmul+3)^0,w,c
 11381  000E48  3233               	rrcf	(??___flmul+3)^0,f,c
 11382  000E4A  3232               	rrcf	(??___flmul+2)^0,f,c
 11383  000E4C  3231               	rrcf	(??___flmul+1)^0,f,c
 11384  000E4E  3230               	rrcf	??___flmul^0,f,c
 11385  000E50  C030  F03B         	movff	??___flmul,___flmul@prod
 11386  000E54  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 11387  000E58  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 11388  000E5C  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 11389  000E60  4A3F               	infsnz	___flmul@temp^0,f,c
 11390  000E62  2A40               	incf	(___flmul@temp+1)^0,f,c
 11391  000E64                     l4778:
 11392  000E64  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11393  000E66  EF3D  F007         	goto	u4131
 11394  000E6A  5040               	movf	(___flmul@temp+1)^0,w,c
 11395  000E6C  E108               	bnz	u4130
 11396  000E6E  283F               	incf	___flmul@temp^0,w,c
 11397  000E70  A0D8               	btfss	status,0,c
 11398  000E72  EF3D  F007         	goto	u4131
 11399  000E76  EF3F  F007         	goto	u4130
 11400  000E7A                     u4131:
 11401  000E7A  EF49  F007         	goto	l4782
 11402  000E7E                     u4130:
 11403  000E7E  0E00               	movlw	0
 11404  000E80  6E3B               	movwf	___flmul@prod^0,c
 11405  000E82  0E00               	movlw	0
 11406  000E84  6E3C               	movwf	(___flmul@prod+1)^0,c
 11407  000E86  0E80               	movlw	128
 11408  000E88  6E3D               	movwf	(___flmul@prod+2)^0,c
 11409  000E8A  0E7F               	movlw	127
 11410  000E8C  6E3E               	movwf	(___flmul@prod+3)^0,c
 11411  000E8E  EF77  F007         	goto	l4794
 11412  000E92                     l4782:
 11413  000E92  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11414  000E94  EF56  F007         	goto	u4140
 11415  000E98  5040               	movf	(___flmul@temp+1)^0,w,c
 11416  000E9A  E106               	bnz	u4141
 11417  000E9C  043F               	decf	___flmul@temp^0,w,c
 11418  000E9E  B0D8               	btfsc	status,0,c
 11419  000EA0  EF54  F007         	goto	u4141
 11420  000EA4  EF56  F007         	goto	u4140
 11421  000EA8                     u4141:
 11422  000EA8  EF62  F007         	goto	l1232
 11423  000EAC                     u4140:
 11424  000EAC  0E00               	movlw	0
 11425  000EAE  6E3B               	movwf	___flmul@prod^0,c
 11426  000EB0  0E00               	movlw	0
 11427  000EB2  6E3C               	movwf	(___flmul@prod+1)^0,c
 11428  000EB4  0E00               	movlw	0
 11429  000EB6  6E3D               	movwf	(___flmul@prod+2)^0,c
 11430  000EB8  0E00               	movlw	0
 11431  000EBA  6E3E               	movwf	(___flmul@prod+3)^0,c
 11432  000EBC  0E00               	movlw	0
 11433  000EBE  6E34               	movwf	___flmul@sign^0,c
 11434  000EC0  EF77  F007         	goto	l4794
 11435  000EC4                     l1232:
 11436  000EC4  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 11437  000EC8  0EFF               	movlw	255
 11438  000ECA  163B               	andwf	___flmul@prod^0,f,c
 11439  000ECC  0EFF               	movlw	255
 11440  000ECE  163C               	andwf	(___flmul@prod+1)^0,f,c
 11441  000ED0  0E7F               	movlw	127
 11442  000ED2  163D               	andwf	(___flmul@prod+2)^0,f,c
 11443  000ED4  0E00               	movlw	0
 11444  000ED6  163E               	andwf	(___flmul@prod+3)^0,f,c
 11445  000ED8  A03A               	btfss	___flmul@bexp^0,0,c
 11446  000EDA  EF71  F007         	goto	u4151
 11447  000EDE  EF73  F007         	goto	u4150
 11448  000EE2                     u4151:
 11449  000EE2  EF74  F007         	goto	l4792
 11450  000EE6                     u4150:
 11451  000EE6  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 11452  000EE8                     l4792:
 11453  000EE8  90D8               	bcf	status,0,c
 11454  000EEA  303A               	rrcf	___flmul@bexp^0,w,c
 11455  000EEC  6E3E               	movwf	(___flmul@prod+3)^0,c
 11456  000EEE                     l4794:
 11457  000EEE  5034               	movf	___flmul@sign^0,w,c
 11458  000EF0  123E               	iorwf	(___flmul@prod+3)^0,f,c
 11459  000EF2  C03B  F028         	movff	___flmul@prod,?___flmul
 11460  000EF6  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 11461  000EFA  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 11462  000EFE  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 11463  000F02                     l1219:
 11464  000F02  0012               	return		;funcret
 11465  000F04                     __end_of___flmul:
 11466                           	opt callstack 0
 11467                           
 11468 ;; *************** function ___fldiv *****************
 11469 ;; Defined at:
 11470 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  b               4   14[COMRAM] unsigned char 
 11473 ;;  a               4   18[COMRAM] unsigned char 
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;  grs             4   33[COMRAM] unsigned long 
 11476 ;;  rem             4   26[COMRAM] unsigned long 
 11477 ;;  new_exp         2   31[COMRAM] short 
 11478 ;;  aexp            1   38[COMRAM] unsigned char 
 11479 ;;  bexp            1   37[COMRAM] unsigned char 
 11480 ;;  sign            1   30[COMRAM] unsigned char 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  4   14[COMRAM] unsigned char 
 11483 ;; Registers used:
 11484 ;;		wreg, status,2, status,0
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11490 ;;      Params:         8       0       0       0       0       0       0       0       0
 11491 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11492 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11493 ;;      Totals:        25       0       0       0       0       0       0       0       0
 11494 ;;Total ram usage:       25 bytes
 11495 ;; Hardware stack levels used:    1
 11496 ;; Hardware stack levels required when called:    1
 11497 ;; This function calls:
 11498 ;;		Nothing
 11499 ;; This function is called by:
 11500 ;;		_bh1750_leer
 11501 ;;		_pwmDuty
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text57
 11506  000F04                     __ptext57:
 11507                           	opt callstack 0
 11508  000F04                     ___fldiv:
 11509                           	opt callstack 25
 11510  000F04  5012               	movf	(___fldiv@b+3)^0,w,c
 11511  000F06  0B80               	andlw	128
 11512  000F08  6E1F               	movwf	___fldiv@sign^0,c
 11513  000F0A  5012               	movf	(___fldiv@b+3)^0,w,c
 11514  000F0C  2412               	addwf	(___fldiv@b+3)^0,w,c
 11515  000F0E  6E26               	movwf	___fldiv@bexp^0,c
 11516  000F10  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11517  000F12  EF8D  F007         	goto	u3151
 11518  000F16  EF8F  F007         	goto	u3150
 11519  000F1A                     u3151:
 11520  000F1A  EF90  F007         	goto	l3950
 11521  000F1E                     u3150:
 11522  000F1E  8026               	bsf	___fldiv@bexp^0,0,c
 11523  000F20                     l3950:
 11524  000F20  5026               	movf	___fldiv@bexp^0,w,c
 11525  000F22  B4D8               	btfsc	status,2,c
 11526  000F24  EF96  F007         	goto	u3161
 11527  000F28  EF98  F007         	goto	u3160
 11528  000F2C                     u3161:
 11529  000F2C  EFAD  F007         	goto	l3960
 11530  000F30                     u3160:
 11531  000F30  2826               	incf	___fldiv@bexp^0,w,c
 11532  000F32  A4D8               	btfss	status,2,c
 11533  000F34  EF9E  F007         	goto	u3171
 11534  000F38  EFA0  F007         	goto	u3170
 11535  000F3C                     u3171:
 11536  000F3C  EFA8  F007         	goto	l3956
 11537  000F40                     u3170:
 11538  000F40  0E00               	movlw	0
 11539  000F42  6E0F               	movwf	___fldiv@b^0,c
 11540  000F44  0E00               	movlw	0
 11541  000F46  6E10               	movwf	(___fldiv@b+1)^0,c
 11542  000F48  0E00               	movlw	0
 11543  000F4A  6E11               	movwf	(___fldiv@b+2)^0,c
 11544  000F4C  0E00               	movlw	0
 11545  000F4E  6E12               	movwf	(___fldiv@b+3)^0,c
 11546  000F50                     l3956:
 11547  000F50  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11548  000F52  0E00               	movlw	0
 11549  000F54  6E12               	movwf	(___fldiv@b+3)^0,c
 11550  000F56  EFB5  F007         	goto	l3962
 11551  000F5A                     l3960:
 11552  000F5A  0E00               	movlw	0
 11553  000F5C  6E0F               	movwf	___fldiv@b^0,c
 11554  000F5E  0E00               	movlw	0
 11555  000F60  6E10               	movwf	(___fldiv@b+1)^0,c
 11556  000F62  0E00               	movlw	0
 11557  000F64  6E11               	movwf	(___fldiv@b+2)^0,c
 11558  000F66  0E00               	movlw	0
 11559  000F68  6E12               	movwf	(___fldiv@b+3)^0,c
 11560  000F6A                     l3962:
 11561  000F6A  5016               	movf	(___fldiv@a+3)^0,w,c
 11562  000F6C  0B80               	andlw	128
 11563  000F6E  1A1F               	xorwf	___fldiv@sign^0,f,c
 11564  000F70  5016               	movf	(___fldiv@a+3)^0,w,c
 11565  000F72  2416               	addwf	(___fldiv@a+3)^0,w,c
 11566  000F74  6E27               	movwf	___fldiv@aexp^0,c
 11567  000F76  AE15               	btfss	(___fldiv@a+2)^0,7,c
 11568  000F78  EFC0  F007         	goto	u3181
 11569  000F7C  EFC2  F007         	goto	u3180
 11570  000F80                     u3181:
 11571  000F80  EFC3  F007         	goto	l3970
 11572  000F84                     u3180:
 11573  000F84  8027               	bsf	___fldiv@aexp^0,0,c
 11574  000F86                     l3970:
 11575  000F86  5027               	movf	___fldiv@aexp^0,w,c
 11576  000F88  B4D8               	btfsc	status,2,c
 11577  000F8A  EFC9  F007         	goto	u3191
 11578  000F8E  EFCB  F007         	goto	u3190
 11579  000F92                     u3191:
 11580  000F92  EFE0  F007         	goto	l3980
 11581  000F96                     u3190:
 11582  000F96  2827               	incf	___fldiv@aexp^0,w,c
 11583  000F98  A4D8               	btfss	status,2,c
 11584  000F9A  EFD1  F007         	goto	u3201
 11585  000F9E  EFD3  F007         	goto	u3200
 11586  000FA2                     u3201:
 11587  000FA2  EFDB  F007         	goto	l3976
 11588  000FA6                     u3200:
 11589  000FA6  0E00               	movlw	0
 11590  000FA8  6E13               	movwf	___fldiv@a^0,c
 11591  000FAA  0E00               	movlw	0
 11592  000FAC  6E14               	movwf	(___fldiv@a+1)^0,c
 11593  000FAE  0E00               	movlw	0
 11594  000FB0  6E15               	movwf	(___fldiv@a+2)^0,c
 11595  000FB2  0E00               	movlw	0
 11596  000FB4  6E16               	movwf	(___fldiv@a+3)^0,c
 11597  000FB6                     l3976:
 11598  000FB6  8E15               	bsf	(___fldiv@a+2)^0,7,c
 11599  000FB8  0E00               	movlw	0
 11600  000FBA  6E16               	movwf	(___fldiv@a+3)^0,c
 11601  000FBC  EFE8  F007         	goto	l3982
 11602  000FC0                     l3980:
 11603  000FC0  0E00               	movlw	0
 11604  000FC2  6E13               	movwf	___fldiv@a^0,c
 11605  000FC4  0E00               	movlw	0
 11606  000FC6  6E14               	movwf	(___fldiv@a+1)^0,c
 11607  000FC8  0E00               	movlw	0
 11608  000FCA  6E15               	movwf	(___fldiv@a+2)^0,c
 11609  000FCC  0E00               	movlw	0
 11610  000FCE  6E16               	movwf	(___fldiv@a+3)^0,c
 11611  000FD0                     l3982:
 11612  000FD0  5013               	movf	___fldiv@a^0,w,c
 11613  000FD2  1014               	iorwf	(___fldiv@a+1)^0,w,c
 11614  000FD4  1015               	iorwf	(___fldiv@a+2)^0,w,c
 11615  000FD6  1016               	iorwf	(___fldiv@a+3)^0,w,c
 11616  000FD8  A4D8               	btfss	status,2,c
 11617  000FDA  EFF1  F007         	goto	u3211
 11618  000FDE  EFF3  F007         	goto	u3210
 11619  000FE2                     u3211:
 11620  000FE2  EF0B  F008         	goto	l3994
 11621  000FE6                     u3210:
 11622  000FE6  0E00               	movlw	0
 11623  000FE8  6E0F               	movwf	___fldiv@b^0,c
 11624  000FEA  0E00               	movlw	0
 11625  000FEC  6E10               	movwf	(___fldiv@b+1)^0,c
 11626  000FEE  0E00               	movlw	0
 11627  000FF0  6E11               	movwf	(___fldiv@b+2)^0,c
 11628  000FF2  0E00               	movlw	0
 11629  000FF4  6E12               	movwf	(___fldiv@b+3)^0,c
 11630  000FF6  0E80               	movlw	128
 11631  000FF8  1211               	iorwf	(___fldiv@b+2)^0,f,c
 11632  000FFA  0E7F               	movlw	127
 11633  000FFC  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11634  000FFE                     l3988:
 11635  000FFE  501F               	movf	___fldiv@sign^0,w,c
 11636  001000  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11637  001002  C00F  F00F         	movff	___fldiv@b,?___fldiv
 11638  001006  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 11639  00100A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 11640  00100E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 11641  001012  EF4E  F009         	goto	l1183
 11642  001016                     l3994:
 11643  001016  5026               	movf	___fldiv@bexp^0,w,c
 11644  001018  A4D8               	btfss	status,2,c
 11645  00101A  EF11  F008         	goto	u3221
 11646  00101E  EF13  F008         	goto	u3220
 11647  001022                     u3221:
 11648  001022  EF1D  F008         	goto	l4002
 11649  001026                     u3220:
 11650  001026  0E00               	movlw	0
 11651  001028  6E0F               	movwf	?___fldiv^0,c
 11652  00102A  0E00               	movlw	0
 11653  00102C  6E10               	movwf	(?___fldiv+1)^0,c
 11654  00102E  0E00               	movlw	0
 11655  001030  6E11               	movwf	(?___fldiv+2)^0,c
 11656  001032  0E00               	movlw	0
 11657  001034  6E12               	movwf	(?___fldiv+3)^0,c
 11658  001036  EF4E  F009         	goto	l1183
 11659  00103A                     l4002:
 11660  00103A  5027               	movf	___fldiv@aexp^0,w,c
 11661  00103C  C026  F017         	movff	___fldiv@bexp,??___fldiv
 11662  001040  6A18               	clrf	(??___fldiv+1)^0,c
 11663  001042  5E17               	subwf	??___fldiv^0,f,c
 11664  001044  0E00               	movlw	0
 11665  001046  5A18               	subwfb	(??___fldiv+1)^0,f,c
 11666  001048  0E7F               	movlw	127
 11667  00104A  2417               	addwf	??___fldiv^0,w,c
 11668  00104C  6E20               	movwf	___fldiv@new_exp^0,c
 11669  00104E  0E00               	movlw	0
 11670  001050  2018               	addwfc	(??___fldiv+1)^0,w,c
 11671  001052  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11672  001054  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 11673  001058  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 11674  00105C  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 11675  001060  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 11676  001064  0E00               	movlw	0
 11677  001066  6E0F               	movwf	___fldiv@b^0,c
 11678  001068  0E00               	movlw	0
 11679  00106A  6E10               	movwf	(___fldiv@b+1)^0,c
 11680  00106C  0E00               	movlw	0
 11681  00106E  6E11               	movwf	(___fldiv@b+2)^0,c
 11682  001070  0E00               	movlw	0
 11683  001072  6E12               	movwf	(___fldiv@b+3)^0,c
 11684  001074  0E00               	movlw	0
 11685  001076  6E22               	movwf	___fldiv@grs^0,c
 11686  001078  0E00               	movlw	0
 11687  00107A  6E23               	movwf	(___fldiv@grs+1)^0,c
 11688  00107C  0E00               	movlw	0
 11689  00107E  6E24               	movwf	(___fldiv@grs+2)^0,c
 11690  001080  0E00               	movlw	0
 11691  001082  6E25               	movwf	(___fldiv@grs+3)^0,c
 11692  001084  0E00               	movlw	0
 11693  001086  6E27               	movwf	___fldiv@aexp^0,c
 11694  001088  EF7E  F008         	goto	l1185
 11695  00108C                     l4012:
 11696  00108C  5027               	movf	___fldiv@aexp^0,w,c
 11697  00108E  B4D8               	btfsc	status,2,c
 11698  001090  EF4C  F008         	goto	u3231
 11699  001094  EF4E  F008         	goto	u3230
 11700  001098                     u3231:
 11701  001098  EF65  F008         	goto	l4020
 11702  00109C                     u3230:
 11703  00109C  90D8               	bcf	status,0,c
 11704  00109E  361B               	rlcf	___fldiv@rem^0,f,c
 11705  0010A0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 11706  0010A2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 11707  0010A4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 11708  0010A6  90D8               	bcf	status,0,c
 11709  0010A8  360F               	rlcf	___fldiv@b^0,f,c
 11710  0010AA  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11711  0010AC  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11712  0010AE  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11713  0010B0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11714  0010B2  EF5D  F008         	goto	u3241
 11715  0010B6  EF5F  F008         	goto	u3240
 11716  0010BA                     u3241:
 11717  0010BA  EF60  F008         	goto	l1188
 11718  0010BE                     u3240:
 11719  0010BE  800F               	bsf	___fldiv@b^0,0,c
 11720  0010C0                     l1188:
 11721  0010C0  90D8               	bcf	status,0,c
 11722  0010C2  3622               	rlcf	___fldiv@grs^0,f,c
 11723  0010C4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11724  0010C6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11725  0010C8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11726  0010CA                     l4020:
 11727  0010CA  5013               	movf	___fldiv@a^0,w,c
 11728  0010CC  5C1B               	subwf	___fldiv@rem^0,w,c
 11729  0010CE  5014               	movf	(___fldiv@a+1)^0,w,c
 11730  0010D0  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 11731  0010D2  5015               	movf	(___fldiv@a+2)^0,w,c
 11732  0010D4  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 11733  0010D6  5016               	movf	(___fldiv@a+3)^0,w,c
 11734  0010D8  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 11735  0010DA  A0D8               	btfss	status,0,c
 11736  0010DC  EF72  F008         	goto	u3251
 11737  0010E0  EF74  F008         	goto	u3250
 11738  0010E4                     u3251:
 11739  0010E4  EF7D  F008         	goto	l4026
 11740  0010E8                     u3250:
 11741  0010E8  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 11742  0010EA  5013               	movf	___fldiv@a^0,w,c
 11743  0010EC  5E1B               	subwf	___fldiv@rem^0,f,c
 11744  0010EE  5014               	movf	(___fldiv@a+1)^0,w,c
 11745  0010F0  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 11746  0010F2  5015               	movf	(___fldiv@a+2)^0,w,c
 11747  0010F4  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 11748  0010F6  5016               	movf	(___fldiv@a+3)^0,w,c
 11749  0010F8  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 11750  0010FA                     l4026:
 11751  0010FA  2A27               	incf	___fldiv@aexp^0,f,c
 11752  0010FC                     l1185:
 11753  0010FC  0E19               	movlw	25
 11754  0010FE  6427               	cpfsgt	___fldiv@aexp^0,c
 11755  001100  EF84  F008         	goto	u3261
 11756  001104  EF86  F008         	goto	u3260
 11757  001108                     u3261:
 11758  001108  EF46  F008         	goto	l4012
 11759  00110C                     u3260:
 11760  00110C  501B               	movf	___fldiv@rem^0,w,c
 11761  00110E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 11762  001110  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 11763  001112  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 11764  001114  B4D8               	btfsc	status,2,c
 11765  001116  EF8F  F008         	goto	u3271
 11766  00111A  EF91  F008         	goto	u3270
 11767  00111E                     u3271:
 11768  00111E  EFA9  F008         	goto	l4038
 11769  001122                     u3270:
 11770  001122  8022               	bsf	___fldiv@grs^0,0,c
 11771  001124  EFA9  F008         	goto	l4038
 11772  001128                     l4032:
 11773  001128  90D8               	bcf	status,0,c
 11774  00112A  360F               	rlcf	___fldiv@b^0,f,c
 11775  00112C  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11776  00112E  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11777  001130  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11778  001132  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11779  001134  EF9E  F008         	goto	u3281
 11780  001138  EFA0  F008         	goto	u3280
 11781  00113C                     u3281:
 11782  00113C  EFA1  F008         	goto	l1194
 11783  001140                     u3280:
 11784  001140  800F               	bsf	___fldiv@b^0,0,c
 11785  001142                     l1194:
 11786  001142  90D8               	bcf	status,0,c
 11787  001144  3622               	rlcf	___fldiv@grs^0,f,c
 11788  001146  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11789  001148  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11790  00114A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11791  00114C  0620               	decf	___fldiv@new_exp^0,f,c
 11792  00114E  A0D8               	btfss	status,0,c
 11793  001150  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 11794  001152                     l4038:
 11795  001152  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11796  001154  EFAE  F008         	goto	u3291
 11797  001158  EFB0  F008         	goto	u3290
 11798  00115C                     u3291:
 11799  00115C  EF94  F008         	goto	l4032
 11800  001160                     u3290:
 11801  001160  0E00               	movlw	0
 11802  001162  6E27               	movwf	___fldiv@aexp^0,c
 11803  001164  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11804  001166  EFB7  F008         	goto	u3301
 11805  00116A  EFB9  F008         	goto	u3300
 11806  00116E                     u3301:
 11807  00116E  EFDD  F008         	goto	l1196
 11808  001172                     u3300:
 11809  001172  0EFF               	movlw	255
 11810  001174  1422               	andwf	___fldiv@grs^0,w,c
 11811  001176  6E17               	movwf	??___fldiv^0,c
 11812  001178  0EFF               	movlw	255
 11813  00117A  1423               	andwf	(___fldiv@grs+1)^0,w,c
 11814  00117C  6E18               	movwf	(??___fldiv+1)^0,c
 11815  00117E  0EFF               	movlw	255
 11816  001180  1424               	andwf	(___fldiv@grs+2)^0,w,c
 11817  001182  6E19               	movwf	(??___fldiv+2)^0,c
 11818  001184  0E7F               	movlw	127
 11819  001186  1425               	andwf	(___fldiv@grs+3)^0,w,c
 11820  001188  6E1A               	movwf	(??___fldiv+3)^0,c
 11821  00118A  5017               	movf	??___fldiv^0,w,c
 11822  00118C  1018               	iorwf	(??___fldiv+1)^0,w,c
 11823  00118E  1019               	iorwf	(??___fldiv+2)^0,w,c
 11824  001190  101A               	iorwf	(??___fldiv+3)^0,w,c
 11825  001192  B4D8               	btfsc	status,2,c
 11826  001194  EFCE  F008         	goto	u3311
 11827  001198  EFD0  F008         	goto	u3310
 11828  00119C                     u3311:
 11829  00119C  EFD4  F008         	goto	l1197
 11830  0011A0                     u3310:
 11831  0011A0                     l4046:
 11832  0011A0  0E01               	movlw	1
 11833  0011A2  6E27               	movwf	___fldiv@aexp^0,c
 11834  0011A4  EFDD  F008         	goto	l1196
 11835  0011A8                     l1197:
 11836  0011A8  A00F               	btfss	___fldiv@b^0,0,c
 11837  0011AA  EFD9  F008         	goto	u3321
 11838  0011AE  EFDB  F008         	goto	u3320
 11839  0011B2                     u3321:
 11840  0011B2  EFDD  F008         	goto	l1196
 11841  0011B6                     u3320:
 11842  0011B6  EFD0  F008         	goto	l4046
 11843  0011BA                     l1196:
 11844  0011BA  5027               	movf	___fldiv@aexp^0,w,c
 11845  0011BC  B4D8               	btfsc	status,2,c
 11846  0011BE  EFE3  F008         	goto	u3331
 11847  0011C2  EFE5  F008         	goto	u3330
 11848  0011C6                     u3331:
 11849  0011C6  EF09  F009         	goto	l4058
 11850  0011CA                     u3330:
 11851  0011CA  0E01               	movlw	1
 11852  0011CC  260F               	addwf	___fldiv@b^0,f,c
 11853  0011CE  0E00               	movlw	0
 11854  0011D0  2210               	addwfc	(___fldiv@b+1)^0,f,c
 11855  0011D2  2211               	addwfc	(___fldiv@b+2)^0,f,c
 11856  0011D4  2212               	addwfc	(___fldiv@b+3)^0,f,c
 11857  0011D6  A012               	btfss	(___fldiv@b+3)^0,0,c
 11858  0011D8  EFF0  F008         	goto	u3341
 11859  0011DC  EFF2  F008         	goto	u3340
 11860  0011E0                     u3341:
 11861  0011E0  EF09  F009         	goto	l4058
 11862  0011E4                     u3340:
 11863  0011E4  C00F  F017         	movff	___fldiv@b,??___fldiv
 11864  0011E8  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 11865  0011EC  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 11866  0011F0  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 11867  0011F4  341A               	rlcf	(??___fldiv+3)^0,w,c
 11868  0011F6  321A               	rrcf	(??___fldiv+3)^0,f,c
 11869  0011F8  3219               	rrcf	(??___fldiv+2)^0,f,c
 11870  0011FA  3218               	rrcf	(??___fldiv+1)^0,f,c
 11871  0011FC  3217               	rrcf	??___fldiv^0,f,c
 11872  0011FE  C017  F00F         	movff	??___fldiv,___fldiv@b
 11873  001202  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 11874  001206  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 11875  00120A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 11876  00120E  4A20               	infsnz	___fldiv@new_exp^0,f,c
 11877  001210  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 11878  001212                     l4058:
 11879  001212  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11880  001214  EF14  F009         	goto	u3351
 11881  001218  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11882  00121A  E108               	bnz	u3350
 11883  00121C  2820               	incf	___fldiv@new_exp^0,w,c
 11884  00121E  A0D8               	btfss	status,0,c
 11885  001220  EF14  F009         	goto	u3351
 11886  001224  EF16  F009         	goto	u3350
 11887  001228                     u3351:
 11888  001228  EF21  F009         	goto	l4062
 11889  00122C                     u3350:
 11890  00122C  0E00               	movlw	0
 11891  00122E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11892  001230  6820               	setf	___fldiv@new_exp^0,c
 11893  001232  0E00               	movlw	0
 11894  001234  6E0F               	movwf	___fldiv@b^0,c
 11895  001236  0E00               	movlw	0
 11896  001238  6E10               	movwf	(___fldiv@b+1)^0,c
 11897  00123A  0E00               	movlw	0
 11898  00123C  6E11               	movwf	(___fldiv@b+2)^0,c
 11899  00123E  0E00               	movlw	0
 11900  001240  6E12               	movwf	(___fldiv@b+3)^0,c
 11901  001242                     l4062:
 11902  001242  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11903  001244  EF2E  F009         	goto	u3360
 11904  001248  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11905  00124A  E106               	bnz	u3361
 11906  00124C  0420               	decf	___fldiv@new_exp^0,w,c
 11907  00124E  B0D8               	btfsc	status,0,c
 11908  001250  EF2C  F009         	goto	u3361
 11909  001254  EF2E  F009         	goto	u3360
 11910  001258                     u3361:
 11911  001258  EF3C  F009         	goto	l4066
 11912  00125C                     u3360:
 11913  00125C  0E00               	movlw	0
 11914  00125E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11915  001260  0E00               	movlw	0
 11916  001262  6E20               	movwf	___fldiv@new_exp^0,c
 11917  001264  0E00               	movlw	0
 11918  001266  6E0F               	movwf	___fldiv@b^0,c
 11919  001268  0E00               	movlw	0
 11920  00126A  6E10               	movwf	(___fldiv@b+1)^0,c
 11921  00126C  0E00               	movlw	0
 11922  00126E  6E11               	movwf	(___fldiv@b+2)^0,c
 11923  001270  0E00               	movlw	0
 11924  001272  6E12               	movwf	(___fldiv@b+3)^0,c
 11925  001274  0E00               	movlw	0
 11926  001276  6E1F               	movwf	___fldiv@sign^0,c
 11927  001278                     l4066:
 11928  001278  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 11929  00127C  A026               	btfss	___fldiv@bexp^0,0,c
 11930  00127E  EF43  F009         	goto	u3371
 11931  001282  EF45  F009         	goto	u3370
 11932  001286                     u3371:
 11933  001286  EF48  F009         	goto	l4072
 11934  00128A                     u3370:
 11935  00128A  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11936  00128C  EF49  F009         	goto	l4074
 11937  001290                     l4072:
 11938  001290  9E11               	bcf	(___fldiv@b+2)^0,7,c
 11939  001292                     l4074:
 11940  001292  90D8               	bcf	status,0,c
 11941  001294  3026               	rrcf	___fldiv@bexp^0,w,c
 11942  001296  6E12               	movwf	(___fldiv@b+3)^0,c
 11943  001298  EFFF  F007         	goto	l3988
 11944  00129C                     l1183:
 11945  00129C  0012               	return		;funcret
 11946  00129E                     __end_of___fldiv:
 11947                           	opt callstack 0
 11948                           
 11949 ;; *************** function ___wmul *****************
 11950 ;; Defined at:
 11951 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  multiplier      2    0[COMRAM] unsigned int 
 11954 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;  product         2    4[COMRAM] unsigned int 
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  2    0[COMRAM] unsigned int 
 11959 ;; Registers used:
 11960 ;;		wreg, status,2, status,0, prodl, prodh
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11966 ;;      Params:         4       0       0       0       0       0       0       0       0
 11967 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11968 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11969 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11970 ;;Total ram usage:        6 bytes
 11971 ;; Hardware stack levels used:    1
 11972 ;; Hardware stack levels required when called:    1
 11973 ;; This function calls:
 11974 ;;		Nothing
 11975 ;; This function is called by:
 11976 ;;		_inicializarObjetos
 11977 ;;		_escribeHorariosMemoria
 11978 ;;		_leeHorariosMemoria
 11979 ;;		_dameDatosSistema
 11980 ;;		_getValue
 11981 ;;		_atoi
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           	psect	text58
 11986  003996                     __ptext58:
 11987                           	opt callstack 0
 11988  003996                     ___wmul:
 11989                           	opt callstack 26
 11990  003996  5001               	movf	___wmul@multiplier^0,w,c
 11991  003998  0203               	mulwf	___wmul@multiplicand^0,c
 11992  00399A  CFF3 F005          	movff	prodl,___wmul@product
 11993  00399E  CFF4 F006          	movff	prodh,___wmul@product+1
 11994  0039A2  5001               	movf	___wmul@multiplier^0,w,c
 11995  0039A4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11996  0039A6  50F3               	movf	243,w,c
 11997  0039A8  2606               	addwf	(___wmul@product+1)^0,f,c
 11998  0039AA  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11999  0039AC  0203               	mulwf	___wmul@multiplicand^0,c
 12000  0039AE  50F3               	movf	243,w,c
 12001  0039B0  2606               	addwf	(___wmul@product+1)^0,f,c
 12002  0039B2  C005  F001         	movff	___wmul@product,?___wmul
 12003  0039B6  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12004  0039BA  0012               	return		;funcret
 12005  0039BC                     __end_of___wmul:
 12006                           	opt callstack 0
 12007                           
 12008 ;; *************** function _i2c_iniciar *****************
 12009 ;; Defined at:
 12010 ;;		line 13 in file "./I2C.h"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;		None
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;		None
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  1    wreg      void 
 12017 ;; Registers used:
 12018 ;;		wreg, status,2
 12019 ;; Tracked objects:
 12020 ;;		On entry : 0/0
 12021 ;;		On exit  : 0/0
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12024 ;;      Params:         0       0       0       0       0       0       0       0       0
 12025 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12026 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12027 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12028 ;;Total ram usage:        0 bytes
 12029 ;; Hardware stack levels used:    1
 12030 ;; Hardware stack levels required when called:    1
 12031 ;; This function calls:
 12032 ;;		Nothing
 12033 ;; This function is called by:
 12034 ;;		_main
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           	psect	text59
 12039  003A68                     __ptext59:
 12040                           	opt callstack 0
 12041  003A68                     _i2c_iniciar:
 12042                           	opt callstack 29
 12043  003A68                     
 12044                           ;./I2C.h: 14:     TRISBbits.RB0 = 1;
 12045  003A68  8093               	bsf	147,0,c	;volatile
 12046                           
 12047                           ;./I2C.h: 15:     TRISBbits.RB1 = 1;
 12048  003A6A  8293               	bsf	147,1,c	;volatile
 12049  003A6C                     
 12050                           ;./I2C.h: 16:     SSPSTAT = 0b10000000;
 12051  003A6C  0E80               	movlw	128
 12052  003A6E  6EC7               	movwf	199,c	;volatile
 12053                           
 12054                           ;./I2C.h: 17:     SSPCON1 = 0b00101000;
 12055  003A70  0E28               	movlw	40
 12056  003A72  6EC6               	movwf	198,c	;volatile
 12057                           
 12058                           ;./I2C.h: 18:     SSPCON2 = 0b00000000;
 12059  003A74  0E00               	movlw	0
 12060  003A76  6EC5               	movwf	197,c	;volatile
 12061                           
 12062                           ;./I2C.h: 19:     SSPADD = 9;
 12063  003A78  0E09               	movlw	9
 12064  003A7A  6EC8               	movwf	200,c	;volatile
 12065  003A7C  0012               	return		;funcret
 12066  003A7E                     __end_of_i2c_iniciar:
 12067                           	opt callstack 0
 12068                           
 12069 ;; *************** function _configPwm *****************
 12070 ;; Defined at:
 12071 ;;		line 47 in file "./pwm.h"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  channel         1    wreg     unsigned char 
 12074 ;; Auto vars:     Size  Location     Type
 12075 ;;  channel         1    2[COMRAM] unsigned char 
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  1    wreg      void 
 12078 ;; Registers used:
 12079 ;;		wreg, status,2, status,0
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12085 ;;      Params:         0       0       0       0       0       0       0       0       0
 12086 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12087 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12088 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12089 ;;Total ram usage:        3 bytes
 12090 ;; Hardware stack levels used:    1
 12091 ;; Hardware stack levels required when called:    1
 12092 ;; This function calls:
 12093 ;;		Nothing
 12094 ;; This function is called by:
 12095 ;;		_main
 12096 ;; This function uses a non-reentrant model
 12097 ;;
 12098                           
 12099                           	psect	text60
 12100  00362E                     __ptext60:
 12101                           	opt callstack 0
 12102  00362E                     _configPwm:
 12103                           	opt callstack 29
 12104                           
 12105                           ;incstack = 0
 12106                           ;configPwm@channel stored from wreg
 12107  00362E  6E03               	movwf	configPwm@channel^0,c
 12108  003630                     
 12109                           ;./pwm.h: 56:         T2CKPS0 = 1;
 12110  003630  80CA               	bsf	4042,0,c	;volatile
 12111                           
 12112                           ;./pwm.h: 57:         T2CKPS1 = 1;
 12113  003632  82CA               	bsf	4042,1,c	;volatile
 12114  003634                     
 12115                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
 12116  003634  0E7C               	movlw	124
 12117  003636  6ECB               	movwf	203,c	;volatile
 12118                           
 12119                           ;./pwm.h: 63:     switch (channel) {
 12120  003638  EF28  F01B         	goto	l5094
 12121  00363C                     l182:
 12122                           
 12123                           ;./pwm.h: 66:             TRISC2 = 0;
 12124  00363C  9494               	bcf	3988,2,c	;volatile
 12125                           
 12126                           ;./pwm.h: 67:             CCP1M3 = 1;
 12127  00363E  86BD               	bsf	4029,3,c	;volatile
 12128                           
 12129                           ;./pwm.h: 68:             CCP1M2 = 1;
 12130  003640  84BD               	bsf	4029,2,c	;volatile
 12131                           
 12132                           ;./pwm.h: 71:             break;
 12133  003642  EF3D  F01B         	goto	l183
 12134  003646                     l184:
 12135                           
 12136                           ;./pwm.h: 74:             TRISC1 = 0;
 12137  003646  9294               	bcf	3988,1,c	;volatile
 12138                           
 12139                           ;./pwm.h: 75:             CCP2M3 = 1;
 12140  003648  86BA               	bsf	4026,3,c	;volatile
 12141                           
 12142                           ;./pwm.h: 76:             CCP2M2 = 1;
 12143  00364A  84BA               	bsf	4026,2,c	;volatile
 12144                           
 12145                           ;./pwm.h: 77:             break;
 12146  00364C  EF3D  F01B         	goto	l183
 12147  003650                     l5094:
 12148  003650  5003               	movf	configPwm@channel^0,w,c
 12149  003652  6E01               	movwf	??_configPwm^0,c
 12150  003654  6A02               	clrf	(??_configPwm+1)^0,c
 12151                           
 12152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12153                           ; Switch size 1, requested type "simple"
 12154                           ; Number of cases is 1, Range of values is 0 to 0
 12155                           ; switch strategies available:
 12156                           ; Name         Instructions Cycles
 12157                           ; simple_byte            4     3 (average)
 12158                           ;	Chosen strategy is simple_byte
 12159  003656  5002               	movf	(??_configPwm+1)^0,w,c
 12160  003658  0A00               	xorlw	0	; case 0
 12161  00365A  B4D8               	btfsc	status,2,c
 12162  00365C  EF32  F01B         	goto	l5576
 12163  003660  EF3D  F01B         	goto	l183
 12164  003664                     l5576:
 12165                           
 12166                           ; Switch size 1, requested type "simple"
 12167                           ; Number of cases is 2, Range of values is 1 to 2
 12168                           ; switch strategies available:
 12169                           ; Name         Instructions Cycles
 12170                           ; simple_byte            7     4 (average)
 12171                           ;	Chosen strategy is simple_byte
 12172  003664  5001               	movf	??_configPwm^0,w,c
 12173  003666  0A01               	xorlw	1	; case 1
 12174  003668  B4D8               	btfsc	status,2,c
 12175  00366A  EF1E  F01B         	goto	l182
 12176  00366E  0A03               	xorlw	3	; case 2
 12177  003670  B4D8               	btfsc	status,2,c
 12178  003672  EF23  F01B         	goto	l184
 12179  003676  EF3D  F01B         	goto	l183
 12180  00367A                     l183:
 12181                           
 12182                           ;./pwm.h: 81:     TMR2ON = 1;
 12183  00367A  84CA               	bsf	4042,2,c	;volatile
 12184  00367C  0012               	return		;funcret
 12185  00367E                     __end_of_configPwm:
 12186                           	opt callstack 0
 12187                           
 12188 ;; *************** function _bh1750_iniciar *****************
 12189 ;; Defined at:
 12190 ;;		line 27 in file "./bh1750.h"
 12191 ;; Parameters:    Size  Location     Type
 12192 ;;		None
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;		None
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  1    wreg      void 
 12197 ;; Registers used:
 12198 ;;		wreg, status,2, status,0, cstack
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12204 ;;      Params:         0       0       0       0       0       0       0       0       0
 12205 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12206 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12207 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12208 ;;Total ram usage:        1 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; Hardware stack levels required when called:    4
 12211 ;; This function calls:
 12212 ;;		_bh1750_escribir
 12213 ;; This function is called by:
 12214 ;;		_main
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           
 12218                           	psect	text61
 12219  003A7E                     __ptext61:
 12220                           	opt callstack 0
 12221  003A7E                     _bh1750_iniciar:
 12222                           	opt callstack 26
 12223  003A7E                     
 12224                           ;./bh1750.h: 28:     _delay((unsigned long)((100)*(4000000/4000.0)));
 12225  003A7E  0E82               	movlw	130
 12226  003A80  6E04               	movwf	??_bh1750_iniciar^0,c
 12227  003A82  0EDE               	movlw	222
 12228  003A84                     u4607:
 12229  003A84  2EE8               	decfsz	wreg,f,c
 12230  003A86  D7FE               	bra	u4607
 12231  003A88  2E04               	decfsz	??_bh1750_iniciar^0,f,c
 12232  003A8A  D7FC               	bra	u4607
 12233  003A8C                     
 12234                           ;./bh1750.h: 29:     bh1750_escribir(0x00);
 12235  003A8C  0E00               	movlw	0
 12236  003A8E  EC1D  F01D         	call	_bh1750_escribir
 12237  003A92  0012               	return		;funcret
 12238  003A94                     __end_of_bh1750_iniciar:
 12239                           	opt callstack 0
 12240                           
 12241 ;; *************** function _bh1750_escribir *****************
 12242 ;; Defined at:
 12243 ;;		line 32 in file "./bh1750.h"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  comando         1    wreg     unsigned char 
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;  comando         1    2[COMRAM] unsigned char 
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  1    wreg      void 
 12250 ;; Registers used:
 12251 ;;		wreg, status,2, status,0, cstack
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12257 ;;      Params:         0       0       0       0       0       0       0       0       0
 12258 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12260 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12261 ;;Total ram usage:        1 bytes
 12262 ;; Hardware stack levels used:    1
 12263 ;; Hardware stack levels required when called:    3
 12264 ;; This function calls:
 12265 ;;		_i2c_detener
 12266 ;;		_i2c_envia_dato
 12267 ;;		_i2c_inicia_com
 12268 ;; This function is called by:
 12269 ;;		_bh1750_iniciar
 12270 ;;		_dameValorLux
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           	psect	text62
 12275  003A3A                     __ptext62:
 12276                           	opt callstack 0
 12277  003A3A                     _bh1750_escribir:
 12278                           	opt callstack 24
 12279                           
 12280                           ;incstack = 0
 12281                           ;bh1750_escribir@comando stored from wreg
 12282  003A3A  6E03               	movwf	bh1750_escribir@comando^0,c
 12283  003A3C                     
 12284                           ;./bh1750.h: 33:     i2c_inicia_com();
 12285  003A3C  EC64  F01D         	call	_i2c_inicia_com	;wreg free
 12286                           
 12287                           ;./bh1750.h: 34:     i2c_envia_dato(0x46);
 12288  003A40  0E46               	movlw	70
 12289  003A42  EC5A  F01D         	call	_i2c_envia_dato
 12290                           
 12291                           ;./bh1750.h: 35:     i2c_envia_dato(comando);
 12292  003A46  5003               	movf	bh1750_escribir@comando^0,w,c
 12293  003A48  EC5A  F01D         	call	_i2c_envia_dato
 12294                           
 12295                           ;./bh1750.h: 36:     i2c_detener();
 12296  003A4C  EC68  F01D         	call	_i2c_detener	;wreg free
 12297  003A50  0012               	return		;funcret
 12298  003A52                     __end_of_bh1750_escribir:
 12299                           	opt callstack 0
 12300                           
 12301 ;; *************** function _i2c_inicia_com *****************
 12302 ;; Defined at:
 12303 ;;		line 37 in file "./I2C.h"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;		None
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		wreg, status,2, status,0, cstack
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12317 ;;      Params:         0       0       0       0       0       0       0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12320 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12321 ;;Total ram usage:        0 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:    2
 12324 ;; This function calls:
 12325 ;;		_i2c_espera
 12326 ;; This function is called by:
 12327 ;;		_bh1750_escribir
 12328 ;;		_bh1750_leer
 12329 ;;		_escribe_rtc
 12330 ;;		_leer_rtc
 12331 ;;		_escribe_eeprom
 12332 ;;		_leer_eeprom
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           	psect	text63
 12337  003AC8                     __ptext63:
 12338                           	opt callstack 0
 12339  003AC8                     _i2c_inicia_com:
 12340                           	opt callstack 24
 12341  003AC8                     
 12342                           ;./I2C.h: 38:     i2c_espera();
 12343  003AC8  ECDE  F01C         	call	_i2c_espera	;wreg free
 12344  003ACC                     
 12345                           ;./I2C.h: 39:     SSPCON2bits.SEN = 1;
 12346  003ACC  80C5               	bsf	197,0,c	;volatile
 12347  003ACE  0012               	return		;funcret
 12348  003AD0                     __end_of_i2c_inicia_com:
 12349                           	opt callstack 0
 12350                           
 12351 ;; *************** function _i2c_envia_dato *****************
 12352 ;; Defined at:
 12353 ;;		line 66 in file "./I2C.h"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  dato            1    wreg     unsigned char 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  dato            1    1[COMRAM] unsigned char 
 12358 ;; Return value:  Size  Location     Type
 12359 ;;                  1    wreg      unsigned char 
 12360 ;; Registers used:
 12361 ;;		wreg, status,2, status,0, cstack
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/0
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12367 ;;      Params:         0       0       0       0       0       0       0       0       0
 12368 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12369 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12370 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12371 ;;Total ram usage:        1 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:    2
 12374 ;; This function calls:
 12375 ;;		_i2c_espera
 12376 ;; This function is called by:
 12377 ;;		_bh1750_escribir
 12378 ;;		_bh1750_leer
 12379 ;;		_escribe_rtc
 12380 ;;		_leer_rtc
 12381 ;;		_escribe_eeprom
 12382 ;;		_leer_eeprom
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text64
 12387  003AB4                     __ptext64:
 12388                           	opt callstack 0
 12389  003AB4                     _i2c_envia_dato:
 12390                           	opt callstack 24
 12391                           
 12392                           ;incstack = 0
 12393                           ;i2c_envia_dato@dato stored from wreg
 12394  003AB4  6E02               	movwf	i2c_envia_dato@dato^0,c
 12395  003AB6                     
 12396                           ;./I2C.h: 67:     i2c_espera();
 12397  003AB6  ECDE  F01C         	call	_i2c_espera	;wreg free
 12398  003ABA                     
 12399                           ;./I2C.h: 68:     SSPBUF = dato;
 12400  003ABA  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 12401  003ABE  0012               	return		;funcret
 12402  003AC0                     __end_of_i2c_envia_dato:
 12403                           	opt callstack 0
 12404                           
 12405 ;; *************** function _i2c_detener *****************
 12406 ;; Defined at:
 12407 ;;		line 55 in file "./I2C.h"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;		None
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;		None
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  1    wreg      void 
 12414 ;; Registers used:
 12415 ;;		wreg, status,2, status,0, cstack
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12421 ;;      Params:         0       0       0       0       0       0       0       0       0
 12422 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12423 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12424 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12425 ;;Total ram usage:        0 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; Hardware stack levels required when called:    2
 12428 ;; This function calls:
 12429 ;;		_i2c_espera
 12430 ;; This function is called by:
 12431 ;;		_bh1750_escribir
 12432 ;;		_bh1750_leer
 12433 ;;		_escribe_rtc
 12434 ;;		_leer_rtc
 12435 ;;		_escribe_eeprom
 12436 ;;		_leer_eeprom
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text65
 12441  003AD0                     __ptext65:
 12442                           	opt callstack 0
 12443  003AD0                     _i2c_detener:
 12444                           	opt callstack 24
 12445  003AD0                     
 12446                           ;./I2C.h: 56:     i2c_espera();
 12447  003AD0  ECDE  F01C         	call	_i2c_espera	;wreg free
 12448  003AD4                     
 12449                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
 12450  003AD4  84C5               	bsf	197,2,c	;volatile
 12451  003AD6  0012               	return		;funcret
 12452  003AD8                     __end_of_i2c_detener:
 12453                           	opt callstack 0
 12454                           
 12455 ;; *************** function _i2c_espera *****************
 12456 ;; Defined at:
 12457 ;;		line 29 in file "./I2C.h"
 12458 ;; Parameters:    Size  Location     Type
 12459 ;;		None
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;		None
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  1    wreg      void 
 12464 ;; Registers used:
 12465 ;;		wreg, status,2, status,0
 12466 ;; Tracked objects:
 12467 ;;		On entry : 0/0
 12468 ;;		On exit  : 0/0
 12469 ;;		Unchanged: 0/0
 12470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12471 ;;      Params:         0       0       0       0       0       0       0       0       0
 12472 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12473 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12474 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12475 ;;Total ram usage:        1 bytes
 12476 ;; Hardware stack levels used:    1
 12477 ;; Hardware stack levels required when called:    1
 12478 ;; This function calls:
 12479 ;;		Nothing
 12480 ;; This function is called by:
 12481 ;;		_i2c_inicia_com
 12482 ;;		_i2c_reinicia_com
 12483 ;;		_i2c_detener
 12484 ;;		_i2c_envia_dato
 12485 ;;		_i2c_recibe_dato
 12486 ;;		_i2c_recibe_datoACK
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           	psect	text66
 12491  0039BC                     __ptext66:
 12492                           	opt callstack 0
 12493  0039BC                     _i2c_espera:
 12494                           	opt callstack 24
 12495  0039BC                     l3614:
 12496  0039BC  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 12497  0039C0  0E1F               	movlw	31
 12498  0039C2  1601               	andwf	??_i2c_espera^0,f,c
 12499  0039C4  A4D8               	btfss	status,2,c
 12500  0039C6  EFE7  F01C         	goto	u2571
 12501  0039CA  EFE9  F01C         	goto	u2570
 12502  0039CE                     u2571:
 12503  0039CE  EFDE  F01C         	goto	l3614
 12504  0039D2                     u2570:
 12505  0039D2  B4C7               	btfsc	199,2,c	;volatile
 12506  0039D4  EFEE  F01C         	goto	u2581
 12507  0039D8  EFF0  F01C         	goto	u2580
 12508  0039DC                     u2581:
 12509  0039DC  EFDE  F01C         	goto	l3614
 12510  0039E0                     u2580:
 12511  0039E0  0012               	return		;funcret
 12512  0039E2                     __end_of_i2c_espera:
 12513                           	opt callstack 0
 12514                           
 12515 ;; *************** function _UART_init *****************
 12516 ;; Defined at:
 12517 ;;		line 12 in file "./UART.h"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;  BAUD            4   26[COMRAM] long 
 12520 ;; Auto vars:     Size  Location     Type
 12521 ;;  frecuenciaCr    4    0        long 
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  1    wreg      void 
 12524 ;; Registers used:
 12525 ;;		wreg, status,2, status,0, cstack
 12526 ;; Tracked objects:
 12527 ;;		On entry : 0/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12531 ;;      Params:         4       0       0       0       0       0       0       0       0
 12532 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12533 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12534 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12535 ;;Total ram usage:       12 bytes
 12536 ;; Hardware stack levels used:    1
 12537 ;; Hardware stack levels required when called:    2
 12538 ;; This function calls:
 12539 ;;		___aldiv
 12540 ;; This function is called by:
 12541 ;;		_main
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           	psect	text67
 12546  003290                     __ptext67:
 12547                           	opt callstack 0
 12548  003290                     _UART_init:
 12549                           	opt callstack 28
 12550  003290                     
 12551                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12552  003290  9C94               	bcf	148,6,c	;volatile
 12553  003292                     
 12554                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12555  003292  8E94               	bsf	148,7,c	;volatile
 12556  003294                     
 12557                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12558  003294  0E10               	movlw	16
 12559  003296  6E11               	movwf	___aldiv@divisor^0,c
 12560  003298  0E00               	movlw	0
 12561  00329A  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12562  00329C  0E00               	movlw	0
 12563  00329E  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12564  0032A0  0E00               	movlw	0
 12565  0032A2  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12566  0032A4  0E00               	movlw	0
 12567  0032A6  6E0D               	movwf	___aldiv@dividend^0,c
 12568  0032A8  0E09               	movlw	9
 12569  0032AA  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12570  0032AC  0E3D               	movlw	61
 12571  0032AE  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12572  0032B0  0E00               	movlw	0
 12573  0032B2  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12574  0032B4  EC51  F014         	call	___aldiv	;wreg free
 12575  0032B8  C00D  F023         	movff	?___aldiv,_UART_init$1632
 12576  0032BC  C00E  F024         	movff	?___aldiv+1,_UART_init$1632+1
 12577  0032C0  C00F  F025         	movff	?___aldiv+2,_UART_init$1632+2
 12578  0032C4  C010  F026         	movff	?___aldiv+3,_UART_init$1632+3
 12579  0032C8                     
 12580                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12581  0032C8  C023  F00D         	movff	_UART_init$1632,___aldiv@dividend
 12582  0032CC  C024  F00E         	movff	_UART_init$1632+1,___aldiv@dividend+1
 12583  0032D0  C025  F00F         	movff	_UART_init$1632+2,___aldiv@dividend+2
 12584  0032D4  C026  F010         	movff	_UART_init$1632+3,___aldiv@dividend+3
 12585  0032D8  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12586  0032DC  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12587  0032E0  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12588  0032E4  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12589  0032E8  EC51  F014         	call	___aldiv	;wreg free
 12590  0032EC  040D               	decf	?___aldiv^0,w,c
 12591  0032EE  6EAF               	movwf	175,c	;volatile
 12592  0032F0                     
 12593                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12594  0032F0  84AC               	bsf	172,2,c	;volatile
 12595  0032F2                     
 12596                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12597  0032F2  98AC               	bcf	172,4,c	;volatile
 12598  0032F4                     
 12599                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12600  0032F4  8EAB               	bsf	171,7,c	;volatile
 12601  0032F6                     
 12602                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12603  0032F6  9CAC               	bcf	172,6,c	;volatile
 12604  0032F8                     
 12605                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12606  0032F8  8AAC               	bsf	172,5,c	;volatile
 12607  0032FA                     
 12608                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12609  0032FA  9CAB               	bcf	171,6,c	;volatile
 12610  0032FC                     
 12611                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12612  0032FC  88AB               	bsf	171,4,c	;volatile
 12613  0032FE  0012               	return		;funcret
 12614  003300                     __end_of_UART_init:
 12615                           	opt callstack 0
 12616                           
 12617 ;; *************** function ___aldiv *****************
 12618 ;; Defined at:
 12619 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;  dividend        4   12[COMRAM] long 
 12622 ;;  divisor         4   16[COMRAM] long 
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;  quotient        4   22[COMRAM] long 
 12625 ;;  sign            1   21[COMRAM] unsigned char 
 12626 ;;  counter         1   20[COMRAM] unsigned char 
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  4   12[COMRAM] long 
 12629 ;; Registers used:
 12630 ;;		wreg, status,2, status,0
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12636 ;;      Params:         8       0       0       0       0       0       0       0       0
 12637 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12639 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12640 ;;Total ram usage:       14 bytes
 12641 ;; Hardware stack levels used:    1
 12642 ;; Hardware stack levels required when called:    1
 12643 ;; This function calls:
 12644 ;;		Nothing
 12645 ;; This function is called by:
 12646 ;;		_UART_init
 12647 ;;		_map
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651                           	psect	text68
 12652  0028A2                     __ptext68:
 12653                           	opt callstack 0
 12654  0028A2                     ___aldiv:
 12655                           	opt callstack 26
 12656  0028A2  0E00               	movlw	0
 12657  0028A4  6E16               	movwf	___aldiv@sign^0,c
 12658  0028A6  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12659  0028A8  EF5A  F014         	goto	u3720
 12660  0028AC  EF58  F014         	goto	u3721
 12661  0028B0                     u3721:
 12662  0028B0  EF64  F014         	goto	l4424
 12663  0028B4                     u3720:
 12664  0028B4  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12665  0028B6  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12666  0028B8  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12667  0028BA  6C11               	negf	___aldiv@divisor^0,c
 12668  0028BC  0E00               	movlw	0
 12669  0028BE  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12670  0028C0  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12671  0028C2  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12672  0028C4  0E01               	movlw	1
 12673  0028C6  6E16               	movwf	___aldiv@sign^0,c
 12674  0028C8                     l4424:
 12675  0028C8  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12676  0028CA  EF6B  F014         	goto	u3730
 12677  0028CE  EF69  F014         	goto	u3731
 12678  0028D2                     u3731:
 12679  0028D2  EF75  F014         	goto	l4430
 12680  0028D6                     u3730:
 12681  0028D6  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12682  0028D8  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12683  0028DA  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12684  0028DC  6C0D               	negf	___aldiv@dividend^0,c
 12685  0028DE  0E00               	movlw	0
 12686  0028E0  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12687  0028E2  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12688  0028E4  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12689  0028E6  0E01               	movlw	1
 12690  0028E8  1A16               	xorwf	___aldiv@sign^0,f,c
 12691  0028EA                     l4430:
 12692  0028EA  0E00               	movlw	0
 12693  0028EC  6E17               	movwf	___aldiv@quotient^0,c
 12694  0028EE  0E00               	movlw	0
 12695  0028F0  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12696  0028F2  0E00               	movlw	0
 12697  0028F4  6E19               	movwf	(___aldiv@quotient+2)^0,c
 12698  0028F6  0E00               	movlw	0
 12699  0028F8  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 12700  0028FA  5011               	movf	___aldiv@divisor^0,w,c
 12701  0028FC  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 12702  0028FE  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 12703  002900  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 12704  002902  B4D8               	btfsc	status,2,c
 12705  002904  EF86  F014         	goto	u3741
 12706  002908  EF88  F014         	goto	u3740
 12707  00290C                     u3741:
 12708  00290C  EFBE  F014         	goto	l4452
 12709  002910                     u3740:
 12710  002910  0E01               	movlw	1
 12711  002912  6E15               	movwf	___aldiv@counter^0,c
 12712  002914  EF92  F014         	goto	l4438
 12713  002918                     l4436:
 12714  002918  90D8               	bcf	status,0,c
 12715  00291A  3611               	rlcf	___aldiv@divisor^0,f,c
 12716  00291C  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 12717  00291E  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 12718  002920  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 12719  002922  2A15               	incf	___aldiv@counter^0,f,c
 12720  002924                     l4438:
 12721  002924  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 12722  002926  EF97  F014         	goto	u3751
 12723  00292A  EF99  F014         	goto	u3750
 12724  00292E                     u3751:
 12725  00292E  EF8C  F014         	goto	l4436
 12726  002932                     u3750:
 12727  002932                     l4440:
 12728  002932  90D8               	bcf	status,0,c
 12729  002934  3617               	rlcf	___aldiv@quotient^0,f,c
 12730  002936  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 12731  002938  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 12732  00293A  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 12733  00293C  5011               	movf	___aldiv@divisor^0,w,c
 12734  00293E  5C0D               	subwf	___aldiv@dividend^0,w,c
 12735  002940  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12736  002942  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 12737  002944  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12738  002946  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 12739  002948  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12740  00294A  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 12741  00294C  A0D8               	btfss	status,0,c
 12742  00294E  EFAB  F014         	goto	u3761
 12743  002952  EFAD  F014         	goto	u3760
 12744  002956                     u3761:
 12745  002956  EFB6  F014         	goto	l4448
 12746  00295A                     u3760:
 12747  00295A  5011               	movf	___aldiv@divisor^0,w,c
 12748  00295C  5E0D               	subwf	___aldiv@dividend^0,f,c
 12749  00295E  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12750  002960  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 12751  002962  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12752  002964  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 12753  002966  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12754  002968  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 12755  00296A  8017               	bsf	___aldiv@quotient^0,0,c
 12756  00296C                     l4448:
 12757  00296C  90D8               	bcf	status,0,c
 12758  00296E  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 12759  002970  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 12760  002972  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 12761  002974  3211               	rrcf	___aldiv@divisor^0,f,c
 12762  002976  2E15               	decfsz	___aldiv@counter^0,f,c
 12763  002978  EF99  F014         	goto	l4440
 12764  00297C                     l4452:
 12765  00297C  5016               	movf	___aldiv@sign^0,w,c
 12766  00297E  B4D8               	btfsc	status,2,c
 12767  002980  EFC4  F014         	goto	u3771
 12768  002984  EFC6  F014         	goto	u3770
 12769  002988                     u3771:
 12770  002988  EFCE  F014         	goto	l4456
 12771  00298C                     u3770:
 12772  00298C  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 12773  00298E  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 12774  002990  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 12775  002992  6C17               	negf	___aldiv@quotient^0,c
 12776  002994  0E00               	movlw	0
 12777  002996  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 12778  002998  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 12779  00299A  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 12780  00299C                     l4456:
 12781  00299C  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 12782  0029A0  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 12783  0029A4  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 12784  0029A8  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 12785  0029AC  0012               	return		;funcret
 12786  0029AE                     __end_of___aldiv:
 12787                           	opt callstack 0
 12788                           
 12789 ;; *************** function _desbordamiento *****************
 12790 ;; Defined at:
 12791 ;;		line 13 in file "main.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;		None
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;		None
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  1    wreg      void 
 12798 ;; Registers used:
 12799 ;;		wreg, status,2, status,0
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12805 ;;      Params:         0       0       0       0       0       0       0       0       0
 12806 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12808 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12809 ;;Total ram usage:        0 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		Interrupt level 2
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           	psect	intcode
 12819  000008                     __pintcode:
 12820                           	opt callstack 0
 12821  000008                     _desbordamiento:
 12822                           	opt callstack 20
 12823                           
 12824                           ;incstack = 0
 12825  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12826  00000A  EDE6  F019         	call	int_func,f	;refresh shadow registers
 12827                           
 12828                           	psect	intcode_body
 12829  0033CC                     __pintcode_body:
 12830                           	opt callstack 20
 12831  0033CC                     int_func:
 12832                           	opt callstack 20
 12833  0033CC  0006               	pop		; remove dummy address from shadow register refresh
 12834  0033CE                     
 12835                           ;main.c: 15:     if (INTCONbits.TMR0IF) {
 12836  0033CE  A4F2               	btfss	242,2,c	;volatile
 12837  0033D0  EFEC  F019         	goto	i2u451_41
 12838  0033D4  EFEE  F019         	goto	i2u451_40
 12839  0033D8                     i2u451_41:
 12840  0033D8  EF09  F01A         	goto	i2l5256
 12841  0033DC                     i2u451_40:
 12842  0033DC                     
 12843                           ;main.c: 17:         if (esperandoDatos) {
 12844  0033DC  0100               	movlb	0	; () banked
 12845  0033DE  51D4               	movf	_esperandoDatos& (0+255),w,b
 12846  0033E0  B4D8               	btfsc	status,2,c
 12847  0033E2  EFF5  F019         	goto	i2u452_41
 12848  0033E6  EFF7  F019         	goto	i2u452_40
 12849  0033EA                     i2u452_41:
 12850  0033EA  EF02  F01A         	goto	i2l5252
 12851  0033EE                     i2u452_40:
 12852  0033EE                     
 12853                           ; BSR set to: 0
 12854                           ;main.c: 19:             tiempoInactividadTrans++;
 12855  0033EE  2BD7               	incf	_tiempoInactividadTrans& (0+255),f,b
 12856  0033F0                     
 12857                           ; BSR set to: 0
 12858                           ;main.c: 21:             if (tiempoInactividadTrans == 1)
 12859  0033F0  05D7               	decf	_tiempoInactividadTrans& (0+255),w,b
 12860  0033F2  A4D8               	btfss	status,2,c
 12861  0033F4  EFFE  F019         	goto	i2u453_41
 12862  0033F8  EF00  F01A         	goto	i2u453_40
 12863  0033FC                     i2u453_41:
 12864  0033FC  EF02  F01A         	goto	i2l5252
 12865  003400                     i2u453_40:
 12866  003400                     
 12867                           ; BSR set to: 0
 12868                           ;main.c: 22:                 esperaDatoConcluida = 1;
 12869  003400  0E01               	movlw	1
 12870  003402  6FD5               	movwf	_esperaDatoConcluida& (0+255),b
 12871  003404                     i2l5252:
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;main.c: 27:         INTCONbits.TMR0IF = 0;
 12875  003404  94F2               	bcf	242,2,c	;volatile
 12876  003406                     
 12877                           ; BSR set to: 0
 12878                           ;main.c: 28:         TMR0 = VALOR_TIMER0;
 12879  003406  C0E3  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 12880  00340A  C0E4  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 12881                           
 12882                           ;main.c: 29:         overflowTimer = 1;
 12883  00340E  0E01               	movlw	1
 12884  003410  6FCD               	movwf	_overflowTimer& (0+255),b
 12885  003412                     i2l5256:
 12886                           
 12887                           ;main.c: 33:     if (PIR1bits.RCIF) {
 12888  003412  AA9E               	btfss	158,5,c	;volatile
 12889  003414  EF0E  F01A         	goto	i2u454_41
 12890  003418  EF10  F01A         	goto	i2u454_40
 12891  00341C                     i2u454_41:
 12892  00341C  EF15  F01A         	goto	i2l456
 12893  003420                     i2u454_40:
 12894  003420                     
 12895                           ;main.c: 35:         byteUart = RCREG;
 12896  003420  CFAE F0D6          	movff	4014,_byteUart	;volatile
 12897  003424                     
 12898                           ;main.c: 36:         datoRecibido = 1;
 12899  003424  0E01               	movlw	1
 12900  003426  0100               	movlb	0	; () banked
 12901  003428  6FCE               	movwf	_datoRecibido& (0+255),b
 12902  00342A                     i2l456:
 12903  00342A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12904  00342C  0011               	retfie		f
 12905  00342E                     __end_of_desbordamiento:
 12906                           	opt callstack 0
 12907                           
 12908                           	psect	rparam
 12909  0000                     
 12910                           	psect	temp
 12911  00005F                     btemp:
 12912                           	opt callstack 0
 12913  00005F                     	ds	1
 12914  0000                     int$flags	set	btemp
 12915  0000                     wtemp8	set	btemp+1
 12916  0000                     ttemp5	set	btemp+1
 12917  0000                     ttemp6	set	btemp+4
 12918  0000                     ttemp7	set	btemp+8
 12919                           tosu	equ	0xFFF
 12920                           tosh	equ	0xFFE
 12921                           tosl	equ	0xFFD
 12922                           stkptr	equ	0xFFC
 12923                           pclatu	equ	0xFFB
 12924                           pclath	equ	0xFFA
 12925                           pcl	equ	0xFF9
 12926                           tblptru	equ	0xFF8
 12927                           tblptrh	equ	0xFF7
 12928                           tblptrl	equ	0xFF6
 12929                           tablat	equ	0xFF5
 12930                           prodh	equ	0xFF4
 12931                           prodl	equ	0xFF3
 12932                           indf0	equ	0xFEF
 12933                           postinc0	equ	0xFEE
 12934                           postdec0	equ	0xFED
 12935                           preinc0	equ	0xFEC
 12936                           plusw0	equ	0xFEB
 12937                           fsr0h	equ	0xFEA
 12938                           fsr0l	equ	0xFE9
 12939                           wreg	equ	0xFE8
 12940                           indf1	equ	0xFE7
 12941                           postinc1	equ	0xFE6
 12942                           postdec1	equ	0xFE5
 12943                           preinc1	equ	0xFE4
 12944                           plusw1	equ	0xFE3
 12945                           fsr1h	equ	0xFE2
 12946                           fsr1l	equ	0xFE1
 12947                           bsr	equ	0xFE0
 12948                           indf2	equ	0xFDF
 12949                           postinc2	equ	0xFDE
 12950                           postdec2	equ	0xFDD
 12951                           preinc2	equ	0xFDC
 12952                           plusw2	equ	0xFDB
 12953                           fsr2h	equ	0xFDA
 12954                           fsr2l	equ	0xFD9
 12955                           status	equ	0xFD8


Data Sizes:
    Strings     886
    Constant    0
    Data        15
    BSS         470
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     70     135
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dameDatosSistema$1636	PTR unsigned char [8] size(2) Largest target is 288
		 -> horarios(BIGRAM[288]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), horarios(BIGRAM[288]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), horarios(BIGRAM[288]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_27(CODE[23]), STR_26(CODE[24]), STR_20(CODE[36]), STR_19(CODE[37]), 
		 -> STR_18(CODE[36]), STR_17(CODE[39]), STR_16(CODE[36]), STR_15(CODE[35]), 
		 -> STR_14(CODE[37]), STR_13(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer2(BANK1[50]), buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer2(BANK1[50]), buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1312_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer2(BANK1[50]), buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> dameDatosSistema@bufferHorario(BANK0[30]), buffer2(BANK1[50]), buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_27(CODE[23]), STR_26(CODE[24]), STR_20(CODE[36]), STR_19(CODE[37]), 
		 -> STR_18(CODE[36]), STR_17(CODE[39]), STR_16(CODE[36]), STR_15(CODE[35]), 
		 -> STR_14(CODE[37]), STR_13(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_27(CODE[23]), STR_26(CODE[24]), STR_20(CODE[36]), STR_19(CODE[37]), 
		 -> STR_18(CODE[36]), STR_17(CODE[39]), STR_16(CODE[36]), STR_15(CODE[35]), 
		 -> STR_14(CODE[37]), STR_13(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_27(CODE[23]), STR_26(CODE[24]), STR_20(CODE[36]), STR_19(CODE[37]), 
		 -> STR_18(CODE[36]), STR_17(CODE[39]), STR_16(CODE[36]), STR_15(CODE[35]), 
		 -> STR_14(CODE[37]), STR_13(CODE[19]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), horarios(BIGRAM[288]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), horarios(BIGRAM[288]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 55
		 -> STR_31(CODE[21]), STR_30(CODE[11]), STR_29(CODE[9]), STR_28(CODE[17]), 
		 -> dameDatosSistema@bufferHorario(BANK0[30]), STR_25(CODE[37]), STR_24(CODE[41]), STR_23(CODE[42]), 
		 -> STR_22(CODE[31]), STR_21(CODE[13]), buffer2(BANK1[50]), buffer(BANK1[50]), 
		 -> STR_12(CODE[3]), STR_11(CODE[14]), STR_10(CODE[36]), STR_9(CODE[26]), 
		 -> STR_8(CODE[25]), STR_7(CODE[34]), STR_6(CODE[32]), STR_5(CODE[55]), 
		 -> STR_4(CODE[40]), STR_3(CODE[27]), STR_2(CODE[37]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_inicializarObjetos
    _main->_sistemaPrincipal
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoIluminar->_getValue
    _setRtcDefault->_escribe_rtc
    _mostrarDatosSensores->_dameValorLux
    _dameValorLux->_bh1750_leer
    _bh1750_leer->___fltol
    _i2c_recibe_datoACK->_i2c_espera
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_printf->_UART_write
    _asignarSetPoint->_getValue
    _asignarHorarios->_getValue
    _getValue->___lmul
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _sistemaIluminado->_pwmDuty
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _inicializarObjetos->_pwmDuty
    _pwmDuty->___fltol
    _map->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _bh1750_iniciar->_bh1750_escribir
    _bh1750_escribir->_i2c_envia_dato
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _sprintf->_vfprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  122617
                          _UART_init
                        _UART_printf
                     _bh1750_iniciar
                          _configPwm
                        _i2c_iniciar
                 _inicializarObjetos
                   _sistemaIluminado
                   _sistemaPrincipal
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   98655
                                             93 COMRAM     1     1      0
                                             68 BANK0      2     2      0
                    _asignarHorarios
                    _asignarSetPoint
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
                 _leeHorariosMemoria
               _mostrarDatosSensores
                      _setRtcDefault
                  _setTiempoIluminar
 ---------------------------------------------------------------------------------
 (2) _setTiempoIluminar                                    3     3      0   11279
                                             34 COMRAM     3     3      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _setRtcDefault                                        1     1      0    2437
                                              4 COMRAM     1     1      0
                        _UART_printf
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                 0     0      0   22011
                        _UART_printf
                         _UART_write
                       _dameValorLux
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _dameValorLux                                        10     6      4    3114
                                             86 COMRAM     5     1      4
                                              0 BANK0      5     5      0
                    _bh1750_escribir
                        _bh1750_leer
 ---------------------------------------------------------------------------------
 (4) _bh1750_leer                                         12     8      4    3024
                                             74 COMRAM    12     8      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                 _i2c_recibe_datoACK
 ---------------------------------------------------------------------------------
 (5) _i2c_recibe_datoACK                                   2     2      0      45
                                              1 COMRAM     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _leeHorariosMemoria                                   9     9      0    4344
                                              6 COMRAM     9     9      0
                         _UART_write
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (3) _leer_eeprom                                          4     2      2     492
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    8443
                         _UART_write
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0    7997
                         _UART_write
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    7975
                                             34 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (3) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    42    42      0   22752
                                             91 COMRAM     2     2      0
                                             28 BANK0     40    40      0
                        _UART_printf
                         _UART_write
                             ___wmul
                      _limpiarBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   16908
                                              6 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   15183
                                             89 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   14796
                                             63 COMRAM    26    20      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5346
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3697
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4482
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _limpiarBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    1967
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _asignarSetPoint                                      8     8      0    7888
                                             34 COMRAM     8     8      0
                         _UART_write
                             ___lmul
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      7     7      0   11482
                                             34 COMRAM     7     7      0
                         _UART_write
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (3) _getValue                                            22    18      4    6490
                                             12 COMRAM    22    18      4
                          _UART_read
                         _UART_write
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4655
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     848
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _sistemaIluminado                                     1     1      0    8806
                                             86 COMRAM     1     1      0
                      _dameDiaActual
                     _dameHoraActual
                       _horaIluminar
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _horaIluminar                                         6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0   12223
                                             86 COMRAM     8     8      0
                             ___wmul
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _pwmDuty                                             12     9      3    8420
                                             74 COMRAM    12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    2572
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     609
                                             64 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2200
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1551
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3489
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bh1750_iniciar                                       1     1      0      44
                                              3 COMRAM     1     1      0
                    _bh1750_escribir
 ---------------------------------------------------------------------------------
 (4) _bh1750_escribir                                      1     1      0      44
                                              2 COMRAM     1     1      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (5) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (6) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _UART_printf
     _UART_write
   _bh1750_iniciar
     _bh1750_escribir
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _configPwm
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
     _pwmDuty
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
   _sistemaIluminado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _horaIluminar
     _pwmDuty
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
   _sistemaPrincipal
     _asignarHorarios
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
         ___lmul
         ___wmul
     _asignarSetPoint
       _UART_write
       ___lmul
       _getValue
         _UART_read
         _UART_write
         ___lmul
         ___wmul
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _limpiarBuffer
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
           ___lmul
           ___wmul
     _fijaHoraRtc
       _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_read
           _UART_write
           ___lmul
           ___wmul
     _leeHorariosMemoria
       _UART_write
       ___wmul
       _leer_eeprom
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameValorLux
         _bh1750_escribir
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _bh1750_leer
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
           _i2c_recibe_datoACK
             _i2c_espera
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _setRtcDefault
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
     _setTiempoIluminar
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_read
         _UART_write
         ___lmul
         ___wmul

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      84       7       51.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      87       5       84.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     169      20        0.0%
DATA                 0      0     289       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 02 13:38:06 2020

          __size_of_escribe_eeprom 0030                       ___fldiv@aexp 0027  
                     ___fldiv@bexp 0026                       ___fldiv@sign 001F  
                    ??_bh1750_leer 004F                       ___awdiv@sign 0006  
              ___wmul@multiplicand 0003                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l103 32FE                                l111 3536  
                              l112 3538                                l106 3500  
                              l115 3A58                                l212 3994  
                              l124 348A                                l133 39E0  
                              l142 3AD6                                l118 3A66  
                              l127 3A7C                                l215 3A00  
                              l311 37CC                                l303 238A  
                              l151 393E                                l136 3ACE  
                              l160 2EAA                                l145 3ABE  
                              l209 3A1E                                l154 3A92  
                              l306 38E0                                l330 31A2  
                              l139 3AC6                                l163 36CA  
                              l148 3A38                                l500 2CEE  
                              l157 3A50           __size_of_bh1750_escribir 0018  
                              l325 2788                                l182 363C  
                              l166 321C                                l174 1A50  
                              l502 2D2A                                l510 1662  
                              l183 367A                                l271 3AA2  
                              l184 3646                                l256 3122  
                              l344 2EE0                                l185 367C  
                              l601 39BA                                l265 221C  
                              l281 328E                                l434 05B8  
                              l338 2F5C                                l179 3630  
                              l443 378E                                l612 3358  
                              l268 396A                                l284 3910  
                              l508 165A                                l348 2F5E  
                              l613 3368                                l357 28A0  
                              l437 05C8                                l373 15B8  
                              l277 3840                                l294 2644  
                              l447 2B9A                                l551 20A2  
                              l535 1F9E                                l287 3808  
                              l528 189C                                l376 362C  
                              l537 1FA6                                l546 2050  
                              l715 1F1C                                l547 209A  
                              l565 06C6                                l590 0AD8  
                              l680 29AC                                l728 24EE  
                              l832 2DEE                                l497 2CAC  
                              l597 33C2                                l845 300E  
                              l598 33CA                                l898 2AB2  
                     __CFG_CPB$OFF 000000                                _PR2 000FCB  
                     __CFG_CPD$OFF 000000                       __CFG_BOR$OFF 000000  
                              _abs 3710                                _map 31A4  
                              _pad 2C66                       ___awmod@sign 0006  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 0039                       ___flmul@bexp 003A  
                     ___flmul@sign 0034                       ___flmul@temp 003F  
         __end_of_dameDatosSistema 15BA                       ___flmul@prod 003B  
                     __CFG_LVP$OFF 000000                  ?_i2c_reinicia_com 0001  
                             PID@D 00AA                               PID@I 00AE  
                             PID@P 00B2                       ___fltol@exp1 004A  
                     ?_escribe_rtc 0003                       __CFG_WDT$OFF 000000  
                             ?_abs 0013                               l1222 0D94  
                             l1310 1D94                               l1215 0B9E  
                             l1232 0EC4                               l1224 0E0C  
                             l1225 0DFA                               l1313 3878  
                             l1321 35DC                               l1219 0F02  
                             l1307 1D8C                               l1270 1B9C  
                             l1183 129C                               l1263 1B40  
                             l1351 358A                               l1256 1AA8  
                             l1336 2C64                               l1344 370E  
                             l1360 38AE                               l1185 10FC  
                             l1194 1142                               l4010 1084  
                             l4002 103A                               l1354 3AD8  
                             l1259 1C04                               l1196 11BA  
                             l1188 10C0                               l4020 10CA  
                             l4012 108C                               l4004 1054  
                             l1276 3746                               l1197 11A8  
                             l4030 1122                               l4022 10E8  
                             l4014 109C                               l4006 1064  
                             l1279 374E                               l4040 1160  
                             l4032 1128                               l4024 10EA  
                             l4016 10B0                               l4008 1074  
                             l4120 2A92                               l4104 2A3E  
                             l4200 2E0A                               l4050 11CA  
                             l4042 1164                               l4034 1132  
                             l4026 10FA                               l4018 10BE  
                             l4122 2AA2                               l4114 2A66  
                             l4106 2A48                               l4130 1A72  
                             l5010 1580                               l5002 1476  
                             l4202 2E12                               l4060 122C  
                             l4052 11D6                               l4044 1172  
                             l4036 1140                               l4028 110C  
                             l4116 2A72                               l4108 2A52  
                             l4140 1AEA                               l4132 1AB8  
                             l5100 20A4                               l4220 0040  
                             l3500 2CFE                               l5004 14A6  
                             l5012 158C                               l4212 3A04  
                             l4204 2E16                               l4070 128A  
                             l4062 1242                               l4054 11E4  
                             l4046 11A0                               l4038 1152  
                             l4118 2A82                               l4150 1B72  
                             l4142 1AF6                               l4134 1ACE  
                             l4126 1A54                               l5110 2140  
                             l4310 02A4                               l4302 0276  
                             l4230 0070                               l4222 0050  
                             l4214 0012                               l3510 3842  
                             l3502 2D12                               l5014 1592  
                             l5006 152A                               l4206 2E3C  
                             l5030 3626                               l4072 1290  
                             l4064 125C                               l4056 120E  
                             l4160 1BB0                               l4152 1B7E  
                             l4144 1B28                               l4128 1A64  
                             l5112 215C                               l5200 286E  
                             l4312 02AE                               l4304 027C  
                             l4240 008E                               l4224 0054  
                             l4216 002A                               l5040 2B16  
                             l5032 2AB4                               l3600 358C  
                             l3520 1D96                               l5016 15AE  
                             l5008 154C                               l4208 2E9A  
                             l5024 35DE                               l3514 3996  
                             l4074 1292                               l4066 1278  
                             l4058 1212                               l4090 2A02  
                             l4082 29AE                               l4162 1BD4  
                             l4154 1B8C                               l4146 1B2A  
                             l4138 1AE2                               l5130 21C8  
                             l5106 20AC                               l5202 2890  
                             l4330 0398                               l4314 02E6  
                             l4322 034A                               l4306 028C  
                             l4242 009E                               l4226 0062  
                             l4218 0030                               l5050 2B94  
                             l5042 2B4A                               l5034 2ABA  
                             l3602 3590                               l3530 1DDA  
                             l3522 1D9A                               l3506 3710  
                             l4410 3372                               l5018 15B2  
                             l5026 35F4                               l4420 28B4  
                             l5060 32C8                               l5052 3290  
                             l3612 39BC                               l3516 39B2  
                             l4068 127C                               l4092 2A04  
                             l4084 29C4                               l4164 1BE4  
                             l4156 1BAA                               l4148 1B36  
                             l5132 21EC                               l5124 216C  
                             l5108 213C                               l4180 3A2A  
                             l4172 3AC0                               l4404 38E2  
                             l4340 03C6                               l4332 03B8  
                             l4316 0310                               l4308 029C  
                             l4324 0386                               l4260 0136  
                             l4244 00A6                               l4252 00F8  
                             l4236 0078                               l4228 0068  
                             l5044 2B66                               l5036 2AD6  
                             l3604 35A4                               l3540 1E30  
                             l3532 1DFA                               l3524 1DA8  
                             l3508 372A                               l3460 2BE8  
                             l3452 2B9C                               l3620 15DA  
                             l3700 1FDE                               l4412 3380  
                             l4500 2DE6                               l5028 361A  
                             l5140 2EB4                               l5300 308C  
                             l4430 28EA                               l4422 28C4  
                             l5070 32F8                               l5062 32F0  
                             l5054 3290                               l3614 39BC  
                             l4190 3A3C                               l4094 2A14  
                             l4166 1BF2                               l4158 1BAC  
                             l5134 21F0                               l5126 21A8  
                             l5118 2164                               l4182 3A32  
                             l4174 3AC4                               l4406 3902  
                             l4350 0430                               l4342 03D6  
                             l4326 038A                               l4318 033A  
                             l4270 0164                               l4262 0156  
                             l4246 00B0                               l4254 0124  
                             l4238 007E                               l5046 2B7E  
                             l5038 2AFA                               l3606 35D2  
                             l3550 1EB2                               l3542 1E44  
                             l3534 1DFE                               l3526 1DC8  
                             l3462 2C1E                               l3454 2BAE  
                             l3470 36EA                               l3630 164E  
                             l3622 1602                               l3710 202E  
                             l3702 1FE2                               l4414 33A6  
                             l4510 2F7A                               l5150 2EDC  
                             l5142 2EBC                               l5302 3094  
                             l4440 2932                               l4432 28FA  
                             l4424 28C8                               l4416 28A2  
                             l5072 32FA                               l5064 32F2  
                             l5056 3292                               l3616 39D2  
                             l5080 3A7E                               l4096 2A18  
                             l4088 29D8                               l4168 1BF4  
                             l5136 220C                               l5128 21AC  
                             l4184 3A34                               l4176 3A20  
                             l4352 0468                               l4360 04C8  
                             l4344 03E6                               l4328 0394  
                             l4280 01CE                               l4272 0174  
                             l4256 0128                               l4248 00E8  
                             l5048 2B8E                               l3608 35D6  
                             l3560 1EFC                               l3552 1EB4  
                             l3544 1E52                               l3536 1E0A  
                             l3528 1DCC                               l3456 2BC0  
                             l3472 36EE                               l3480 38A2  
                             l3640 1698                               l3632 166A  
                             l3624 1622                               l3720 207C  
                             l3712 2032                               l3704 2000  
                             l4408 336A                               l4520 2FAE  
                             l4512 2F7E                               l4504 2F60  
                             l4600 37F8                               l3800 3926  
                             l4192 2DF0                               l5152 2EE8  
                             l5144 2EC4                               l4450 2976  
                             l4442 293C                               l4434 2910  
                             l4426 28D6                               l4418 28A6  
                             l5074 32FC                               l5066 32F4  
                             l5058 3294                               l5082 3A8C  
                             l5090 3634                               l4098 2A26  
                             l4186 3A36                               l4178 3A24  
                             l5170 27B4                               l4610 2508  
                             l4354 0492                               l4346 03EE  
                             l4362 050C                               l4338 03C0  
                             l4290 0240                               l4282 01F8  
                             l4274 0184                               l4258 0132  
                             l3730 1C3E                               l3722 1C06  
                             l3554 1EC6                               l3546 1E64  
                             l3538 1E28                               l3570 23BE  
                             l3458 2BCA                               l3466 36CC  
                             l3474 387A                               l3490 2C98  
                             l3650 1736                               l3642 16A2  
                             l3634 167C                               l3626 1632  
                             l3618 15BA                               l3706 200C  
                             l3810 05EE                               l4530 2FE8  
                             l4522 2FB6                               l4514 2F8C  
                             l4506 2F64                               l4602 3806  
                             l3802 393A                               l4194 2DF8  
                             l5154 2EF0                               l5146 2ECC  
                             l5138 2EAE                               l4444 295A  
                             l4436 2918                               l4452 297C  
                             l4428 28E6                               l5068 32F6  
                             l5084 3630                               l5076 3A68  
                             l4700 0B88                               l5180 27F0  
                             l5172 27BC                               l5164 278A  
                             l4620 2544                               l4612 250C  
                             l4364 0510                               l4356 04B8  
                             l4348 03F8                               l4292 024A  
                             l4276 018C                               l4268 015E  
                             l4372 053E                               l4540 342E  
                             l3740 1C94                               l3732 1C74  
                             l3724 1C1A                               l3548 1E92  
                             l3556 1ECC                               l3580 2416  
                             l3572 23C2                               l3564 238C  
                             l3468 36D8                               l3476 3886  
                             l3492 2CA4                               l3484 2C66  
                             l3660 1806                               l3644 16A8  
                             l3652 179A                               l3636 168A  
                             l3628 1634                               l3716 2064  
                             l3708 202A                               l3900 0A16  
                             l3820 0622                               l3812 05FC  
                             l4460 2D2C                               l4524 2FC4  
                             l4532 2FEE                               l4516 2F94  
                             l4508 2F72                               l3804 393C  
                             l4196 2DFC                               l5148 2ED4  
                             l4454 298C                               l4446 296A  
                             l4438 2924                               l5094 3650  
                             l5078 3A6C                               l4710 0BD2  
                             l4702 0B8E                               l5190 281C  
                             l5182 27F4                               l5174 27C0  
                             l5166 279C                               l4630 2598  
                             l4622 2548                               l4606 24F0  
                             l4366 051A                               l4294 024E  
                             l4278 0196                               l4286 0208  
                             l4374 0582                               l4542 3432  
                             l3750 1D0E                               l3742 1C9C  
                             l3734 1C78                               l3726 1C1E  
                             l3558 1EDC                               l3590 2498  
                             l3582 242A                               l3574 23D0  
                             l3566 2390                               l3478 388A  
                             l3494 2CB8                               l3486 2C76  
                             l3670 1850                               l3654 17B4  
                             l3662 1816                               l3646 172A  
                             l3638 1690                               l3718 2078  
                             l3910 0A7C                               l3830 0644  
                             l3822 0634                               l3814 060E  
                             l4470 2D58                               l4462 2D30  
                             l4534 2FFE                               l4526 2FDA  
                             l4518 2FA6                               l4198 2E02  
                             l4550 3682                               l5158 2EF8  
                             l5270 3022                               l5262 3010  
                             ?_map 001B                               ?_pad 0011  
                             l4456 299C                               l4448 296C  
                             l4720 0C22                               l4712 0BDE  
                             l4704 0BAE                               l4800 189E  
                             l5192 2830                               l5184 2808  
                             l5176 27D6                               l5168 27A0  
                             l4640 25F0                               l4632 259C  
                             l4608 24F8                               l4376 0594  
                             l4368 051E                               l4296 026E  
                             l4288 023C                               l4544 3456  
                             l3744 1CA4                               l3728 1C22  
                             l3584 2438                               l3592 249E  
                             l3576 23F0                               l3568 239E  
                             l3496 2CCC                               l3488 2C8A  
                             l3672 185C                               l3664 1828  
                             l3656 17D2                               l3648 1730  
                             l3680 1F1E                               l3904 0A36  
                             l3816 0612                               l3920 0AA2  
                             l3808 05CA                               l4480 2D86  
                             l4472 2D60                               l4464 2D3E  
                             l4536 3006                               l4528 2FE2  
                             l4560 36BA                               l4552 3688  
                             l5280 302E                               l5272 3024  
                             l5264 3014                               l4730 0C64  
                             l4722 0C2E                               l4714 0BE8  
                             l4706 0BBE                               l4802 18FE  
                             l4570 3992                               l5194 2840  
                             l5186 280C                               l5178 27E6  
                             l4642 2628                               l4634 25A0  
                             l4618 2514                               l3770 352E  
                             l4378 05A4                               l4546 345A  
                             l3754 1D4C                               l3746 1CD8  
                             l3738 1C7E                               l3594 24AE  
                             l3586 2466                               l3578 240E  
                             l3498 2CD0                               l3674 1864  
                             l3666 1838                               l3658 17EC  
                             l3690 1F66                               l3682 1F30  
                             l3922 0AC6                               l3906 0A5A  
                             l3914 0A88                               l3850 06FC  
                             l3842 0660                               l3834 064C  
                             l3826 063C                               l3818 061E  
                             l4650 355C                               l4490 2DC0  
                             l4482 2D8E                               l4474 2D64  
                             l4466 2D46                               l4554 3690  
                             l5290 305A                               l5282 3036  
                             l5274 3026                               l5266 3018  
                             l3780 3ACC                               l4740 0CC6  
                             l4732 0C70                               l4724 0C3A  
                             l4716 0BFE                               l3940 332E  
                             l4564 31A4                               l4812 1A26  
                             l4804 191C                               l4580 39FE  
                             l4820 30A4                               l5196 2854  
                             l5188 2814                               l4636 25BC  
                             l4628 2550                               l3772 3532  
                             l3764 34E6                               l3756 1D5E  
                             l3596 24CE                               l3588 2486  
                             l3668 183E                               l3676 1874  
                             l3692 1F6E                               l3684 1F38  
                             l3916 0A96                               l3908 0A68  
                             l3860 077C                               l3852 0732  
                             l3844 06B4                               l4652 3578  
                             l4644 353A                               l4492 2DC2  
                             l4484 2D9C                               l4476 2D6C  
                             l4468 2D4A                               l4900 3790  
                             l4556 36A4                               l4548 3682  
                             l5292 306C                               l5284 3038  
                             l5276 3028                               l5268 301E  
                             l3782 3AD0                               l3790 3ABE  
                             l3950 0F20                               l4750 0D5C  
                             l4742 0CD2                               l4734 0C80  
                             l4726 0C48                               l4718 0C0A  
                             l4670 0ADA                               l3942 3338  
                             l3934 3300                               l4806 19A2  
                             l4574 39E4                               l4822 30C6  
                             l5198 2858                               l4638 25EC  
                             l3766 350E                               l4910 2656  
                             l4662 3758                               l3758 1D70  
                             l3694 1F7C                               l3686 1F4A  
                             l3870 0802                               l3854 0740  
                             l3846 06D6                               l3838 0654  
                             l4646 354C                               l4494 2DC8  
                             l4486 2DA2                               l4478 2D7E  
                             l4590 324A                               l4902 37A6  
                             l4558 36B4                               l5294 3070  
                             l5286 303A                               l5278 302A  
                             l3784 3AD4                               l3952 0F30  
                             l3960 0F5A                               l3944 0F04  
                             l4760 0DB2                               l4752 0D7A  
                             l4744 0CEE                               l4736 0C9A  
                             l4728 0C54                               l4680 0B16  
                             l4672 0AE6                               l3936 3310  
                             l4808 19E4                               l4576 39E4  
                             l4568 396E                               l4832 3940  
                             l4824 30E6                               l3768 351E  
                             l3776 3A54                               l4912 2668  
                             l4664 3768                               l4656 3750  
                             l5560 1CC2                               l3688 1F52  
                             l3880 089C                               l3872 0810  
                             l3864 07C2                               l3856 074E  
                             l3848 06D8                               l4648 3554  
                             l4488 2DB8                               l4496 2DCE  
                             l4592 3288                               l4584 3220  
                             l4840 3832                               l4904 37BC  
                             l5296 3074                               l5288 304E  
                             l3786 3AB6                               l3778 3AC8  
                             l3970 0F86                               l3962 0F6A  
                             l3954 0F40                               l3946 0F10  
                             l4770 0E1C                               l4762 0DB6  
                             l4754 0D84                               l4746 0D18  
                             l4738 0CAA                               l4690 0B48  
                             l4682 0B26                               l4674 0AF4  
                             l3938 331E                               l4578 39EC  
                             l4834 3A94                               l4826 3118  
                             l4818 30A0                               l5570 04DE  
                             l5562 26DA                               l4930 26BE  
                             l4922 2690                               l4914 2678  
                             l4666 376C                               l3698 1FCA  
                             l3890 093C                               l3874 0834  
                             l3858 076E                               l3866 07D4  
                             l4498 2DDE                               l4594 328C  
                             l4586 3228                               l4842 383C  
                             l4906 37C6                               l4850 2238  
                             l3794 3914                               l5554 2F0E  
                             l5298 307A                               l3788 3ABA  
                             l3972 0F96                               l3980 0FC0  
                             l3964 0F70                               l3956 0F50  
                             l3948 0F1E                               l4780 0E7E  
                             l4772 0E28                               l4764 0DC4  
                             l4756 0D92                               l4748 0D4E  
                             l4692 0B56                               l4684 0B2C  
                             l4676 0AF6                               l4828 311C  
                             l5572 0554                               l5564 010E  
                             l4940 2720                               l4924 26A0  
                             l4916 2688                               l4908 2646  
                             l4668 3788                               l3892 0984  
                             l3884 08E2                               l3876 086E  
                             l3868 07F8                               l5556 13E6  
                             l4588 3238                               l4836 380A  
                             l4860 2280                               l4852 224A  
                             l4844 221E                               l3796 3918  
                             l3990 1002                               l3982 0FD0  
                             l3974 0FA6                               l3966 0F76  
                             l3958 0F52                               l4790 0EE6  
                             l4782 0E92                               l4774 0E36  
                             l4766 0DF2                               l4758 0DA4  
                             l4694 0B58                               l4686 0B3C  
                             l4678 0B06                               l5574 1A3A  
                             l5566 021E                               l4950 276E  
                             l4942 273C                               l4934 26C6  
                             l3878 088E                               l3886 08F4  
                             l5558 0686                               l4838 381C  
                             l4598 37CE                               l4870 22D2  
                             l4862 2284                               l4846 2226  
                             l3798 391E                               l5576 3664  
                             l3984 0FE6                               l3976 0FB6  
                             l3968 0F84                               l4792 0EE8  
                             l4784 0EAC                               l4776 0E60  
                             l4696 0B68                               l4688 0B42  
                             l5568 0360                               l4952 2782  
                             l4944 2750                               l4936 26F0  
                             l4928 26B6                               l3896 09BC  
                             l3888 0918                               l4880 2328  
                             l4872 22D6                               l4848 2234  
                             l4960 3134                               l3986 0FF6  
                             l3994 1016                               l3978 0FB8  
                             l4786 0EC8                               l4794 0EEE  
                             l4778 0E64                               l4698 0B78  
                             l4946 2754                               l4938 271C  
                             l3898 09E0                               l4882 235E  
                             l4874 22DA                               l4858 2252  
                             l4890 38B4                               l4970 319C  
                             l4962 3146                               l3996 1026  
                             l3988 0FFE                               l4796 0EF2  
                             l4788 0ED8                               l4948 275E  
                             l4980 131C                               l4972 129E  
                             l4884 237A                               l4876 22F6  
                             l4868 228C                               l4892 38B6  
                             l4964 3156                               l3998 1026  
                             l4982 1340                               l4974 12C4  
                             l4878 2324                               l4886 2384  
                             l4894 38C0                               l4966 3168  
                             l4958 3124                               l4984 1364  
                             l4976 12D4                               l4992 13D0  
                             l4896 38CA                               l4888 38B0  
                             l4968 3198                               l4986 1388  
                             l4978 12F8                               l4994 1424  
                             l4898 38D4                               l4996 146C  
                             l4988 13AC                       ?_leer_eeprom 0003  
                             STR_1 7FC0                               STR_2 7D62  
                             STR_3 7F0A                               STR_4 7D13  
                             STR_5 7C89                               STR_6 7ECB  
                             STR_7 7EA9                               STR_8 7F3F  
                             STR_9 7F25                               u3000 0740  
                             u3001 073C                               u3010 07BC  
                             u3011 07B6                               u2300 2BC0  
                             u3100 093C                               u3020 07BE  
                             u2301 2BBC                               u3101 0938  
                             u2310 2BE8                               u3110 09E0  
                             u3030 07D4                               u2311 2BE4  
                             u3111 09DC                               u3031 07D0  
                             u3200 0FA6                               u4000 0B56  
                             u2400 3872                               u2320 2C1E  
                             u3120 0A5A                               u3040 07F8  
                             u3201 0FA2                               u4001 0B52  
                             u2401 386C                               u2321 2C1A  
                             u3121 0A56                               u3041 07F4  
                             u3210 0FE6                               u4010 0B68  
                             u3130 331E                               u2410 3874  
                             u2330 370E                               u3050 0834  
                             u3211 0FE2                               u4011 0B64  
                             u3131 331A                               u2331 370A  
                             u3051 0830                               u3300 1172  
                             u3220 1026                               u4100 0E08  
                             u4020 0B78                               u3140 3358  
                             u2420 1DA8                               u2500 23D0  
                             u2340 38A2                               u3060 08DC  
                             u3301 116E                               u3221 1022  
                             u4101 0E04                               u4021 0B74  
                             u3141 3354                               u2421 1DA4  
                             u2501 23CC                               u2341 389E  
                             u3061 08D6                               u3310 11A0  
                             u3230 109C                               u3150 0F1E  
                             u4110 0E1C                               u4030 0BAE  
                             u2430 1DDA                               u2510 240E  
                             u2350 2C76                               u3070 08DE  
                             u3311 119C                               u3231 1098  
                             u3151 0F1A                               u4111 0E18  
                             u4031 0BAA                               u2431 1DD6  
                             u2511 240A                               u2351 2C72  
                             u3320 11B6                               u3240 10BE  
                             u3160 0F30                               u4120 0E36  
                             u4040 0BBE                               u3400 2A26  
                             u4200 30E6                               u2520 2438  
                             u2360 2C98                               u2600 15EC  
                             u3080 08F4                               u3321 11B2  
                             u3241 10BA                               u3161 0F2C  
                             u4121 0E32                               u4041 0BBA  
                             u3401 2A22                               u4201 30E2  
                             u2441 1E04                               u2521 2434  
                             u2361 2C94                               u3081 08F0  
                             u3330 11CA                               u3250 10E8  
                             u3170 0F40                               u4130 0E7E  
                             u4050 0D38                               u3410 2A3A  
                             u4210 3118                               u2450 1E28  
                             u2530 2466                               u2290 2BAE  
                             u2370 2CEE                               u2610 1602  
                             u3090 0918                               u3331 11C6  
                             u3251 10E4                               u3171 0F3C  
                             u4131 0E7A                               u3411 2A36  
                             u4211 3114                               u2451 1E24  
                             u2531 2462                               u2291 2BAA  
                             u2371 2CEA                               u2611 15FE  
                             u3091 0914                               u3340 11E4  
                             u3260 110C                               u3180 0F84  
                             u4140 0EAC                               u4060 0D92  
                             u3420 2A62                               u3500 1B8C  
                             u4300 2688                               u2460 1E52  
                             u2540 24AE                               u2380 2CFE  
                             u2700 1816                               u2620 1632  
                             u4220 381C                               u3341 11E0  
                             u3261 1108                               u3181 0F80  
                             u4141 0EA8                               u4061 0D8E  
                             u3421 2A5E                               u3501 1B88  
                             u4301 2684                               u2461 1E4E  
                             u2541 24AA                               u2381 2CFA  
                             u2701 1812                               u2621 162E  
                             u4221 3818                               u3350 122C  
                             u3270 1122                               u3190 0F96  
                             u4150 0EE6                               u4070 0DB2  
                             u3430 2A82                               u3510 1B9C  
                             u4310 26B2                               u2550 35A4  
                             u2470 1E92                               u2390 372A  
                             u2710 1828                               u2630 164E  
                             u4230 3832                               u3351 1228  
                             u3271 111E                               u3191 0F92  
                             u4151 0EE2                               u4071 0DAE  
                             u4055 0D2E                               u3431 2A7E  
                             u3511 1B98                               u4311 26AE  
                             u2551 35A0                               u2471 1E8E  
                             u2391 3726                               u2711 1824  
                             u2631 164A                               u4231 382E  
                             u3360 125C                               u3280 1140  
                             u4080 0DC4                               u3440 2A92  
                             u3520 1BAA                               u4160 191C  
                             u4400 21C8                               u3600 0174  
                             u4320 273C                               u2560 35D2  
                             u2480 1EDC                               u2720 1838  
                             u2640 167C                               u2800 2050  
                             u4240 224A                               u3361 1258  
                             u3281 113C                               u4081 0DC0  
                             u3441 2A8E                               u3521 1BA6  
                             u4161 1918                               u4401 21C4  
                             u3601 0170                               u4321 2738  
                             u2561 35CE                               u2481 1ED8  
                             u2721 1834                               u2641 1678  
                             u2801 204C                               u4241 2246  
                             u2570 39D2                               u3370 128A  
                             u3290 1160                               u4090 0DF2  
                             u3530 1BE4                               u3450 1A64  
                             u4410 220C                               u3610 0184  
                             u4330 276E                               u2490 239E  
                             u2730 1850                               u2650 168A  
                             u2810 2060                               u4250 22F6  
                             u2571 39CE                               u3371 1286  
                             u3291 115C                               u4091 0DEE  
                             u3531 1BE0                               u3451 1A60  
                             u4411 2208                               u3611 0180  
                             u4331 276A                               u2491 239A  
                             u2731 184C                               u2651 1686  
                             u2811 205C                               u4251 22F2  
                             u2580 39E0                               u3380 29C4  
                             u3540 1BF2                               u3460 1A72  
                             u4420 279C                               u2900 350E  
                             u3700 05A4                               u3620 026A  
                             u2660 17B4                               u2820 209A  
                             u4260 237A                               u4340 3146  
                             u2581 39DC                               u3381 29C0  
                             u3541 1BEE                               u3461 1A6E  
                             u4421 2798                               u2901 350A  
                             u3701 05A0                               u3621 0266  
                             u2661 17B0                               u2821 2096  
                             u2741 1F28                               u4261 2376  
                             u4341 3142                               u3390 29F8  
                             u3470 1ACE                               u4190 30C6  
                             u4430 27B4                               u2910 351E  
                             u3630 028C                               u3550 0040  
                             u2830 1C3E                               u2670 17D2  
                             u2590 15EA                               u2750 1F4A  
                             u3710 33C2                               u4270 37A6  
                             u4350 3168                               u3471 1ACA  
                             u4175 19B6                               u4191 30C2  
                             u4431 27B0                               u2911 351A  
                             u3631 0288                               u3551 003C  
                             u2831 1C3A                               u2671 17CE  
                             u2591 15E4                               u2751 1F46  
                             u3711 33BE                               u4271 37A2  
                             u4351 3164                               u3720 28B4  
                             u3480 1B24                               u4176 19C0  
                             u4440 27D6                               u2920 352E  
                             u3640 029C                               u3560 0050  
                             u2840 1C74                               u2680 17EC  
                             u2760 1F7C                               u4360 14A6  
                             u3800 2D7E                               u4280 37BC  
                             u3721 28B0                               u3481 1B20  
                             u4185 19F8                               u4177 19D0  
                             u4441 27D2                               u2921 352A  
                             u3641 0298                               u3561 004C  
                             u2841 1C70                               u2681 17E8  
                             u2761 1F78                               u4361 14A2  
                             u3801 2D7A                               u4281 37B8  
                             u3730 28D6                               u3490 1B6E  
                             u4186 1A02                               u4450 2830  
                             u2930 3A66                               u3650 03B4  
                             u3570 008E                               u4290 2668  
                             u2850 1C90                               u2690 1806  
                             u2770 1F9A                               u4370 15AE  
                             u3810 2D9C                               u3731 28D2  
                             u3395 29EE                               u3491 1B6A  
                             u4187 1A12                               u4451 282C  
                             u2931 3A62                               u3651 03B0  
                             u3571 008A                               u4291 2664  
                             u2851 1C8C                               u2691 1802  
                             u2771 1F96                               u4371 15AA  
                             u3811 2D98                               u3740 2910  
                             u4460 2840                               u3660 03D6  
                             u3580 009E                               u4380 2B7E  
                             u3900 3452                               u2860 1D46  
                             u2780 1FC6                               u3820 2DB8  
                             u2940 3938                               u3741 290C  
                             u4461 283C                               u3661 03D2  
                             u3581 009A                               u4381 2B7A  
                             u2861 1D40                               u2781 1FC2  
                             u3821 2DB4                               u2941 3932  
                             u3750 2932                               u4390 215C  
                             u4470 286E                               u3670 03E6  
                             u3590 0152                               u3910 347A  
                             u2870 1D48                               u2790 2000  
                             u3830 2DDE                               u4550 306C  
                             u3751 292E                               u4607 3A84  
                             u4391 2158                               u4471 286A  
                             u3671 03E2                               u3591 014E  
                             u2791 1FFC                               u3831 2DDA  
                             u4551 3068                               u3760 295A  
                             u3680 053A                               u3920 348A  
                             u2880 1D5E                               u2960 05EE  
                             u3840 2F72                               u4560 308C  
                             u3761 2956                               u3681 0536  
                             u3921 3486                               u2881 1D5A  
                             u2961 05EA                               u3841 2F6E  
                             u4561 3088                               u3770 298C  
                             u3690 0594                               u2890 1D70  
                             u2970 06C6                               u3850 2F8C  
                             u3930 324A                               u3771 2988  
                             u3691 0590                               u3907 3448  
                             u2891 1D6C                               u2971 06C2  
                             u3851 2F88                               u3931 3246  
                             u2955 393A                               u3940 25BC  
                             u2980 06D6                               u3780 2D3E  
                             u3860 2FA6                               u3941 25B8  
                             u3917 3470                               u2981 06D2  
                             u3781 2D3A                               u3861 2FA2  
                             u3950 2644                               u2990 06FC  
                             u3790 2D58                               u3870 2FC4  
                             u3951 2640                               u2991 06F8  
                             u3791 2D54                               u3871 2FC0  
                             u3960 3788                               u3880 2FDA  
                             u3961 3784                               u3881 2FD6  
                             u4577 36AA                               u3970 0AF4  
                             u3890 2FFE                               u3971 0AF0  
                             u3891 2FFA                               u4587 37FE  
                             u3980 0B06                               u3981 0B02  
                             u4597 3908                               u3990 0B16  
                             u3991 0B12                               _TMR0 000FD6  
             _minutosTranscurridos 00C2                 ??_i2c_reinicia_com 0002  
          escribeHorariosMemoria@i 0011            escribeHorariosMemoria@j 000D  
                    ??_i2c_detener 0002                               abs@a 0013  
                             _dbuf 0164                               _atoi 1C06  
                             _main 3010                               _dtoa 15BA  
                             _hora 00D2                               _prec 00BE  
                             _nout 00BA                               pad@i 0018  
                             pad@p 0015                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001A                               map@x 001B  
                             fsr2l 000FD9                               _stoa 1F1E  
                             btemp 005F           __size_of_asignarHorarios 0144  
                    ??_i2c_iniciar 0001                               prodh 000FF4  
                             prodl 000FF3                               start 000E  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0020  
         __size_of_asignarSetPoint 00E8                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000000                 _leeHorariosMemoria 221E  
                            ??_abs 0015                              ??_map 002F  
                            ??_pad 0017                     _i2c_envia_dato 3AB4  
                    __CFG_PLLDIV$1 000000                     _i2c_inicia_com 3AC8  
                   __CFG_CCP2MX$ON 000000                      ___fltol@sign1 0049  
                  __end_of___aldiv 29AE                    __end_of___aodiv 1F1E  
                            ?_atoi 0008                              ?_main 0001  
                            ?_dtoa 001C                    __end_of___aomod 24F0  
                            _ACKEN 007E2C                              _ACKDT 007E2D  
                    _convertirDato 39E2                    __end_of___fldiv 129E  
                  __end_of___awdiv 2DF0                              STR_10 7DF6  
                            STR_11 7FD0                              STR_20 7E1A  
                            STR_21 7FDE                              STR_13 7F9C  
                            STR_30 7FEB                              STR_22 7EEB  
                            STR_14 7D87                              STR_31 7F87  
                            STR_15 7E86                              STR_23 7CC0  
                            STR_16 7E3E                              STR_24 7CEA  
                            STR_25 7DD1                              STR_17 7D3B  
                            STR_26 7F58                              STR_18 7E62  
                            STR_27 7F70                              STR_19 7DAC  
                 ??_bh1750_iniciar 0004                              STR_28 7FAF  
                  __end_of___awmod 3010                              STR_29 7FF6  
                  __end_of___flmul 0F04                    __end_of___fltol 2AB4  
                            ?_stoa 000A                  convertirDato@dato 0002  
                            _T0CON 000FD5                    ___awdiv@divisor 0003  
              ?_leeHorariosMemoria 0001                              i2l456 342A  
                  ___awdiv@counter 0005                              _RCREG 000FAE  
                     vfpfcnvrt@fmt 0042                              _SPBRG 000FAF  
                    __CFG_USBDIV$1 000000                     limpiarBuffer@i 0001  
                            _TXREG 000FAD                      __CFG_PWRT$OFF 000000  
              __end_of_bh1750_leer 2EAC                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
              ___lmul@multiplicand 0005                      __CFG_WRT3$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                 __size_of_UART_init 0070  
               __size_of_UART_read 0054                              _flags 00C0  
                            _fputc 2B9C                              _fputs 36CC  
                  __end_of_isdigit 387A                  _setTiempoIluminar 3124  
                      ?_UART_write 0001                              atoi@n 0015  
                            pad@fp 0011                              atoi@s 0008  
                            _width 00BC                              _putch 3AD8  
                            dtoa@d 001E                              dtoa@i 003E  
                            dtoa@n 0036                              dtoa@p 0030  
                            dtoa@s 0034                              dtoa@w 0032  
                  __end_of_isspace 35DE         asignarHorarios@diaIluminar 0027  
                            tablat 000FF5                    __end_of_pwmDuty 1A52  
               ?_setTiempoIluminar 0001                              plusw1 000FE3  
                            plusw2 000FDB                              stoa@i 0016  
                            stoa@l 001E                              stoa@p 001C  
                            stoa@s 000C                              stoa@w 0018  
                            ttemp5 0060                              ttemp6 0063  
                            ttemp7 0067                              status 000FD8  
                            wtemp8 0060                    __end_of_sprintf 358C  
               escribe_eeprom@dato 0009               ??_leeHorariosMemoria 0007  
                   __CFG_ICPRT$OFF 000000                      ?_horaIluminar 0001  
                       _i2c_espera 39BC                   ??_dameHoraActual 0005  
              ??_setTiempoIluminar 0023                    __initialization 348C  
      i2c_recibe_datoACK@datoleido 0003                __end_of_i2c_detener 3AD8  
           __end_of_i2c_envia_dato 3AC0                       __end_of_atoi 1D96  
                     __end_of_main 30A0                       __end_of_dtoa 189E  
            __end_of_setRtcDefault 38E2           ??_escribeHorariosMemoria 000B  
                     __end_of_stoa 20A4             __end_of_i2c_inicia_com 3AD0  
               _inicializarObjetos 20A4                __end_of_i2c_iniciar 3A7E  
           sistemaPrincipal@opcion 005E                     ?_convertirDato 0001  
             __size_of_fijaHoraRtc 003E                             ??_atoi 000A  
                           ??_main 005F                             ??_dtoa 0026  
                           ??_stoa 000E                      __activetblptr 000002  
              ?_inicializarObjetos 0001                 i2c_envia_dato@dato 0002  
            __size_of_dameValorLux 004E          __end_of_setTiempoIluminar 31A4  
      __size_of_i2c_recibe_datoACK 002E                             _CCP1M2 007DEA  
                           _CCP1M3 007DEB                  ??_bh1750_escribir 0003  
                           _CCP2M2 007DD2                             _CCP2M3 007DD3  
         __end_of_sistemaIluminado 28A2                             ?_fputc 0001  
                           ?_fputs 000A                             _CCPR1L 000FBE  
                           _CCPR2L 000FBB                   ___awdiv@dividend 0001  
                           ?_putch 0001                 convertirDato@datoR 0003  
                           i2l5250 3400                             i2l5242 33CE  
                           i2l5260 3424                             i2l5252 3404  
                           i2l5244 33DC                             i2l5254 3406  
                           i2l5246 33EE                             i2l5248 33F0  
                           i2l5256 3412                             i2l5258 3420  
                    vfpfcnvrt@done 0054                             _TMR2ON 007E52  
                           _SSPADD 000FC8                             _TRISC1 007CA1  
                           _TRISC2 007CA2                             _SSPBUF 000FC9  
                 __end_of___xxtofl 1C06                     ??_horaIluminar 0003  
             ??_inicializarObjetos 0057                     __CFG_XINST$OFF 000000  
                 __end_of_getValue 05CA                       vfprintf@cfmt 005A  
         __end_of_sistemaPrincipal 2F60                     _escribe_eeprom 38E2  
                           ___lmul 3300                    ?_i2c_envia_dato 0001  
                        ??___aldiv 0015                          ??___aodiv 0011  
                        ??___aomod 0011                             ___wmul 3996  
                __end_of_UART_init 3300                  __end_of_UART_read 353A  
                        ??___fldiv 0017                          ??___awdiv 0005  
                        ??___awmod 0005                          ??___flmul 0030  
                        ??___fltol 0045                  ??_asignarHorarios 0023  
                 __end_of_leer_rtc 3996                       _dameValorLux 367E  
                  ?_i2c_inicia_com 0001                             _buffer 0132  
                      _bh1750_leer 2DF0                __size_of_UART_write 0016  
                     ?_UART_printf 0002                             clear_0 34B4  
                           clear_1 34C6                             clear_2 34D2  
                 ___awdiv@quotient 0007                    ___awmod@divisor 0003  
                           _setRtc 321E                  ??_asignarSetPoint 0023  
                  ___awmod@counter 0005                             pad@buf 0013  
                           dtoa@fp 001C                             _strlen 387A  
                  _i2c_recibe_dato 3A20             __size_of_dameDiaActual 0010  
                           fputc@c 0001                             fputs@c 000E  
                           fputs@i 000F                             fputs@s 000A  
                        ??_isdigit 0003               escribe_rtc@direccion 0004  
                     __mediumconst 7C88                          ??_isspace 0003  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ??_pwmDuty 004E  
     __end_of_mostrarDatosSensores 362E                             stoa@cp 001A  
                           stoa@fp 000A                             putch@c 0001  
                 __end_of_vfprintf 33CC                          ??_sprintf 005C  
                     ___xxtofl@arg 000B                       ___xxtofl@exp 000A  
                     ___xxtofl@val 0001                         __accesstop 0060  
          __end_of__initialization 34D8               __size_of_escribe_rtc 001E  
                  __CFG_PBADEN$OFF 000000               __size_of_leer_eeprom 003C  
                  __CFG_FOSC$XT_XT 000000                        _i2c_detener 3AD0  
                    ___rparam_used 000001                         ___fltol@f1 0041  
                      _i2c_iniciar 3A68             __end_of_escribe_eeprom 3912  
                      ?_i2c_espera 0001    leeHorariosMemoria@caracterLeido 0009  
                   __pcstackCOMRAM 0001                       leer_rtc@dato 0004  
                     __pidataBANK0 3AA4    __size_of_escribeHorariosMemoria 0156  
                  ??_convertirDato 0001                      __end_of_fputc 2C66  
                    __end_of_fputs 3710                      __end_of_putch 3ADA  
             dameValorLux@valorLux 0061             __size_of_limpiarBuffer 0040  
                     _datoRecibido 00CE        asignarSetPoint@setPointTemp 0027  
       __size_of_setTiempoIluminar 0080                 __size_of_configPwm 0050  
                        PID@difAnt 00A6                  ?_dameDatosSistema 0001  
                          ??_fputc 0005                            ??_fputs 000E  
                          ??_putch 0001                         __pbssBANK0 00A6  
                       __pbssBANK1 0100                 ??_dameDatosSistema 005C  
          __size_of_desbordamiento 3426                      _dameDiaActual 3A94  
                  ?_escribe_eeprom 0007                         _fijaDiaRtc 380A  
               _contInterrupciones 00C6          __size_of_i2c_reinicia_com 0008  
                          ?___lmul 0001                            ?___wmul 0001  
          __end_of_i2c_recibe_dato 3A3A                            _CCP1CON 000FBD  
                          _CCP2CON 000FBA                            _ACKSTAT 007E2E  
                   ___lmul@product 0009                            ?_setRtc 0001  
                          ?_strlen 0001                            _T2CKPS0 007E50  
                          _T2CKPS1 007E51               __end_of_horaIluminar 3124  
                        ?___xxtofl 0001                 __size_of_vfpfcnvrt 0510  
              __size_of_i2c_espera 0026                          ?_getValue 000D  
           _escribeHorariosMemoria 24F0                            _SSPCON1 000FC6  
                          _SSPCON2 000FC5                       ??_UART_write 0001  
                          _SSPSTAT 000FC7                          ?_leer_rtc 0001  
                  __CFG_VREGEN$OFF 000000                     ?_dameDiaActual 0001  
                  _minutosIluminar 00C4                      _limpiarBuffer 3750  
                          __Hparam 0000                            __Lparam 0000  
                __end_of_configPwm 367E                            ___aldiv 28A2  
                          ___aodiv 1D96                            ___aomod 238C  
                          ___fldiv 0F04                            ___awdiv 2D2C  
                  __size_of___lmul 006A               _mostrarDatosSensores 35DE  
                          ___awmod 2F60                            ___flmul 0ADA  
                          ___fltol 29AE                    __size_of___wmul 0026  
                        ?_vfprintf 0060                    __CFG_STVREN$OFF 000000  
                          __pcinit 348C                    _bh1750_escribir 3A3A  
                          __ramtop 0800                 __end_of_UART_write 3A68  
                  __size_of_setRtc 0072                            __ptext0 3010  
                          __ptext1 2EAC                            __ptext2 3124  
                          __ptext3 38B0                            __ptext4 35DE  
                          __ptext5 367E                            __ptext6 2DF0  
                          __ptext7 3912                            __ptext8 221E  
                          __ptext9 37CE                            _buffer2 0100  
                        _T0CONbits 000FD5                    __size_of_strlen 0036  
             __size_of_UART_printf 005E                       __size_of_abs 0040  
              i2c_recibe_datoACK@a 0002                       __size_of_map 007A  
                     __size_of_pad 00C6                            _isdigit 3842  
                       ??___xxtofl 0005                         _iluminando 00CA  
                 ___awmod@dividend 0001                   ___aldiv@dividend 000D  
             setRtcDefault@horaRtc 0005                            _isspace 358C  
                          _minutos 00D1                            _pwmDuty 189E  
                          atoi@neg 000E                         ??_getValue 0011  
                          _sprintf 353A                     __pintcode_body 33CC  
                ?_sistemaIluminado 0001               end_of_initialization 34D8  
                       ??_leer_rtc 0003                            fputc@fp 0003  
               ??_sistemaIluminado 0057                     ?_limpiarBuffer 0001  
                  _asignarHorarios 2646                      __Lmediumconst 7C88  
                          int_func 33CC                            fputs@fp 000C  
                 ??_i2c_envia_dato 0002        __size_of_leeHorariosMemoria 016E  
                  _asignarSetPoint 2AB4                   ??_i2c_inicia_com 0002  
                      ?_fijaDiaRtc 0001                   _VALOR_TIMER0UART 00E5  
                __end_of_vfpfcnvrt 0ADA                          _RCSTAbits 000FAB  
                 ___aldiv@quotient 0017              ?_mostrarDatosSensores 0001  
                          postdec1 000FE5                            postdec2 000FDD  
                ?_sistemaPrincipal 0001            _peticionLecturaSensores 00C8  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                      ??_fijaHoraRtc 0027  
                 ?_i2c_recibe_dato 0001                         ??_vfprintf 005A  
  setTiempoIluminar@tiempoIluminar 0024                      setRtc@datoRtc 0025  
                     ?_bh1750_leer 004B                 ??_sistemaPrincipal 00A4  
                          strlen@a 0003                            strlen@s 0001  
                        _UART_init 3290                         getValue@Rx 0022  
                        _UART_read 34E6         __end_of_i2c_recibe_datoACK 3940  
                    setRtc@seteado 0024                        pwmDuty@duty 0053  
                    ___xxtofl@sign 0009                          _TRISBbits 000F93  
                        _TRISCbits 000F94                        ___fldiv@grs 0022  
                      ___fldiv@rem 001B                   _horaIluminar$591 0006  
           __size_of_setRtcDefault 0032                    ??_dameDiaActual 0005  
          __size_of_bh1750_iniciar 0016                         map@out_max 002B  
                       map@out_min 0027                     _desbordamiento 0008  
                   _esperandoDatos 00D4                        ___flmul@grs 0035  
                   _UART_init$1632 0023                       ?_i2c_detener 0001  
                        _TXSTAbits 000FAC                  dameDatosSistema@i 00A2  
      __size_of_inicializarObjetos 017A                       ?_i2c_iniciar 0001  
                     ??_i2c_espera 0001            __end_of_bh1750_escribir 3A52  
                 _i2c_reinicia_com 3AC0                     __end_of___lmul 336A  
            __size_of_horaIluminar 0084                        vfpfcnvrt@ap 0044  
                      vfpfcnvrt@cp 0052                        vfpfcnvrt@fp 0040  
                      vfpfcnvrt@ll 004A                     __end_of___wmul 39BC  
                       ?_UART_init 001B                         ?_UART_read 0001  
          __size_of_dameHoraActual 002C                     __end_of_setRtc 3290  
              __end_of_fijaHoraRtc 37CE                     __end_of_strlen 38B0  
              start_initialization 348C                        __end_of_abs 3750  
                      __end_of_map 321E            __end_of_asignarHorarios 278A  
                      __end_of_pad 2D2C                __size_of_fijaDiaRtc 0038  
escribeHorariosMemoria@contMemoria 000F             __end_of_desbordamiento 342E  
               __end_of_i2c_espera 39E2                      ??_escribe_rtc 0004  
                    ??_leer_eeprom 0005                    ??_limpiarBuffer 0001  
          __end_of_asignarSetPoint 2B9C                   ??_escribe_eeprom 000A  
              leeHorariosMemoria@i 000E                leeHorariosMemoria@j 000A  
              pwmDuty@cicloTrabajo 004B                       _horaIluminar 30A0  
            _dameDatosSistema$1633 009A              _dameDatosSistema$1634 009C  
            _dameDatosSistema$1635 009E              _dameDatosSistema$1636 00A0  
            setTiempoIluminar@hora 0025             ??_mostrarDatosSensores 005C  
                      vfprintf@fmt 0062          __size_of_dameDatosSistema 031C  
                         ??___lmul 0009                           ??___wmul 0005  
                    _setRtcDefault 38B0                        __pdataBANK0 00D8  
                 __CFG_LPT1OSC$OFF 000000                  leer_rtc@direccion 0003  
                         ??_setRtc 0023              __end_of_convertirDato 3A02  
                         ??_strlen 0003                          ___fldiv@a 0013  
                        ___fldiv@b 000F                        __pbssBIGRAM 0184  
          ?_escribeHorariosMemoria 0001                          ___flmul@a 002C  
                        ___flmul@b 0028                      _setPointIntro 00C9  
                    __pcstackBANK0 0060                   ___aodiv@dividend 0001  
    dameDatosSistema@bufferHorario 007C                  __size_of___xxtofl 01B4  
                  ?_desbordamiento 0001                          _diaActual 00CF  
          inicializarObjetos@i_594 005B                  __size_of_getValue 05B8  
           getValue@datoIncorrecto 0015                  UART_printf@cadena 0002  
                        _atoi$1290 0010                          _atoi$1291 0014  
                        _atoi$1292 0012                  __size_of_leer_rtc 002A  
              __end_of_escribe_rtc 3A20                __end_of_leer_eeprom 380A  
                 ?_bh1750_escribir 0001                          __pintcode 0008  
                    __pmediumconst 7C88                           ?___aldiv 000D  
                   ?_setRtcDefault 0001                           ?___aodiv 0001  
                         ?___aomod 0001                           ?___fldiv 000F  
                         ?___awdiv 0001                   ___aodiv@quotient 0013  
                         ?___awmod 0001                           ?___flmul 0028  
                         ?___fltol 0041                        _fijaHoraRtc 3790  
                        _configPwm 362E                         setRtc@dato 0026  
                      ??_UART_init 001F                        ??_UART_read 0001  
                __size_of_vfprintf 0062     __end_of_escribeHorariosMemoria 2646  
             __size_of_bh1750_leer 00BC                           ?_isdigit 0001  
                         ?_isspace 0001                           ?_pwmDuty 004B  
                 ?_asignarHorarios 0001                           ?_sprintf 0066  
                   __size_of_fputc 00CA                     __size_of_fputs 0044  
                   _bh1750_iniciar 3A7E                     __size_of_putch 0002  
                 ?_asignarSetPoint 0001               _asignarSetPoint$1637 0023  
                    _flagIluminado 00CB                    ___aldiv@divisor 0011  
                  ___aldiv@counter 0015                     ___wmul@product 0005  
                         _PIE1bits 000F9D               __size_of_i2c_detener 0008  
                     ??_fijaDiaRtc 0027                          _luzMedida 00B6  
                         _PIR1bits 000F9E                           i2u451_40 33DC  
                         i2u451_41 33D8                           i2u452_40 33EE  
                         i2u452_41 33EA                           i2u453_40 3400  
                         i2u453_41 33FC                           i2u454_40 3420  
                         i2u454_41 341C               __size_of_i2c_iniciar 0016  
                 __CFG_WDTPS$32768 000000             _tiempoInactividadTrans 00D7  
    leeHorariosMemoria@contMemoria 000C                asignarHorarios@hora 0028  
        __size_of_sistemaIluminado 0118                      ?_dameValorLux 0057  
                        getValue@i 0016                      ??_UART_printf 0004  
                        _vfpfcnvrt 05CA                         ?_configPwm 0001  
                        map@in_max 0023                          map@in_min 001F  
                   _dameHoraActual 3940                  ___wmul@multiplier 0001  
                 configPwm@channel 0003                     UART_write@dato 0001  
           __end_of_bh1750_iniciar 3A94                       _isspace$1308 0007  
        __size_of_sistemaPrincipal 00B4           __end_of_i2c_reinicia_com 3AC8  
               __end_of_fijaDiaRtc 3842                  ___lmul@multiplier 0001  
                        copy_data0 34A0                        _escribe_rtc 3A02  
                      _leer_eeprom 37CE                       _VALOR_TIMER0 00E3  
       __end_of_leeHorariosMemoria 238C                 _i2c_recibe_datoACK 3912  
                     _reiniciarPID 00D3                           __Hrparam 0000  
                  ??_setRtcDefault 0005              getValue@numCharacters 000D  
                    UART_init@BAUD 001B                         vfprintf@ap 0064  
                         __Lrparam 0000                         vfprintf@fp 0060  
                 _dameDatosSistema 129E                ?_i2c_recibe_datoACK 0001  
                   ??_dameValorLux 005B                _esperaDatoConcluida 00D5  
                 __size_of___aldiv 010C                   __size_of___aodiv 0188  
                 __size_of___aomod 0164                   __size_of___fldiv 039A  
                 __size_of___awdiv 00C4             __end_of_dameHoraActual 396C  
                 __size_of___awmod 00B0                   __size_of___flmul 042A  
                 __size_of___fltol 0106                   bh1750_leer@valor 0053  
                       ?_vfpfcnvrt 0040                    ___aodiv@divisor 0009  
                  ___aodiv@counter 0011                         sprintf@fmt 0068  
                         ___xxtofl 1A52           __size_of_i2c_recibe_dato 001A  
                 dameValorLux@modo 0060                __end_of_UART_printf 348C  
                 __size_of_isdigit 0038                           _dtoa$805 002E  
             ??_i2c_recibe_datoACK 0002                    ?_bh1750_iniciar 0001  
                 __size_of_isspace 0052                           __ptext10 3790  
                         __ptext11 380A                           __ptext20 1F1E  
                         __ptext12 321E                           __ptext21 15BA  
                         __ptext13 3A02                           __ptext30 1C06  
                         __ptext22 2C66                           __ptext14 2F60  
                         __ptext31 358C                           __ptext23 387A  
                         __ptext15 2D2C                           __ptext40 24F0  
                         __ptext32 3842                           __ptext24 36CC  
                         __ptext16 129E                           __ptext41 38E2  
                         __ptext33 3750                           __ptext25 2B9C  
                         __ptext17 353A                           __ptext50 20A4  
                         __ptext42 278A                           __ptext34 342E  
                         __ptext26 3AD8                           __ptext18 336A  
                         __ptext51 189E                           __ptext43 30A0  
                         __ptext35 2AB4                           __ptext27 3710  
                         __ptext19 05CA                           __ptext60 362E  
                         __ptext52 31A4                           __ptext44 3940  
                         __ptext36 2646                           __ptext28 238C  
                         __ptext61 3A7E                           __ptext53 3300  
                         __ptext45 3A94                           __ptext37 0012  
                         __ptext29 1D96                           __ptext62 3A3A  
                         __ptext54 1A52                           __ptext46 396C  
                         __ptext38 3A52                           __ptext63 3AC8  
                         __ptext55 29AE                           __ptext47 3AC0  
                         __ptext39 34E6                           __ptext64 3AB4  
                         __ptext56 0ADA                           __ptext48 3A20  
                         __ptext65 3AD0                           __ptext57 0F04  
                         __ptext49 39E2                           __ptext66 39BC  
                         __ptext58 3996                           __ptext67 3290  
                         __ptext59 3A68                           __ptext68 28A2  
                         _getValue 0012                   __size_of_pwmDuty 01B4  
                 __size_of_sprintf 0052                           _leer_rtc 396C  
       __end_of_inicializarObjetos 221E                           _byteUart 00D6  
            __end_of_dameDiaActual 3AA4                inicializarObjetos@i 005D  
              inicializarObjetos@j 0059                      __size_of_atoi 0190  
                    __size_of_main 0090                      __size_of_dtoa 02E4  
                         _horarios 0184                      __size_of_stoa 0186  
           bh1750_escribir@comando 0003                           _setPoint 00DF  
                         _tempHora 00CC                           _segundos 00D0  
                        stoa@F1139 00D8                           int$flags 005F  
                         _vfprintf 336A                    ?_dameHoraActual 0001  
          __size_of_i2c_envia_dato 000C                        ??_configPwm 0001  
                    getValue@i_701 0018                      getValue@i_702 001A  
                    getValue@i_703 001C            __size_of_i2c_inicia_com 0008  
         i2c_recibe_dato@datoleido 0002                   ___aomod@dividend 0001  
            __CFG_CPUDIV$OSC1_PLL2 000000                   ??_desbordamiento 0001  
                       _INTCONbits 000FF2            escribe_eeprom@direccion 0007  
                         isdigit@c 0001                           intlevel2 0000  
                        sprintf@ap 0074                    escribe_rtc@dato 0003  
            __end_of_limpiarBuffer 3790                           isspace@c 0001  
                  setRtc@direccion 0023                  asignarHorarios@Rx 0029  
                 _sistemaIluminado 278A      __size_of_mostrarDatosSensores 0050  
                    _overflowTimer 00CD                       ?_fijaHoraRtc 0001  
                  ___aomod@divisor 0009                       getValue@dato 001E  
                      ??_vfpfcnvrt 0046                           stoa@nuls 000F  
                  ___aomod@counter 0011                      _vfpfcnvrt$831 0056  
                    _vfpfcnvrt$832 0058                        _UART_printf 342E  
                   pwmDuty@channel 004D                           sprintf@f 0076  
                         sprintf@s 0066                       ___aldiv@sign 0016  
                 asignarHorarios@i 0025                   _sistemaPrincipal 2EAC  
                  leer_eeprom@dato 0006                        _SSPCON2bits 000FC5  
             __end_of_dameValorLux 36CC                         _UART_write 3A52  
                    bh1750_leer@hb 0052                      bh1750_leer@lb 0051  
                     ___aodiv@sign 0012                  ??_i2c_recibe_dato 0002  
           __size_of_convertirDato 0020               leer_eeprom@direccion 0003  
                     ___aomod@sign 0012  
