

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Oct 17 11:19:23 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _SSPBUF	set	4041
    78  0000                     _SSPCON2bits	set	4037
    79  0000                     _SSPADD	set	4040
    80  0000                     _SSPCON2	set	4037
    81  0000                     _SSPCON1	set	4038
    82  0000                     _SSPSTAT	set	4039
    83  0000                     _TRISBbits	set	3987
    84  0000                     _TXREG	set	4013
    85  0000                     _RCREG	set	4014
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _TXSTAbits	set	4012
    88  0000                     _SPBRG	set	4015
    89  0000                     _ACKEN	set	32300
    90  0000                     _ACKDT	set	32301
    91  0000                     _ACKSTAT	set	32302
    92  0000                     _RCIF	set	31989
    93  0000                     _TRISC7	set	31911
    94  0000                     _TRISC6	set	31910
    95                           
    96                           	psect	smallconst
    97  000800                     __psmallconst:
    98                           	opt callstack 0
    99  000800  00                 	db	0
   100  000801                     STR_2:
   101  000801  0D                 	db	13
   102  000802  4C                 	db	76	;'L'
   103  000803  75                 	db	117	;'u'
   104  000804  7A                 	db	122	;'z'
   105  000805  20                 	db	32
   106  000806  6D                 	db	109	;'m'
   107  000807  65                 	db	101	;'e'
   108  000808  64                 	db	100	;'d'
   109  000809  69                 	db	105	;'i'
   110  00080A  64                 	db	100	;'d'
   111  00080B  61                 	db	97	;'a'
   112  00080C  3A                 	db	58	;':'
   113  00080D  20                 	db	32
   114  00080E  25                 	db	37
   115  00080F  64                 	db	100	;'d'
   116  000810  20                 	db	32
   117  000811  6C                 	db	108	;'l'
   118  000812  75                 	db	117	;'u'
   119  000813  78                 	db	120	;'x'
   120  000814  73                 	db	115	;'s'
   121  000815  0A                 	db	10
   122  000816  0D                 	db	13
   123  000817  00                 	db	0
   124  000818                     STR_1:
   125  000818  0D                 	db	13
   126  000819  0A                 	db	10
   127  00081A  53                 	db	83	;'S'
   128  00081B  69                 	db	105	;'i'
   129  00081C  73                 	db	115	;'s'
   130  00081D  74                 	db	116	;'t'
   131  00081E  65                 	db	101	;'e'
   132  00081F  6D                 	db	109	;'m'
   133  000820  61                 	db	97	;'a'
   134  000821  20                 	db	32
   135  000822  49                 	db	73	;'I'
   136  000823  6E                 	db	110	;'n'
   137  000824  69                 	db	105	;'i'
   138  000825  63                 	db	99	;'c'
   139  000826  69                 	db	105	;'i'
   140  000827  61                 	db	97	;'a'
   141  000828  64                 	db	100	;'d'
   142  000829  6F                 	db	111	;'o'
   143  00082A  0A                 	db	10
   144  00082B  0D                 	db	13
   145  00082C  00                 	db	0
   146                           
   147                           ; #config settings
   148  00082D  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	cinit
   151  001CDE                     __pcinit:
   152                           	opt callstack 0
   153  001CDE                     start_initialization:
   154                           	opt callstack 0
   155  001CDE                     __initialization:
   156                           	opt callstack 0
   157                           
   158                           ; Clear objects allocated to BANK0 (40 bytes)
   159  001CDE  EE00  F08E         	lfsr	0,__pbssBANK0
   160  001CE2  0E28               	movlw	40
   161  001CE4                     clear_0:
   162  001CE4  6AEE               	clrf	postinc0,c
   163  001CE6  06E8               	decf	wreg,f,c
   164  001CE8  E1FD               	bnz	clear_0
   165  001CEA                     end_of_initialization:
   166                           	opt callstack 0
   167  001CEA                     __end_of__initialization:
   168                           	opt callstack 0
   169  001CEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  001CEC  6EF8               	movwf	tblptru,c
   171  001CEE  0100               	movlb	0
   172  001CF0  EFAE  F00C         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssBANK0
   175  00008E                     __pbssBANK0:
   176                           	opt callstack 0
   177  00008E                     _nout:
   178                           	opt callstack 0
   179  00008E                     	ds	2
   180  000090                     _width:
   181                           	opt callstack 0
   182  000090                     	ds	2
   183  000092                     _prec:
   184                           	opt callstack 0
   185  000092                     	ds	2
   186  000094                     _flags:
   187                           	opt callstack 0
   188  000094                     	ds	2
   189  000096                     _dbuf:
   190                           	opt callstack 0
   191  000096                     	ds	32
   192                           
   193                           	psect	cstackBANK0
   194  000060                     __pcstackBANK0:
   195                           	opt callstack 0
   196  000060                     	ds	2
   197  000062                     sprintf@ap:
   198                           	opt callstack 0
   199                           
   200                           ; 2 bytes @ 0x2
   201  000062                     	ds	2
   202  000064                     sprintf@f:
   203                           	opt callstack 0
   204                           
   205                           ; 6 bytes @ 0x4
   206  000064                     	ds	6
   207  00006A                     ??_main:
   208                           
   209                           ; 1 bytes @ 0xA
   210  00006A                     	ds	2
   211  00006C                     main@buffer:
   212                           	opt callstack 0
   213                           
   214                           ; 30 bytes @ 0xC
   215  00006C                     	ds	30
   216  00008A                     main@luzMedida:
   217                           	opt callstack 0
   218                           
   219                           ; 4 bytes @ 0x2A
   220  00008A                     	ds	4
   221                           
   222                           	psect	cstackCOMRAM
   223  000001                     __pcstackCOMRAM:
   224                           	opt callstack 0
   225  000001                     ??_i2c_espera:
   226  000001                     ?_strlen:
   227                           	opt callstack 0
   228  000001                     ?___aldiv:
   229                           	opt callstack 0
   230  000001                     ?___xxtofl:
   231                           	opt callstack 0
   232  000001                     ?___aodiv:
   233                           	opt callstack 0
   234  000001                     ?___aomod:
   235                           	opt callstack 0
   236  000001                     uart_escribir@dato:
   237                           	opt callstack 0
   238  000001                     fputc@c:
   239                           	opt callstack 0
   240  000001                     strlen@s:
   241                           	opt callstack 0
   242  000001                     ___aldiv@dividend:
   243                           	opt callstack 0
   244  000001                     ___xxtofl@val:
   245                           	opt callstack 0
   246  000001                     ___aodiv@dividend:
   247                           	opt callstack 0
   248  000001                     ___aomod@dividend:
   249                           	opt callstack 0
   250                           
   251                           ; 8 bytes @ 0x0
   252  000001                     	ds	1
   253  000002                     i2c_envia_dato@dato:
   254                           	opt callstack 0
   255  000002                     i2c_recibe_datoACK@a:
   256                           	opt callstack 0
   257  000002                     uart_printf@cadena:
   258                           	opt callstack 0
   259                           
   260                           ; 2 bytes @ 0x1
   261  000002                     	ds	1
   262  000003                     i2c_recibe_datoACK@datoleido:
   263                           	opt callstack 0
   264  000003                     bh1750_escribir@comando:
   265                           	opt callstack 0
   266  000003                     fputc@fp:
   267                           	opt callstack 0
   268  000003                     strlen@a:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x2
   272  000003                     	ds	1
   273  000004                     ??_bh1750_iniciar:
   274                           
   275                           ; 1 bytes @ 0x3
   276  000004                     	ds	1
   277  000005                     ??_fputc:
   278  000005                     ??___xxtofl:
   279  000005                     ___aldiv@divisor:
   280                           	opt callstack 0
   281                           
   282                           ; 4 bytes @ 0x4
   283  000005                     	ds	4
   284  000009                     ___aldiv@counter:
   285                           	opt callstack 0
   286  000009                     ___xxtofl@sign:
   287                           	opt callstack 0
   288  000009                     ___aodiv@divisor:
   289                           	opt callstack 0
   290  000009                     ___aomod@divisor:
   291                           	opt callstack 0
   292                           
   293                           ; 8 bytes @ 0x8
   294  000009                     	ds	1
   295  00000A                     ___aldiv@sign:
   296                           	opt callstack 0
   297  00000A                     ___xxtofl@exp:
   298                           	opt callstack 0
   299  00000A                     fputs@s:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x9
   303  00000A                     	ds	1
   304  00000B                     ___aldiv@quotient:
   305                           	opt callstack 0
   306  00000B                     ___xxtofl@arg:
   307                           	opt callstack 0
   308                           
   309                           ; 4 bytes @ 0xA
   310  00000B                     	ds	1
   311  00000C                     fputs@fp:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0xB
   315  00000C                     	ds	2
   316  00000E                     fputs@c:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0xD
   320  00000E                     	ds	1
   321  00000F                     ?___fldiv:
   322                           	opt callstack 0
   323  00000F                     fputs@i:
   324                           	opt callstack 0
   325  00000F                     uart_iniciar@BAUD:
   326                           	opt callstack 0
   327  00000F                     ___fldiv@b:
   328                           	opt callstack 0
   329                           
   330                           ; 4 bytes @ 0xE
   331  00000F                     	ds	2
   332  000011                     ?_pad:
   333                           	opt callstack 0
   334  000011                     ___aodiv@counter:
   335                           	opt callstack 0
   336  000011                     ___aomod@counter:
   337                           	opt callstack 0
   338  000011                     pad@fp:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x10
   342  000011                     	ds	1
   343  000012                     ___aodiv@sign:
   344                           	opt callstack 0
   345  000012                     ___aomod@sign:
   346                           	opt callstack 0
   347                           
   348                           ; 1 bytes @ 0x11
   349  000012                     	ds	1
   350  000013                     ?_abs:
   351                           	opt callstack 0
   352  000013                     pad@buf:
   353                           	opt callstack 0
   354  000013                     abs@a:
   355                           	opt callstack 0
   356  000013                     ___fldiv@a:
   357                           	opt callstack 0
   358  000013                     ___aodiv@quotient:
   359                           	opt callstack 0
   360                           
   361                           ; 8 bytes @ 0x12
   362  000013                     	ds	2
   363  000015                     ??_abs:
   364  000015                     pad@p:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x14
   368  000015                     	ds	2
   369  000017                     ??___fldiv:
   370  000017                     ??_pad:
   371  000017                     _uart_iniciar$1077:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x16
   375  000017                     	ds	1
   376  000018                     pad@i:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0x17
   380  000018                     	ds	2
   381  00001A                     pad@w:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x19
   385  00001A                     	ds	1
   386  00001B                     ___fldiv@rem:
   387                           	opt callstack 0
   388                           
   389                           ; 4 bytes @ 0x1A
   390  00001B                     	ds	1
   391  00001C                     ?_dtoa:
   392                           	opt callstack 0
   393  00001C                     dtoa@fp:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x1B
   397  00001C                     	ds	2
   398  00001E                     dtoa@d:
   399                           	opt callstack 0
   400                           
   401                           ; 8 bytes @ 0x1D
   402  00001E                     	ds	1
   403  00001F                     ___fldiv@sign:
   404                           	opt callstack 0
   405                           
   406                           ; 1 bytes @ 0x1E
   407  00001F                     	ds	1
   408  000020                     ___fldiv@new_exp:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x1F
   412  000020                     	ds	2
   413  000022                     ___fldiv@grs:
   414                           	opt callstack 0
   415                           
   416                           ; 4 bytes @ 0x21
   417  000022                     	ds	4
   418  000026                     ??_dtoa:
   419  000026                     ___fldiv@bexp:
   420                           	opt callstack 0
   421                           
   422                           ; 1 bytes @ 0x25
   423  000026                     	ds	1
   424  000027                     ___fldiv@aexp:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0x26
   428  000027                     	ds	1
   429  000028                     ?___fltol:
   430                           	opt callstack 0
   431  000028                     ___fltol@f1:
   432                           	opt callstack 0
   433                           
   434                           ; 4 bytes @ 0x27
   435  000028                     	ds	4
   436  00002C                     ??___fltol:
   437                           
   438                           ; 1 bytes @ 0x2B
   439  00002C                     	ds	2
   440  00002E                     _dtoa$354:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x2D
   444  00002E                     	ds	2
   445  000030                     ___fltol@sign1:
   446                           	opt callstack 0
   447  000030                     dtoa@p:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x2F
   451  000030                     	ds	1
   452  000031                     ___fltol@exp1:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x30
   456  000031                     	ds	1
   457  000032                     ?_bh1750_leer:
   458                           	opt callstack 0
   459  000032                     dtoa@w:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x31
   463  000032                     	ds	2
   464  000034                     dtoa@s:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x33
   468  000034                     	ds	2
   469  000036                     ??_bh1750_leer:
   470  000036                     dtoa@n:
   471                           	opt callstack 0
   472                           
   473                           ; 8 bytes @ 0x35
   474  000036                     	ds	2
   475  000038                     bh1750_leer@lb:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0x37
   479  000038                     	ds	1
   480  000039                     bh1750_leer@hb:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x38
   484  000039                     	ds	1
   485  00003A                     bh1750_leer@valor:
   486                           	opt callstack 0
   487                           
   488                           ; 4 bytes @ 0x39
   489  00003A                     	ds	4
   490  00003E                     ?_dameValorLux:
   491                           	opt callstack 0
   492  00003E                     dtoa@i:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x3D
   496  00003E                     	ds	2
   497  000040                     ?_vfpfcnvrt:
   498                           	opt callstack 0
   499  000040                     vfpfcnvrt@fp:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x3F
   503  000040                     	ds	2
   504  000042                     ??_dameValorLux:
   505  000042                     vfpfcnvrt@fmt:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x41
   509  000042                     	ds	1
   510  000043                     dameValorLux@modo:
   511                           	opt callstack 0
   512                           
   513                           ; 1 bytes @ 0x42
   514  000043                     	ds	1
   515  000044                     vfpfcnvrt@ap:
   516                           	opt callstack 0
   517  000044                     dameValorLux@valorLux:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0x43
   521  000044                     	ds	2
   522  000046                     ??_vfpfcnvrt:
   523                           
   524                           ; 1 bytes @ 0x45
   525  000046                     	ds	2
   526  000048                     vfpfcnvrt@ll:
   527                           	opt callstack 0
   528                           
   529                           ; 8 bytes @ 0x47
   530  000048                     	ds	8
   531  000050                     ?_vfprintf:
   532                           	opt callstack 0
   533  000050                     vfprintf@fp:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x4F
   537  000050                     	ds	2
   538  000052                     vfprintf@fmt:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x51
   542  000052                     	ds	2
   543  000054                     vfprintf@ap:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x53
   547  000054                     	ds	2
   548  000056                     vfprintf@cfmt:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x55
   552  000056                     	ds	2
   553  000058                     ?_sprintf:
   554                           	opt callstack 0
   555  000058                     sprintf@s:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x57
   559  000058                     	ds	2
   560  00005A                     sprintf@fmt:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x59
   564  00005A                     	ds	6
   565  000060                     
   566                           ; 1 bytes @ 0x5F
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 10 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  buffer         30   12[BANK0 ] unsigned char [30]
   577 ;;  luzMedida       4   42[BANK0 ] unsigned long 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   587 ;;      Params:         0       0       0       0       0       0       0       0       0
   588 ;;      Locals:         0      34       0       0       0       0       0       0       0
   589 ;;      Temps:          0       2       0       0       0       0       0       0       0
   590 ;;      Totals:         0      36       0       0       0       0       0       0       0
   591 ;;Total ram usage:       36 bytes
   592 ;; Hardware stack levels required when called:    8
   593 ;; This function calls:
   594 ;;		_bh1750_iniciar
   595 ;;		_dameValorLux
   596 ;;		_i2c_iniciar
   597 ;;		_sprintf
   598 ;;		_uart_iniciar
   599 ;;		_uart_printf
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text0
   606  00195C                     __ptext0:
   607                           	opt callstack 0
   608  00195C                     _main:
   609                           	opt callstack 23
   610  00195C                     
   611                           ;main.c: 13:     T_BYTE buffer[30];;main.c: 15:     uart_iniciar(9600);
   612  00195C  0E80               	movlw	128
   613  00195E  6E0F               	movwf	uart_iniciar@BAUD^0,c
   614  001960  0E25               	movlw	37
   615  001962  6E10               	movwf	(uart_iniciar@BAUD+1)^0,c
   616  001964  0E00               	movlw	0
   617  001966  6E11               	movwf	(uart_iniciar@BAUD+2)^0,c
   618  001968  0E00               	movlw	0
   619  00196A  6E12               	movwf	(uart_iniciar@BAUD+3)^0,c
   620  00196C  ECF6  F00C         	call	_uart_iniciar	;wreg free
   621  001970                     
   622                           ;main.c: 16:     i2c_iniciar();
   623  001970  EC85  F00E         	call	_i2c_iniciar	;wreg free
   624  001974                     
   625                           ;main.c: 17:     bh1750_iniciar();
   626  001974  EC90  F00E         	call	_bh1750_iniciar	;wreg free
   627  001978                     
   628                           ;main.c: 18:     uart_printf("\r\nSistema Iniciado\n\r");
   629  001978  0E18               	movlw	low STR_1
   630  00197A  6E02               	movwf	uart_printf@cadena^0,c
   631  00197C  0E08               	movlw	high STR_1
   632  00197E  6E03               	movwf	(uart_printf@cadena+1)^0,c
   633  001980  EC5F  F00D         	call	_uart_printf	;wreg free
   634  001984                     l2267:
   635                           
   636                           ;main.c: 21:     {;main.c: 22:         luzMedida = dameValorLux(0x10);
   637  001984  0E10               	movlw	16
   638  001986  ECB7  F00D         	call	_dameValorLux
   639  00198A  C03E  F08A         	movff	?_dameValorLux,main@luzMedida
   640  00198E  C03F  F08B         	movff	?_dameValorLux+1,main@luzMedida+1
   641  001992  C040  F08C         	movff	?_dameValorLux+2,main@luzMedida+2
   642  001996  C041  F08D         	movff	?_dameValorLux+3,main@luzMedida+3
   643  00199A                     
   644                           ;main.c: 23:         sprintf(buffer, "\rLuz medida: %d luxs\n\r",luzMedida);
   645  00199A  0E6C               	movlw	low main@buffer
   646  00199C  6E58               	movwf	sprintf@s^0,c
   647  00199E  0E00               	movlw	high main@buffer
   648  0019A0  6E59               	movwf	(sprintf@s+1)^0,c
   649  0019A2  0E01               	movlw	low STR_2
   650  0019A4  6E5A               	movwf	sprintf@fmt^0,c
   651  0019A6  0E08               	movlw	high STR_2
   652  0019A8  6E5B               	movwf	(sprintf@fmt+1)^0,c
   653  0019AA  C08A  F05C         	movff	main@luzMedida,?_sprintf+4
   654  0019AE  C08B  F05D         	movff	main@luzMedida+1,?_sprintf+5
   655  0019B2  C08C  F05E         	movff	main@luzMedida+2,?_sprintf+6
   656  0019B6  C08D  F05F         	movff	main@luzMedida+3,?_sprintf+7
   657  0019BA  EC8E  F00D         	call	_sprintf	;wreg free
   658  0019BE                     
   659                           ;main.c: 24:         uart_printf(buffer);
   660  0019BE  0E6C               	movlw	low main@buffer
   661  0019C0  6E02               	movwf	uart_printf@cadena^0,c
   662  0019C2  0E00               	movlw	high main@buffer
   663  0019C4  6E03               	movwf	(uart_printf@cadena+1)^0,c
   664  0019C6  EC5F  F00D         	call	_uart_printf	;wreg free
   665  0019CA                     
   666                           ;main.c: 25:         _delay((unsigned long)((500)*(4000000/4000.0)));
   667  0019CA  0E03               	movlw	3
   668  0019CC  0100               	movlb	0	; () banked
   669  0019CE  6F6B               	movwf	(??_main+1)& (0+255),b
   670  0019D0  0E8A               	movlw	138
   671  0019D2  6F6A               	movwf	??_main& (0+255),b
   672  0019D4  0E55               	movlw	85
   673  0019D6                     u1987:
   674  0019D6  2EE8               	decfsz	wreg,f,c
   675  0019D8  D7FE               	bra	u1987
   676  0019DA  2F6A               	decfsz	??_main& (0+255),f,b
   677  0019DC  D7FC               	bra	u1987
   678  0019DE  2F6B               	decfsz	(??_main+1)& (0+255),f,b
   679  0019E0  D7FA               	bra	u1987
   680  0019E2  D000               	nop2	
   681  0019E4  EFC2  F00C         	goto	l2267
   682  0019E8  EF00  F000         	goto	start
   683  0019EC                     __end_of_main:
   684                           	opt callstack 0
   685                           
   686 ;; *************** function _uart_printf *****************
   687 ;; Defined at:
   688 ;;		line 47 in file "./UART.h"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  cadena          2    1[COMRAM] PTR unsigned char 
   691 ;;		 -> main@buffer(30), STR_1(21), 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   703 ;;      Params:         2       0       0       0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0
   706 ;;      Totals:         2       0       0       0       0       0       0       0       0
   707 ;;Total ram usage:        2 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    1
   710 ;; This function calls:
   711 ;;		_uart_escribir
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text1
   718  001ABE                     __ptext1:
   719                           	opt callstack 0
   720  001ABE                     _uart_printf:
   721                           	opt callstack 29
   722  001ABE                     
   723                           ;./UART.h: 48:     while (*cadena) {
   724  001ABE  EF75  F00D         	goto	l2203
   725  001AC2                     l2199:
   726                           
   727                           ;./UART.h: 49:         uart_escribir(*cadena++);
   728  001AC2  C002  FFF6         	movff	uart_printf@cadena,tblptrl
   729  001AC6  C003  FFF7         	movff	uart_printf@cadena+1,tblptrh
   730  001ACA  6AF8               	clrf	tblptru,c
   731  001ACC  0E07               	movlw	(high __ramtop+-1)
   732  001ACE  64F7               	cpfsgt	tblptrh,c
   733  001AD0  D003               	bra	u1957
   734  001AD2  0008               	tblrd		*
   735  001AD4  50F5               	movf	tablat,w,c
   736  001AD6  D005               	bra	u1950
   737  001AD8                     u1957:
   738  001AD8  CFF6 FFE1          	movff	tblptrl,fsr1l
   739  001ADC  CFF7 FFE2          	movff	tblptrh,fsr1h
   740  001AE0  50E7               	movf	indf1,w,c
   741  001AE2                     u1950:
   742  001AE2  EC7A  F00E         	call	_uart_escribir
   743  001AE6  4A02               	infsnz	uart_printf@cadena^0,f,c
   744  001AE8  2A03               	incf	(uart_printf@cadena+1)^0,f,c
   745  001AEA                     l2203:
   746                           
   747                           ;./UART.h: 48:     while (*cadena) {
   748  001AEA  C002  FFF6         	movff	uart_printf@cadena,tblptrl
   749  001AEE  C003  FFF7         	movff	uart_printf@cadena+1,tblptrh
   750  001AF2  6AF8               	clrf	tblptru,c
   751  001AF4  0E07               	movlw	(high __ramtop+-1)
   752  001AF6  64F7               	cpfsgt	tblptrh,c
   753  001AF8  D003               	bra	u1967
   754  001AFA  0008               	tblrd		*
   755  001AFC  50F5               	movf	tablat,w,c
   756  001AFE  D005               	bra	u1960
   757  001B00                     u1967:
   758  001B00  CFF6 FFE1          	movff	tblptrl,fsr1l
   759  001B04  CFF7 FFE2          	movff	tblptrh,fsr1h
   760  001B08  50E7               	movf	indf1,w,c
   761  001B0A                     u1960:
   762  001B0A  0900               	iorlw	0
   763  001B0C  A4D8               	btfss	status,2,c
   764  001B0E  EF8B  F00D         	goto	u1971
   765  001B12  EF8D  F00D         	goto	u1970
   766  001B16                     u1971:
   767  001B16  EF61  F00D         	goto	l2199
   768  001B1A                     u1970:
   769  001B1A  0012               	return		;funcret
   770  001B1C                     __end_of_uart_printf:
   771                           	opt callstack 0
   772                           
   773 ;; *************** function _uart_escribir *****************
   774 ;; Defined at:
   775 ;;		line 42 in file "./UART.h"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  dato            1    wreg     unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  dato            1    0[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   789 ;;      Params:         0       0       0       0       0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0
   792 ;;      Totals:         1       0       0       0       0       0       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_uart_printf
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text2
   803  001CF4                     __ptext2:
   804                           	opt callstack 0
   805  001CF4                     _uart_escribir:
   806                           	opt callstack 29
   807                           
   808                           ;incstack = 0
   809                           ;uart_escribir@dato stored from wreg
   810  001CF4  6E01               	movwf	uart_escribir@dato^0,c
   811  001CF6                     
   812                           ;./UART.h: 43:     TXREG = dato;
   813  001CF6  C001  FFAD         	movff	uart_escribir@dato,4013	;volatile
   814  001CFA                     l54:
   815  001CFA  A2AC               	btfss	172,1,c	;volatile
   816  001CFC  EF82  F00E         	goto	u1871
   817  001D00  EF84  F00E         	goto	u1870
   818  001D04                     u1871:
   819  001D04  EF7D  F00E         	goto	l54
   820  001D08                     u1870:
   821  001D08  0012               	return		;funcret
   822  001D0A                     __end_of_uart_escribir:
   823                           	opt callstack 0
   824                           
   825 ;; *************** function _uart_iniciar *****************
   826 ;; Defined at:
   827 ;;		line 13 in file "./UART.h"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  BAUD            4   14[COMRAM] long 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  frecuenciaCr    4    0        long 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   841 ;;      Params:         4       0       0       0       0       0       0       0       0
   842 ;;      Locals:         8       0       0       0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0
   844 ;;      Totals:        12       0       0       0       0       0       0       0       0
   845 ;;Total ram usage:       12 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    1
   848 ;; This function calls:
   849 ;;		___aldiv
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text3
   856  0019EC                     __ptext3:
   857                           	opt callstack 0
   858  0019EC                     _uart_iniciar:
   859                           	opt callstack 29
   860  0019EC                     
   861                           ;./UART.h: 16:     TRISC6 = 0;
   862  0019EC  9C94               	bcf	3988,6,c	;volatile
   863  0019EE                     
   864                           ;./UART.h: 17:     TRISC7 = 1;
   865  0019EE  8E94               	bsf	3988,7,c	;volatile
   866  0019F0                     
   867                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
   868  0019F0  0E10               	movlw	16
   869  0019F2  6E05               	movwf	___aldiv@divisor^0,c
   870  0019F4  0E00               	movlw	0
   871  0019F6  6E06               	movwf	(___aldiv@divisor+1)^0,c
   872  0019F8  0E00               	movlw	0
   873  0019FA  6E07               	movwf	(___aldiv@divisor+2)^0,c
   874  0019FC  0E00               	movlw	0
   875  0019FE  6E08               	movwf	(___aldiv@divisor+3)^0,c
   876  001A00  0E00               	movlw	0
   877  001A02  6E01               	movwf	___aldiv@dividend^0,c
   878  001A04  0E09               	movlw	9
   879  001A06  6E02               	movwf	(___aldiv@dividend+1)^0,c
   880  001A08  0E3D               	movlw	61
   881  001A0A  6E03               	movwf	(___aldiv@dividend+2)^0,c
   882  001A0C  0E00               	movlw	0
   883  001A0E  6E04               	movwf	(___aldiv@dividend+3)^0,c
   884  001A10  EC7F  F00A         	call	___aldiv	;wreg free
   885  001A14  C001  F017         	movff	?___aldiv,_uart_iniciar$1077
   886  001A18  C002  F018         	movff	?___aldiv+1,_uart_iniciar$1077+1
   887  001A1C  C003  F019         	movff	?___aldiv+2,_uart_iniciar$1077+2
   888  001A20  C004  F01A         	movff	?___aldiv+3,_uart_iniciar$1077+3
   889  001A24                     
   890                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
   891  001A24  C017  F001         	movff	_uart_iniciar$1077,___aldiv@dividend
   892  001A28  C018  F002         	movff	_uart_iniciar$1077+1,___aldiv@dividend+1
   893  001A2C  C019  F003         	movff	_uart_iniciar$1077+2,___aldiv@dividend+2
   894  001A30  C01A  F004         	movff	_uart_iniciar$1077+3,___aldiv@dividend+3
   895  001A34  C00F  F005         	movff	uart_iniciar@BAUD,___aldiv@divisor
   896  001A38  C010  F006         	movff	uart_iniciar@BAUD+1,___aldiv@divisor+1
   897  001A3C  C011  F007         	movff	uart_iniciar@BAUD+2,___aldiv@divisor+2
   898  001A40  C012  F008         	movff	uart_iniciar@BAUD+3,___aldiv@divisor+3
   899  001A44  EC7F  F00A         	call	___aldiv	;wreg free
   900  001A48  0401               	decf	?___aldiv^0,w,c
   901  001A4A  6EAF               	movwf	175,c	;volatile
   902  001A4C                     
   903                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
   904  001A4C  84AC               	bsf	172,2,c	;volatile
   905  001A4E                     
   906                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
   907  001A4E  98AC               	bcf	172,4,c	;volatile
   908  001A50                     
   909                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
   910  001A50  8EAB               	bsf	171,7,c	;volatile
   911  001A52                     
   912                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
   913  001A52  9CAC               	bcf	172,6,c	;volatile
   914  001A54                     
   915                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
   916  001A54  8AAC               	bsf	172,5,c	;volatile
   917  001A56                     
   918                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
   919  001A56  9CAB               	bcf	171,6,c	;volatile
   920  001A58                     
   921                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
   922  001A58  88AB               	bsf	171,4,c	;volatile
   923  001A5A  0012               	return		;funcret
   924  001A5C                     __end_of_uart_iniciar:
   925                           	opt callstack 0
   926                           
   927 ;; *************** function ___aldiv *****************
   928 ;; Defined at:
   929 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  dividend        4    0[COMRAM] long 
   932 ;;  divisor         4    4[COMRAM] long 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  quotient        4   10[COMRAM] long 
   935 ;;  sign            1    9[COMRAM] unsigned char 
   936 ;;  counter         1    8[COMRAM] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  4    0[COMRAM] long 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   946 ;;      Params:         8       0       0       0       0       0       0       0       0
   947 ;;      Locals:         6       0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0
   949 ;;      Totals:        14       0       0       0       0       0       0       0       0
   950 ;;Total ram usage:       14 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_uart_iniciar
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text4
   960  0014FE                     __ptext4:
   961                           	opt callstack 0
   962  0014FE                     ___aldiv:
   963                           	opt callstack 29
   964  0014FE  0E00               	movlw	0
   965  001500  6E0A               	movwf	___aldiv@sign^0,c
   966  001502  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   967  001504  EF88  F00A         	goto	u1890
   968  001508  EF86  F00A         	goto	u1891
   969  00150C                     u1891:
   970  00150C  EF92  F00A         	goto	l2137
   971  001510                     u1890:
   972  001510  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   973  001512  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   974  001514  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   975  001516  6C05               	negf	___aldiv@divisor^0,c
   976  001518  0E00               	movlw	0
   977  00151A  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   978  00151C  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   979  00151E  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   980  001520  0E01               	movlw	1
   981  001522  6E0A               	movwf	___aldiv@sign^0,c
   982  001524                     l2137:
   983  001524  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   984  001526  EF99  F00A         	goto	u1900
   985  00152A  EF97  F00A         	goto	u1901
   986  00152E                     u1901:
   987  00152E  EFA3  F00A         	goto	l2143
   988  001532                     u1900:
   989  001532  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   990  001534  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   991  001536  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   992  001538  6C01               	negf	___aldiv@dividend^0,c
   993  00153A  0E00               	movlw	0
   994  00153C  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   995  00153E  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   996  001540  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   997  001542  0E01               	movlw	1
   998  001544  1A0A               	xorwf	___aldiv@sign^0,f,c
   999  001546                     l2143:
  1000  001546  0E00               	movlw	0
  1001  001548  6E0B               	movwf	___aldiv@quotient^0,c
  1002  00154A  0E00               	movlw	0
  1003  00154C  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1004  00154E  0E00               	movlw	0
  1005  001550  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1006  001552  0E00               	movlw	0
  1007  001554  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1008  001556  5005               	movf	___aldiv@divisor^0,w,c
  1009  001558  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1010  00155A  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1011  00155C  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1012  00155E  B4D8               	btfsc	status,2,c
  1013  001560  EFB4  F00A         	goto	u1911
  1014  001564  EFB6  F00A         	goto	u1910
  1015  001568                     u1911:
  1016  001568  EFEC  F00A         	goto	l2165
  1017  00156C                     u1910:
  1018  00156C  0E01               	movlw	1
  1019  00156E  6E09               	movwf	___aldiv@counter^0,c
  1020  001570  EFC0  F00A         	goto	l2151
  1021  001574                     l2149:
  1022  001574  90D8               	bcf	status,0,c
  1023  001576  3605               	rlcf	___aldiv@divisor^0,f,c
  1024  001578  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1025  00157A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1026  00157C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1027  00157E  2A09               	incf	___aldiv@counter^0,f,c
  1028  001580                     l2151:
  1029  001580  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1030  001582  EFC5  F00A         	goto	u1921
  1031  001586  EFC7  F00A         	goto	u1920
  1032  00158A                     u1921:
  1033  00158A  EFBA  F00A         	goto	l2149
  1034  00158E                     u1920:
  1035  00158E                     l2153:
  1036  00158E  90D8               	bcf	status,0,c
  1037  001590  360B               	rlcf	___aldiv@quotient^0,f,c
  1038  001592  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1039  001594  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1040  001596  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1041  001598  5005               	movf	___aldiv@divisor^0,w,c
  1042  00159A  5C01               	subwf	___aldiv@dividend^0,w,c
  1043  00159C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1044  00159E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1045  0015A0  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1046  0015A2  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1047  0015A4  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1048  0015A6  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1049  0015A8  A0D8               	btfss	status,0,c
  1050  0015AA  EFD9  F00A         	goto	u1931
  1051  0015AE  EFDB  F00A         	goto	u1930
  1052  0015B2                     u1931:
  1053  0015B2  EFE4  F00A         	goto	l2161
  1054  0015B6                     u1930:
  1055  0015B6  5005               	movf	___aldiv@divisor^0,w,c
  1056  0015B8  5E01               	subwf	___aldiv@dividend^0,f,c
  1057  0015BA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1058  0015BC  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1059  0015BE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1060  0015C0  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1061  0015C2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1062  0015C4  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1063  0015C6  800B               	bsf	___aldiv@quotient^0,0,c
  1064  0015C8                     l2161:
  1065  0015C8  90D8               	bcf	status,0,c
  1066  0015CA  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1067  0015CC  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1068  0015CE  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1069  0015D0  3205               	rrcf	___aldiv@divisor^0,f,c
  1070  0015D2  2E09               	decfsz	___aldiv@counter^0,f,c
  1071  0015D4  EFC7  F00A         	goto	l2153
  1072  0015D8                     l2165:
  1073  0015D8  500A               	movf	___aldiv@sign^0,w,c
  1074  0015DA  B4D8               	btfsc	status,2,c
  1075  0015DC  EFF2  F00A         	goto	u1941
  1076  0015E0  EFF4  F00A         	goto	u1940
  1077  0015E4                     u1941:
  1078  0015E4  EFFC  F00A         	goto	l2169
  1079  0015E8                     u1940:
  1080  0015E8  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1081  0015EA  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1082  0015EC  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1083  0015EE  6C0B               	negf	___aldiv@quotient^0,c
  1084  0015F0  0E00               	movlw	0
  1085  0015F2  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1086  0015F4  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1087  0015F6  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1088  0015F8                     l2169:
  1089  0015F8  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1090  0015FC  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1091  001600  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1092  001604  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1093  001608  0012               	return		;funcret
  1094  00160A                     __end_of___aldiv:
  1095                           	opt callstack 0
  1096                           
  1097 ;; *************** function _sprintf *****************
  1098 ;; Defined at:
  1099 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  s               2   87[COMRAM] PTR unsigned char 
  1102 ;;		 -> main@buffer(30), 
  1103 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1104 ;;		 -> STR_2(23), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1107 ;;  ap              2    2[BANK0 ] PTR void [1]
  1108 ;;		 -> ?_sprintf(2), 
  1109 ;;  ret             2    0        int 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2   87[COMRAM] int 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1119 ;;      Params:         8       0       0       0       0       0       0       0       0
  1120 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1122 ;;      Totals:         8      10       0       0       0       0       0       0       0
  1123 ;;Total ram usage:       18 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    7
  1126 ;; This function calls:
  1127 ;;		_vfprintf
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text5
  1134  001B1C                     __ptext5:
  1135                           	opt callstack 0
  1136  001B1C                     _sprintf:
  1137                           	opt callstack 23
  1138  001B1C  0E5C               	movlw	low (?_sprintf+4)
  1139  001B1E  0100               	movlb	0	; () banked
  1140  001B20  6F62               	movwf	sprintf@ap& (0+255),b
  1141  001B22  0E00               	movlw	high (?_sprintf+4)
  1142  001B24  6F63               	movwf	(sprintf@ap+1)& (0+255),b
  1143  001B26  C058  F064         	movff	sprintf@s,sprintf@f
  1144  001B2A  C059  F065         	movff	sprintf@s+1,sprintf@f+1
  1145  001B2E                     
  1146                           ; BSR set to: 0
  1147  001B2E  0E00               	movlw	0
  1148  001B30  6F67               	movwf	(sprintf@f+3)& (0+255),b
  1149  001B32  0E00               	movlw	0
  1150  001B34  6F66               	movwf	(sprintf@f+2)& (0+255),b
  1151  001B36                     
  1152                           ; BSR set to: 0
  1153  001B36  0E00               	movlw	0
  1154  001B38  6F69               	movwf	(sprintf@f+5)& (0+255),b
  1155  001B3A  0E00               	movlw	0
  1156  001B3C  6F68               	movwf	(sprintf@f+4)& (0+255),b
  1157  001B3E                     
  1158                           ; BSR set to: 0
  1159  001B3E  0E64               	movlw	low sprintf@f
  1160  001B40  6E50               	movwf	vfprintf@fp^0,c
  1161  001B42  0E00               	movlw	high sprintf@f
  1162  001B44  6E51               	movwf	(vfprintf@fp+1)^0,c
  1163  001B46  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1164  001B4A  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1165  001B4E  0E62               	movlw	low sprintf@ap
  1166  001B50  6E54               	movwf	vfprintf@ap^0,c
  1167  001B52  0E00               	movlw	high sprintf@ap
  1168  001B54  6E55               	movwf	(vfprintf@ap+1)^0,c
  1169  001B56  EC2E  F00D         	call	_vfprintf	;wreg free
  1170  001B5A  0100               	movlb	0	; () banked
  1171  001B5C  5166               	movf	(sprintf@f+2)& (0+255),w,b
  1172  001B5E  2458               	addwf	sprintf@s^0,w,c
  1173  001B60  6ED9               	movwf	fsr2l,c
  1174  001B62  5167               	movf	(sprintf@f+3)& (0+255),w,b
  1175  001B64  2059               	addwfc	(sprintf@s+1)^0,w,c
  1176  001B66  6EDA               	movwf	fsr2h,c
  1177  001B68  0E00               	movlw	0
  1178  001B6A  6EDF               	movwf	indf2,c
  1179  001B6C                     
  1180                           ; BSR set to: 0
  1181  001B6C  0012               	return		;funcret
  1182  001B6E                     __end_of_sprintf:
  1183                           	opt callstack 0
  1184                           
  1185 ;; *************** function _vfprintf *****************
  1186 ;; Defined at:
  1187 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1190 ;;		 -> sprintf@f(6), 
  1191 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1192 ;;		 -> STR_2(23), 
  1193 ;;  ap              2   83[COMRAM] PTR PTR void 
  1194 ;;		 -> sprintf@ap(2), 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1197 ;;		 -> STR_2(23), 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  2   79[COMRAM] int 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1207 ;;      Params:         6       0       0       0       0       0       0       0       0
  1208 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1210 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1211 ;;Total ram usage:        8 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    6
  1214 ;; This function calls:
  1215 ;;		_vfpfcnvrt
  1216 ;; This function is called by:
  1217 ;;		_sprintf
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text6
  1222  001A5C                     __ptext6:
  1223                           	opt callstack 0
  1224  001A5C                     _vfprintf:
  1225                           	opt callstack 23
  1226  001A5C                     
  1227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1228  001A5C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1229  001A60  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1230  001A64                     
  1231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1232  001A64  0E00               	movlw	0
  1233  001A66  0100               	movlb	0	; () banked
  1234  001A68  6F8F               	movwf	(_nout+1)& (0+255),b
  1235  001A6A  0E00               	movlw	0
  1236  001A6C  6F8E               	movwf	_nout& (0+255),b
  1237                           
  1238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1239  001A6E  EF4C  F00D         	goto	l2127
  1240  001A72                     l2125:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1244  001A72  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1245  001A76  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1246  001A7A  0E56               	movlw	low vfprintf@cfmt
  1247  001A7C  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1248  001A7E  0E00               	movlw	high vfprintf@cfmt
  1249  001A80  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1250  001A82  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1251  001A86  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1252  001A8A  EC55  F007         	call	_vfpfcnvrt	;wreg free
  1253  001A8E  5040               	movf	?_vfpfcnvrt^0,w,c
  1254  001A90  0100               	movlb	0	; () banked
  1255  001A92  278E               	addwf	_nout& (0+255),f,b
  1256  001A94  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1257  001A96  238F               	addwfc	(_nout+1)& (0+255),f,b
  1258  001A98                     l2127:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1262  001A98  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1263  001A9C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1264  001AA0                     	if	0	;tblptru may be non-zero
  1265  001AA0                     	endif
  1266  001AA0                     	if	0	;tblptru may be non-zero
  1267  001AA0                     	endif
  1268  001AA0  0008               	tblrd		*
  1269  001AA2  50F5               	movf	tablat,w,c
  1270  001AA4  0900               	iorlw	0
  1271  001AA6  A4D8               	btfss	status,2,c
  1272  001AA8  EF58  F00D         	goto	u1881
  1273  001AAC  EF5A  F00D         	goto	u1880
  1274  001AB0                     u1881:
  1275  001AB0  EF39  F00D         	goto	l2125
  1276  001AB4                     u1880:
  1277  001AB4                     
  1278                           ; BSR set to: 0
  1279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1280  001AB4  C08E  F050         	movff	_nout,?_vfprintf
  1281  001AB8  C08F  F051         	movff	_nout+1,?_vfprintf+1
  1282  001ABC                     
  1283                           ; BSR set to: 0
  1284  001ABC  0012               	return		;funcret
  1285  001ABE                     __end_of_vfprintf:
  1286                           	opt callstack 0
  1287                           
  1288 ;; *************** function _vfpfcnvrt *****************
  1289 ;; Defined at:
  1290 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1293 ;;		 -> sprintf@f(6), 
  1294 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1295 ;;		 -> vfprintf@cfmt(2), 
  1296 ;;  ap              2   67[COMRAM] PTR PTR void 
  1297 ;;		 -> sprintf@ap(2), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  ll              8   71[COMRAM] long long 
  1300 ;;  llu             8    0        unsigned long long 
  1301 ;;  f               4    0        unsigned long long 
  1302 ;;  vp              3    0        PTR void 
  1303 ;;  ct              3    0        unsigned char [3]
  1304 ;;  cp              3    0        PTR unsigned char 
  1305 ;;  i               2    0        int 
  1306 ;;  done            2    0        int 
  1307 ;;  c               1    0        unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2   63[COMRAM] int 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1317 ;;      Params:         6       0       0       0       0       0       0       0       0
  1318 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1319 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1320 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1321 ;;Total ram usage:       16 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    5
  1324 ;; This function calls:
  1325 ;;		_dtoa
  1326 ;;		_fputc
  1327 ;; This function is called by:
  1328 ;;		_vfprintf
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text7
  1333  000EAA                     __ptext7:
  1334                           	opt callstack 0
  1335  000EAA                     _vfpfcnvrt:
  1336                           	opt callstack 23
  1337  000EAA                     
  1338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1339  000EAA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1340  000EAE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1341  000EB2  CFDE FFF6          	movff	postinc2,tblptrl
  1342  000EB6  CFDD FFF7          	movff	postdec2,tblptrh
  1343  000EBA                     	if	0	;tblptru may be non-zero
  1344  000EBA                     	endif
  1345  000EBA                     	if	0	;tblptru may be non-zero
  1346  000EBA                     	endif
  1347  000EBA  0008               	tblrd		*
  1348  000EBC  50F5               	movf	tablat,w,c
  1349  000EBE  0A25               	xorlw	37
  1350  000EC0  A4D8               	btfss	status,2,c
  1351  000EC2  EF65  F007         	goto	u1431
  1352  000EC6  EF67  F007         	goto	u1430
  1353  000ECA                     u1431:
  1354  000ECA  EF13  F008         	goto	l1861
  1355  000ECE                     u1430:
  1356  000ECE                     
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1358  000ECE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1359  000ED2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1360  000ED6  2ADE               	incf	postinc2,f,c
  1361  000ED8  0E00               	movlw	0
  1362  000EDA  22DD               	addwfc	postdec2,f,c
  1363  000EDC                     
  1364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1365  000EDC  0E00               	movlw	0
  1366  000EDE  0100               	movlb	0	; () banked
  1367  000EE0  6F91               	movwf	(_width+1)& (0+255),b
  1368  000EE2  0E00               	movlw	0
  1369  000EE4  6F90               	movwf	_width& (0+255),b
  1370  000EE6  C090  F094         	movff	_width,_flags
  1371  000EEA  C091  F095         	movff	_width+1,_flags+1
  1372  000EEE                     
  1373                           ; BSR set to: 0
  1374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1375  000EEE  6992               	setf	_prec& (0+255),b
  1376  000EF0  6993               	setf	(_prec+1)& (0+255),b
  1377  000EF2                     
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1380  000EF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1381  000EF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1382  000EFA  CFDE FFF6          	movff	postinc2,tblptrl
  1383  000EFE  CFDD FFF7          	movff	postdec2,tblptrh
  1384  000F02                     	if	0	;tblptru may be non-zero
  1385  000F02                     	endif
  1386  000F02                     	if	0	;tblptru may be non-zero
  1387  000F02                     	endif
  1388  000F02  0008               	tblrd		*
  1389  000F04  50F5               	movf	tablat,w,c
  1390  000F06  0A64               	xorlw	100
  1391  000F08  B4D8               	btfsc	status,2,c
  1392  000F0A  EF89  F007         	goto	u1441
  1393  000F0E  EF8B  F007         	goto	u1440
  1394  000F12                     u1441:
  1395  000F12  EF9D  F007         	goto	l1839
  1396  000F16                     u1440:
  1397  000F16                     
  1398                           ; BSR set to: 0
  1399  000F16  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1400  000F1A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1401  000F1E  CFDE FFF6          	movff	postinc2,tblptrl
  1402  000F22  CFDD FFF7          	movff	postdec2,tblptrh
  1403  000F26                     	if	0	;tblptru may be non-zero
  1404  000F26                     	endif
  1405  000F26                     	if	0	;tblptru may be non-zero
  1406  000F26                     	endif
  1407  000F26  0008               	tblrd		*
  1408  000F28  50F5               	movf	tablat,w,c
  1409  000F2A  0A69               	xorlw	105
  1410  000F2C  A4D8               	btfss	status,2,c
  1411  000F2E  EF9B  F007         	goto	u1451
  1412  000F32  EF9D  F007         	goto	u1450
  1413  000F36                     u1451:
  1414  000F36  EFDD  F007         	goto	l1845
  1415  000F3A                     u1450:
  1416  000F3A                     l1839:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1420  000F3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1421  000F3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1422  000F42  2ADE               	incf	postinc2,f,c
  1423  000F44  0E00               	movlw	0
  1424  000F46  22DD               	addwfc	postdec2,f,c
  1425                           
  1426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1427  000F48  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1428  000F4C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1429  000F50  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1430  000F54  0E02               	movlw	2
  1431  000F56  26DE               	addwf	postinc2,f,c
  1432  000F58  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1433  000F5C  0E00               	movlw	0
  1434  000F5E  22DD               	addwfc	postdec2,f,c
  1435  000F60  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1436  000F64  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1437  000F68  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1438  000F6C  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1439  000F70  0E00               	movlw	0
  1440  000F72  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1441  000F74  0EFF               	movlw	-1
  1442  000F76  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1443  000F78  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1444  000F7A  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1445  000F7C  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1446  000F7E  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1447  000F80  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1448  000F82                     
  1449                           ; BSR set to: 0
  1450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1451  000F82  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1452  000F86  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1453  000F8A  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1454  000F8E  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1455  000F92  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1456  000F96  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1457  000F9A  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1458  000F9E  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1459  000FA2  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1460  000FA6  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1461  000FAA  ECE4  F005         	call	_dtoa	;wreg free
  1462  000FAE  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1463  000FB2  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1464  000FB6  EF2E  F008         	goto	l175
  1465  000FBA                     l1845:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1469  000FBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1470  000FBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1471  000FC2  CFDE FFF6          	movff	postinc2,tblptrl
  1472  000FC6  CFDD FFF7          	movff	postdec2,tblptrh
  1473  000FCA                     	if	0	;tblptru may be non-zero
  1474  000FCA                     	endif
  1475  000FCA                     	if	0	;tblptru may be non-zero
  1476  000FCA                     	endif
  1477  000FCA  0008               	tblrd		*
  1478  000FCC  50F5               	movf	tablat,w,c
  1479  000FCE  0A25               	xorlw	37
  1480  000FD0  A4D8               	btfss	status,2,c
  1481  000FD2  EFED  F007         	goto	u1461
  1482  000FD6  EFEF  F007         	goto	u1460
  1483  000FDA                     u1461:
  1484  000FDA  EF06  F008         	goto	l1855
  1485  000FDE                     u1460:
  1486  000FDE                     
  1487                           ; BSR set to: 0
  1488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1489  000FDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1490  000FE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1491  000FE6  2ADE               	incf	postinc2,f,c
  1492  000FE8  0E00               	movlw	0
  1493  000FEA  22DD               	addwfc	postdec2,f,c
  1494  000FEC                     
  1495                           ; BSR set to: 0
  1496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1497  000FEC  0E00               	movlw	0
  1498  000FEE  6E02               	movwf	(fputc@c+1)^0,c
  1499  000FF0  0E25               	movlw	37
  1500  000FF2  6E01               	movwf	fputc@c^0,c
  1501  000FF4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1502  000FF8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1503  000FFC  EC88  F00B         	call	_fputc	;wreg free
  1504  001000                     l1851:
  1505                           
  1506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1507  001000  0E00               	movlw	0
  1508  001002  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1509  001004  0E01               	movlw	1
  1510  001006  6E40               	movwf	?_vfpfcnvrt^0,c
  1511  001008  EF2E  F008         	goto	l175
  1512  00100C                     l1855:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1516  00100C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1517  001010  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1518  001014  2ADE               	incf	postinc2,f,c
  1519  001016  0E00               	movlw	0
  1520  001018  22DD               	addwfc	postdec2,f,c
  1521  00101A                     
  1522                           ; BSR set to: 0
  1523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1524  00101A  0E00               	movlw	0
  1525  00101C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1526  00101E  0E00               	movlw	0
  1527  001020  6E40               	movwf	?_vfpfcnvrt^0,c
  1528  001022  EF2E  F008         	goto	l175
  1529  001026                     l1861:
  1530                           
  1531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1532  001026  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1533  00102A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1534  00102E  CFDE FFF6          	movff	postinc2,tblptrl
  1535  001032  CFDD FFF7          	movff	postdec2,tblptrh
  1536  001036                     	if	0	;tblptru may be non-zero
  1537  001036                     	endif
  1538  001036                     	if	0	;tblptru may be non-zero
  1539  001036                     	endif
  1540  001036  0008               	tblrd		*
  1541  001038  50F5               	movf	tablat,w,c
  1542  00103A  6E01               	movwf	fputc@c^0,c
  1543  00103C  6A02               	clrf	(fputc@c+1)^0,c
  1544  00103E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1545  001042  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1546  001046  EC88  F00B         	call	_fputc	;wreg free
  1547  00104A                     
  1548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1549  00104A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1550  00104E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1551  001052  2ADE               	incf	postinc2,f,c
  1552  001054  0E00               	movlw	0
  1553  001056  22DD               	addwfc	postdec2,f,c
  1554  001058  EF00  F008         	goto	l1851
  1555  00105C                     l175:
  1556  00105C  0012               	return		;funcret
  1557  00105E                     __end_of_vfpfcnvrt:
  1558                           	opt callstack 0
  1559                           
  1560 ;; *************** function _dtoa *****************
  1561 ;; Defined at:
  1562 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1565 ;;		 -> sprintf@f(6), 
  1566 ;;  d               8   29[COMRAM] long long 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  n               8   53[COMRAM] long long 
  1569 ;;  i               2   61[COMRAM] int 
  1570 ;;  s               2   51[COMRAM] int 
  1571 ;;  w               2   49[COMRAM] int 
  1572 ;;  p               2   47[COMRAM] int 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  2   27[COMRAM] int 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:        10       0       0       0       0       0       0       0       0
  1583 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1585 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:       36 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    4
  1589 ;; This function calls:
  1590 ;;		___aodiv
  1591 ;;		___aomod
  1592 ;;		_abs
  1593 ;;		_pad
  1594 ;; This function is called by:
  1595 ;;		_vfpfcnvrt
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text8
  1600  000BC8                     __ptext8:
  1601                           	opt callstack 0
  1602  000BC8                     _dtoa:
  1603                           	opt callstack 23
  1604  000BC8                     
  1605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1606  000BC8  C01E  F036         	movff	dtoa@d,dtoa@n
  1607  000BCC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1608  000BD0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1609  000BD4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1610  000BD8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1611  000BDC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1612  000BE0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1613  000BE4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1614  000BE8                     
  1615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1616  000BE8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1617  000BEA  EFF9  F005         	goto	u1261
  1618  000BEE  EFFC  F005         	goto	u1260
  1619  000BF2                     u1261:
  1620  000BF2  0E01               	movlw	1
  1621  000BF4  EFFD  F005         	goto	u1270
  1622  000BF8                     u1260:
  1623  000BF8  0E00               	movlw	0
  1624  000BFA                     u1270:
  1625  000BFA  6E34               	movwf	dtoa@s^0,c
  1626  000BFC  6A35               	clrf	(dtoa@s+1)^0,c
  1627                           
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1629  000BFE  5034               	movf	dtoa@s^0,w,c
  1630  000C00  1035               	iorwf	(dtoa@s+1)^0,w,c
  1631  000C02  B4D8               	btfsc	status,2,c
  1632  000C04  EF06  F006         	goto	u1281
  1633  000C08  EF08  F006         	goto	u1280
  1634  000C0C                     u1281:
  1635  000C0C  EF18  F006         	goto	l1741
  1636  000C10                     u1280:
  1637  000C10                     
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1639  000C10  1E3D               	comf	(dtoa@n+7)^0,f,c
  1640  000C12  1E3C               	comf	(dtoa@n+6)^0,f,c
  1641  000C14  1E3B               	comf	(dtoa@n+5)^0,f,c
  1642  000C16  1E3A               	comf	(dtoa@n+4)^0,f,c
  1643  000C18  1E39               	comf	(dtoa@n+3)^0,f,c
  1644  000C1A  1E38               	comf	(dtoa@n+2)^0,f,c
  1645  000C1C  1E37               	comf	(dtoa@n+1)^0,f,c
  1646  000C1E  6C36               	negf	dtoa@n^0,c
  1647  000C20  0E00               	movlw	0
  1648  000C22  2237               	addwfc	(dtoa@n+1)^0,f,c
  1649  000C24  2238               	addwfc	(dtoa@n+2)^0,f,c
  1650  000C26  2239               	addwfc	(dtoa@n+3)^0,f,c
  1651  000C28  223A               	addwfc	(dtoa@n+4)^0,f,c
  1652  000C2A  223B               	addwfc	(dtoa@n+5)^0,f,c
  1653  000C2C  223C               	addwfc	(dtoa@n+6)^0,f,c
  1654  000C2E  223D               	addwfc	(dtoa@n+7)^0,f,c
  1655  000C30                     l1741:
  1656                           
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1658  000C30  0100               	movlb	0	; () banked
  1659  000C32  BF93               	btfsc	(_prec+1)& (0+255),7,b
  1660  000C34  EF1E  F006         	goto	u1291
  1661  000C38  EF20  F006         	goto	u1290
  1662  000C3C                     u1291:
  1663  000C3C  EF21  F006         	goto	l1745
  1664  000C40                     u1290:
  1665  000C40                     
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1668  000C40  9394               	bcf	_flags& (0+255),1,b
  1669  000C42                     l1745:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1673  000C42  BF93               	btfsc	(_prec+1)& (0+255),7,b
  1674  000C44  EF2E  F006         	goto	u1300
  1675  000C48  5193               	movf	(_prec+1)& (0+255),w,b
  1676  000C4A  E106               	bnz	u1301
  1677  000C4C  0592               	decf	_prec& (0+255),w,b
  1678  000C4E  B0D8               	btfsc	status,0,c
  1679  000C50  EF2C  F006         	goto	u1301
  1680  000C54  EF2E  F006         	goto	u1300
  1681  000C58                     u1301:
  1682  000C58  EF34  F006         	goto	l148
  1683  000C5C                     u1300:
  1684  000C5C                     
  1685                           ; BSR set to: 0
  1686  000C5C  0E00               	movlw	0
  1687  000C5E  6E31               	movwf	(dtoa@p+1)^0,c
  1688  000C60  0E01               	movlw	1
  1689  000C62  6E30               	movwf	dtoa@p^0,c
  1690  000C64  EF38  F006         	goto	l150
  1691  000C68                     l148:
  1692                           
  1693                           ; BSR set to: 0
  1694  000C68  C092  F030         	movff	_prec,dtoa@p
  1695  000C6C  C093  F031         	movff	_prec+1,dtoa@p+1
  1696  000C70                     l150:
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1700  000C70  C090  F032         	movff	_width,dtoa@w
  1701  000C74  C091  F033         	movff	_width+1,dtoa@w+1
  1702  000C78                     
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1705  000C78  5034               	movf	dtoa@s^0,w,c
  1706  000C7A  1035               	iorwf	(dtoa@s+1)^0,w,c
  1707  000C7C  A4D8               	btfss	status,2,c
  1708  000C7E  EF43  F006         	goto	u1311
  1709  000C82  EF45  F006         	goto	u1310
  1710  000C86                     u1311:
  1711  000C86  EF4C  F006         	goto	l1753
  1712  000C8A                     u1310:
  1713  000C8A                     
  1714                           ; BSR set to: 0
  1715  000C8A  A594               	btfss	_flags& (0+255),2,b
  1716  000C8C  EF4A  F006         	goto	u1321
  1717  000C90  EF4C  F006         	goto	u1320
  1718  000C94                     u1321:
  1719  000C94  EF4F  F006         	goto	l1755
  1720  000C98                     u1320:
  1721  000C98                     l1753:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1725  000C98  0632               	decf	dtoa@w^0,f,c
  1726  000C9A  A0D8               	btfss	status,0,c
  1727  000C9C  0633               	decf	(dtoa@w+1)^0,f,c
  1728  000C9E                     l1755:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1732  000C9E  0E00               	movlw	0
  1733  000CA0  6E3F               	movwf	(dtoa@i+1)^0,c
  1734  000CA2  0E1F               	movlw	31
  1735  000CA4  6E3E               	movwf	dtoa@i^0,c
  1736  000CA6                     
  1737                           ; BSR set to: 0
  1738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1739  000CA6  0E00               	movlw	0
  1740  000CA8  6FB5               	movwf	(_dbuf+31)& (0+255),b
  1741                           
  1742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1743  000CAA  EFD3  F006         	goto	l1769
  1744  000CAE                     l1759:
  1745                           
  1746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1747  000CAE  063E               	decf	dtoa@i^0,f,c
  1748  000CB0  A0D8               	btfss	status,0,c
  1749  000CB2  063F               	decf	(dtoa@i+1)^0,f,c
  1750  000CB4                     
  1751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1752  000CB4  0E96               	movlw	low _dbuf
  1753  000CB6  243E               	addwf	dtoa@i^0,w,c
  1754  000CB8  6ED9               	movwf	fsr2l,c
  1755  000CBA  0E00               	movlw	high _dbuf
  1756  000CBC  203F               	addwfc	(dtoa@i+1)^0,w,c
  1757  000CBE  6EDA               	movwf	fsr2h,c
  1758  000CC0  C036  F001         	movff	dtoa@n,___aomod@dividend
  1759  000CC4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1760  000CC8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1761  000CCC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1762  000CD0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1763  000CD4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1764  000CD8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1765  000CDC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1766  000CE0  0E0A               	movlw	10
  1767  000CE2  6E09               	movwf	___aomod@divisor^0,c
  1768  000CE4  0E00               	movlw	0
  1769  000CE6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1770  000CE8  0E00               	movlw	0
  1771  000CEA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1772  000CEC  0E00               	movlw	0
  1773  000CEE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1774  000CF0  0E00               	movlw	0
  1775  000CF2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1776  000CF4  0E00               	movlw	0
  1777  000CF6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1778  000CF8  0E00               	movlw	0
  1779  000CFA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1780  000CFC  0E00               	movlw	0
  1781  000CFE  6E10               	movwf	(___aomod@divisor+7)^0,c
  1782  000D00  ECCD  F009         	call	___aomod	;wreg free
  1783  000D04  C001  F026         	movff	?___aomod,??_dtoa
  1784  000D08  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1785  000D0C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1786  000D10  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1787  000D14  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1788  000D18  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1789  000D1C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1790  000D20  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1791  000D24  C026  F013         	movff	??_dtoa,abs@a
  1792  000D28  C028  F014         	movff	??_dtoa+2,abs@a+1
  1793  000D2C  ECFE  F00D         	call	_abs	;wreg free
  1794  000D30  5013               	movf	?_abs^0,w,c
  1795  000D32  0F30               	addlw	48
  1796  000D34  6EDF               	movwf	indf2,c
  1797  000D36                     
  1798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1799  000D36  0630               	decf	dtoa@p^0,f,c
  1800  000D38  A0D8               	btfss	status,0,c
  1801  000D3A  0631               	decf	(dtoa@p+1)^0,f,c
  1802  000D3C                     
  1803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1804  000D3C  0632               	decf	dtoa@w^0,f,c
  1805  000D3E  A0D8               	btfss	status,0,c
  1806  000D40  0633               	decf	(dtoa@w+1)^0,f,c
  1807  000D42                     
  1808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1809  000D42  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1810  000D46  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1811  000D4A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1812  000D4E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1813  000D52  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1814  000D56  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1815  000D5A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1816  000D5E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1817  000D62  0E0A               	movlw	10
  1818  000D64  6E09               	movwf	___aodiv@divisor^0,c
  1819  000D66  0E00               	movlw	0
  1820  000D68  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1821  000D6A  0E00               	movlw	0
  1822  000D6C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1823  000D6E  0E00               	movlw	0
  1824  000D70  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1825  000D72  0E00               	movlw	0
  1826  000D74  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1827  000D76  0E00               	movlw	0
  1828  000D78  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1829  000D7A  0E00               	movlw	0
  1830  000D7C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1831  000D7E  0E00               	movlw	0
  1832  000D80  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1833  000D82  EC09  F009         	call	___aodiv	;wreg free
  1834  000D86  C001  F036         	movff	?___aodiv,dtoa@n
  1835  000D8A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1836  000D8E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1837  000D92  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1838  000D96  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1839  000D9A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1840  000D9E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1841  000DA2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1842  000DA6                     l1769:
  1843                           
  1844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1845  000DA6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1846  000DA8  EFDE  F006         	goto	u1331
  1847  000DAC  503F               	movf	(dtoa@i+1)^0,w,c
  1848  000DAE  E108               	bnz	u1330
  1849  000DB0  043E               	decf	dtoa@i^0,w,c
  1850  000DB2  A0D8               	btfss	status,0,c
  1851  000DB4  EFDE  F006         	goto	u1331
  1852  000DB8  EFE0  F006         	goto	u1330
  1853  000DBC                     u1331:
  1854  000DBC  EF11  F007         	goto	l1779
  1855  000DC0                     u1330:
  1856  000DC0  5036               	movf	dtoa@n^0,w,c
  1857  000DC2  1037               	iorwf	(dtoa@n+1)^0,w,c
  1858  000DC4  1038               	iorwf	(dtoa@n+2)^0,w,c
  1859  000DC6  1039               	iorwf	(dtoa@n+3)^0,w,c
  1860  000DC8  103A               	iorwf	(dtoa@n+4)^0,w,c
  1861  000DCA  103B               	iorwf	(dtoa@n+5)^0,w,c
  1862  000DCC  103C               	iorwf	(dtoa@n+6)^0,w,c
  1863  000DCE  103D               	iorwf	(dtoa@n+7)^0,w,c
  1864  000DD0  A4D8               	btfss	status,2,c
  1865  000DD2  EFED  F006         	goto	u1341
  1866  000DD6  EFEF  F006         	goto	u1340
  1867  000DDA                     u1341:
  1868  000DDA  EF57  F006         	goto	l1759
  1869  000DDE                     u1340:
  1870  000DDE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1871  000DE0  EFFC  F006         	goto	u1350
  1872  000DE4  5031               	movf	(dtoa@p+1)^0,w,c
  1873  000DE6  E106               	bnz	u1351
  1874  000DE8  0430               	decf	dtoa@p^0,w,c
  1875  000DEA  B0D8               	btfsc	status,0,c
  1876  000DEC  EFFA  F006         	goto	u1351
  1877  000DF0  EFFC  F006         	goto	u1350
  1878  000DF4                     u1351:
  1879  000DF4  EF57  F006         	goto	l1759
  1880  000DF8                     u1350:
  1881  000DF8  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1882  000DFA  EF07  F007         	goto	u1361
  1883  000DFE  5033               	movf	(dtoa@w+1)^0,w,c
  1884  000E00  E108               	bnz	u1360
  1885  000E02  0432               	decf	dtoa@w^0,w,c
  1886  000E04  A0D8               	btfss	status,0,c
  1887  000E06  EF07  F007         	goto	u1361
  1888  000E0A  EF09  F007         	goto	u1360
  1889  000E0E                     u1361:
  1890  000E0E  EF11  F007         	goto	l1779
  1891  000E12                     u1360:
  1892  000E12  0100               	movlb	0	; () banked
  1893  000E14  B394               	btfsc	_flags& (0+255),1,b
  1894  000E16  EF0F  F007         	goto	u1371
  1895  000E1A  EF11  F007         	goto	u1370
  1896  000E1E                     u1371:
  1897  000E1E  EF57  F006         	goto	l1759
  1898  000E22                     u1370:
  1899  000E22                     l1779:
  1900                           
  1901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1902  000E22  5034               	movf	dtoa@s^0,w,c
  1903  000E24  1035               	iorwf	(dtoa@s+1)^0,w,c
  1904  000E26  A4D8               	btfss	status,2,c
  1905  000E28  EF18  F007         	goto	u1381
  1906  000E2C  EF1A  F007         	goto	u1380
  1907  000E30                     u1381:
  1908  000E30  EF22  F007         	goto	l1783
  1909  000E34                     u1380:
  1910  000E34  0100               	movlb	0	; () banked
  1911  000E36  A594               	btfss	_flags& (0+255),2,b
  1912  000E38  EF20  F007         	goto	u1391
  1913  000E3C  EF22  F007         	goto	u1390
  1914  000E40                     u1391:
  1915  000E40  EF40  F007         	goto	l1793
  1916  000E44                     u1390:
  1917  000E44                     l1783:
  1918                           
  1919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1920  000E44  063E               	decf	dtoa@i^0,f,c
  1921  000E46  A0D8               	btfss	status,0,c
  1922  000E48  063F               	decf	(dtoa@i+1)^0,f,c
  1923  000E4A                     
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1925  000E4A  5034               	movf	dtoa@s^0,w,c
  1926  000E4C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1927  000E4E  A4D8               	btfss	status,2,c
  1928  000E50  EF2C  F007         	goto	u1401
  1929  000E54  EF2E  F007         	goto	u1400
  1930  000E58                     u1401:
  1931  000E58  EF34  F007         	goto	l1789
  1932  000E5C                     u1400:
  1933  000E5C  0E00               	movlw	0
  1934  000E5E  6E2F               	movwf	(_dtoa$354+1)^0,c
  1935  000E60  0E2B               	movlw	43
  1936  000E62  6E2E               	movwf	_dtoa$354^0,c
  1937  000E64  EF38  F007         	goto	l1791
  1938  000E68                     l1789:
  1939  000E68  0E00               	movlw	0
  1940  000E6A  6E2F               	movwf	(_dtoa$354+1)^0,c
  1941  000E6C  0E2D               	movlw	45
  1942  000E6E  6E2E               	movwf	_dtoa$354^0,c
  1943  000E70                     l1791:
  1944  000E70  0E96               	movlw	low _dbuf
  1945  000E72  243E               	addwf	dtoa@i^0,w,c
  1946  000E74  6ED9               	movwf	fsr2l,c
  1947  000E76  0E00               	movlw	high _dbuf
  1948  000E78  203F               	addwfc	(dtoa@i+1)^0,w,c
  1949  000E7A  6EDA               	movwf	fsr2h,c
  1950  000E7C  C02E  FFDF         	movff	_dtoa$354,indf2
  1951  000E80                     l1793:
  1952                           
  1953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1954  000E80  C01C  F011         	movff	dtoa@fp,pad@fp
  1955  000E84  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1956  000E88  0E96               	movlw	low _dbuf
  1957  000E8A  243E               	addwf	dtoa@i^0,w,c
  1958  000E8C  6E13               	movwf	pad@buf^0,c
  1959  000E8E  0E00               	movlw	high _dbuf
  1960  000E90  203F               	addwfc	(dtoa@i+1)^0,w,c
  1961  000E92  6E14               	movwf	(pad@buf+1)^0,c
  1962  000E94  C032  F015         	movff	dtoa@w,pad@p
  1963  000E98  C033  F016         	movff	dtoa@w+1,pad@p+1
  1964  000E9C  ECED  F00B         	call	_pad	;wreg free
  1965  000EA0  C011  F01C         	movff	?_pad,?_dtoa
  1966  000EA4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1967  000EA8  0012               	return		;funcret
  1968  000EAA                     __end_of_dtoa:
  1969                           	opt callstack 0
  1970                           
  1971 ;; *************** function _pad *****************
  1972 ;; Defined at:
  1973 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1976 ;;		 -> sprintf@f(6), 
  1977 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1978 ;;		 -> dbuf(32), 
  1979 ;;  p               2   20[COMRAM] int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  w               2   25[COMRAM] int 
  1982 ;;  i               2   23[COMRAM] int 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2   16[COMRAM] int 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1992 ;;      Params:         6       0       0       0       0       0       0       0       0
  1993 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1994 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1995 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1996 ;;Total ram usage:       11 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    3
  1999 ;; This function calls:
  2000 ;;		_fputc
  2001 ;;		_fputs
  2002 ;;		_strlen
  2003 ;; This function is called by:
  2004 ;;		_dtoa
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text9
  2009  0017DA                     __ptext9:
  2010                           	opt callstack 0
  2011  0017DA                     _pad:
  2012                           	opt callstack 23
  2013  0017DA                     
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2015  0017DA  0100               	movlb	0	; () banked
  2016  0017DC  A194               	btfss	_flags& (0+255),0,b
  2017  0017DE  EFF3  F00B         	goto	u1061
  2018  0017E2  EFF5  F00B         	goto	u1060
  2019  0017E6                     u1061:
  2020  0017E6  EFFF  F00B         	goto	l1627
  2021  0017EA                     u1060:
  2022  0017EA                     
  2023                           ; BSR set to: 0
  2024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2025  0017EA  C013  F00A         	movff	pad@buf,fputs@s
  2026  0017EE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2027  0017F2  C011  F00C         	movff	pad@fp,fputs@fp
  2028  0017F6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2029  0017FA  ECDC  F00D         	call	_fputs	;wreg free
  2030  0017FE                     l1627:
  2031                           
  2032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2033  0017FE  BE16               	btfsc	(pad@p+1)^0,7,c
  2034  001800  EF04  F00C         	goto	u1071
  2035  001804  EF06  F00C         	goto	u1070
  2036  001808                     u1071:
  2037  001808  EF0C  F00C         	goto	l1631
  2038  00180C                     u1070:
  2039  00180C  C015  F01A         	movff	pad@p,pad@w
  2040  001810  C016  F01B         	movff	pad@p+1,pad@w+1
  2041  001814  EF10  F00C         	goto	l137
  2042  001818                     l1631:
  2043  001818  0E00               	movlw	0
  2044  00181A  6E1B               	movwf	(pad@w+1)^0,c
  2045  00181C  0E00               	movlw	0
  2046  00181E  6E1A               	movwf	pad@w^0,c
  2047  001820                     l137:
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2050  001820  0E00               	movlw	0
  2051  001822  6E19               	movwf	(pad@i+1)^0,c
  2052  001824  0E00               	movlw	0
  2053  001826  6E18               	movwf	pad@i^0,c
  2054                           
  2055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2056  001828  EF22  F00C         	goto	l1637
  2057  00182C                     l1633:
  2058                           
  2059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2060  00182C  0E00               	movlw	0
  2061  00182E  6E02               	movwf	(fputc@c+1)^0,c
  2062  001830  0E20               	movlw	32
  2063  001832  6E01               	movwf	fputc@c^0,c
  2064  001834  C011  F003         	movff	pad@fp,fputc@fp
  2065  001838  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2066  00183C  EC88  F00B         	call	_fputc	;wreg free
  2067  001840                     
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2069  001840  4A18               	infsnz	pad@i^0,f,c
  2070  001842  2A19               	incf	(pad@i+1)^0,f,c
  2071  001844                     l1637:
  2072                           
  2073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2074  001844  501A               	movf	pad@w^0,w,c
  2075  001846  5C18               	subwf	pad@i^0,w,c
  2076  001848  5019               	movf	(pad@i+1)^0,w,c
  2077  00184A  0A80               	xorlw	128
  2078  00184C  6E17               	movwf	??_pad^0,c
  2079  00184E  501B               	movf	(pad@w+1)^0,w,c
  2080  001850  0A80               	xorlw	128
  2081  001852  5817               	subwfb	??_pad^0,w,c
  2082  001854  A0D8               	btfss	status,0,c
  2083  001856  EF2F  F00C         	goto	u1081
  2084  00185A  EF31  F00C         	goto	u1080
  2085  00185E                     u1081:
  2086  00185E  EF16  F00C         	goto	l1633
  2087  001862                     u1080:
  2088  001862                     
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2090  001862  0100               	movlb	0	; () banked
  2091  001864  B194               	btfsc	_flags& (0+255),0,b
  2092  001866  EF37  F00C         	goto	u1091
  2093  00186A  EF39  F00C         	goto	u1090
  2094  00186E                     u1091:
  2095  00186E  EF43  F00C         	goto	l1641
  2096  001872                     u1090:
  2097  001872                     
  2098                           ; BSR set to: 0
  2099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2100  001872  C013  F00A         	movff	pad@buf,fputs@s
  2101  001876  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2102  00187A  C011  F00C         	movff	pad@fp,fputs@fp
  2103  00187E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2104  001882  ECDC  F00D         	call	_fputs	;wreg free
  2105  001886                     l1641:
  2106                           
  2107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2108  001886  C013  F001         	movff	pad@buf,strlen@s
  2109  00188A  C014  F002         	movff	pad@buf+1,strlen@s+1
  2110  00188E  EC1E  F00E         	call	_strlen	;wreg free
  2111  001892  501A               	movf	pad@w^0,w,c
  2112  001894  2401               	addwf	?_strlen^0,w,c
  2113  001896  6E11               	movwf	?_pad^0,c
  2114  001898  501B               	movf	(pad@w+1)^0,w,c
  2115  00189A  2002               	addwfc	(?_strlen+1)^0,w,c
  2116  00189C  6E12               	movwf	(?_pad+1)^0,c
  2117  00189E  0012               	return		;funcret
  2118  0018A0                     __end_of_pad:
  2119                           	opt callstack 0
  2120                           
  2121 ;; *************** function _strlen *****************
  2122 ;; Defined at:
  2123 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2126 ;;		 -> dbuf(32), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2129 ;;		 -> dbuf(32), 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  2    0[COMRAM] unsigned int 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2139 ;;      Params:         2       0       0       0       0       0       0       0       0
  2140 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2142 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2143 ;;Total ram usage:        4 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_pad
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text10
  2153  001C3C                     __ptext10:
  2154                           	opt callstack 0
  2155  001C3C                     _strlen:
  2156                           	opt callstack 25
  2157  001C3C  C001  F003         	movff	strlen@s,strlen@a
  2158  001C40  C002  F004         	movff	strlen@s+1,strlen@a+1
  2159  001C44  EF26  F00E         	goto	l1617
  2160  001C48                     l1615:
  2161  001C48  4A01               	infsnz	strlen@s^0,f,c
  2162  001C4A  2A02               	incf	(strlen@s+1)^0,f,c
  2163  001C4C                     l1617:
  2164  001C4C  C001  FFD9         	movff	strlen@s,fsr2l
  2165  001C50  C002  FFDA         	movff	strlen@s+1,fsr2h
  2166  001C54  50DF               	movf	indf2,w,c
  2167  001C56  A4D8               	btfss	status,2,c
  2168  001C58  EF30  F00E         	goto	u1051
  2169  001C5C  EF32  F00E         	goto	u1050
  2170  001C60                     u1051:
  2171  001C60  EF24  F00E         	goto	l1615
  2172  001C64                     u1050:
  2173  001C64  5003               	movf	strlen@a^0,w,c
  2174  001C66  5C01               	subwf	strlen@s^0,w,c
  2175  001C68  6E01               	movwf	?_strlen^0,c
  2176  001C6A  5004               	movf	(strlen@a+1)^0,w,c
  2177  001C6C  5802               	subwfb	(strlen@s+1)^0,w,c
  2178  001C6E  6E02               	movwf	(?_strlen+1)^0,c
  2179  001C70  0012               	return		;funcret
  2180  001C72                     __end_of_strlen:
  2181                           	opt callstack 0
  2182                           
  2183 ;; *************** function _fputs *****************
  2184 ;; Defined at:
  2185 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2188 ;;		 -> dbuf(32), 
  2189 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2190 ;;		 -> sprintf@f(6), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  i               2   14[COMRAM] int 
  2193 ;;  c               1   13[COMRAM] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  2    9[COMRAM] int 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2203 ;;      Params:         4       0       0       0       0       0       0       0       0
  2204 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2206 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2207 ;;Total ram usage:        7 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    2
  2210 ;; This function calls:
  2211 ;;		_fputc
  2212 ;; This function is called by:
  2213 ;;		_pad
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text11
  2218  001BB8                     __ptext11:
  2219                           	opt callstack 0
  2220  001BB8                     _fputs:
  2221                           	opt callstack 23
  2222  001BB8  0E00               	movlw	0
  2223  001BBA  6E10               	movwf	(fputs@i+1)^0,c
  2224  001BBC  0E00               	movlw	0
  2225  001BBE  6E0F               	movwf	fputs@i^0,c
  2226  001BC0  EFED  F00D         	goto	l1611
  2227  001BC4                     l1607:
  2228  001BC4  C00E  F001         	movff	fputs@c,fputc@c
  2229  001BC8  6A02               	clrf	(fputc@c+1)^0,c
  2230  001BCA  C00C  F003         	movff	fputs@fp,fputc@fp
  2231  001BCE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2232  001BD2  EC88  F00B         	call	_fputc	;wreg free
  2233  001BD6  4A0F               	infsnz	fputs@i^0,f,c
  2234  001BD8  2A10               	incf	(fputs@i+1)^0,f,c
  2235  001BDA                     l1611:
  2236  001BDA  500F               	movf	fputs@i^0,w,c
  2237  001BDC  240A               	addwf	fputs@s^0,w,c
  2238  001BDE  6ED9               	movwf	fsr2l,c
  2239  001BE0  5010               	movf	(fputs@i+1)^0,w,c
  2240  001BE2  200B               	addwfc	(fputs@s+1)^0,w,c
  2241  001BE4  6EDA               	movwf	fsr2h,c
  2242  001BE6  50DF               	movf	indf2,w,c
  2243  001BE8  6E0E               	movwf	fputs@c^0,c
  2244  001BEA  500E               	movf	fputs@c^0,w,c
  2245  001BEC  A4D8               	btfss	status,2,c
  2246  001BEE  EFFB  F00D         	goto	u1041
  2247  001BF2  EFFD  F00D         	goto	u1040
  2248  001BF6                     u1041:
  2249  001BF6  EFE2  F00D         	goto	l1607
  2250  001BFA                     u1040:
  2251  001BFA  0012               	return		;funcret
  2252  001BFC                     __end_of_fputs:
  2253                           	opt callstack 0
  2254                           
  2255 ;; *************** function _fputc *****************
  2256 ;; Defined at:
  2257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  c               2    0[COMRAM] int 
  2260 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2261 ;;		 -> sprintf@f(6), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2    0[COMRAM] int 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         4       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        9 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    1
  2280 ;; This function calls:
  2281 ;;		_putch
  2282 ;; This function is called by:
  2283 ;;		_pad
  2284 ;;		_vfpfcnvrt
  2285 ;;		_fputs
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text12
  2290  001710                     __ptext12:
  2291                           	opt callstack 0
  2292  001710                     _fputc:
  2293                           	opt callstack 26
  2294  001710  5003               	movf	fputc@fp^0,w,c
  2295  001712  1004               	iorwf	(fputc@fp+1)^0,w,c
  2296  001714  B4D8               	btfsc	status,2,c
  2297  001716  EF8F  F00B         	goto	u1001
  2298  00171A  EF91  F00B         	goto	u1000
  2299  00171E                     u1001:
  2300  00171E  EF9A  F00B         	goto	l1595
  2301  001722                     u1000:
  2302  001722  5003               	movf	fputc@fp^0,w,c
  2303  001724  1004               	iorwf	(fputc@fp+1)^0,w,c
  2304  001726  A4D8               	btfss	status,2,c
  2305  001728  EF98  F00B         	goto	u1011
  2306  00172C  EF9A  F00B         	goto	u1010
  2307  001730                     u1011:
  2308  001730  EF9F  F00B         	goto	l1597
  2309  001734                     u1010:
  2310  001734                     l1595:
  2311  001734  5001               	movf	fputc@c^0,w,c
  2312  001736  ECA9  F00E         	call	_putch
  2313  00173A  EFEC  F00B         	goto	l875
  2314  00173E                     l1597:
  2315  00173E  EE20 F004          	lfsr	2,4
  2316  001742  5003               	movf	fputc@fp^0,w,c
  2317  001744  26D9               	addwf	fsr2l,f,c
  2318  001746  5004               	movf	(fputc@fp+1)^0,w,c
  2319  001748  22DA               	addwfc	fsr2h,f,c
  2320  00174A  50DE               	movf	postinc2,w,c
  2321  00174C  10DE               	iorwf	postinc2,w,c
  2322  00174E  B4D8               	btfsc	status,2,c
  2323  001750  EFAC  F00B         	goto	u1021
  2324  001754  EFAE  F00B         	goto	u1020
  2325  001758                     u1021:
  2326  001758  EFC9  F00B         	goto	l1601
  2327  00175C                     u1020:
  2328  00175C  EE20 F004          	lfsr	2,4
  2329  001760  5003               	movf	fputc@fp^0,w,c
  2330  001762  26D9               	addwf	fsr2l,f,c
  2331  001764  5004               	movf	(fputc@fp+1)^0,w,c
  2332  001766  22DA               	addwfc	fsr2h,f,c
  2333  001768  EE10 F002          	lfsr	1,2
  2334  00176C  5003               	movf	fputc@fp^0,w,c
  2335  00176E  26E1               	addwf	fsr1l,f,c
  2336  001770  5004               	movf	(fputc@fp+1)^0,w,c
  2337  001772  22E2               	addwfc	fsr1h,f,c
  2338  001774  50DE               	movf	postinc2,w,c
  2339  001776  5CE6               	subwf	postinc1,w,c
  2340  001778  50E6               	movf	postinc1,w,c
  2341  00177A  0A80               	xorlw	128
  2342  00177C  6E09               	movwf	(??_fputc+4)^0,c
  2343  00177E  50DE               	movf	postinc2,w,c
  2344  001780  0A80               	xorlw	128
  2345  001782  5809               	subwfb	(??_fputc+4)^0,w,c
  2346  001784  B0D8               	btfsc	status,0,c
  2347  001786  EFC7  F00B         	goto	u1031
  2348  00178A  EFC9  F00B         	goto	u1030
  2349  00178E                     u1031:
  2350  00178E  EFEC  F00B         	goto	l875
  2351  001792                     u1030:
  2352  001792                     l1601:
  2353  001792  EE20 F002          	lfsr	2,2
  2354  001796  5003               	movf	fputc@fp^0,w,c
  2355  001798  26D9               	addwf	fsr2l,f,c
  2356  00179A  5004               	movf	(fputc@fp+1)^0,w,c
  2357  00179C  22DA               	addwfc	fsr2h,f,c
  2358  00179E  CFDE F005          	movff	postinc2,??_fputc
  2359  0017A2  CFDD F006          	movff	postdec2,??_fputc+1
  2360  0017A6  C003  FFD9         	movff	fputc@fp,fsr2l
  2361  0017AA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2362  0017AE  CFDE F007          	movff	postinc2,??_fputc+2
  2363  0017B2  CFDD F008          	movff	postdec2,??_fputc+3
  2364  0017B6  5005               	movf	??_fputc^0,w,c
  2365  0017B8  2407               	addwf	(??_fputc+2)^0,w,c
  2366  0017BA  6ED9               	movwf	fsr2l,c
  2367  0017BC  5006               	movf	(??_fputc+1)^0,w,c
  2368  0017BE  2008               	addwfc	(??_fputc+3)^0,w,c
  2369  0017C0  6EDA               	movwf	fsr2h,c
  2370  0017C2  C001  FFDF         	movff	fputc@c,indf2
  2371  0017C6  EE20 F002          	lfsr	2,2
  2372  0017CA  5003               	movf	fputc@fp^0,w,c
  2373  0017CC  26D9               	addwf	fsr2l,f,c
  2374  0017CE  5004               	movf	(fputc@fp+1)^0,w,c
  2375  0017D0  22DA               	addwfc	fsr2h,f,c
  2376  0017D2  2ADE               	incf	postinc2,f,c
  2377  0017D4  0E00               	movlw	0
  2378  0017D6  22DD               	addwfc	postdec2,f,c
  2379  0017D8                     l875:
  2380  0017D8  0012               	return		;funcret
  2381  0017DA                     __end_of_fputc:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _putch *****************
  2385 ;; Defined at:
  2386 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  c               1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  c               1    0[COMRAM] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_fputc
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text13
  2414  001D52                     __ptext13:
  2415                           	opt callstack 0
  2416  001D52                     _putch:
  2417                           	opt callstack 26
  2418  001D52  0012               	return		;funcret
  2419  001D54                     __end_of_putch:
  2420                           	opt callstack 0
  2421                           
  2422 ;; *************** function _abs *****************
  2423 ;; Defined at:
  2424 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  a               2   18[COMRAM] int 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2   18[COMRAM] int 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         2       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        4 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_dtoa
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text14
  2452  001BFC                     __ptext14:
  2453                           	opt callstack 0
  2454  001BFC                     _abs:
  2455                           	opt callstack 26
  2456  001BFC  BE14               	btfsc	(abs@a+1)^0,7,c
  2457  001BFE  EF0B  F00E         	goto	u1100
  2458  001C02  5014               	movf	(abs@a+1)^0,w,c
  2459  001C04  E106               	bnz	u1101
  2460  001C06  0413               	decf	abs@a^0,w,c
  2461  001C08  B0D8               	btfsc	status,0,c
  2462  001C0A  EF09  F00E         	goto	u1101
  2463  001C0E  EF0B  F00E         	goto	u1100
  2464  001C12                     u1101:
  2465  001C12  EF19  F00E         	goto	l860
  2466  001C16                     u1100:
  2467  001C16  C013  F015         	movff	abs@a,??_abs
  2468  001C1A  C014  F016         	movff	abs@a+1,??_abs+1
  2469  001C1E  1E15               	comf	??_abs^0,f,c
  2470  001C20  1E16               	comf	(??_abs+1)^0,f,c
  2471  001C22  4A15               	infsnz	??_abs^0,f,c
  2472  001C24  2A16               	incf	(??_abs+1)^0,f,c
  2473  001C26  C015  F013         	movff	??_abs,?_abs
  2474  001C2A  C016  F014         	movff	??_abs+1,?_abs+1
  2475  001C2E  EF1D  F00E         	goto	l863
  2476  001C32                     l860:
  2477  001C32  C013  F013         	movff	abs@a,?_abs
  2478  001C36  C014  F014         	movff	abs@a+1,?_abs+1
  2479  001C3A                     l863:
  2480  001C3A  0012               	return		;funcret
  2481  001C3C                     __end_of_abs:
  2482                           	opt callstack 0
  2483                           
  2484 ;; *************** function ___aomod *****************
  2485 ;; Defined at:
  2486 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  dividend        8    0[COMRAM] long long 
  2489 ;;  divisor         8    8[COMRAM] long long 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  sign            1   17[COMRAM] unsigned char 
  2492 ;;  counter         1   16[COMRAM] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  8    0[COMRAM] long long 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:        16       0       0       0       0       0       0       0       0
  2503 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2505 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2506 ;;Total ram usage:       18 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_dtoa
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text15
  2516  00139A                     __ptext15:
  2517                           	opt callstack 0
  2518  00139A                     ___aomod:
  2519                           	opt callstack 26
  2520  00139A  0E00               	movlw	0
  2521  00139C  6E12               	movwf	___aomod@sign^0,c
  2522  00139E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2523  0013A0  EFD6  F009         	goto	u1180
  2524  0013A4  EFD4  F009         	goto	u1181
  2525  0013A8                     u1181:
  2526  0013A8  EFE8  F009         	goto	l1701
  2527  0013AC                     u1180:
  2528  0013AC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2529  0013AE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2530  0013B0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2531  0013B2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2532  0013B4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2533  0013B6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2534  0013B8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2535  0013BA  6C01               	negf	___aomod@dividend^0,c
  2536  0013BC  0E00               	movlw	0
  2537  0013BE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2538  0013C0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2539  0013C2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2540  0013C4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2541  0013C6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2542  0013C8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2543  0013CA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2544  0013CC  0E01               	movlw	1
  2545  0013CE  6E12               	movwf	___aomod@sign^0,c
  2546  0013D0                     l1701:
  2547  0013D0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2548  0013D2  EFEF  F009         	goto	u1190
  2549  0013D6  EFED  F009         	goto	u1191
  2550  0013DA                     u1191:
  2551  0013DA  EFFF  F009         	goto	l1705
  2552  0013DE                     u1190:
  2553  0013DE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2554  0013E0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2555  0013E2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2556  0013E4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2557  0013E6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2558  0013E8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2559  0013EA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2560  0013EC  6C09               	negf	___aomod@divisor^0,c
  2561  0013EE  0E00               	movlw	0
  2562  0013F0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2563  0013F2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2564  0013F4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2565  0013F6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2566  0013F8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2567  0013FA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2568  0013FC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2569  0013FE                     l1705:
  2570  0013FE  5009               	movf	___aomod@divisor^0,w,c
  2571  001400  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2572  001402  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2573  001404  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2574  001406  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2575  001408  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2576  00140A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2577  00140C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2578  00140E  B4D8               	btfsc	status,2,c
  2579  001410  EF0C  F00A         	goto	u1201
  2580  001414  EF0E  F00A         	goto	u1200
  2581  001418                     u1201:
  2582  001418  EF56  F00A         	goto	l1721
  2583  00141C                     u1200:
  2584  00141C  0E01               	movlw	1
  2585  00141E  6E11               	movwf	___aomod@counter^0,c
  2586  001420  EF1C  F00A         	goto	l1711
  2587  001424                     l1709:
  2588  001424  90D8               	bcf	status,0,c
  2589  001426  3609               	rlcf	___aomod@divisor^0,f,c
  2590  001428  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2591  00142A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2592  00142C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2593  00142E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2594  001430  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2595  001432  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2596  001434  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2597  001436  2A11               	incf	___aomod@counter^0,f,c
  2598  001438                     l1711:
  2599  001438  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2600  00143A  EF21  F00A         	goto	u1211
  2601  00143E  EF23  F00A         	goto	u1210
  2602  001442                     u1211:
  2603  001442  EF12  F00A         	goto	l1709
  2604  001446                     u1210:
  2605  001446                     l1713:
  2606  001446  5009               	movf	___aomod@divisor^0,w,c
  2607  001448  5C01               	subwf	___aomod@dividend^0,w,c
  2608  00144A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2609  00144C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2610  00144E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2611  001450  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2612  001452  500C               	movf	(___aomod@divisor+3)^0,w,c
  2613  001454  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2614  001456  500D               	movf	(___aomod@divisor+4)^0,w,c
  2615  001458  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2616  00145A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2617  00145C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2618  00145E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2619  001460  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2620  001462  5010               	movf	(___aomod@divisor+7)^0,w,c
  2621  001464  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2622  001466  A0D8               	btfss	status,0,c
  2623  001468  EF38  F00A         	goto	u1221
  2624  00146C  EF3A  F00A         	goto	u1220
  2625  001470                     u1221:
  2626  001470  EF4A  F00A         	goto	l1717
  2627  001474                     u1220:
  2628  001474  5009               	movf	___aomod@divisor^0,w,c
  2629  001476  5E01               	subwf	___aomod@dividend^0,f,c
  2630  001478  500A               	movf	(___aomod@divisor+1)^0,w,c
  2631  00147A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2632  00147C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2633  00147E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2634  001480  500C               	movf	(___aomod@divisor+3)^0,w,c
  2635  001482  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2636  001484  500D               	movf	(___aomod@divisor+4)^0,w,c
  2637  001486  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2638  001488  500E               	movf	(___aomod@divisor+5)^0,w,c
  2639  00148A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2640  00148C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2641  00148E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2642  001490  5010               	movf	(___aomod@divisor+7)^0,w,c
  2643  001492  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2644  001494                     l1717:
  2645  001494  90D8               	bcf	status,0,c
  2646  001496  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2647  001498  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2648  00149A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2649  00149C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2650  00149E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2651  0014A0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2652  0014A2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2653  0014A4  3209               	rrcf	___aomod@divisor^0,f,c
  2654  0014A6  2E11               	decfsz	___aomod@counter^0,f,c
  2655  0014A8  EF23  F00A         	goto	l1713
  2656  0014AC                     l1721:
  2657  0014AC  5012               	movf	___aomod@sign^0,w,c
  2658  0014AE  B4D8               	btfsc	status,2,c
  2659  0014B0  EF5C  F00A         	goto	u1231
  2660  0014B4  EF5E  F00A         	goto	u1230
  2661  0014B8                     u1231:
  2662  0014B8  EF6E  F00A         	goto	l1725
  2663  0014BC                     u1230:
  2664  0014BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2665  0014BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2666  0014C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2667  0014C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2668  0014C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2669  0014C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2670  0014C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2671  0014CA  6C01               	negf	___aomod@dividend^0,c
  2672  0014CC  0E00               	movlw	0
  2673  0014CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2674  0014D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2675  0014D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2676  0014D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2677  0014D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2678  0014D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2679  0014DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2680  0014DC                     l1725:
  2681  0014DC  C001  F001         	movff	___aomod@dividend,?___aomod
  2682  0014E0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2683  0014E4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2684  0014E8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2685  0014EC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2686  0014F0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2687  0014F4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2688  0014F8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2689  0014FC  0012               	return		;funcret
  2690  0014FE                     __end_of___aomod:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function ___aodiv *****************
  2694 ;; Defined at:
  2695 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  dividend        8    0[COMRAM] long long 
  2698 ;;  divisor         8    8[COMRAM] long long 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  quotient        8   18[COMRAM] long long 
  2701 ;;  sign            1   17[COMRAM] unsigned char 
  2702 ;;  counter         1   16[COMRAM] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  8    0[COMRAM] long long 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2712 ;;      Params:        16       0       0       0       0       0       0       0       0
  2713 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2715 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2716 ;;Total ram usage:       26 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_dtoa
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text16
  2726  001212                     __ptext16:
  2727                           	opt callstack 0
  2728  001212                     ___aodiv:
  2729                           	opt callstack 26
  2730  001212  0E00               	movlw	0
  2731  001214  6E12               	movwf	___aodiv@sign^0,c
  2732  001216  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2733  001218  EF12  F009         	goto	u1110
  2734  00121C  EF10  F009         	goto	u1111
  2735  001220                     u1111:
  2736  001220  EF24  F009         	goto	l1657
  2737  001224                     u1110:
  2738  001224  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2739  001226  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2740  001228  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2741  00122A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2742  00122C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2743  00122E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2744  001230  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2745  001232  6C09               	negf	___aodiv@divisor^0,c
  2746  001234  0E00               	movlw	0
  2747  001236  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2748  001238  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2749  00123A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2750  00123C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2751  00123E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2752  001240  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2753  001242  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2754  001244  0E01               	movlw	1
  2755  001246  6E12               	movwf	___aodiv@sign^0,c
  2756  001248                     l1657:
  2757  001248  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2758  00124A  EF2B  F009         	goto	u1120
  2759  00124E  EF29  F009         	goto	u1121
  2760  001252                     u1121:
  2761  001252  EF3D  F009         	goto	l1663
  2762  001256                     u1120:
  2763  001256  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2764  001258  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2765  00125A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2766  00125C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2767  00125E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2768  001260  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2769  001262  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2770  001264  6C01               	negf	___aodiv@dividend^0,c
  2771  001266  0E00               	movlw	0
  2772  001268  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2773  00126A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2774  00126C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2775  00126E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2776  001270  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2777  001272  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2778  001274  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2779  001276  0E01               	movlw	1
  2780  001278  1A12               	xorwf	___aodiv@sign^0,f,c
  2781  00127A                     l1663:
  2782  00127A  EE20  F013         	lfsr	2,___aodiv@quotient
  2783  00127E  0E07               	movlw	7
  2784  001280                     u1131:
  2785  001280  6ADE               	clrf	postinc2,c
  2786  001282  06E8               	decf	wreg,f,c
  2787  001284  E2FD               	bc	u1131
  2788  001286  5009               	movf	___aodiv@divisor^0,w,c
  2789  001288  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2790  00128A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2791  00128C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2792  00128E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2793  001290  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2794  001292  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2795  001294  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2796  001296  B4D8               	btfsc	status,2,c
  2797  001298  EF50  F009         	goto	u1141
  2798  00129C  EF52  F009         	goto	u1140
  2799  0012A0                     u1141:
  2800  0012A0  EFA4  F009         	goto	l1685
  2801  0012A4                     u1140:
  2802  0012A4  0E01               	movlw	1
  2803  0012A6  6E11               	movwf	___aodiv@counter^0,c
  2804  0012A8  EF60  F009         	goto	l1671
  2805  0012AC                     l1669:
  2806  0012AC  90D8               	bcf	status,0,c
  2807  0012AE  3609               	rlcf	___aodiv@divisor^0,f,c
  2808  0012B0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2809  0012B2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2810  0012B4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2811  0012B6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2812  0012B8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2813  0012BA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2814  0012BC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2815  0012BE  2A11               	incf	___aodiv@counter^0,f,c
  2816  0012C0                     l1671:
  2817  0012C0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2818  0012C2  EF65  F009         	goto	u1151
  2819  0012C6  EF67  F009         	goto	u1150
  2820  0012CA                     u1151:
  2821  0012CA  EF56  F009         	goto	l1669
  2822  0012CE                     u1150:
  2823  0012CE                     l1673:
  2824  0012CE  90D8               	bcf	status,0,c
  2825  0012D0  3613               	rlcf	___aodiv@quotient^0,f,c
  2826  0012D2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2827  0012D4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2828  0012D6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2829  0012D8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2830  0012DA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2831  0012DC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2832  0012DE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2833  0012E0  5009               	movf	___aodiv@divisor^0,w,c
  2834  0012E2  5C01               	subwf	___aodiv@dividend^0,w,c
  2835  0012E4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2836  0012E6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2837  0012E8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2838  0012EA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2839  0012EC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2840  0012EE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2841  0012F0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2842  0012F2  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2843  0012F4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2844  0012F6  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2845  0012F8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2846  0012FA  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2847  0012FC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2848  0012FE  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2849  001300  A0D8               	btfss	status,0,c
  2850  001302  EF85  F009         	goto	u1161
  2851  001306  EF87  F009         	goto	u1160
  2852  00130A                     u1161:
  2853  00130A  EF98  F009         	goto	l1681
  2854  00130E                     u1160:
  2855  00130E  5009               	movf	___aodiv@divisor^0,w,c
  2856  001310  5E01               	subwf	___aodiv@dividend^0,f,c
  2857  001312  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2858  001314  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2859  001316  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2860  001318  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2861  00131A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2862  00131C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2863  00131E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2864  001320  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2865  001322  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2866  001324  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2867  001326  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2868  001328  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2869  00132A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2870  00132C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2871  00132E  8013               	bsf	___aodiv@quotient^0,0,c
  2872  001330                     l1681:
  2873  001330  90D8               	bcf	status,0,c
  2874  001332  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2875  001334  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2876  001336  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2877  001338  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2878  00133A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2879  00133C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2880  00133E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2881  001340  3209               	rrcf	___aodiv@divisor^0,f,c
  2882  001342  2E11               	decfsz	___aodiv@counter^0,f,c
  2883  001344  EF67  F009         	goto	l1673
  2884  001348                     l1685:
  2885  001348  5012               	movf	___aodiv@sign^0,w,c
  2886  00134A  B4D8               	btfsc	status,2,c
  2887  00134C  EFAA  F009         	goto	u1171
  2888  001350  EFAC  F009         	goto	u1170
  2889  001354                     u1171:
  2890  001354  EFBC  F009         	goto	l1689
  2891  001358                     u1170:
  2892  001358  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2893  00135A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2894  00135C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2895  00135E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2896  001360  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2897  001362  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2898  001364  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2899  001366  6C13               	negf	___aodiv@quotient^0,c
  2900  001368  0E00               	movlw	0
  2901  00136A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2902  00136C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2903  00136E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2904  001370  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2905  001372  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2906  001374  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2907  001376  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2908  001378                     l1689:
  2909  001378  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2910  00137C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2911  001380  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2912  001384  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2913  001388  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2914  00138C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2915  001390  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2916  001394  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2917  001398  0012               	return		;funcret
  2918  00139A                     __end_of___aodiv:
  2919                           	opt callstack 0
  2920                           
  2921 ;; *************** function _i2c_iniciar *****************
  2922 ;; Defined at:
  2923 ;;		line 13 in file "./I2C.h"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2940 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2941 ;;Total ram usage:        0 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text17
  2951  001D0A                     __ptext17:
  2952                           	opt callstack 0
  2953  001D0A                     _i2c_iniciar:
  2954                           	opt callstack 30
  2955  001D0A                     
  2956                           ;./I2C.h: 14:     TRISBbits.RB0 = 1;
  2957  001D0A  8093               	bsf	147,0,c	;volatile
  2958                           
  2959                           ;./I2C.h: 15:     TRISBbits.RB1 = 1;
  2960  001D0C  8293               	bsf	147,1,c	;volatile
  2961  001D0E                     
  2962                           ;./I2C.h: 16:     SSPSTAT = 0b10000000;
  2963  001D0E  0E80               	movlw	128
  2964  001D10  6EC7               	movwf	199,c	;volatile
  2965                           
  2966                           ;./I2C.h: 17:     SSPCON1 = 0b00101000;
  2967  001D12  0E28               	movlw	40
  2968  001D14  6EC6               	movwf	198,c	;volatile
  2969                           
  2970                           ;./I2C.h: 18:     SSPCON2 = 0b00000000;
  2971  001D16  0E00               	movlw	0
  2972  001D18  6EC5               	movwf	197,c	;volatile
  2973                           
  2974                           ;./I2C.h: 19:     SSPADD = 9;
  2975  001D1A  0E09               	movlw	9
  2976  001D1C  6EC8               	movwf	200,c	;volatile
  2977  001D1E  0012               	return		;funcret
  2978  001D20                     __end_of_i2c_iniciar:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function _dameValorLux *****************
  2982 ;; Defined at:
  2983 ;;		line 56 in file "./bh1750.h"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  modo            1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  modo            1   66[COMRAM] unsigned char 
  2988 ;;  valorLux        4   67[COMRAM] unsigned long 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  4   61[COMRAM] unsigned long 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2998 ;;      Params:         4       0       0       0       0       0       0       0       0
  2999 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3000 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3001 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3002 ;;Total ram usage:       10 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    3
  3005 ;; This function calls:
  3006 ;;		_bh1750_escribir
  3007 ;;		_bh1750_leer
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text18
  3014  001B6E                     __ptext18:
  3015                           	opt callstack 0
  3016  001B6E                     _dameValorLux:
  3017                           	opt callstack 27
  3018                           
  3019                           ;incstack = 0
  3020                           ;dameValorLux@modo stored from wreg
  3021  001B6E  6E43               	movwf	dameValorLux@modo^0,c
  3022  001B70                     
  3023                           ;./bh1750.h: 58:     bh1750_escribir(0x01);
  3024  001B70  0E01               	movlw	1
  3025  001B72  EC63  F00E         	call	_bh1750_escribir
  3026  001B76                     
  3027                           ;./bh1750.h: 59:     bh1750_escribir(modo);
  3028  001B76  5043               	movf	dameValorLux@modo^0,w,c
  3029  001B78  EC63  F00E         	call	_bh1750_escribir
  3030  001B7C                     
  3031                           ;./bh1750.h: 60:     valorLux = bh1750_leer();
  3032  001B7C  EC50  F00C         	call	_bh1750_leer	;wreg free
  3033  001B80  C032  F044         	movff	?_bh1750_leer,dameValorLux@valorLux
  3034  001B84  C033  F045         	movff	?_bh1750_leer+1,dameValorLux@valorLux+1
  3035  001B88  C034  F046         	movff	?_bh1750_leer+2,dameValorLux@valorLux+2
  3036  001B8C  C035  F047         	movff	?_bh1750_leer+3,dameValorLux@valorLux+3
  3037  001B90                     
  3038                           ;./bh1750.h: 61:     _delay((unsigned long)((180)*(4000000/4000.0)));
  3039  001B90  0EEA               	movlw	234
  3040  001B92  6E42               	movwf	??_dameValorLux^0,c
  3041  001B94  0EC3               	movlw	195
  3042  001B96                     u1997:
  3043  001B96  2EE8               	decfsz	wreg,f,c
  3044  001B98  D7FE               	bra	u1997
  3045  001B9A  2E42               	decfsz	??_dameValorLux^0,f,c
  3046  001B9C  D7FC               	bra	u1997
  3047  001B9E  F000               	nop	
  3048  001BA0                     
  3049                           ;./bh1750.h: 62:     bh1750_escribir(0x00);
  3050  001BA0  0E00               	movlw	0
  3051  001BA2  EC63  F00E         	call	_bh1750_escribir
  3052  001BA6                     
  3053                           ;./bh1750.h: 64:     return valorLux;
  3054  001BA6  C044  F03E         	movff	dameValorLux@valorLux,?_dameValorLux
  3055  001BAA  C045  F03F         	movff	dameValorLux@valorLux+1,?_dameValorLux+1
  3056  001BAE  C046  F040         	movff	dameValorLux@valorLux+2,?_dameValorLux+2
  3057  001BB2  C047  F041         	movff	dameValorLux@valorLux+3,?_dameValorLux+3
  3058  001BB6  0012               	return		;funcret
  3059  001BB8                     __end_of_dameValorLux:
  3060                           	opt callstack 0
  3061                           
  3062 ;; *************** function _bh1750_leer *****************
  3063 ;; Defined at:
  3064 ;;		line 39 in file "./bh1750.h"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  valor           4   57[COMRAM] unsigned long 
  3069 ;;  hb              1   56[COMRAM] unsigned char 
  3070 ;;  lb              1   55[COMRAM] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  4   49[COMRAM] unsigned long 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         4       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3083 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:       12 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    2
  3087 ;; This function calls:
  3088 ;;		___fldiv
  3089 ;;		___fltol
  3090 ;;		___xxtofl
  3091 ;;		_i2c_detener
  3092 ;;		_i2c_envia_dato
  3093 ;;		_i2c_inicia_com
  3094 ;;		_i2c_recibe_datoACK
  3095 ;; This function is called by:
  3096 ;;		_dameValorLux
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text19
  3101  0018A0                     __ptext19:
  3102                           	opt callstack 0
  3103  0018A0                     _bh1750_leer:
  3104                           	opt callstack 27
  3105  0018A0                     
  3106                           ;./bh1750.h: 41:     T_UBYTE lb = 0;
  3107  0018A0  0E00               	movlw	0
  3108  0018A2  6E38               	movwf	bh1750_leer@lb^0,c
  3109                           
  3110                           ;./bh1750.h: 42:     T_UBYTE hb = 0;
  3111  0018A4  0E00               	movlw	0
  3112  0018A6  6E39               	movwf	bh1750_leer@hb^0,c
  3113  0018A8                     
  3114                           ;./bh1750.h: 44:     i2c_inicia_com();
  3115  0018A8  ECA1  F00E         	call	_i2c_inicia_com	;wreg free
  3116  0018AC                     
  3117                           ;./bh1750.h: 45:     i2c_envia_dato(0x47);
  3118  0018AC  0E47               	movlw	71
  3119  0018AE  EC9B  F00E         	call	_i2c_envia_dato
  3120  0018B2                     
  3121                           ;./bh1750.h: 46:     hb = i2c_recibe_datoACK(1);
  3122  0018B2  0E01               	movlw	1
  3123  0018B4  EC39  F00E         	call	_i2c_recibe_datoACK
  3124  0018B8  6E39               	movwf	bh1750_leer@hb^0,c
  3125  0018BA                     
  3126                           ;./bh1750.h: 47:     lb = i2c_recibe_datoACK(0);
  3127  0018BA  0E00               	movlw	0
  3128  0018BC  EC39  F00E         	call	_i2c_recibe_datoACK
  3129  0018C0  6E38               	movwf	bh1750_leer@lb^0,c
  3130  0018C2                     
  3131                           ;./bh1750.h: 48:     i2c_detener();
  3132  0018C2  ECA5  F00E         	call	_i2c_detener	;wreg free
  3133  0018C6                     
  3134                           ;./bh1750.h: 50:     valor = (hb <<8 ) + lb;
  3135  0018C6  5038               	movf	bh1750_leer@lb^0,w,c
  3136  0018C8  C039  F036         	movff	bh1750_leer@hb,??_bh1750_leer
  3137  0018CC  6A37               	clrf	(??_bh1750_leer+1)^0,c
  3138  0018CE  C036  F037         	movff	??_bh1750_leer,??_bh1750_leer+1
  3139  0018D2  6A36               	clrf	??_bh1750_leer^0,c
  3140  0018D4  2636               	addwf	??_bh1750_leer^0,f,c
  3141  0018D6  0E00               	movlw	0
  3142  0018D8  2237               	addwfc	(??_bh1750_leer+1)^0,f,c
  3143  0018DA  C036  F03A         	movff	??_bh1750_leer,bh1750_leer@valor
  3144  0018DE  C037  F03B         	movff	??_bh1750_leer+1,bh1750_leer@valor+1
  3145  0018E2  0E00               	movlw	0
  3146  0018E4  BE3B               	btfsc	(bh1750_leer@valor+1)^0,7,c
  3147  0018E6  0EFF               	movlw	-1
  3148  0018E8  6E3C               	movwf	(bh1750_leer@valor+2)^0,c
  3149  0018EA  6E3D               	movwf	(bh1750_leer@valor+3)^0,c
  3150  0018EC                     
  3151                           ;./bh1750.h: 51:     valor /= 1.2;
  3152  0018EC  0E9A               	movlw	154
  3153  0018EE  6E13               	movwf	___fldiv@a^0,c
  3154  0018F0  0E99               	movlw	153
  3155  0018F2  6E14               	movwf	(___fldiv@a+1)^0,c
  3156  0018F4  0E99               	movlw	153
  3157  0018F6  6E15               	movwf	(___fldiv@a+2)^0,c
  3158  0018F8  0E3F               	movlw	63
  3159  0018FA  6E16               	movwf	(___fldiv@a+3)^0,c
  3160  0018FC  C03A  F001         	movff	bh1750_leer@valor,___xxtofl@val
  3161  001900  C03B  F002         	movff	bh1750_leer@valor+1,___xxtofl@val+1
  3162  001904  C03C  F003         	movff	bh1750_leer@valor+2,___xxtofl@val+2
  3163  001908  C03D  F004         	movff	bh1750_leer@valor+3,___xxtofl@val+3
  3164  00190C  0E00               	movlw	0
  3165  00190E  EC2F  F008         	call	___xxtofl
  3166  001912  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3167  001916  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3168  00191A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3169  00191E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3170  001922  EC17  F004         	call	___fldiv	;wreg free
  3171  001926  C00F  F028         	movff	?___fldiv,___fltol@f1
  3172  00192A  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  3173  00192E  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  3174  001932  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  3175  001936  EC05  F00B         	call	___fltol	;wreg free
  3176  00193A  C028  F03A         	movff	?___fltol,bh1750_leer@valor
  3177  00193E  C029  F03B         	movff	?___fltol+1,bh1750_leer@valor+1
  3178  001942  C02A  F03C         	movff	?___fltol+2,bh1750_leer@valor+2
  3179  001946  C02B  F03D         	movff	?___fltol+3,bh1750_leer@valor+3
  3180  00194A                     
  3181                           ;./bh1750.h: 53:     return valor;
  3182  00194A  C03A  F032         	movff	bh1750_leer@valor,?_bh1750_leer
  3183  00194E  C03B  F033         	movff	bh1750_leer@valor+1,?_bh1750_leer+1
  3184  001952  C03C  F034         	movff	bh1750_leer@valor+2,?_bh1750_leer+2
  3185  001956  C03D  F035         	movff	bh1750_leer@valor+3,?_bh1750_leer+3
  3186  00195A  0012               	return		;funcret
  3187  00195C                     __end_of_bh1750_leer:
  3188                           	opt callstack 0
  3189                           
  3190 ;; *************** function _i2c_recibe_datoACK *****************
  3191 ;; Defined at:
  3192 ;;		line 103 in file "./I2C.h"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  a               1    wreg     unsigned char 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  a               1    1[COMRAM] unsigned char 
  3197 ;;  datoleido       1    2[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      unsigned char 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3207 ;;      Params:         0       0       0       0       0       0       0       0       0
  3208 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3210 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3211 ;;Total ram usage:        2 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    1
  3214 ;; This function calls:
  3215 ;;		_i2c_espera
  3216 ;; This function is called by:
  3217 ;;		_bh1750_leer
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text20
  3222  001C72                     __ptext20:
  3223                           	opt callstack 0
  3224  001C72                     _i2c_recibe_datoACK:
  3225                           	opt callstack 27
  3226                           
  3227                           ;incstack = 0
  3228                           ;i2c_recibe_datoACK@a stored from wreg
  3229  001C72  6E02               	movwf	i2c_recibe_datoACK@a^0,c
  3230  001C74                     
  3231                           ;./I2C.h: 105:     T_UBYTE datoleido;;./I2C.h: 108:     i2c_espera();
  3232  001C74  EC50  F00E         	call	_i2c_espera	;wreg free
  3233  001C78                     
  3234                           ;./I2C.h: 109:     SSPCON2bits.RCEN = 1;
  3235  001C78  86C5               	bsf	197,3,c	;volatile
  3236                           
  3237                           ;./I2C.h: 111:     i2c_espera();
  3238  001C7A  EC50  F00E         	call	_i2c_espera	;wreg free
  3239  001C7E                     
  3240                           ;./I2C.h: 112:     datoleido = SSPBUF;
  3241  001C7E  CFC9 F003          	movff	4041,i2c_recibe_datoACK@datoleido	;volatile
  3242                           
  3243                           ;./I2C.h: 115:     i2c_espera();
  3244  001C82  EC50  F00E         	call	_i2c_espera	;wreg free
  3245  001C86                     
  3246                           ;./I2C.h: 117:     ACKDT = (a) ? 0 : 1;
  3247  001C86  5002               	movf	i2c_recibe_datoACK@a^0,w,c
  3248  001C88  B4D8               	btfsc	status,2,c
  3249  001C8A  EF49  F00E         	goto	u1411
  3250  001C8E  EF4C  F00E         	goto	u1410
  3251  001C92                     u1411:
  3252  001C92  8AC5               	bsf	4037,5,c	;volatile
  3253  001C94  EF4D  F00E         	goto	u1425
  3254  001C98                     u1410:
  3255  001C98  9AC5               	bcf	4037,5,c	;volatile
  3256  001C9A                     u1425:
  3257  001C9A                     
  3258                           ;./I2C.h: 118:     ACKEN = 1;
  3259  001C9A  88C5               	bsf	4037,4,c	;volatile
  3260  001C9C                     
  3261                           ;./I2C.h: 120:     return datoleido;
  3262  001C9C  5003               	movf	i2c_recibe_datoACK@datoleido^0,w,c
  3263  001C9E  0012               	return		;funcret
  3264  001CA0                     __end_of_i2c_recibe_datoACK:
  3265                           	opt callstack 0
  3266                           
  3267 ;; *************** function ___xxtofl *****************
  3268 ;; Defined at:
  3269 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  sign            1    wreg     unsigned char 
  3272 ;;  val             4    0[COMRAM] long 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  sign            1    8[COMRAM] unsigned char 
  3275 ;;  arg             4   10[COMRAM] unsigned long 
  3276 ;;  exp             1    9[COMRAM] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  4    0[COMRAM] unsigned char 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3286 ;;      Params:         4       0       0       0       0       0       0       0       0
  3287 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3288 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3289 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3290 ;;Total ram usage:       14 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_bh1750_leer
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text21
  3300  00105E                     __ptext21:
  3301                           	opt callstack 0
  3302  00105E                     ___xxtofl:
  3303                           	opt callstack 28
  3304                           
  3305                           ;incstack = 0
  3306                           ;___xxtofl@sign stored from wreg
  3307  00105E  6E09               	movwf	___xxtofl@sign^0,c
  3308  001060  5009               	movf	___xxtofl@sign^0,w,c
  3309  001062  B4D8               	btfsc	status,2,c
  3310  001064  EF36  F008         	goto	u1771
  3311  001068  EF38  F008         	goto	u1770
  3312  00106C                     u1771:
  3313  00106C  EF5A  F008         	goto	l840
  3314  001070                     u1770:
  3315  001070  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3316  001072  EF3F  F008         	goto	u1780
  3317  001076  EF3D  F008         	goto	u1781
  3318  00107A                     u1781:
  3319  00107A  EF5A  F008         	goto	l840
  3320  00107E                     u1780:
  3321  00107E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3322  001082  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3323  001086  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3324  00108A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3325  00108E  1E05               	comf	??___xxtofl^0,f,c
  3326  001090  1E06               	comf	(??___xxtofl+1)^0,f,c
  3327  001092  1E07               	comf	(??___xxtofl+2)^0,f,c
  3328  001094  1E08               	comf	(??___xxtofl+3)^0,f,c
  3329  001096  2A05               	incf	??___xxtofl^0,f,c
  3330  001098  0E00               	movlw	0
  3331  00109A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3332  00109C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3333  00109E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3334  0010A0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3335  0010A4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3336  0010A8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3337  0010AC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3338  0010B0  EF62  F008         	goto	l2057
  3339  0010B4                     l840:
  3340  0010B4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3341  0010B8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3342  0010BC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3343  0010C0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3344  0010C4                     l2057:
  3345  0010C4  5001               	movf	___xxtofl@val^0,w,c
  3346  0010C6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3347  0010C8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3348  0010CA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3349  0010CC  A4D8               	btfss	status,2,c
  3350  0010CE  EF6B  F008         	goto	u1791
  3351  0010D2  EF6D  F008         	goto	u1790
  3352  0010D6                     u1791:
  3353  0010D6  EF77  F008         	goto	l2063
  3354  0010DA                     u1790:
  3355  0010DA  0E00               	movlw	0
  3356  0010DC  6E01               	movwf	?___xxtofl^0,c
  3357  0010DE  0E00               	movlw	0
  3358  0010E0  6E02               	movwf	(?___xxtofl+1)^0,c
  3359  0010E2  0E00               	movlw	0
  3360  0010E4  6E03               	movwf	(?___xxtofl+2)^0,c
  3361  0010E6  0E00               	movlw	0
  3362  0010E8  6E04               	movwf	(?___xxtofl+3)^0,c
  3363  0010EA  EF08  F009         	goto	l843
  3364  0010EE                     l2063:
  3365  0010EE  0E96               	movlw	150
  3366  0010F0  6E0A               	movwf	___xxtofl@exp^0,c
  3367  0010F2  EF81  F008         	goto	l2067
  3368  0010F6                     l2065:
  3369  0010F6  2A0A               	incf	___xxtofl@exp^0,f,c
  3370  0010F8  90D8               	bcf	status,0,c
  3371  0010FA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3372  0010FC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3373  0010FE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3374  001100  320B               	rrcf	___xxtofl@arg^0,f,c
  3375  001102                     l2067:
  3376  001102  0E00               	movlw	0
  3377  001104  140B               	andwf	___xxtofl@arg^0,w,c
  3378  001106  6E05               	movwf	??___xxtofl^0,c
  3379  001108  0E00               	movlw	0
  3380  00110A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3381  00110C  6E06               	movwf	(??___xxtofl+1)^0,c
  3382  00110E  0E00               	movlw	0
  3383  001110  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3384  001112  6E07               	movwf	(??___xxtofl+2)^0,c
  3385  001114  0EFE               	movlw	254
  3386  001116  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3387  001118  6E08               	movwf	(??___xxtofl+3)^0,c
  3388  00111A  5005               	movf	??___xxtofl^0,w,c
  3389  00111C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3390  00111E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3391  001120  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3392  001122  A4D8               	btfss	status,2,c
  3393  001124  EF96  F008         	goto	u1801
  3394  001128  EF98  F008         	goto	u1800
  3395  00112C                     u1801:
  3396  00112C  EF7B  F008         	goto	l2065
  3397  001130                     u1800:
  3398  001130  EFA6  F008         	goto	l847
  3399  001134                     l2069:
  3400  001134  2A0A               	incf	___xxtofl@exp^0,f,c
  3401  001136  0E01               	movlw	1
  3402  001138  260B               	addwf	___xxtofl@arg^0,f,c
  3403  00113A  0E00               	movlw	0
  3404  00113C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3405  00113E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3406  001140  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3407  001142  90D8               	bcf	status,0,c
  3408  001144  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3409  001146  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3410  001148  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3411  00114A  320B               	rrcf	___xxtofl@arg^0,f,c
  3412  00114C                     l847:
  3413  00114C  0E00               	movlw	0
  3414  00114E  140B               	andwf	___xxtofl@arg^0,w,c
  3415  001150  6E05               	movwf	??___xxtofl^0,c
  3416  001152  0E00               	movlw	0
  3417  001154  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3418  001156  6E06               	movwf	(??___xxtofl+1)^0,c
  3419  001158  0E00               	movlw	0
  3420  00115A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3421  00115C  6E07               	movwf	(??___xxtofl+2)^0,c
  3422  00115E  0EFF               	movlw	255
  3423  001160  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3424  001162  6E08               	movwf	(??___xxtofl+3)^0,c
  3425  001164  5005               	movf	??___xxtofl^0,w,c
  3426  001166  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3427  001168  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3428  00116A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3429  00116C  A4D8               	btfss	status,2,c
  3430  00116E  EFBB  F008         	goto	u1811
  3431  001172  EFBD  F008         	goto	u1810
  3432  001176                     u1811:
  3433  001176  EF9A  F008         	goto	l2069
  3434  00117A                     u1810:
  3435  00117A  EFC5  F008         	goto	l2077
  3436  00117E                     l2075:
  3437  00117E  060A               	decf	___xxtofl@exp^0,f,c
  3438  001180  90D8               	bcf	status,0,c
  3439  001182  360B               	rlcf	___xxtofl@arg^0,f,c
  3440  001184  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3441  001186  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3442  001188  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3443  00118A                     l2077:
  3444  00118A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3445  00118C  EFCA  F008         	goto	u1821
  3446  001190  EFCC  F008         	goto	u1820
  3447  001194                     u1821:
  3448  001194  EFD4  F008         	goto	l854
  3449  001198                     u1820:
  3450  001198  0E02               	movlw	2
  3451  00119A  600A               	cpfslt	___xxtofl@exp^0,c
  3452  00119C  EFD2  F008         	goto	u1831
  3453  0011A0  EFD4  F008         	goto	u1830
  3454  0011A4                     u1831:
  3455  0011A4  EFBF  F008         	goto	l2075
  3456  0011A8                     u1830:
  3457  0011A8                     l854:
  3458  0011A8  B00A               	btfsc	___xxtofl@exp^0,0,c
  3459  0011AA  EFD9  F008         	goto	u1841
  3460  0011AE  EFDB  F008         	goto	u1840
  3461  0011B2                     u1841:
  3462  0011B2  EFDC  F008         	goto	l2083
  3463  0011B6                     u1840:
  3464  0011B6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3465  0011B8                     l2083:
  3466  0011B8  90D8               	bcf	status,0,c
  3467  0011BA  320A               	rrcf	___xxtofl@exp^0,f,c
  3468  0011BC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3469  0011C0  6A06               	clrf	(??___xxtofl+1)^0,c
  3470  0011C2  6A07               	clrf	(??___xxtofl+2)^0,c
  3471  0011C4  6A08               	clrf	(??___xxtofl+3)^0,c
  3472  0011C6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3473  0011CA  6A07               	clrf	(??___xxtofl+2)^0,c
  3474  0011CC  6A06               	clrf	(??___xxtofl+1)^0,c
  3475  0011CE  6A05               	clrf	??___xxtofl^0,c
  3476  0011D0  5005               	movf	??___xxtofl^0,w,c
  3477  0011D2  120B               	iorwf	___xxtofl@arg^0,f,c
  3478  0011D4  5006               	movf	(??___xxtofl+1)^0,w,c
  3479  0011D6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3480  0011D8  5007               	movf	(??___xxtofl+2)^0,w,c
  3481  0011DA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3482  0011DC  5008               	movf	(??___xxtofl+3)^0,w,c
  3483  0011DE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3484  0011E0  5009               	movf	___xxtofl@sign^0,w,c
  3485  0011E2  B4D8               	btfsc	status,2,c
  3486  0011E4  EFF6  F008         	goto	u1851
  3487  0011E8  EFF8  F008         	goto	u1850
  3488  0011EC                     u1851:
  3489  0011EC  EF00  F009         	goto	l2093
  3490  0011F0                     u1850:
  3491  0011F0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3492  0011F2  EFFF  F008         	goto	u1860
  3493  0011F6  EFFD  F008         	goto	u1861
  3494  0011FA                     u1861:
  3495  0011FA  EF00  F009         	goto	l2093
  3496  0011FE                     u1860:
  3497  0011FE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3498  001200                     l2093:
  3499  001200  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3500  001204  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3501  001208  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3502  00120C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3503  001210                     l843:
  3504  001210  0012               	return		;funcret
  3505  001212                     __end_of___xxtofl:
  3506                           	opt callstack 0
  3507                           
  3508 ;; *************** function ___fltol *****************
  3509 ;; Defined at:
  3510 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  f1              4   39[COMRAM] unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  exp1            1   48[COMRAM] unsigned char 
  3515 ;;  sign1           1   47[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  4   39[COMRAM] long 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         4       0       0       0       0       0       0       0       0
  3526 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3527 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3528 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:       10 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_bh1750_leer
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text22
  3539  00160A                     __ptext22:
  3540                           	opt callstack 0
  3541  00160A                     ___fltol:
  3542                           	opt callstack 28
  3543  00160A  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3544  00160C  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3545  00160E  6E31               	movwf	___fltol@exp1^0,c
  3546  001610  5031               	movf	___fltol@exp1^0,w,c
  3547  001612  A4D8               	btfss	status,2,c
  3548  001614  EF0E  F00B         	goto	u1701
  3549  001618  EF10  F00B         	goto	u1700
  3550  00161C                     u1701:
  3551  00161C  EF1A  F00B         	goto	l2013
  3552  001620                     u1700:
  3553  001620                     l2009:
  3554  001620  0E00               	movlw	0
  3555  001622  6E28               	movwf	?___fltol^0,c
  3556  001624  0E00               	movlw	0
  3557  001626  6E29               	movwf	(?___fltol+1)^0,c
  3558  001628  0E00               	movlw	0
  3559  00162A  6E2A               	movwf	(?___fltol+2)^0,c
  3560  00162C  0E00               	movlw	0
  3561  00162E  6E2B               	movwf	(?___fltol+3)^0,c
  3562  001630  EF87  F00B         	goto	l482
  3563  001634                     l2013:
  3564  001634  C028  F02C         	movff	___fltol@f1,??___fltol
  3565  001638  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3566  00163C  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3567  001640  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3568  001644  0E20               	movlw	32
  3569  001646  EF2A  F00B         	goto	u1710
  3570  00164A                     u1715:
  3571  00164A  90D8               	bcf	status,0,c
  3572  00164C  322F               	rrcf	(??___fltol+3)^0,f,c
  3573  00164E  322E               	rrcf	(??___fltol+2)^0,f,c
  3574  001650  322D               	rrcf	(??___fltol+1)^0,f,c
  3575  001652  322C               	rrcf	??___fltol^0,f,c
  3576  001654                     u1710:
  3577  001654  2EE8               	decfsz	wreg,f,c
  3578  001656  EF25  F00B         	goto	u1715
  3579  00165A  502C               	movf	??___fltol^0,w,c
  3580  00165C  6E30               	movwf	___fltol@sign1^0,c
  3581  00165E  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3582  001660  0EFF               	movlw	255
  3583  001662  1628               	andwf	___fltol@f1^0,f,c
  3584  001664  0EFF               	movlw	255
  3585  001666  1629               	andwf	(___fltol@f1+1)^0,f,c
  3586  001668  0EFF               	movlw	255
  3587  00166A  162A               	andwf	(___fltol@f1+2)^0,f,c
  3588  00166C  0E00               	movlw	0
  3589  00166E  162B               	andwf	(___fltol@f1+3)^0,f,c
  3590  001670  0E96               	movlw	150
  3591  001672  5E31               	subwf	___fltol@exp1^0,f,c
  3592  001674  BE31               	btfsc	___fltol@exp1^0,7,c
  3593  001676  EF41  F00B         	goto	u1720
  3594  00167A  EF3F  F00B         	goto	u1721
  3595  00167E                     u1721:
  3596  00167E  EF57  F00B         	goto	l2033
  3597  001682                     u1720:
  3598  001682  5031               	movf	___fltol@exp1^0,w,c
  3599  001684  0A80               	xorlw	128
  3600  001686  0F97               	addlw	151
  3601  001688  B0D8               	btfsc	status,0,c
  3602  00168A  EF49  F00B         	goto	u1731
  3603  00168E  EF4B  F00B         	goto	u1730
  3604  001692                     u1731:
  3605  001692  EF4D  F00B         	goto	l2029
  3606  001696                     u1730:
  3607  001696  EF10  F00B         	goto	l2009
  3608  00169A                     l2029:
  3609  00169A  90D8               	bcf	status,0,c
  3610  00169C  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3611  00169E  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3612  0016A0  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3613  0016A2  3228               	rrcf	___fltol@f1^0,f,c
  3614  0016A4  3E31               	incfsz	___fltol@exp1^0,f,c
  3615  0016A6  EF4D  F00B         	goto	l2029
  3616  0016AA  EF6F  F00B         	goto	l2043
  3617  0016AE                     l2033:
  3618  0016AE  0E1F               	movlw	31
  3619  0016B0  6431               	cpfsgt	___fltol@exp1^0,c
  3620  0016B2  EF5D  F00B         	goto	u1741
  3621  0016B6  EF5F  F00B         	goto	u1740
  3622  0016BA                     u1741:
  3623  0016BA  EF67  F00B         	goto	l2041
  3624  0016BE                     u1740:
  3625  0016BE  EF10  F00B         	goto	l2009
  3626  0016C2                     l2039:
  3627  0016C2  90D8               	bcf	status,0,c
  3628  0016C4  3628               	rlcf	___fltol@f1^0,f,c
  3629  0016C6  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3630  0016C8  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3631  0016CA  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3632  0016CC  0631               	decf	___fltol@exp1^0,f,c
  3633  0016CE                     l2041:
  3634  0016CE  5031               	movf	___fltol@exp1^0,w,c
  3635  0016D0  A4D8               	btfss	status,2,c
  3636  0016D2  EF6D  F00B         	goto	u1751
  3637  0016D6  EF6F  F00B         	goto	u1750
  3638  0016DA                     u1751:
  3639  0016DA  EF61  F00B         	goto	l2039
  3640  0016DE                     u1750:
  3641  0016DE                     l2043:
  3642  0016DE  5030               	movf	___fltol@sign1^0,w,c
  3643  0016E0  B4D8               	btfsc	status,2,c
  3644  0016E2  EF75  F00B         	goto	u1761
  3645  0016E6  EF77  F00B         	goto	u1760
  3646  0016EA                     u1761:
  3647  0016EA  EF7F  F00B         	goto	l2047
  3648  0016EE                     u1760:
  3649  0016EE  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3650  0016F0  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3651  0016F2  1E29               	comf	(___fltol@f1+1)^0,f,c
  3652  0016F4  6C28               	negf	___fltol@f1^0,c
  3653  0016F6  0E00               	movlw	0
  3654  0016F8  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3655  0016FA  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3656  0016FC  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3657  0016FE                     l2047:
  3658  0016FE  C028  F028         	movff	___fltol@f1,?___fltol
  3659  001702  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3660  001706  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3661  00170A  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3662  00170E                     l482:
  3663  00170E  0012               	return		;funcret
  3664  001710                     __end_of___fltol:
  3665                           	opt callstack 0
  3666                           
  3667 ;; *************** function ___fldiv *****************
  3668 ;; Defined at:
  3669 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  b               4   14[COMRAM] long 
  3672 ;;  a               4   18[COMRAM] long 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  grs             4   33[COMRAM] unsigned long 
  3675 ;;  rem             4   26[COMRAM] unsigned long 
  3676 ;;  new_exp         2   31[COMRAM] short 
  3677 ;;  aexp            1   38[COMRAM] unsigned char 
  3678 ;;  bexp            1   37[COMRAM] unsigned char 
  3679 ;;  sign            1   30[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  4   14[COMRAM] unsigned char 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3689 ;;      Params:         8       0       0       0       0       0       0       0       0
  3690 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3691 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3692 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3693 ;;Total ram usage:       25 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_bh1750_leer
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text23
  3703  00082E                     __ptext23:
  3704                           	opt callstack 0
  3705  00082E                     ___fldiv:
  3706                           	opt callstack 28
  3707  00082E  5012               	movf	(___fldiv@b+3)^0,w,c
  3708  000830  0B80               	andlw	128
  3709  000832  6E1F               	movwf	___fldiv@sign^0,c
  3710  000834  5012               	movf	(___fldiv@b+3)^0,w,c
  3711  000836  2412               	addwf	(___fldiv@b+3)^0,w,c
  3712  000838  6E26               	movwf	___fldiv@bexp^0,c
  3713  00083A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3714  00083C  EF22  F004         	goto	u1471
  3715  000840  EF24  F004         	goto	u1470
  3716  000844                     u1471:
  3717  000844  EF25  F004         	goto	l1875
  3718  000848                     u1470:
  3719  000848  8026               	bsf	___fldiv@bexp^0,0,c
  3720  00084A                     l1875:
  3721  00084A  5026               	movf	___fldiv@bexp^0,w,c
  3722  00084C  B4D8               	btfsc	status,2,c
  3723  00084E  EF2B  F004         	goto	u1481
  3724  000852  EF2D  F004         	goto	u1480
  3725  000856                     u1481:
  3726  000856  EF42  F004         	goto	l1885
  3727  00085A                     u1480:
  3728  00085A  2826               	incf	___fldiv@bexp^0,w,c
  3729  00085C  A4D8               	btfss	status,2,c
  3730  00085E  EF33  F004         	goto	u1491
  3731  000862  EF35  F004         	goto	u1490
  3732  000866                     u1491:
  3733  000866  EF3D  F004         	goto	l1881
  3734  00086A                     u1490:
  3735  00086A  0E00               	movlw	0
  3736  00086C  6E0F               	movwf	___fldiv@b^0,c
  3737  00086E  0E00               	movlw	0
  3738  000870  6E10               	movwf	(___fldiv@b+1)^0,c
  3739  000872  0E00               	movlw	0
  3740  000874  6E11               	movwf	(___fldiv@b+2)^0,c
  3741  000876  0E00               	movlw	0
  3742  000878  6E12               	movwf	(___fldiv@b+3)^0,c
  3743  00087A                     l1881:
  3744  00087A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3745  00087C  0E00               	movlw	0
  3746  00087E  6E12               	movwf	(___fldiv@b+3)^0,c
  3747  000880  EF4A  F004         	goto	l1887
  3748  000884                     l1885:
  3749  000884  0E00               	movlw	0
  3750  000886  6E0F               	movwf	___fldiv@b^0,c
  3751  000888  0E00               	movlw	0
  3752  00088A  6E10               	movwf	(___fldiv@b+1)^0,c
  3753  00088C  0E00               	movlw	0
  3754  00088E  6E11               	movwf	(___fldiv@b+2)^0,c
  3755  000890  0E00               	movlw	0
  3756  000892  6E12               	movwf	(___fldiv@b+3)^0,c
  3757  000894                     l1887:
  3758  000894  5016               	movf	(___fldiv@a+3)^0,w,c
  3759  000896  0B80               	andlw	128
  3760  000898  1A1F               	xorwf	___fldiv@sign^0,f,c
  3761  00089A  5016               	movf	(___fldiv@a+3)^0,w,c
  3762  00089C  2416               	addwf	(___fldiv@a+3)^0,w,c
  3763  00089E  6E27               	movwf	___fldiv@aexp^0,c
  3764  0008A0  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3765  0008A2  EF55  F004         	goto	u1501
  3766  0008A6  EF57  F004         	goto	u1500
  3767  0008AA                     u1501:
  3768  0008AA  EF58  F004         	goto	l1895
  3769  0008AE                     u1500:
  3770  0008AE  8027               	bsf	___fldiv@aexp^0,0,c
  3771  0008B0                     l1895:
  3772  0008B0  5027               	movf	___fldiv@aexp^0,w,c
  3773  0008B2  B4D8               	btfsc	status,2,c
  3774  0008B4  EF5E  F004         	goto	u1511
  3775  0008B8  EF60  F004         	goto	u1510
  3776  0008BC                     u1511:
  3777  0008BC  EF75  F004         	goto	l1905
  3778  0008C0                     u1510:
  3779  0008C0  2827               	incf	___fldiv@aexp^0,w,c
  3780  0008C2  A4D8               	btfss	status,2,c
  3781  0008C4  EF66  F004         	goto	u1521
  3782  0008C8  EF68  F004         	goto	u1520
  3783  0008CC                     u1521:
  3784  0008CC  EF70  F004         	goto	l1901
  3785  0008D0                     u1520:
  3786  0008D0  0E00               	movlw	0
  3787  0008D2  6E13               	movwf	___fldiv@a^0,c
  3788  0008D4  0E00               	movlw	0
  3789  0008D6  6E14               	movwf	(___fldiv@a+1)^0,c
  3790  0008D8  0E00               	movlw	0
  3791  0008DA  6E15               	movwf	(___fldiv@a+2)^0,c
  3792  0008DC  0E00               	movlw	0
  3793  0008DE  6E16               	movwf	(___fldiv@a+3)^0,c
  3794  0008E0                     l1901:
  3795  0008E0  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3796  0008E2  0E00               	movlw	0
  3797  0008E4  6E16               	movwf	(___fldiv@a+3)^0,c
  3798  0008E6  EF7D  F004         	goto	l1907
  3799  0008EA                     l1905:
  3800  0008EA  0E00               	movlw	0
  3801  0008EC  6E13               	movwf	___fldiv@a^0,c
  3802  0008EE  0E00               	movlw	0
  3803  0008F0  6E14               	movwf	(___fldiv@a+1)^0,c
  3804  0008F2  0E00               	movlw	0
  3805  0008F4  6E15               	movwf	(___fldiv@a+2)^0,c
  3806  0008F6  0E00               	movlw	0
  3807  0008F8  6E16               	movwf	(___fldiv@a+3)^0,c
  3808  0008FA                     l1907:
  3809  0008FA  5013               	movf	___fldiv@a^0,w,c
  3810  0008FC  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3811  0008FE  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3812  000900  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3813  000902  A4D8               	btfss	status,2,c
  3814  000904  EF86  F004         	goto	u1531
  3815  000908  EF88  F004         	goto	u1530
  3816  00090C                     u1531:
  3817  00090C  EFA0  F004         	goto	l1919
  3818  000910                     u1530:
  3819  000910  0E00               	movlw	0
  3820  000912  6E0F               	movwf	___fldiv@b^0,c
  3821  000914  0E00               	movlw	0
  3822  000916  6E10               	movwf	(___fldiv@b+1)^0,c
  3823  000918  0E00               	movlw	0
  3824  00091A  6E11               	movwf	(___fldiv@b+2)^0,c
  3825  00091C  0E00               	movlw	0
  3826  00091E  6E12               	movwf	(___fldiv@b+3)^0,c
  3827  000920  0E80               	movlw	128
  3828  000922  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3829  000924  0E7F               	movlw	127
  3830  000926  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3831  000928                     l1913:
  3832  000928  501F               	movf	___fldiv@sign^0,w,c
  3833  00092A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3834  00092C  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3835  000930  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3836  000934  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3837  000938  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3838  00093C  EFE3  F005         	goto	l767
  3839  000940                     l1919:
  3840  000940  5026               	movf	___fldiv@bexp^0,w,c
  3841  000942  A4D8               	btfss	status,2,c
  3842  000944  EFA6  F004         	goto	u1541
  3843  000948  EFA8  F004         	goto	u1540
  3844  00094C                     u1541:
  3845  00094C  EFB2  F004         	goto	l1927
  3846  000950                     u1540:
  3847  000950  0E00               	movlw	0
  3848  000952  6E0F               	movwf	?___fldiv^0,c
  3849  000954  0E00               	movlw	0
  3850  000956  6E10               	movwf	(?___fldiv+1)^0,c
  3851  000958  0E00               	movlw	0
  3852  00095A  6E11               	movwf	(?___fldiv+2)^0,c
  3853  00095C  0E00               	movlw	0
  3854  00095E  6E12               	movwf	(?___fldiv+3)^0,c
  3855  000960  EFE3  F005         	goto	l767
  3856  000964                     l1927:
  3857  000964  5027               	movf	___fldiv@aexp^0,w,c
  3858  000966  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3859  00096A  6A18               	clrf	(??___fldiv+1)^0,c
  3860  00096C  5E17               	subwf	??___fldiv^0,f,c
  3861  00096E  0E00               	movlw	0
  3862  000970  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3863  000972  0E7F               	movlw	127
  3864  000974  2417               	addwf	??___fldiv^0,w,c
  3865  000976  6E20               	movwf	___fldiv@new_exp^0,c
  3866  000978  0E00               	movlw	0
  3867  00097A  2018               	addwfc	(??___fldiv+1)^0,w,c
  3868  00097C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3869  00097E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3870  000982  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3871  000986  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3872  00098A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3873  00098E  0E00               	movlw	0
  3874  000990  6E0F               	movwf	___fldiv@b^0,c
  3875  000992  0E00               	movlw	0
  3876  000994  6E10               	movwf	(___fldiv@b+1)^0,c
  3877  000996  0E00               	movlw	0
  3878  000998  6E11               	movwf	(___fldiv@b+2)^0,c
  3879  00099A  0E00               	movlw	0
  3880  00099C  6E12               	movwf	(___fldiv@b+3)^0,c
  3881  00099E  0E00               	movlw	0
  3882  0009A0  6E22               	movwf	___fldiv@grs^0,c
  3883  0009A2  0E00               	movlw	0
  3884  0009A4  6E23               	movwf	(___fldiv@grs+1)^0,c
  3885  0009A6  0E00               	movlw	0
  3886  0009A8  6E24               	movwf	(___fldiv@grs+2)^0,c
  3887  0009AA  0E00               	movlw	0
  3888  0009AC  6E25               	movwf	(___fldiv@grs+3)^0,c
  3889  0009AE  0E00               	movlw	0
  3890  0009B0  6E27               	movwf	___fldiv@aexp^0,c
  3891  0009B2  EF13  F005         	goto	l769
  3892  0009B6                     l1937:
  3893  0009B6  5027               	movf	___fldiv@aexp^0,w,c
  3894  0009B8  B4D8               	btfsc	status,2,c
  3895  0009BA  EFE1  F004         	goto	u1551
  3896  0009BE  EFE3  F004         	goto	u1550
  3897  0009C2                     u1551:
  3898  0009C2  EFFA  F004         	goto	l1945
  3899  0009C6                     u1550:
  3900  0009C6  90D8               	bcf	status,0,c
  3901  0009C8  361B               	rlcf	___fldiv@rem^0,f,c
  3902  0009CA  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3903  0009CC  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3904  0009CE  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3905  0009D0  90D8               	bcf	status,0,c
  3906  0009D2  360F               	rlcf	___fldiv@b^0,f,c
  3907  0009D4  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3908  0009D6  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3909  0009D8  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3910  0009DA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3911  0009DC  EFF2  F004         	goto	u1561
  3912  0009E0  EFF4  F004         	goto	u1560
  3913  0009E4                     u1561:
  3914  0009E4  EFF5  F004         	goto	l772
  3915  0009E8                     u1560:
  3916  0009E8  800F               	bsf	___fldiv@b^0,0,c
  3917  0009EA                     l772:
  3918  0009EA  90D8               	bcf	status,0,c
  3919  0009EC  3622               	rlcf	___fldiv@grs^0,f,c
  3920  0009EE  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3921  0009F0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3922  0009F2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3923  0009F4                     l1945:
  3924  0009F4  5013               	movf	___fldiv@a^0,w,c
  3925  0009F6  5C1B               	subwf	___fldiv@rem^0,w,c
  3926  0009F8  5014               	movf	(___fldiv@a+1)^0,w,c
  3927  0009FA  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3928  0009FC  5015               	movf	(___fldiv@a+2)^0,w,c
  3929  0009FE  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3930  000A00  5016               	movf	(___fldiv@a+3)^0,w,c
  3931  000A02  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3932  000A04  A0D8               	btfss	status,0,c
  3933  000A06  EF07  F005         	goto	u1571
  3934  000A0A  EF09  F005         	goto	u1570
  3935  000A0E                     u1571:
  3936  000A0E  EF12  F005         	goto	l1951
  3937  000A12                     u1570:
  3938  000A12  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3939  000A14  5013               	movf	___fldiv@a^0,w,c
  3940  000A16  5E1B               	subwf	___fldiv@rem^0,f,c
  3941  000A18  5014               	movf	(___fldiv@a+1)^0,w,c
  3942  000A1A  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3943  000A1C  5015               	movf	(___fldiv@a+2)^0,w,c
  3944  000A1E  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3945  000A20  5016               	movf	(___fldiv@a+3)^0,w,c
  3946  000A22  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3947  000A24                     l1951:
  3948  000A24  2A27               	incf	___fldiv@aexp^0,f,c
  3949  000A26                     l769:
  3950  000A26  0E19               	movlw	25
  3951  000A28  6427               	cpfsgt	___fldiv@aexp^0,c
  3952  000A2A  EF19  F005         	goto	u1581
  3953  000A2E  EF1B  F005         	goto	u1580
  3954  000A32                     u1581:
  3955  000A32  EFDB  F004         	goto	l1937
  3956  000A36                     u1580:
  3957  000A36  501B               	movf	___fldiv@rem^0,w,c
  3958  000A38  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3959  000A3A  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3960  000A3C  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3961  000A3E  B4D8               	btfsc	status,2,c
  3962  000A40  EF24  F005         	goto	u1591
  3963  000A44  EF26  F005         	goto	u1590
  3964  000A48                     u1591:
  3965  000A48  EF3E  F005         	goto	l1963
  3966  000A4C                     u1590:
  3967  000A4C  8022               	bsf	___fldiv@grs^0,0,c
  3968  000A4E  EF3E  F005         	goto	l1963
  3969  000A52                     l1957:
  3970  000A52  90D8               	bcf	status,0,c
  3971  000A54  360F               	rlcf	___fldiv@b^0,f,c
  3972  000A56  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3973  000A58  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3974  000A5A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3975  000A5C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3976  000A5E  EF33  F005         	goto	u1601
  3977  000A62  EF35  F005         	goto	u1600
  3978  000A66                     u1601:
  3979  000A66  EF36  F005         	goto	l778
  3980  000A6A                     u1600:
  3981  000A6A  800F               	bsf	___fldiv@b^0,0,c
  3982  000A6C                     l778:
  3983  000A6C  90D8               	bcf	status,0,c
  3984  000A6E  3622               	rlcf	___fldiv@grs^0,f,c
  3985  000A70  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3986  000A72  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3987  000A74  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3988  000A76  0620               	decf	___fldiv@new_exp^0,f,c
  3989  000A78  A0D8               	btfss	status,0,c
  3990  000A7A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3991  000A7C                     l1963:
  3992  000A7C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3993  000A7E  EF43  F005         	goto	u1611
  3994  000A82  EF45  F005         	goto	u1610
  3995  000A86                     u1611:
  3996  000A86  EF29  F005         	goto	l1957
  3997  000A8A                     u1610:
  3998  000A8A  0E00               	movlw	0
  3999  000A8C  6E27               	movwf	___fldiv@aexp^0,c
  4000  000A8E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  4001  000A90  EF4C  F005         	goto	u1621
  4002  000A94  EF4E  F005         	goto	u1620
  4003  000A98                     u1621:
  4004  000A98  EF72  F005         	goto	l780
  4005  000A9C                     u1620:
  4006  000A9C  0EFF               	movlw	255
  4007  000A9E  1422               	andwf	___fldiv@grs^0,w,c
  4008  000AA0  6E17               	movwf	??___fldiv^0,c
  4009  000AA2  0EFF               	movlw	255
  4010  000AA4  1423               	andwf	(___fldiv@grs+1)^0,w,c
  4011  000AA6  6E18               	movwf	(??___fldiv+1)^0,c
  4012  000AA8  0EFF               	movlw	255
  4013  000AAA  1424               	andwf	(___fldiv@grs+2)^0,w,c
  4014  000AAC  6E19               	movwf	(??___fldiv+2)^0,c
  4015  000AAE  0E7F               	movlw	127
  4016  000AB0  1425               	andwf	(___fldiv@grs+3)^0,w,c
  4017  000AB2  6E1A               	movwf	(??___fldiv+3)^0,c
  4018  000AB4  5017               	movf	??___fldiv^0,w,c
  4019  000AB6  1018               	iorwf	(??___fldiv+1)^0,w,c
  4020  000AB8  1019               	iorwf	(??___fldiv+2)^0,w,c
  4021  000ABA  101A               	iorwf	(??___fldiv+3)^0,w,c
  4022  000ABC  B4D8               	btfsc	status,2,c
  4023  000ABE  EF63  F005         	goto	u1631
  4024  000AC2  EF65  F005         	goto	u1630
  4025  000AC6                     u1631:
  4026  000AC6  EF69  F005         	goto	l781
  4027  000ACA                     u1630:
  4028  000ACA                     l1971:
  4029  000ACA  0E01               	movlw	1
  4030  000ACC  6E27               	movwf	___fldiv@aexp^0,c
  4031  000ACE  EF72  F005         	goto	l780
  4032  000AD2                     l781:
  4033  000AD2  A00F               	btfss	___fldiv@b^0,0,c
  4034  000AD4  EF6E  F005         	goto	u1641
  4035  000AD8  EF70  F005         	goto	u1640
  4036  000ADC                     u1641:
  4037  000ADC  EF72  F005         	goto	l780
  4038  000AE0                     u1640:
  4039  000AE0  EF65  F005         	goto	l1971
  4040  000AE4                     l780:
  4041  000AE4  5027               	movf	___fldiv@aexp^0,w,c
  4042  000AE6  B4D8               	btfsc	status,2,c
  4043  000AE8  EF78  F005         	goto	u1651
  4044  000AEC  EF7A  F005         	goto	u1650
  4045  000AF0                     u1651:
  4046  000AF0  EF9E  F005         	goto	l1983
  4047  000AF4                     u1650:
  4048  000AF4  0E01               	movlw	1
  4049  000AF6  260F               	addwf	___fldiv@b^0,f,c
  4050  000AF8  0E00               	movlw	0
  4051  000AFA  2210               	addwfc	(___fldiv@b+1)^0,f,c
  4052  000AFC  2211               	addwfc	(___fldiv@b+2)^0,f,c
  4053  000AFE  2212               	addwfc	(___fldiv@b+3)^0,f,c
  4054  000B00  A012               	btfss	(___fldiv@b+3)^0,0,c
  4055  000B02  EF85  F005         	goto	u1661
  4056  000B06  EF87  F005         	goto	u1660
  4057  000B0A                     u1661:
  4058  000B0A  EF9E  F005         	goto	l1983
  4059  000B0E                     u1660:
  4060  000B0E  C00F  F017         	movff	___fldiv@b,??___fldiv
  4061  000B12  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  4062  000B16  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  4063  000B1A  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  4064  000B1E  341A               	rlcf	(??___fldiv+3)^0,w,c
  4065  000B20  321A               	rrcf	(??___fldiv+3)^0,f,c
  4066  000B22  3219               	rrcf	(??___fldiv+2)^0,f,c
  4067  000B24  3218               	rrcf	(??___fldiv+1)^0,f,c
  4068  000B26  3217               	rrcf	??___fldiv^0,f,c
  4069  000B28  C017  F00F         	movff	??___fldiv,___fldiv@b
  4070  000B2C  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  4071  000B30  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  4072  000B34  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  4073  000B38  4A20               	infsnz	___fldiv@new_exp^0,f,c
  4074  000B3A  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  4075  000B3C                     l1983:
  4076  000B3C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4077  000B3E  EFA9  F005         	goto	u1671
  4078  000B42  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4079  000B44  E108               	bnz	u1670
  4080  000B46  2820               	incf	___fldiv@new_exp^0,w,c
  4081  000B48  A0D8               	btfss	status,0,c
  4082  000B4A  EFA9  F005         	goto	u1671
  4083  000B4E  EFAB  F005         	goto	u1670
  4084  000B52                     u1671:
  4085  000B52  EFB6  F005         	goto	l1987
  4086  000B56                     u1670:
  4087  000B56  0E00               	movlw	0
  4088  000B58  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4089  000B5A  6820               	setf	___fldiv@new_exp^0,c
  4090  000B5C  0E00               	movlw	0
  4091  000B5E  6E0F               	movwf	___fldiv@b^0,c
  4092  000B60  0E00               	movlw	0
  4093  000B62  6E10               	movwf	(___fldiv@b+1)^0,c
  4094  000B64  0E00               	movlw	0
  4095  000B66  6E11               	movwf	(___fldiv@b+2)^0,c
  4096  000B68  0E00               	movlw	0
  4097  000B6A  6E12               	movwf	(___fldiv@b+3)^0,c
  4098  000B6C                     l1987:
  4099  000B6C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4100  000B6E  EFC3  F005         	goto	u1680
  4101  000B72  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4102  000B74  E106               	bnz	u1681
  4103  000B76  0420               	decf	___fldiv@new_exp^0,w,c
  4104  000B78  B0D8               	btfsc	status,0,c
  4105  000B7A  EFC1  F005         	goto	u1681
  4106  000B7E  EFC3  F005         	goto	u1680
  4107  000B82                     u1681:
  4108  000B82  EFD1  F005         	goto	l1991
  4109  000B86                     u1680:
  4110  000B86  0E00               	movlw	0
  4111  000B88  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4112  000B8A  0E00               	movlw	0
  4113  000B8C  6E20               	movwf	___fldiv@new_exp^0,c
  4114  000B8E  0E00               	movlw	0
  4115  000B90  6E0F               	movwf	___fldiv@b^0,c
  4116  000B92  0E00               	movlw	0
  4117  000B94  6E10               	movwf	(___fldiv@b+1)^0,c
  4118  000B96  0E00               	movlw	0
  4119  000B98  6E11               	movwf	(___fldiv@b+2)^0,c
  4120  000B9A  0E00               	movlw	0
  4121  000B9C  6E12               	movwf	(___fldiv@b+3)^0,c
  4122  000B9E  0E00               	movlw	0
  4123  000BA0  6E1F               	movwf	___fldiv@sign^0,c
  4124  000BA2                     l1991:
  4125  000BA2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  4126  000BA6  A026               	btfss	___fldiv@bexp^0,0,c
  4127  000BA8  EFD8  F005         	goto	u1691
  4128  000BAC  EFDA  F005         	goto	u1690
  4129  000BB0                     u1691:
  4130  000BB0  EFDD  F005         	goto	l1997
  4131  000BB4                     u1690:
  4132  000BB4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4133  000BB6  EFDE  F005         	goto	l1999
  4134  000BBA                     l1997:
  4135  000BBA  9E11               	bcf	(___fldiv@b+2)^0,7,c
  4136  000BBC                     l1999:
  4137  000BBC  90D8               	bcf	status,0,c
  4138  000BBE  3026               	rrcf	___fldiv@bexp^0,w,c
  4139  000BC0  6E12               	movwf	(___fldiv@b+3)^0,c
  4140  000BC2  EF94  F004         	goto	l1913
  4141  000BC6                     l767:
  4142  000BC6  0012               	return		;funcret
  4143  000BC8                     __end_of___fldiv:
  4144                           	opt callstack 0
  4145                           
  4146 ;; *************** function _bh1750_iniciar *****************
  4147 ;; Defined at:
  4148 ;;		line 27 in file "./bh1750.h"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4164 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4165 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4166 ;;Total ram usage:        1 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    3
  4169 ;; This function calls:
  4170 ;;		_bh1750_escribir
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text24
  4177  001D20                     __ptext24:
  4178                           	opt callstack 0
  4179  001D20                     _bh1750_iniciar:
  4180                           	opt callstack 27
  4181  001D20                     
  4182                           ;./bh1750.h: 28:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4183  001D20  0E82               	movlw	130
  4184  001D22  6E04               	movwf	??_bh1750_iniciar^0,c
  4185  001D24  0EDE               	movlw	222
  4186  001D26                     u2007:
  4187  001D26  2EE8               	decfsz	wreg,f,c
  4188  001D28  D7FE               	bra	u2007
  4189  001D2A  2E04               	decfsz	??_bh1750_iniciar^0,f,c
  4190  001D2C  D7FC               	bra	u2007
  4191  001D2E                     
  4192                           ;./bh1750.h: 29:     bh1750_escribir(0x00);
  4193  001D2E  0E00               	movlw	0
  4194  001D30  EC63  F00E         	call	_bh1750_escribir
  4195  001D34  0012               	return		;funcret
  4196  001D36                     __end_of_bh1750_iniciar:
  4197                           	opt callstack 0
  4198                           
  4199 ;; *************** function _bh1750_escribir *****************
  4200 ;; Defined at:
  4201 ;;		line 32 in file "./bh1750.h"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  comando         1    wreg     unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  comando         1    2[COMRAM] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0
  4216 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4218 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4219 ;;Total ram usage:        1 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    2
  4222 ;; This function calls:
  4223 ;;		_i2c_detener
  4224 ;;		_i2c_envia_dato
  4225 ;;		_i2c_inicia_com
  4226 ;; This function is called by:
  4227 ;;		_bh1750_iniciar
  4228 ;;		_dameValorLux
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text25
  4233  001CC6                     __ptext25:
  4234                           	opt callstack 0
  4235  001CC6                     _bh1750_escribir:
  4236                           	opt callstack 27
  4237                           
  4238                           ;incstack = 0
  4239                           ;bh1750_escribir@comando stored from wreg
  4240  001CC6  6E03               	movwf	bh1750_escribir@comando^0,c
  4241  001CC8                     
  4242                           ;./bh1750.h: 33:     i2c_inicia_com();
  4243  001CC8  ECA1  F00E         	call	_i2c_inicia_com	;wreg free
  4244                           
  4245                           ;./bh1750.h: 34:     i2c_envia_dato(0x46);
  4246  001CCC  0E46               	movlw	70
  4247  001CCE  EC9B  F00E         	call	_i2c_envia_dato
  4248                           
  4249                           ;./bh1750.h: 35:     i2c_envia_dato(comando);
  4250  001CD2  5003               	movf	bh1750_escribir@comando^0,w,c
  4251  001CD4  EC9B  F00E         	call	_i2c_envia_dato
  4252                           
  4253                           ;./bh1750.h: 36:     i2c_detener();
  4254  001CD8  ECA5  F00E         	call	_i2c_detener	;wreg free
  4255  001CDC  0012               	return		;funcret
  4256  001CDE                     __end_of_bh1750_escribir:
  4257                           	opt callstack 0
  4258                           
  4259 ;; *************** function _i2c_inicia_com *****************
  4260 ;; Defined at:
  4261 ;;		line 37 in file "./I2C.h"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;		None
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4275 ;;      Params:         0       0       0       0       0       0       0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4278 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4279 ;;Total ram usage:        0 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    1
  4282 ;; This function calls:
  4283 ;;		_i2c_espera
  4284 ;; This function is called by:
  4285 ;;		_bh1750_escribir
  4286 ;;		_bh1750_leer
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text26
  4291  001D42                     __ptext26:
  4292                           	opt callstack 0
  4293  001D42                     _i2c_inicia_com:
  4294                           	opt callstack 27
  4295  001D42                     
  4296                           ;./I2C.h: 38:     i2c_espera();
  4297  001D42  EC50  F00E         	call	_i2c_espera	;wreg free
  4298  001D46                     
  4299                           ;./I2C.h: 39:     SSPCON2bits.SEN = 1;
  4300  001D46  80C5               	bsf	197,0,c	;volatile
  4301  001D48  0012               	return		;funcret
  4302  001D4A                     __end_of_i2c_inicia_com:
  4303                           	opt callstack 0
  4304                           
  4305 ;; *************** function _i2c_envia_dato *****************
  4306 ;; Defined at:
  4307 ;;		line 66 in file "./I2C.h"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  dato            1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  dato            1    1[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      unsigned char 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0
  4322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4324 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    1
  4328 ;; This function calls:
  4329 ;;		_i2c_espera
  4330 ;; This function is called by:
  4331 ;;		_bh1750_escribir
  4332 ;;		_bh1750_leer
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text27
  4337  001D36                     __ptext27:
  4338                           	opt callstack 0
  4339  001D36                     _i2c_envia_dato:
  4340                           	opt callstack 27
  4341                           
  4342                           ;incstack = 0
  4343                           ;i2c_envia_dato@dato stored from wreg
  4344  001D36  6E02               	movwf	i2c_envia_dato@dato^0,c
  4345  001D38                     
  4346                           ;./I2C.h: 67:     i2c_espera();
  4347  001D38  EC50  F00E         	call	_i2c_espera	;wreg free
  4348  001D3C                     
  4349                           ;./I2C.h: 68:     SSPBUF = dato;
  4350  001D3C  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  4351  001D40  0012               	return		;funcret
  4352  001D42                     __end_of_i2c_envia_dato:
  4353                           	opt callstack 0
  4354                           
  4355 ;; *************** function _i2c_detener *****************
  4356 ;; Defined at:
  4357 ;;		line 55 in file "./I2C.h"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4374 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    1
  4378 ;; This function calls:
  4379 ;;		_i2c_espera
  4380 ;; This function is called by:
  4381 ;;		_bh1750_escribir
  4382 ;;		_bh1750_leer
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text28
  4387  001D4A                     __ptext28:
  4388                           	opt callstack 0
  4389  001D4A                     _i2c_detener:
  4390                           	opt callstack 27
  4391  001D4A                     
  4392                           ;./I2C.h: 56:     i2c_espera();
  4393  001D4A  EC50  F00E         	call	_i2c_espera	;wreg free
  4394  001D4E                     
  4395                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  4396  001D4E  84C5               	bsf	197,2,c	;volatile
  4397  001D50  0012               	return		;funcret
  4398  001D52                     __end_of_i2c_detener:
  4399                           	opt callstack 0
  4400                           
  4401 ;; *************** function _i2c_espera *****************
  4402 ;; Defined at:
  4403 ;;		line 29 in file "./I2C.h"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4419 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4420 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        1 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_i2c_inicia_com
  4427 ;;		_i2c_detener
  4428 ;;		_i2c_envia_dato
  4429 ;;		_i2c_recibe_datoACK
  4430 ;;		_i2c_reinicia_com
  4431 ;;		_i2c_recibe_dato
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text29
  4436  001CA0                     __ptext29:
  4437                           	opt callstack 0
  4438  001CA0                     _i2c_espera:
  4439                           	opt callstack 27
  4440  001CA0                     l1731:
  4441  001CA0  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  4442  001CA4  0E1F               	movlw	31
  4443  001CA6  1601               	andwf	??_i2c_espera^0,f,c
  4444  001CA8  A4D8               	btfss	status,2,c
  4445  001CAA  EF59  F00E         	goto	u1241
  4446  001CAE  EF5B  F00E         	goto	u1240
  4447  001CB2                     u1241:
  4448  001CB2  EF50  F00E         	goto	l1731
  4449  001CB6                     u1240:
  4450  001CB6  B4C7               	btfsc	199,2,c	;volatile
  4451  001CB8  EF60  F00E         	goto	u1251
  4452  001CBC  EF62  F00E         	goto	u1250
  4453  001CC0                     u1251:
  4454  001CC0  EF50  F00E         	goto	l1731
  4455  001CC4                     u1250:
  4456  001CC4  0012               	return		;funcret
  4457  001CC6                     __end_of_i2c_espera:
  4458                           	opt callstack 0
  4459                           
  4460                           	psect	rparam
  4461  0000                     tosu	equ	0xFFF
  4462                           tosh	equ	0xFFE
  4463                           tosl	equ	0xFFD
  4464                           stkptr	equ	0xFFC
  4465                           pclatu	equ	0xFFB
  4466                           pclath	equ	0xFFA
  4467                           pcl	equ	0xFF9
  4468                           tblptru	equ	0xFF8
  4469                           tblptrh	equ	0xFF7
  4470                           tblptrl	equ	0xFF6
  4471                           tablat	equ	0xFF5
  4472                           prodh	equ	0xFF4
  4473                           prodl	equ	0xFF3
  4474                           indf0	equ	0xFEF
  4475                           postinc0	equ	0xFEE
  4476                           postdec0	equ	0xFED
  4477                           preinc0	equ	0xFEC
  4478                           plusw0	equ	0xFEB
  4479                           fsr0h	equ	0xFEA
  4480                           fsr0l	equ	0xFE9
  4481                           wreg	equ	0xFE8
  4482                           indf1	equ	0xFE7
  4483                           postinc1	equ	0xFE6
  4484                           postdec1	equ	0xFE5
  4485                           preinc1	equ	0xFE4
  4486                           plusw1	equ	0xFE3
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           bsr	equ	0xFE0
  4490                           indf2	equ	0xFDF
  4491                           postinc2	equ	0xFDE
  4492                           postdec2	equ	0xFDD
  4493                           preinc2	equ	0xFDC
  4494                           plusw2	equ	0xFDB
  4495                           fsr2h	equ	0xFDA
  4496                           fsr2l	equ	0xFD9
  4497                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     46      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S815_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    uart_printf@cadena	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _uart_printf->_uart_escribir
    _uart_iniciar->___aldiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _dameValorLux->_bh1750_leer
    _bh1750_leer->___fltol
    _i2c_recibe_datoACK->_i2c_espera
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _bh1750_iniciar->_bh1750_escribir
    _bh1750_escribir->_i2c_envia_dato
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0    9895
                                             10 BANK0     36    36      0
                     _bh1750_iniciar
                       _dameValorLux
                        _i2c_iniciar
                            _sprintf
                       _uart_iniciar
                        _uart_printf
 ---------------------------------------------------------------------------------
 (1) _uart_printf                                          2     0      2     219
                                              1 COMRAM     2     0      2
                      _uart_escribir
 ---------------------------------------------------------------------------------
 (2) _uart_escribir                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_iniciar                                        12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    6456
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dameValorLux                                        10     6      4    2354
                                             61 COMRAM    10     6      4
                    _bh1750_escribir
                        _bh1750_leer
 ---------------------------------------------------------------------------------
 (2) _bh1750_leer                                         12     8      4    2264
                                             49 COMRAM    12     8      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                 _i2c_recibe_datoACK
 ---------------------------------------------------------------------------------
 (3) _i2c_recibe_datoACK                                   2     2      0      45
                                              1 COMRAM     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _bh1750_iniciar                                       1     1      0      44
                                              3 COMRAM     1     1      0
                    _bh1750_escribir
 ---------------------------------------------------------------------------------
 (2) _bh1750_escribir                                      1     1      0      44
                                              2 COMRAM     1     1      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bh1750_iniciar
     _bh1750_escribir
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _dameValorLux
     _bh1750_escribir
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
     _bh1750_leer
       ___fldiv
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_datoACK
         _i2c_espera
   _i2c_iniciar
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _uart_iniciar
     ___aldiv
   _uart_printf
     _uart_escribir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B5      20        0.0%
DATA                 0      0      B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Oct 17 11:19:23 2020

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                 ___fldiv@sign 001F  
              ??_bh1750_leer 0036                           l45 1A5A                           l54 1CFA  
                         l63 1B1A                           l72 1CC4                           l81 1D50  
                         l57 1D08                           l90 1C9E                           l66 1D1E  
                         l75 1D48                           l84 1D40                           l93 1D34  
                         l96 1CDC                           l99 195A                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000              ??_uart_escribir 0001                          l102 1BB6  
                        l140 1862                          l142 189E                          l150 0C70  
                        l312 14FC                          l137 1820                          l148 0C68  
   __size_of_bh1750_escribir 0018                          l181 1AB4                          l182 1ABC  
                        l175 105C                          l168 0EA8                          l264 1608  
                        l482 170E                          l299 1398                          l840 10B4  
                        l843 1210                          l780 0AE4                          l772 09EA  
                        l860 1C32                          l781 0AD2                          l854 11A8  
                        l767 0BC6                          l847 114C                          l863 1C3A  
                        l769 0A26                          l778 0A6C                          l890 1B6C  
                        l875 17D8                          l883 1BFA                          l893 1D52  
                        l899 1C70                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
               __CFG_BOR$OFF 000000                          _abs 1BFC                          _pad 17DA  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 ___fltol@exp1 0031  
               __CFG_WDT$OFF 000000                         ?_abs 0013                         l2021 1674  
                       l2013 1634                         l2101 18A0                         l2031 16A4  
                       l2023 1682                         l2015 165E                         l2007 160A  
                       l2111 18C2                         l2103 18A8                         l2041 16CE  
                       l2033 16AE                         l2017 1660                         l2009 1620  
                       l2113 18C6                         l2105 18AC                         l2121 1A5C  
                       l2201 1AE6                         l2211 1D2E                         l2043 16DE  
                       l2019 1670                         l2051 1060                         l2115 18EC  
                       l2107 18B2                         l2123 1A64                         l2131 1502  
                       l2203 1AEA                         l2045 16EE                         l2029 169A  
                       l2053 1070                         l2117 194A                         l2109 18BA  
                       l2221 1B90                         l2213 1B70                         l2205 1D0A  
                       l2125 1A72                         l2141 1542                         l2133 1510  
                       l2047 16FE                         l2039 16C2                         l2071 1136  
                       l2063 10EE                         l2055 107E                         l2223 1BA0  
                       l2215 1B70                         l2207 1D0E                         l2127 1A98  
                       l2231 1B2E                         l2151 1580                         l2143 1546  
                       l2135 1520                         l2209 1D20                         l2081 11B6  
                       l2073 1142                         l2065 10F6                         l2057 10C4  
                       l2225 1BA6                         l2217 1B76                         l1601 1792  
                       l2233 1B36                         l2161 15C8                         l2153 158E  
                       l2145 1556                         l2137 1524                         l2129 14FE  
                       l2091 11FE                         l2083 11B8                         l2075 117E  
                       l2067 1102                         l2059 10DA                         l2219 1B7C  
                       l1611 1BDA                         l2235 1B3E                         l2163 15D2  
                       l2155 1598                         l2147 156C                         l2139 1532  
                       l2093 1200                         l2085 11BC                         l2077 118A  
                       l2069 1134                         l1701 13D0                         l1605 1BB8  
                       l1613 1C3C                         l2237 1B5A                         l2229 1B1C  
                       l2157 15B6                         l2149 1574                         l2165 15D8  
                       l2181 1A24                         l2173 19EC                         l2261 1970  
                       l2087 11E0                         l2079 1198                         l1711 1438  
                       l1703 13DE                         l1607 1BC4                         l1615 1C48  
                       l1631 1818                         l1623 17DA                         l2167 15E8  
                       l2159 15C6                         l2191 1A54                         l2183 1A4C  
                       l2175 19EC                         l2271 19BE                         l2263 1974  
                       l1801 1D4A                         l2089 11F0                         l1713 1446  
                       l1721 14AC                         l1705 13FE                         l1609 1BD6  
                       l1617 1C4C                         l1641 1886                         l1633 182C  
                       l1625 17EA                         l2169 15F8                         l2193 1A56  
                       l2185 1A4E                         l2177 19EE                         l2097 1CF6  
                       l2273 19CA                         l2265 1978                         l2257 195C  
                       l1731 1CA0                         l1803 1D4E                         l2099 1CC8  
                       l1651 1216                         l1723 14BC                         l1715 1474  
                       l1707 141C                         l1619 1C64                         l1635 1840  
                       l1627 17FE                         l2195 1A58                         l2187 1A50  
                       l2179 19F0                         l2267 1984                         l2259 195C  
                       l1733 1CB6                         l1805 1D38                         l1901 08E0  
                       l1821 1C9A                         l1813 1C74                         l1661 1276  
                       l1653 1224                         l1725 14DC                         l1717 1494  
                       l1709 1424                         l1645 1BFC                         l1637 1844  
                       l1629 180C                         l1741 0C30                         l2189 1A52  
                       l2197 1ABE                         l2269 199A                         l1807 1D3C  
                       l1911 0920                         l1903 08E2                         l1823 1C9C  
                       l1815 1C78                         l1671 12C0                         l1663 127A  
                       l1655 1244                         l1719 14A6                         l1647 1C16  
                       l1591 1710                         l1639 1872                         l1751 0C8A  
                       l1743 0C40                         l1735 0BC8                         l1831 0EDC  
                       l2199 1AC2                         l1729 1CA0                         l1809 1D40  
                       l1921 0950                         l1913 0928                         l1905 08EA  
                       l1817 1C7E                         l1681 1330                         l1673 12CE  
                       l1665 1286                         l1657 1248                         l1649 1212  
                       l1593 1722                         l1761 0CB4                         l1753 0C98  
                       l1745 0C42                         l1737 0BE8                         l1841 0F82  
                       l1833 0EEE                         l1931 098E                         l1923 0950  
                       l1915 092C                         l1907 08FA                         l1819 1C86  
                       l1683 1342                         l1675 12E0                         l1667 12A4  
                       l1659 1256                         l1595 1734                         l1771 0DC0  
                       l1763 0D36                         l1755 0C9E                         l1747 0C5C  
                       l1739 0C10                         l1851 1000                         l1835 0EF2  
                       l1827 0EAA                         l1941 09DA                         l1933 099E  
                       l1909 0910                         l1677 130E                         l1669 12AC  
                       l1685 1348                         l1693 139A                         l1597 173E  
                       l1781 0E34                         l1773 0DDE                         l1765 0D3C  
                       l1757 0CA6                         l1749 0C78                         l1845 0FBA  
                       l1837 0F16                         l1829 0ECE                         l1861 1026  
                       l1951 0A24                         l1943 09E8                         l1935 09AE  
                       l1927 0964                         l1919 0940                         l1871 083A  
                       l1687 1358                         l1679 132E                         l1695 139E  
                       l1599 175C                         l1791 0E70                         l1783 0E44  
                       l1775 0DF8                         l1767 0D42                         l1759 0CAE  
                       l1863 104A                         l1847 0FDE                         l1855 100C  
                       l1839 0F3A                         l1961 0A6A                         l1953 0A36  
                       l1945 09F4                         l1937 09B6                         l1929 097E  
                       l1881 087A                         l1873 0848                         l1689 1378  
                       l1697 13AC                         l1785 0E4A                         l1793 0E80  
                       l1777 0E12                         l1769 0DA6                         l1857 101A  
                       l1849 0FEC                         l1971 0ACA                         l1955 0A4C  
                       l1963 0A7C                         l1947 0A12                         l1939 09C6  
                       l1891 08A0                         l1883 087C                         l1875 084A  
                       l1699 13CC                         l1787 0E5C                         l1779 0E22  
                       l1797 1D42                         l1981 0B38                         l1965 0A8A  
                       l1957 0A52                         l1949 0A14                         l1893 08AE  
                       l1877 085A                         l1885 0884                         l1869 082E  
                       l1789 0E68                         ?_pad 0011                         l1799 1D46  
                       l1991 0BA2                         l1975 0AF4                         l1983 0B3C  
                       l1967 0A8E                         l1959 0A5C                         l1895 08B0  
                       l1887 0894                         l1879 086A                         l1993 0BA6  
                       l1985 0B56                         l1977 0B00                         l1969 0A9C  
                       l1897 08C0                         l1889 089A                         l1995 0BB4  
                       l1987 0B6C                         l1979 0B0E                         l1899 08D0  
                       l1997 0BBA                         l1989 0B86                         l1999 0BBC  
                       STR_1 0818                         STR_2 0801                         u1000 1722  
                       u1001 171E                         u1010 1734                         u1011 1730  
                       u1100 1C16                         u1020 175C                         u1101 1C12  
                       u1021 1758                         u1110 1224                         u1030 1792  
                       u1111 1220                         u1031 178E                         u1120 1256  
                       u1200 141C                         u1040 1BFA                         u1121 1252  
                       u1201 1418                         u1041 1BF6                         u1210 1446  
                       u1050 1C64                         u1131 1280                         u1211 1442  
                       u1051 1C60                         u1140 12A4                         u1220 1474  
                       u1060 17EA                         u1300 0C5C                         u1141 12A0  
                       u1221 1470                         u1061 17E6                         u1301 0C58  
                       u1150 12CE                         u1230 14BC                         u1070 180C  
                       u1310 0C8A                         u2007 1D26                         u1151 12CA  
                       u1231 14B8                         u1071 1808                         u1311 0C86  
                       u1240 1CB6                         u1160 130E                         u1080 1862  
                       u1400 0E5C                         u1320 0C98                         u1241 1CB2  
                       u1161 130A                         u1081 185E                         u1401 0E58  
                       u1321 0C94                         u1250 1CC4                         u1410 1C98  
                       u1170 1358                         u1090 1872                         u1330 0DC0  
                       u1251 1CC0                         u1411 1C92                         u1171 1354  
                       u1091 186E                         u1331 0DBC                         u1500 08AE  
                       u1180 13AC                         u1340 0DDE                         u1260 0BF8  
                       u1501 08AA                         u1181 13A8                         u1341 0DDA  
                       u1261 0BF2                         u1510 08C0                         u1190 13DE  
                       u1350 0DF8                         u1270 0BFA                         u1430 0ECE  
                       u1511 08BC                         u1191 13DA                         u1351 0DF4  
                       u1431 0ECA                         u1600 0A6A                         u1520 08D0  
                       u1360 0E12                         u1280 0C10                         u1440 0F16  
                       u1601 0A66                         u1521 08CC                         u1425 1C9A  
                       u1361 0E0E                         u1281 0C0C                         u1441 0F12  
                       u1610 0A8A                         u1530 0910                         u1370 0E22  
                       u1290 0C40                         u1450 0F3A                         u1611 0A86  
                       u1531 090C                         u1371 0E1E                         u1291 0C3C  
                       u1451 0F36                         u1620 0A9C                         u1540 0950  
                       u1700 1620                         u1380 0E34                         u1460 0FDE  
                       u1621 0A98                         u1541 094C                         u1701 161C  
                       u1381 0E30                         u1461 0FDA                         u1630 0ACA  
                       u1550 09C6                         u1470 0848                         u1710 1654  
                       u1390 0E44                         u1631 0AC6                         u1551 09C2  
                       u1471 0844                         u1391 0E40                         u1640 0AE0  
                       u1560 09E8                         u1480 085A                         u1720 1682  
                       u1800 1130                         u1641 0ADC                         u1561 09E4  
                       u1481 0856                         u1721 167E                         u1801 112C  
                       u1650 0AF4                         u1570 0A12                         u1490 086A  
                       u1730 1696                         u1810 117A                         u1651 0AF0  
                       u1571 0A0E                         u1491 0866                         u1731 1692  
                       u1715 164A                         u1811 1176                         u1660 0B0E  
                       u1580 0A36                         u1740 16BE                         u1820 1198  
                       u1900 1532                         u1661 0B0A                         u1581 0A32  
                       u1741 16BA                         u1821 1194                         u1901 152E  
                       u1670 0B56                         u1590 0A4C                         u1750 16DE  
                       u1830 11A8                         u1910 156C                         u1671 0B52  
                       u1591 0A48                         u1751 16DA                         u1831 11A4  
                       u1911 1568                         u1680 0B86                         u1760 16EE  
                       u1840 11B6                         u1920 158E                         u1681 0B82  
                       u1761 16EA                         u1841 11B2                         u1921 158A  
                       u1690 0BB4                         u1850 11F0                         u1770 1070  
                       u1930 15B6                         u1691 0BB0                         u1851 11EC  
                       u1771 106C                         u1931 15B2                         u1860 11FE  
                       u1780 107E                         u1940 15E8                         u1861 11FA  
                       u1781 107A                         u1941 15E4                         u1790 10DA  
                       u1870 1D08                         u1950 1AE2                         u1791 10D6  
                       u1871 1D04                         u1880 1AB4                         u1960 1B0A  
                       u1881 1AB0                         u1890 1510                         u1970 1B1A  
                       u1891 150C                         u1971 1B16                         u1957 1AD8  
                       u1967 1B00                         u1987 19D6                         _RCIF 007CF5  
                       u1997 1B96                ??_i2c_detener 0002                         abs@a 0013  
                       _dbuf 0096                         _main 195C                         _dtoa 0BC8  
                       _prec 0092                         _nout 008E                         pad@i 0018  
                       pad@p 0015                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf1 000FE7                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 001A                         fsr2l 000FD9                ??_i2c_iniciar 0001  
                       start 0000                __CFG_IESO$OFF 000000              ___fldiv@new_exp 0020  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000                        ??_abs 0015  
                      ??_pad 0017               _i2c_envia_dato 1D36                __CFG_PLLDIV$1 000000  
             _i2c_inicia_com 1D42               __CFG_CCP2MX$ON 000000                ___fltol@sign1 0030  
            __end_of___aldiv 160A              __end_of___aodiv 139A                        ?_main 0001  
                      ?_dtoa 001C              __end_of___aomod 14FE                        _ACKEN 007E2C  
                      _ACKDT 007E2D              __end_of___fldiv 0BC8             ??_bh1750_iniciar 0004  
            __end_of___fltol 1710                        _RCREG 000FAE                 vfpfcnvrt@fmt 0042  
                      _SPBRG 000FAF                __CFG_USBDIV$1 000000                        _TXREG 000FAD  
              __CFG_PWRT$OFF 000000          __end_of_bh1750_leer 195C                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      _flags 0094                        _fputc 1710                        _fputs 1BB8  
                      pad@fp 0011                        _width 0090                        _putch 1D52  
                      dtoa@d 001E                        dtoa@i 003E                        dtoa@n 0036  
                      dtoa@p 0030                        dtoa@s 0034                        dtoa@w 0032  
                      tablat 000FF5                        status 000FD8              __end_of_sprintf 1B6E  
             __CFG_ICPRT$OFF 000000                   _i2c_espera 1CA0              __initialization 1CDE  
i2c_recibe_datoACK@datoleido 0003          __end_of_i2c_detener 1D52       __end_of_i2c_envia_dato 1D42  
               __end_of_main 19EC                 __end_of_dtoa 0EAA       __end_of_i2c_inicia_com 1D4A  
        __end_of_i2c_iniciar 1D20                       ??_main 006A                       ??_dtoa 0026  
              __activetblptr 000002           i2c_envia_dato@dato 0002        __size_of_dameValorLux 004A  
__size_of_i2c_recibe_datoACK 002E            ??_bh1750_escribir 0003                       ?_fputc 0001  
                     ?_fputs 000A                       ?_putch 0001                       _SSPADD 000FC8  
                     _TRISC6 007CA6                       _TRISC7 007CA7                       _SSPBUF 000FC9  
           __end_of___xxtofl 1212               __CFG_XINST$OFF 000000                 vfprintf@cfmt 0056  
            ?_i2c_envia_dato 0001                    ??___aldiv 0009                    ??___aodiv 0011  
                  ??___aomod 0011                    ??___fldiv 0017                    ??___fltol 002C  
               _dameValorLux 1B6E              ?_i2c_inicia_com 0001                  _bh1750_leer 18A0  
                     clear_0 1CE4                main@luzMedida 008A                       pad@buf 0013  
                     dtoa@fp 001C                       _strlen 1C3C                       fputc@c 0001  
                     fputs@c 000E                       fputs@i 000F                       fputs@s 000A  
               ?_uart_printf 0002                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                       putch@c 0001  
           __end_of_vfprintf 1ABE                    ??_sprintf 0060                 ___xxtofl@arg 000B  
               ___xxtofl@exp 000A                 ___xxtofl@val 0001                   __accesstop 0060  
    __end_of__initialization 1CEA              __CFG_PBADEN$OFF 000000              __CFG_FOSC$XT_XT 000000  
                _i2c_detener 1D4A                ___rparam_used 000001                   ___fltol@f1 0028  
                _i2c_iniciar 1D0A                  ?_i2c_espera 0001               __pcstackCOMRAM 0001  
              __end_of_fputc 17DA                __end_of_fputs 1BFC                __end_of_putch 1D54  
       dameValorLux@valorLux 0044            _uart_iniciar$1077 0017                      ??_fputc 0005  
                    ??_fputs 000E                      ??_putch 0001                   __pbssBANK0 008E  
                    _ACKSTAT 007E2E                      ?_strlen 0001        __end_of_uart_escribir 1D0A  
                  ?___xxtofl 0001           __size_of_vfpfcnvrt 01B4          __size_of_i2c_espera 0026  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                      _SSPSTAT 000FC7  
            __CFG_VREGEN$OFF 000000                      __Hparam 0000                      __Lparam 0000  
                    ___aldiv 14FE                      ___aodiv 1212                      ___aomod 139A  
                    ___fldiv 082E                      ___fltol 160A                    ?_vfprintf 0050  
               __psmallconst 0800              __CFG_STVREN$OFF 000000                      __pcinit 1CDE  
            _bh1750_escribir 1CC6                      __ramtop 0800                      __ptext0 195C  
                    __ptext1 1ABE                      __ptext2 1CF4                      __ptext3 19EC  
                    __ptext4 14FE                      __ptext5 1B1C                      __ptext6 1A5C  
                    __ptext7 0EAA                      __ptext8 0BC8                      __ptext9 17DA  
            __size_of_strlen 0036                 __size_of_abs 0040          i2c_recibe_datoACK@a 0002  
               __size_of_pad 00C6                   ??___xxtofl 0005             ___aldiv@dividend 0001  
       __size_of_uart_printf 005E                      _sprintf 1B1C         end_of_initialization 1CEA  
              ?_uart_iniciar 000F                      fputc@fp 0003                __Lmediumconst 0000  
                    fputs@fp 000C             ??_i2c_envia_dato 0002             uart_iniciar@BAUD 000F  
           ??_i2c_inicia_com 0002            __end_of_vfpfcnvrt 105E                    _RCSTAbits 000FAB  
           ___aldiv@quotient 000B                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 0056  
               ?_bh1750_leer 0032                      strlen@a 0003                      strlen@s 0001  
 __end_of_i2c_recibe_datoACK 1CA0                ___xxtofl@sign 0009                    _TRISBbits 000F93  
                ___fldiv@grs 0022                  ___fldiv@rem 001B               ??_uart_iniciar 0013  
    __size_of_bh1750_iniciar 0016                 ?_i2c_detener 0001                   main@buffer 006C  
                  _TXSTAbits 000FAC                 ?_i2c_iniciar 0001                 ??_i2c_espera 0001  
    __end_of_bh1750_escribir 1CDE                  vfpfcnvrt@ap 0044                  vfpfcnvrt@fp 0040  
                vfpfcnvrt@ll 0048               __end_of_strlen 1C72          start_initialization 1CDE  
                __end_of_abs 1C3C                  __end_of_pad 18A0           __end_of_i2c_espera 1CC6  
                vfprintf@fmt 0052             __CFG_LPT1OSC$OFF 000000                     ??_strlen 0003  
                  ___fldiv@a 0013                    ___fldiv@b 000F                __pcstackBANK0 0060  
           ___aodiv@dividend 0001            __size_of___xxtofl 01B4            uart_printf@cadena 0002  
           ?_bh1750_escribir 0001                     ?___aldiv 0001                     ?___aodiv 0001  
                   ?___aomod 0001                     ?___fldiv 000F             ___aodiv@quotient 0013  
                   ?___fltol 0028         __end_of_uart_iniciar 1A5C            __size_of_vfprintf 0062  
       __size_of_bh1750_leer 00BC                  __smallconst 0800                     ?_sprintf 0058  
             __size_of_fputc 00CA               __size_of_fputs 0044               _bh1750_iniciar 1D20  
             __size_of_putch 0002              ___aldiv@divisor 0005              ___aldiv@counter 0009  
       __size_of_i2c_detener 0008       __size_of_uart_escribir 0016         __size_of_i2c_iniciar 0016  
           __CFG_WDTPS$32768 000000                ?_dameValorLux 003E                    _vfpfcnvrt 0EAA  
              ??_uart_printf 0004       __end_of_bh1750_iniciar 1D36           _i2c_recibe_datoACK 1C72  
                   __Hrparam 0000                   vfprintf@ap 0054                     __Lrparam 0000  
                 vfprintf@fp 0050          ?_i2c_recibe_datoACK 0001               ??_dameValorLux 0042  
           __size_of___aldiv 010C             __size_of___aodiv 0188             __size_of___aomod 0164  
           __size_of___fldiv 039A             __size_of___fltol 0106             bh1750_leer@valor 003A  
                 ?_vfpfcnvrt 0040              ___aodiv@divisor 0009              ___aodiv@counter 0011  
                 sprintf@fmt 005A                     ___xxtofl 105E             dameValorLux@modo 0043  
              _uart_escribir 1CF4                     _dtoa$354 002E         ??_i2c_recibe_datoACK 0002  
            ?_bh1750_iniciar 0001                     __ptext10 1C3C                     __ptext11 1BB8  
                   __ptext20 1C72                     __ptext12 1710                     __ptext21 105E  
                   __ptext13 1D52                     __ptext22 160A                     __ptext14 1BFC  
                   __ptext23 082E                     __ptext15 139A                     __ptext24 1D20  
                   __ptext16 1212                     __ptext25 1CC6                     __ptext17 1D0A  
                   __ptext26 1D42                     __ptext18 1B6E                     __ptext27 1D36  
                   __ptext19 18A0                     __ptext28 1D4A                     __ptext29 1CA0  
           __size_of_sprintf 0052          __end_of_uart_printf 1B1C                __size_of_main 0090  
              __size_of_dtoa 02E2       bh1750_escribir@comando 0003        __size_of_uart_iniciar 0070  
          uart_escribir@dato 0001                     _vfprintf 1A5C      __size_of_i2c_envia_dato 000C  
    __size_of_i2c_inicia_com 0008             ___aomod@dividend 0001        __CFG_CPUDIV$OSC1_PLL2 000000  
             ?_uart_escribir 0001                    sprintf@ap 0062                 _uart_iniciar 19EC  
            ___aomod@divisor 0009                  ??_vfpfcnvrt 0046              ___aomod@counter 0011  
                   sprintf@f 0064                     sprintf@s 0058                  _uart_printf 1ABE  
               ___aldiv@sign 000A                  _SSPCON2bits 000FC5         __end_of_dameValorLux 1BB8  
              bh1750_leer@hb 0039                bh1750_leer@lb 0038                 ___aodiv@sign 0012  
               ___aomod@sign 0012  
