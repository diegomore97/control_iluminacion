

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Oct 11 17:41:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _TXREG	set	4013
    94  0000                     _RCREG	set	4014
    95  0000                     _RCSTAbits	set	4011
    96  0000                     _TXSTAbits	set	4012
    97  0000                     _SPBRG	set	4015
    98  0000                     _SSPBUF	set	4041
    99  0000                     _SSPCON2bits	set	4037
   100  0000                     _SSPADD	set	4040
   101  0000                     _SSPCON2	set	4037
   102  0000                     _SSPCON1	set	4038
   103  0000                     _SSPSTAT	set	4039
   104  0000                     _TRISBbits	set	3987
   105  0000                     _RCIF	set	31989
   106  0000                     _TRISC7	set	31911
   107  0000                     _TRISC6	set	31910
   108  0000                     _ACKEN	set	32300
   109  0000                     _ACKDT	set	32301
   110  0000                     _ACKSTAT	set	32302
   111                           
   112                           	psect	smallconst
   113  000800                     __psmallconst:
   114                           	opt callstack 0
   115  000800  00                 	db	0
   116  000801                     STR_1:
   117  000801  0D                 	db	13
   118  000802  4C                 	db	76	;'L'
   119  000803  75                 	db	117	;'u'
   120  000804  7A                 	db	122	;'z'
   121  000805  20                 	db	32
   122  000806  6D                 	db	109	;'m'
   123  000807  65                 	db	101	;'e'
   124  000808  64                 	db	100	;'d'
   125  000809  69                 	db	105	;'i'
   126  00080A  64                 	db	100	;'d'
   127  00080B  61                 	db	97	;'a'
   128  00080C  3A                 	db	58	;':'
   129  00080D  20                 	db	32
   130  00080E  25                 	db	37
   131  00080F  2E                 	db	46
   132  000810  32                 	db	50	;'2'
   133  000811  66                 	db	102	;'f'
   134  000812  20                 	db	32
   135  000813  6C                 	db	108	;'l'
   136  000814  75                 	db	117	;'u'
   137  000815  78                 	db	120	;'x'
   138  000816  73                 	db	115	;'s'
   139  000817  0D                 	db	13
   140  000818  0A                 	db	10
   141  000819  00                 	db	0
   142  00081A                     STR_2:
   143  00081A  49                 	db	73	;'I'
   144  00081B  4E                 	db	78	;'N'
   145  00081C  46                 	db	70	;'F'
   146  00081D  00                 	db	0
   147  00081E                     STR_6:
   148  00081E  4E                 	db	78	;'N'
   149  00081F  41                 	db	65	;'A'
   150  000820  4E                 	db	78	;'N'
   151  000821  00                 	db	0
   152  000822                     STR_3:
   153  000822  69                 	db	105	;'i'
   154  000823  6E                 	db	110	;'n'
   155  000824  66                 	db	102	;'f'
   156  000825  00                 	db	0
   157  000826                     STR_7:
   158  000826  6E                 	db	110	;'n'
   159  000827  61                 	db	97	;'a'
   160  000828  6E                 	db	110	;'n'
   161  000829  00                 	db	0
   162  00082A                     STR_10:
   163  00082A  6C                 	db	108	;'l'
   164  00082B  66                 	db	102	;'f'
   165  00082C  00                 	db	0
   166  0000                     
   167                           ; #config settings
   168  00082D  00                 	db	0	; dummy byte at the end
   169  0000                     
   170                           	psect	cinit
   171  003864                     __pcinit:
   172                           	opt callstack 0
   173  003864                     start_initialization:
   174                           	opt callstack 0
   175  003864                     __initialization:
   176                           	opt callstack 0
   177                           
   178                           ; Clear objects allocated to BANK1 (80 bytes)
   179  003864  EE01  F000         	lfsr	0,__pbssBANK1
   180  003868  0E50               	movlw	80
   181  00386A                     clear_0:
   182  00386A  6AEE               	clrf	postinc0,c
   183  00386C  06E8               	decf	wreg,f,c
   184  00386E  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to BANK0 (16 bytes)
   187  003870  EE00  F0D3         	lfsr	0,__pbssBANK0
   188  003874  0E10               	movlw	16
   189  003876                     clear_1:
   190  003876  6AEE               	clrf	postinc0,c
   191  003878  06E8               	decf	wreg,f,c
   192  00387A  E1FD               	bnz	clear_1
   193  00387C                     end_of_initialization:
   194                           	opt callstack 0
   195  00387C                     __end_of__initialization:
   196                           	opt callstack 0
   197  00387C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198  00387E  6EF8               	movwf	tblptru,c
   199  003880  0100               	movlb	0
   200  003882  EFAC  F019         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssBANK0
   203  0000D3                     __pbssBANK0:
   204                           	opt callstack 0
   205  0000D3                     floorf@F524:
   206                           	opt callstack 0
   207  0000D3                     	ds	4
   208  0000D7                     ___fpclassifyf@F463:
   209                           	opt callstack 0
   210  0000D7                     	ds	4
   211  0000DB                     _nout:
   212                           	opt callstack 0
   213  0000DB                     	ds	2
   214  0000DD                     _width:
   215                           	opt callstack 0
   216  0000DD                     	ds	2
   217  0000DF                     _prec:
   218                           	opt callstack 0
   219  0000DF                     	ds	2
   220  0000E1                     _flags:
   221                           	opt callstack 0
   222  0000E1                     	ds	2
   223                           
   224                           	psect	bssBANK1
   225  000100                     __pbssBANK1:
   226                           	opt callstack 0
   227  000100                     _dbuf:
   228                           	opt callstack 0
   229  000100                     	ds	80
   230                           
   231                           	psect	cstackBANK0
   232  000060                     __pcstackBANK0:
   233                           	opt callstack 0
   234  000060                     efgtoa@ou:
   235                           	opt callstack 0
   236                           
   237                           ; 4 bytes @ 0x0
   238  000060                     	ds	4
   239  000064                     _efgtoa$404:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0x4
   243  000064                     	ds	2
   244  000066                     _efgtoa$405:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0x6
   248  000066                     	ds	2
   249  000068                     _efgtoa$410:
   250                           	opt callstack 0
   251                           
   252                           ; 2 bytes @ 0x8
   253  000068                     	ds	2
   254  00006A                     _efgtoa$414:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0xA
   258  00006A                     	ds	2
   259  00006C                     _efgtoa$415:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0xC
   263  00006C                     	ds	2
   264  00006E                     _efgtoa$416:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0xE
   268  00006E                     	ds	2
   269  000070                     efgtoa@t:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x10
   273  000070                     	ds	2
   274  000072                     efgtoa@pp:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x12
   278  000072                     	ds	2
   279  000074                     efgtoa@m:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0x14
   283  000074                     	ds	2
   284  000076                     efgtoa@ne:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x16
   288  000076                     	ds	2
   289  000078                     efgtoa@d:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x18
   293  000078                     	ds	2
   294  00007A                     efgtoa@sign:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x1A
   298  00007A                     	ds	2
   299  00007C                     efgtoa@p:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x1C
   303  00007C                     	ds	2
   304  00007E                     efgtoa@nmode:
   305                           	opt callstack 0
   306                           
   307                           ; 1 bytes @ 0x1E
   308  00007E                     	ds	1
   309  00007F                     efgtoa@w:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x1F
   313  00007F                     	ds	2
   314  000081                     efgtoa@mode:
   315                           	opt callstack 0
   316                           
   317                           ; 1 bytes @ 0x21
   318  000081                     	ds	1
   319  000082                     efgtoa@h:
   320                           	opt callstack 0
   321                           
   322                           ; 4 bytes @ 0x22
   323  000082                     	ds	4
   324  000086                     efgtoa@l:
   325                           	opt callstack 0
   326                           
   327                           ; 4 bytes @ 0x26
   328  000086                     	ds	4
   329  00008A                     efgtoa@i:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x2A
   333  00008A                     	ds	2
   334  00008C                     efgtoa@g:
   335                           	opt callstack 0
   336                           
   337                           ; 4 bytes @ 0x2C
   338  00008C                     	ds	4
   339  000090                     efgtoa@e:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x30
   343  000090                     	ds	2
   344  000092                     efgtoa@n:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x32
   348  000092                     	ds	2
   349  000094                     efgtoa@u:
   350                           	opt callstack 0
   351                           
   352                           ; 4 bytes @ 0x34
   353  000094                     	ds	4
   354  000098                     ?_vfprintf:
   355                           	opt callstack 0
   356  000098                     vfprintf@fp:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x38
   360  000098                     	ds	2
   361  00009A                     vfprintf@fmt:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x3A
   365  00009A                     	ds	2
   366  00009C                     vfprintf@ap:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0x3C
   370  00009C                     	ds	2
   371  00009E                     ?_sprintf:
   372                           	opt callstack 0
   373  00009E                     sprintf@s:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x3E
   377  00009E                     	ds	2
   378  0000A0                     sprintf@fmt:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x40
   382  0000A0                     	ds	8
   383  0000A8                     sprintf@ap:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x48
   387  0000A8                     	ds	2
   388  0000AA                     sprintf@f:
   389                           	opt callstack 0
   390                           
   391                           ; 6 bytes @ 0x4A
   392  0000AA                     	ds	6
   393  0000B0                     ??_main:
   394                           
   395                           ; 1 bytes @ 0x50
   396  0000B0                     	ds	1
   397  0000B1                     main@buffer:
   398                           	opt callstack 0
   399                           
   400                           ; 30 bytes @ 0x51
   401  0000B1                     	ds	30
   402  0000CF                     main@luzMedida:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x6F
   406  0000CF                     	ds	4
   407                           
   408                           	psect	cstackCOMRAM
   409  000001                     __pcstackCOMRAM:
   410                           	opt callstack 0
   411  000001                     ??_i2c_espera:
   412  000001                     ?_strlen:
   413                           	opt callstack 0
   414  000001                     ?___fpclassifyf:
   415                           	opt callstack 0
   416  000001                     ?_isupper:
   417                           	opt callstack 0
   418  000001                     ?_isdigit:
   419                           	opt callstack 0
   420  000001                     ?_strncmp:
   421                           	opt callstack 0
   422  000001                     ?_isspace:
   423                           	opt callstack 0
   424  000001                     ?___wmul:
   425                           	opt callstack 0
   426  000001                     ?___awdiv:
   427                           	opt callstack 0
   428  000001                     ?___awmod:
   429                           	opt callstack 0
   430  000001                     ?___fladd:
   431                           	opt callstack 0
   432  000001                     ?___flmul:
   433                           	opt callstack 0
   434  000001                     ?___aldiv:
   435                           	opt callstack 0
   436  000001                     ?___flneg:
   437                           	opt callstack 0
   438  000001                     ?___xxtofl:
   439                           	opt callstack 0
   440  000001                     UART_write@dato:
   441                           	opt callstack 0
   442  000001                     ___wmul@multiplier:
   443                           	opt callstack 0
   444  000001                     ___awdiv@dividend:
   445                           	opt callstack 0
   446  000001                     ___awmod@dividend:
   447                           	opt callstack 0
   448  000001                     isdigit@c:
   449                           	opt callstack 0
   450  000001                     isspace@c:
   451                           	opt callstack 0
   452  000001                     isupper@c:
   453                           	opt callstack 0
   454  000001                     fputc@c:
   455                           	opt callstack 0
   456  000001                     strcpy@dest:
   457                           	opt callstack 0
   458  000001                     strlen@s:
   459                           	opt callstack 0
   460  000001                     strncmp@_l:
   461                           	opt callstack 0
   462  000001                     ___aldiv@dividend:
   463                           	opt callstack 0
   464  000001                     ___fleq@ff1:
   465                           	opt callstack 0
   466  000001                     ___flneg@f1:
   467                           	opt callstack 0
   468  000001                     ___fladd@b:
   469                           	opt callstack 0
   470  000001                     ___flmul@b:
   471                           	opt callstack 0
   472  000001                     ___xxtofl@val:
   473                           	opt callstack 0
   474  000001                     ___fpclassifyf@x:
   475                           	opt callstack 0
   476                           
   477                           ; 4 bytes @ 0x0
   478  000001                     	ds	1
   479  000002                     i2c_envia_dato@dato:
   480                           	opt callstack 0
   481  000002                     i2c_recibe_datoACK@a:
   482                           	opt callstack 0
   483  000002                     UART_printf@cadena:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x1
   487  000002                     	ds	1
   488  000003                     ??_isupper:
   489  000003                     ??_isdigit:
   490  000003                     ??_isspace:
   491  000003                     i2c_recibe_datoACK@datoleido:
   492                           	opt callstack 0
   493  000003                     BH1750_write@cmd:
   494                           	opt callstack 0
   495  000003                     ___wmul@multiplicand:
   496                           	opt callstack 0
   497  000003                     ___awdiv@divisor:
   498                           	opt callstack 0
   499  000003                     ___awmod@divisor:
   500                           	opt callstack 0
   501  000003                     fputc@fp:
   502                           	opt callstack 0
   503  000003                     strcpy@src:
   504                           	opt callstack 0
   505  000003                     strlen@a:
   506                           	opt callstack 0
   507  000003                     strncmp@_r:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x2
   511  000003                     	ds	1
   512  000004                     ??_BH1750_init:
   513  000004                     ?_BH1750_read_word:
   514                           	opt callstack 0
   515                           
   516                           ; 4 bytes @ 0x3
   517  000004                     	ds	1
   518  000005                     ??_fputc:
   519  000005                     ??___fpclassifyf:
   520  000005                     ??_strcpy:
   521  000005                     ??___xxtofl:
   522  000005                     ___awdiv@counter:
   523                           	opt callstack 0
   524  000005                     ___awmod@counter:
   525                           	opt callstack 0
   526  000005                     ___wmul@product:
   527                           	opt callstack 0
   528  000005                     strncmp@n:
   529                           	opt callstack 0
   530  000005                     ___aldiv@divisor:
   531                           	opt callstack 0
   532  000005                     ___fleq@ff2:
   533                           	opt callstack 0
   534  000005                     ___fladd@a:
   535                           	opt callstack 0
   536  000005                     ___flmul@a:
   537                           	opt callstack 0
   538                           
   539                           ; 4 bytes @ 0x4
   540  000005                     	ds	1
   541  000006                     ___awdiv@sign:
   542                           	opt callstack 0
   543  000006                     ___awmod@sign:
   544                           	opt callstack 0
   545                           
   546                           ; 1 bytes @ 0x5
   547  000006                     	ds	1
   548  000007                     ??_strncmp:
   549  000007                     ?_tolower:
   550                           	opt callstack 0
   551  000007                     _isspace$936:
   552                           	opt callstack 0
   553  000007                     ___awdiv@quotient:
   554                           	opt callstack 0
   555  000007                     strcpy@s:
   556                           	opt callstack 0
   557  000007                     tolower@c:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x6
   561  000007                     	ds	1
   562  000008                     ??_BH1750_read_word:
   563  000008                     ?_atoi:
   564                           	opt callstack 0
   565  000008                     atoi@s:
   566                           	opt callstack 0
   567  000008                     strncmp@l:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x7
   571  000008                     	ds	1
   572  000009                     ??_tolower:
   573  000009                     ??___fladd:
   574  000009                     ??___flmul:
   575  000009                     ??___fleq:
   576  000009                     ___aldiv@counter:
   577                           	opt callstack 0
   578  000009                     ___xxtofl@sign:
   579                           	opt callstack 0
   580  000009                     ___fpclassifyf@e:
   581                           	opt callstack 0
   582  000009                     strcpy@d:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x8
   586  000009                     	ds	1
   587  00000A                     ??_atoi:
   588  00000A                     BH1750_read_word@lb:
   589                           	opt callstack 0
   590  00000A                     ___aldiv@sign:
   591                           	opt callstack 0
   592  00000A                     ___xxtofl@exp:
   593                           	opt callstack 0
   594  00000A                     fputs@s:
   595                           	opt callstack 0
   596  00000A                     strncmp@r:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x9
   600  00000A                     	ds	1
   601  00000B                     BH1750_read_word@hb:
   602                           	opt callstack 0
   603  00000B                     ___aldiv@quotient:
   604                           	opt callstack 0
   605  00000B                     ___xxtofl@arg:
   606                           	opt callstack 0
   607  00000B                     ___fpclassifyf@u:
   608                           	opt callstack 0
   609                           
   610                           ; 4 bytes @ 0xA
   611  00000B                     	ds	1
   612  00000C                     fputs@fp:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0xB
   616  00000C                     	ds	1
   617  00000D                     ___fladd@signs:
   618                           	opt callstack 0
   619  00000D                     ___flmul@sign:
   620                           	opt callstack 0
   621  00000D                     _tolower$1021:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0xC
   625  00000D                     	ds	1
   626  00000E                     ___fladd@aexp:
   627                           	opt callstack 0
   628  00000E                     fputs@c:
   629                           	opt callstack 0
   630  00000E                     atoi@neg:
   631                           	opt callstack 0
   632  00000E                     ___flmul@grs:
   633                           	opt callstack 0
   634                           
   635                           ; 4 bytes @ 0xD
   636  00000E                     	ds	1
   637  00000F                     ?___fldiv:
   638                           	opt callstack 0
   639  00000F                     ___fladd@bexp:
   640                           	opt callstack 0
   641  00000F                     fputs@i:
   642                           	opt callstack 0
   643  00000F                     UART_init@BAUD:
   644                           	opt callstack 0
   645  00000F                     ___fldiv@b:
   646                           	opt callstack 0
   647                           
   648                           ; 4 bytes @ 0xE
   649  00000F                     	ds	1
   650  000010                     ___fladd@grs:
   651                           	opt callstack 0
   652  000010                     _atoi$905:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0xF
   656  000010                     	ds	1
   657  000011                     ?_pad:
   658                           	opt callstack 0
   659  000011                     pad@fp:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0x10
   663  000011                     	ds	1
   664  000012                     ___flmul@aexp:
   665                           	opt callstack 0
   666  000012                     _atoi$907:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x11
   670  000012                     	ds	1
   671  000013                     ___flmul@bexp:
   672                           	opt callstack 0
   673  000013                     pad@buf:
   674                           	opt callstack 0
   675  000013                     ___fldiv@a:
   676                           	opt callstack 0
   677                           
   678                           ; 4 bytes @ 0x12
   679  000013                     	ds	1
   680  000014                     _atoi$906:
   681                           	opt callstack 0
   682  000014                     ___flmul@prod:
   683                           	opt callstack 0
   684                           
   685                           ; 4 bytes @ 0x13
   686  000014                     	ds	1
   687  000015                     pad@p:
   688                           	opt callstack 0
   689  000015                     atoi@n:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x14
   693  000015                     	ds	2
   694  000017                     ??___fldiv:
   695  000017                     ??_pad:
   696  000017                     _UART_init$1247:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0x16
   700  000017                     	ds	1
   701  000018                     pad@i:
   702                           	opt callstack 0
   703  000018                     ___flmul@temp:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x17
   707  000018                     	ds	2
   708  00001A                     ?___flsub:
   709                           	opt callstack 0
   710  00001A                     pad@w:
   711                           	opt callstack 0
   712  00001A                     ___flge@ff1:
   713                           	opt callstack 0
   714  00001A                     ___flsub@b:
   715                           	opt callstack 0
   716                           
   717                           ; 4 bytes @ 0x19
   718  00001A                     	ds	1
   719  00001B                     ___fldiv@rem:
   720                           	opt callstack 0
   721                           
   722                           ; 4 bytes @ 0x1A
   723  00001B                     	ds	3
   724  00001E                     ___flge@ff2:
   725                           	opt callstack 0
   726  00001E                     ___flsub@a:
   727                           	opt callstack 0
   728                           
   729                           ; 4 bytes @ 0x1D
   730  00001E                     	ds	1
   731  00001F                     ___fldiv@sign:
   732                           	opt callstack 0
   733                           
   734                           ; 1 bytes @ 0x1E
   735  00001F                     	ds	1
   736  000020                     ___fldiv@new_exp:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x1F
   740  000020                     	ds	2
   741  000022                     ??___flge:
   742  000022                     ___fldiv@grs:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0x21
   746  000022                     	ds	4
   747  000026                     ___fldiv@bexp:
   748                           	opt callstack 0
   749                           
   750                           ; 1 bytes @ 0x25
   751  000026                     	ds	1
   752  000027                     ___fldiv@aexp:
   753                           	opt callstack 0
   754                           
   755                           ; 1 bytes @ 0x26
   756  000027                     	ds	1
   757  000028                     ?_floorf:
   758                           	opt callstack 0
   759  000028                     ?___fltol:
   760                           	opt callstack 0
   761  000028                     ___fltol@f1:
   762                           	opt callstack 0
   763  000028                     floorf@x:
   764                           	opt callstack 0
   765                           
   766                           ; 4 bytes @ 0x27
   767  000028                     	ds	4
   768  00002C                     ??_floorf:
   769  00002C                     ??___fltol:
   770                           
   771                           ; 1 bytes @ 0x2B
   772  00002C                     	ds	4
   773  000030                     ___fltol@sign1:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0x2F
   777  000030                     	ds	1
   778  000031                     ___fltol@exp1:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x30
   782  000031                     	ds	1
   783  000032                     ?_get_lux_value:
   784                           	opt callstack 0
   785  000032                     floorf@m:
   786                           	opt callstack 0
   787                           
   788                           ; 4 bytes @ 0x31
   789  000032                     	ds	4
   790  000036                     ??_get_lux_value:
   791  000036                     floorf@e:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x35
   795  000036                     	ds	1
   796  000037                     get_lux_value@mode:
   797                           	opt callstack 0
   798                           
   799                           ; 1 bytes @ 0x36
   800  000037                     	ds	1
   801  000038                     get_lux_value@lux_value:
   802                           	opt callstack 0
   803  000038                     floorf@u:
   804                           	opt callstack 0
   805                           
   806                           ; 4 bytes @ 0x37
   807  000038                     	ds	4
   808  00003C                     ?_efgtoa:
   809                           	opt callstack 0
   810  00003C                     efgtoa@fp:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x3B
   814  00003C                     	ds	2
   815  00003E                     efgtoa@f:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0x3D
   819  00003E                     	ds	4
   820  000042                     efgtoa@c:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0x41
   824  000042                     	ds	1
   825  000043                     ??_efgtoa:
   826                           
   827                           ; 1 bytes @ 0x42
   828  000043                     	ds	5
   829  000048                     ?_vfpfcnvrt:
   830                           	opt callstack 0
   831  000048                     vfpfcnvrt@fp:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x47
   835  000048                     	ds	2
   836  00004A                     vfpfcnvrt@fmt:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x49
   840  00004A                     	ds	2
   841  00004C                     vfpfcnvrt@ap:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x4B
   845  00004C                     	ds	2
   846  00004E                     ??_vfpfcnvrt:
   847                           
   848                           ; 1 bytes @ 0x4D
   849  00004E                     	ds	4
   850  000052                     _vfpfcnvrt$430:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0x51
   854  000052                     	ds	2
   855  000054                     _vfpfcnvrt$434:
   856                           	opt callstack 0
   857                           
   858                           ; 2 bytes @ 0x53
   859  000054                     	ds	2
   860  000056                     vfpfcnvrt@f:
   861                           	opt callstack 0
   862                           
   863                           ; 4 bytes @ 0x55
   864  000056                     	ds	4
   865  00005A                     vfpfcnvrt@ct:
   866                           	opt callstack 0
   867                           
   868                           ; 3 bytes @ 0x59
   869  00005A                     	ds	3
   870  00005D                     vfpfcnvrt@c:
   871                           	opt callstack 0
   872                           
   873                           ; 1 bytes @ 0x5C
   874  00005D                     	ds	1
   875  00005E                     vfprintf@cfmt:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x5D
   879  00005E                     	ds	2
   880  000060                     
   881                           ; 1 bytes @ 0x5F
   882 ;;
   883 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   884 ;;
   885 ;; *************** function _main *****************
   886 ;; Defined at:
   887 ;;		line 10 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  buffer         30   81[BANK0 ] unsigned char [30]
   892 ;;  luzMedida       4  111[BANK0 ] unsigned long 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         0       0       0       0       0       0       0       0       0
   903 ;;      Locals:         0      34       0       0       0       0       0       0       0
   904 ;;      Temps:          0       1       0       0       0       0       0       0       0
   905 ;;      Totals:         0      35       0       0       0       0       0       0       0
   906 ;;Total ram usage:       35 bytes
   907 ;; Hardware stack levels required when called:    8
   908 ;; This function calls:
   909 ;;		_BH1750_init
   910 ;;		_UART_init
   911 ;;		_UART_printf
   912 ;;		_get_lux_value
   913 ;;		_i2c_iniciar
   914 ;;		_sprintf
   915 ;; This function is called by:
   916 ;;		Startup code after reset
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text0
   921  003358                     __ptext0:
   922                           	opt callstack 0
   923  003358                     _main:
   924                           	opt callstack 23
   925  003358                     
   926                           ;main.c: 13:     T_BYTE buffer[30];;main.c: 15:     UART_init(9600);
   927  003358  0E80               	movlw	128
   928  00335A  6E0F               	movwf	UART_init@BAUD^0,c
   929  00335C  0E25               	movlw	37
   930  00335E  6E10               	movwf	(UART_init@BAUD+1)^0,c
   931  003360  0E00               	movlw	0
   932  003362  6E11               	movwf	(UART_init@BAUD+2)^0,c
   933  003364  0E00               	movlw	0
   934  003366  6E12               	movwf	(UART_init@BAUD+3)^0,c
   935  003368  ECEB  F019         	call	_UART_init	;wreg free
   936  00336C                     
   937                           ;main.c: 16:     i2c_iniciar();
   938  00336C  EC4F  F01C         	call	_i2c_iniciar	;wreg free
   939  003370                     
   940                           ;main.c: 17:     BH1750_init();
   941  003370  EC65  F01C         	call	_BH1750_init	;wreg free
   942  003374                     l4103:
   943                           
   944                           ;main.c: 20:     {;main.c: 21:         luzMedida = get_lux_value(0x10);
   945  003374  0E10               	movlw	16
   946  003376  EC58  F019         	call	_get_lux_value
   947  00337A  C032  F0CF         	movff	?_get_lux_value,main@luzMedida
   948  00337E  C033  F0D0         	movff	?_get_lux_value+1,main@luzMedida+1
   949  003382  C034  F0D1         	movff	?_get_lux_value+2,main@luzMedida+2
   950  003386  C035  F0D2         	movff	?_get_lux_value+3,main@luzMedida+3
   951  00338A                     
   952                           ;main.c: 22:         sprintf(buffer, "\rLuz medida: %.2f luxs\r\n",luzMedida);
   953  00338A  0EB1               	movlw	low main@buffer
   954  00338C  0100               	movlb	0	; () banked
   955  00338E  6F9E               	movwf	sprintf@s& (0+255),b
   956  003390  0E00               	movlw	high main@buffer
   957  003392  6F9F               	movwf	(sprintf@s+1)& (0+255),b
   958  003394  0E01               	movlw	low STR_1
   959  003396  6FA0               	movwf	sprintf@fmt& (0+255),b
   960  003398  0E08               	movlw	high STR_1
   961  00339A  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
   962  00339C  C0CF  F0A2         	movff	main@luzMedida,?_sprintf+4
   963  0033A0  C0D0  F0A3         	movff	main@luzMedida+1,?_sprintf+5
   964  0033A4  C0D1  F0A4         	movff	main@luzMedida+2,?_sprintf+6
   965  0033A8  C0D2  F0A5         	movff	main@luzMedida+3,?_sprintf+7
   966  0033AC  ECB2  F01A         	call	_sprintf	;wreg free
   967  0033B0                     
   968                           ;main.c: 23:         UART_printf(buffer);
   969  0033B0  0EB1               	movlw	low main@buffer
   970  0033B2  6E02               	movwf	UART_printf@cadena^0,c
   971  0033B4  0E00               	movlw	high main@buffer
   972  0033B6  6E03               	movwf	(UART_printf@cadena+1)^0,c
   973  0033B8  ECDD  F01B         	call	_UART_printf	;wreg free
   974  0033BC                     
   975                           ;main.c: 24:         _delay((unsigned long)((10)*(4000000/4000.0)));
   976  0033BC  0E0D               	movlw	13
   977  0033BE  0100               	movlb	0	; () banked
   978  0033C0  6FB0               	movwf	??_main& (0+255),b
   979  0033C2  0EFB               	movlw	251
   980  0033C4                     u4987:
   981  0033C4  2EE8               	decfsz	wreg,f,c
   982  0033C6  D7FE               	bra	u4987
   983  0033C8  2FB0               	decfsz	??_main& (0+255),f,b
   984  0033CA  D7FC               	bra	u4987
   985  0033CC  D000               	nop2	
   986  0033CE  EFBA  F019         	goto	l4103
   987  0033D2  EF00  F000         	goto	start
   988  0033D6                     __end_of_main:
   989                           	opt callstack 0
   990                           
   991 ;; *************** function _sprintf *****************
   992 ;; Defined at:
   993 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  s               2   62[BANK0 ] PTR unsigned char 
   996 ;;		 -> main@buffer(30), 
   997 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
   998 ;;		 -> STR_1(25), 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  f               6   74[BANK0 ] struct _IO_FILE
  1001 ;;  ap              2   72[BANK0 ] PTR void [1]
  1002 ;;		 -> ?_sprintf(2), 
  1003 ;;  ret             2    0        int 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  2   62[BANK0 ] int 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         0       8       0       0       0       0       0       0       0
  1014 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1016 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1017 ;;Total ram usage:       18 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    7
  1020 ;; This function calls:
  1021 ;;		_vfprintf
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text1
  1028  003564                     __ptext1:
  1029                           	opt callstack 0
  1030  003564                     _sprintf:
  1031                           	opt callstack 23
  1032  003564  0EA2               	movlw	low (?_sprintf+4)
  1033  003566  0100               	movlb	0	; () banked
  1034  003568  6FA8               	movwf	sprintf@ap& (0+255),b
  1035  00356A  0E00               	movlw	high (?_sprintf+4)
  1036  00356C  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1037  00356E  C09E  F0AA         	movff	sprintf@s,sprintf@f
  1038  003572  C09F  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1039  003576                     
  1040                           ; BSR set to: 0
  1041  003576  0E00               	movlw	0
  1042  003578  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  1043  00357A  0E00               	movlw	0
  1044  00357C  6FAC               	movwf	(sprintf@f+2)& (0+255),b
  1045  00357E                     
  1046                           ; BSR set to: 0
  1047  00357E  0E00               	movlw	0
  1048  003580  6FAF               	movwf	(sprintf@f+5)& (0+255),b
  1049  003582  0E00               	movlw	0
  1050  003584  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  1051  003586                     
  1052                           ; BSR set to: 0
  1053  003586  0EAA               	movlw	low sprintf@f
  1054  003588  6F98               	movwf	vfprintf@fp& (0+255),b
  1055  00358A  0E00               	movlw	high sprintf@f
  1056  00358C  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1057  00358E  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1058  003592  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1059  003596  0EA8               	movlw	low sprintf@ap
  1060  003598  6F9C               	movwf	vfprintf@ap& (0+255),b
  1061  00359A  0E00               	movlw	high sprintf@ap
  1062  00359C  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1063  00359E  EC23  F01A         	call	_vfprintf	;wreg free
  1064  0035A2  0100               	movlb	0	; () banked
  1065  0035A4  51AC               	movf	(sprintf@f+2)& (0+255),w,b
  1066  0035A6  259E               	addwf	sprintf@s& (0+255),w,b
  1067  0035A8  6ED9               	movwf	fsr2l,c
  1068  0035AA  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  1069  0035AC  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1070  0035AE  6EDA               	movwf	fsr2h,c
  1071  0035B0  0E00               	movlw	0
  1072  0035B2  6EDF               	movwf	indf2,c
  1073  0035B4                     
  1074                           ; BSR set to: 0
  1075  0035B4  0012               	return		;funcret
  1076  0035B6                     __end_of_sprintf:
  1077                           	opt callstack 0
  1078                           
  1079 ;; *************** function _vfprintf *****************
  1080 ;; Defined at:
  1081 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1084 ;;		 -> sprintf@f(6), 
  1085 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1086 ;;		 -> STR_1(25), 
  1087 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1088 ;;		 -> sprintf@ap(2), 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  1091 ;;		 -> STR_1(25), 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2   56[BANK0 ] int 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1101 ;;      Params:         0       6       0       0       0       0       0       0       0
  1102 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1104 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1105 ;;Total ram usage:        8 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    6
  1108 ;; This function calls:
  1109 ;;		_vfpfcnvrt
  1110 ;; This function is called by:
  1111 ;;		_sprintf
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text2
  1116  003446                     __ptext2:
  1117                           	opt callstack 0
  1118  003446                     _vfprintf:
  1119                           	opt callstack 23
  1120  003446                     
  1121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1122  003446  C09A  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  1123  00344A  C09B  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1124  00344E                     
  1125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1126  00344E  0E00               	movlw	0
  1127  003450  0100               	movlb	0	; () banked
  1128  003452  6FDC               	movwf	(_nout+1)& (0+255),b
  1129  003454  0E00               	movlw	0
  1130  003456  6FDB               	movwf	_nout& (0+255),b
  1131                           
  1132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1133  003458  EF41  F01A         	goto	l3917
  1134  00345C                     l3915:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1138  00345C  C098  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  1139  003460  C099  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1140  003464  0E5E               	movlw	low vfprintf@cfmt
  1141  003466  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  1142  003468  0E00               	movlw	high vfprintf@cfmt
  1143  00346A  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1144  00346C  C09C  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1145  003470  C09D  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1146  003474  EC4F  F00C         	call	_vfpfcnvrt	;wreg free
  1147  003478  5048               	movf	?_vfpfcnvrt^0,w,c
  1148  00347A  0100               	movlb	0	; () banked
  1149  00347C  27DB               	addwf	_nout& (0+255),f,b
  1150  00347E  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  1151  003480  23DC               	addwfc	(_nout+1)& (0+255),f,b
  1152  003482                     l3917:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1156  003482  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1157  003486  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1158  00348A                     	if	0	;tblptru may be non-zero
  1159  00348A                     	endif
  1160  00348A                     	if	0	;tblptru may be non-zero
  1161  00348A                     	endif
  1162  00348A  0008               	tblrd		*
  1163  00348C  50F5               	movf	tablat,w,c
  1164  00348E  0900               	iorlw	0
  1165  003490  A4D8               	btfss	status,2,c
  1166  003492  EF4D  F01A         	goto	u4801
  1167  003496  EF4F  F01A         	goto	u4800
  1168  00349A                     u4801:
  1169  00349A  EF2E  F01A         	goto	l3915
  1170  00349E                     u4800:
  1171  00349E                     
  1172                           ; BSR set to: 0
  1173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1174  00349E  C0DB  F098         	movff	_nout,?_vfprintf
  1175  0034A2  C0DC  F099         	movff	_nout+1,?_vfprintf+1
  1176  0034A6                     
  1177                           ; BSR set to: 0
  1178  0034A6  0012               	return		;funcret
  1179  0034A8                     __end_of_vfprintf:
  1180                           	opt callstack 0
  1181                           
  1182 ;; *************** function _vfpfcnvrt *****************
  1183 ;; Defined at:
  1184 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1187 ;;		 -> sprintf@f(6), 
  1188 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  1189 ;;		 -> vfprintf@cfmt(2), 
  1190 ;;  ap              2   75[COMRAM] PTR PTR void 
  1191 ;;		 -> sprintf@ap(2), 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  llu             8    0        unsigned long long 
  1194 ;;  ll              8    0        long long 
  1195 ;;  f               4   85[COMRAM] long long 
  1196 ;;  ct              3   89[COMRAM] unsigned char [3]
  1197 ;;  vp              3    0        PTR void 
  1198 ;;  cp              3    0        PTR unsigned char 
  1199 ;;  i               2    0        int 
  1200 ;;  done            2    0        int 
  1201 ;;  c               1   92[COMRAM] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2   71[COMRAM] int 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1211 ;;      Params:         6       0       0       0       0       0       0       0       0
  1212 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1213 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1214 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1215 ;;Total ram usage:       22 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    5
  1218 ;; This function calls:
  1219 ;;		_atoi
  1220 ;;		_efgtoa
  1221 ;;		_fputc
  1222 ;;		_isdigit
  1223 ;;		_isupper
  1224 ;;		_strncmp
  1225 ;;		_tolower
  1226 ;; This function is called by:
  1227 ;;		_vfprintf
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text3
  1232  00189E                     __ptext3:
  1233                           	opt callstack 0
  1234  00189E                     _vfpfcnvrt:
  1235                           	opt callstack 23
  1236  00189E                     
  1237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1238  00189E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1239  0018A2  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1240  0018A6  CFDE FFF6          	movff	postinc2,tblptrl
  1241  0018AA  CFDD FFF7          	movff	postdec2,tblptrh
  1242  0018AE                     	if	0	;tblptru may be non-zero
  1243  0018AE                     	endif
  1244  0018AE                     	if	0	;tblptru may be non-zero
  1245  0018AE                     	endif
  1246  0018AE  0008               	tblrd		*
  1247  0018B0  50F5               	movf	tablat,w,c
  1248  0018B2  0A25               	xorlw	37
  1249  0018B4  A4D8               	btfss	status,2,c
  1250  0018B6  EF5F  F00C         	goto	u4651
  1251  0018BA  EF61  F00C         	goto	u4650
  1252  0018BE                     u4651:
  1253  0018BE  EF63  F00E         	goto	l3883
  1254  0018C2                     u4650:
  1255  0018C2                     
  1256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1257  0018C2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1258  0018C6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1259  0018CA  2ADE               	incf	postinc2,f,c
  1260  0018CC  0E00               	movlw	0
  1261  0018CE  22DD               	addwfc	postdec2,f,c
  1262  0018D0                     
  1263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1264  0018D0  0E00               	movlw	0
  1265  0018D2  0100               	movlb	0	; () banked
  1266  0018D4  6FDE               	movwf	(_width+1)& (0+255),b
  1267  0018D6  0E00               	movlw	0
  1268  0018D8  6FDD               	movwf	_width& (0+255),b
  1269  0018DA  C0DD  F0E1         	movff	_width,_flags
  1270  0018DE  C0DE  F0E2         	movff	_width+1,_flags+1
  1271  0018E2                     
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1274  0018E2  69DF               	setf	_prec& (0+255),b
  1275  0018E4  69E0               	setf	(_prec+1)& (0+255),b
  1276  0018E6                     
  1277                           ; BSR set to: 0
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1279  0018E6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1280  0018EA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1281  0018EE  CFDE FFF6          	movff	postinc2,tblptrl
  1282  0018F2  CFDD FFF7          	movff	postdec2,tblptrh
  1283  0018F6                     	if	0	;tblptru may be non-zero
  1284  0018F6                     	endif
  1285  0018F6                     	if	0	;tblptru may be non-zero
  1286  0018F6                     	endif
  1287  0018F6  0008               	tblrd		*
  1288  0018F8  50F5               	movf	tablat,w,c
  1289  0018FA  0A2E               	xorlw	46
  1290  0018FC  A4D8               	btfss	status,2,c
  1291  0018FE  EF83  F00C         	goto	u4661
  1292  001902  EF85  F00C         	goto	u4660
  1293  001906                     u4661:
  1294  001906  EF02  F00D         	goto	l3829
  1295  00190A                     u4660:
  1296  00190A                     
  1297                           ; BSR set to: 0
  1298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1299  00190A  0E00               	movlw	0
  1300  00190C  6FE0               	movwf	(_prec+1)& (0+255),b
  1301  00190E  0E00               	movlw	0
  1302  001910  6FDF               	movwf	_prec& (0+255),b
  1303  001912                     
  1304                           ; BSR set to: 0
  1305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1306  001912  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1307  001916  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1308  00191A  2ADE               	incf	postinc2,f,c
  1309  00191C  0E00               	movlw	0
  1310  00191E  22DD               	addwfc	postdec2,f,c
  1311  001920                     
  1312                           ; BSR set to: 0
  1313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1314  001920  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1315  001924  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1316  001928  CFDE FFF6          	movff	postinc2,tblptrl
  1317  00192C  CFDD FFF7          	movff	postdec2,tblptrh
  1318  001930                     	if	0	;tblptru may be non-zero
  1319  001930                     	endif
  1320  001930                     	if	0	;tblptru may be non-zero
  1321  001930                     	endif
  1322  001930  0008               	tblrd		*
  1323  001932  50F5               	movf	tablat,w,c
  1324  001934  0A2A               	xorlw	42
  1325  001936  A4D8               	btfss	status,2,c
  1326  001938  EFA0  F00C         	goto	u4671
  1327  00193C  EFA2  F00C         	goto	u4670
  1328  001940                     u4671:
  1329  001940  EFBF  F00C         	goto	l3819
  1330  001944                     u4670:
  1331  001944                     
  1332                           ; BSR set to: 0
  1333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1334  001944  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335  001948  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336  00194C  2ADE               	incf	postinc2,f,c
  1337  00194E  0E00               	movlw	0
  1338  001950  22DD               	addwfc	postdec2,f,c
  1339                           
  1340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1341  001952  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1342  001956  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1343  00195A  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1344  00195E  0E02               	movlw	2
  1345  001960  26DE               	addwf	postinc2,f,c
  1346  001962  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1347  001966  0E00               	movlw	0
  1348  001968  22DD               	addwfc	postdec2,f,c
  1349  00196A  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1350  00196E  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1351  001972  CFDE F0DF          	movff	postinc2,_prec
  1352  001976  CFDD F0E0          	movff	postdec2,_prec+1
  1353                           
  1354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1355  00197A  EF02  F00D         	goto	l3829
  1356  00197E                     l3819:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1360  00197E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1361  001982  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1362  001986  CFDE F008          	movff	postinc2,atoi@s
  1363  00198A  CFDD F009          	movff	postdec2,atoi@s+1
  1364  00198E  EC44  F014         	call	_atoi	;wreg free
  1365  001992  C008  F0DF         	movff	?_atoi,_prec
  1366  001996  C009  F0E0         	movff	?_atoi+1,_prec+1
  1367                           
  1368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1369  00199A  EFD6  F00C         	goto	l3823
  1370  00199E                     l3821:
  1371                           
  1372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1373  00199E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1374  0019A2  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1375  0019A6  2ADE               	incf	postinc2,f,c
  1376  0019A8  0E00               	movlw	0
  1377  0019AA  22DD               	addwfc	postdec2,f,c
  1378  0019AC                     l3823:
  1379  0019AC  0ED0               	movlw	208
  1380  0019AE  6E4E               	movwf	??_vfpfcnvrt^0,c
  1381  0019B0  0EFF               	movlw	255
  1382  0019B2  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  1383  0019B4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1384  0019B8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1385  0019BC  CFDE FFF6          	movff	postinc2,tblptrl
  1386  0019C0  CFDD FFF7          	movff	postdec2,tblptrh
  1387  0019C4                     	if	0	;tblptru may be non-zero
  1388  0019C4                     	endif
  1389  0019C4                     	if	0	;tblptru may be non-zero
  1390  0019C4                     	endif
  1391  0019C4  0008               	tblrd		*
  1392  0019C6  50F5               	movf	tablat,w,c
  1393  0019C8  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  1394  0019CA  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  1395  0019CC  504E               	movf	??_vfpfcnvrt^0,w,c
  1396  0019CE  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1397  0019D0  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1398  0019D2  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1399  0019D4  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  1400  0019D6  E10A               	bnz	u4680
  1401  0019D8  0E0A               	movlw	10
  1402  0019DA  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1403  0019DC  A0D8               	btfss	status,0,c
  1404  0019DE  EFF3  F00C         	goto	u4681
  1405  0019E2  EFF6  F00C         	goto	u4680
  1406  0019E6                     u4681:
  1407  0019E6  0E01               	movlw	1
  1408  0019E8  EFF7  F00C         	goto	u4690
  1409  0019EC                     u4680:
  1410  0019EC  0E00               	movlw	0
  1411  0019EE                     u4690:
  1412  0019EE  6E52               	movwf	_vfpfcnvrt$430^0,c
  1413  0019F0  6A53               	clrf	(_vfpfcnvrt$430+1)^0,c
  1414  0019F2  5052               	movf	_vfpfcnvrt$430^0,w,c
  1415  0019F4  1053               	iorwf	(_vfpfcnvrt$430+1)^0,w,c
  1416  0019F6  A4D8               	btfss	status,2,c
  1417  0019F8  EF00  F00D         	goto	u4701
  1418  0019FC  EF02  F00D         	goto	u4700
  1419  001A00                     u4701:
  1420  001A00  EFCF  F00C         	goto	l3821
  1421  001A04                     u4700:
  1422  001A04                     l3829:
  1423                           
  1424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1425  001A04  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1426  001A08  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1427  001A0C  CFDE FFF6          	movff	postinc2,tblptrl
  1428  001A10  CFDD FFF7          	movff	postdec2,tblptrh
  1429  001A14                     	if	0	;tblptru may be non-zero
  1430  001A14                     	endif
  1431  001A14                     	if	0	;tblptru may be non-zero
  1432  001A14                     	endif
  1433  001A14  0008               	tblrd		*
  1434  001A16  50F5               	movf	tablat,w,c
  1435  001A18  6E07               	movwf	tolower@c^0,c
  1436  001A1A  6A08               	clrf	(tolower@c+1)^0,c
  1437  001A1C  EC54  F01A         	call	_tolower	;wreg free
  1438  001A20  5007               	movf	?_tolower^0,w,c
  1439  001A22  6E5A               	movwf	vfpfcnvrt@ct^0,c
  1440  001A24                     
  1441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1442  001A24  505A               	movf	vfpfcnvrt@ct^0,w,c
  1443  001A26  B4D8               	btfsc	status,2,c
  1444  001A28  EF18  F00D         	goto	u4711
  1445  001A2C  EF1A  F00D         	goto	u4710
  1446  001A30                     u4711:
  1447  001A30  EF52  F00D         	goto	l3839
  1448  001A34                     u4710:
  1449  001A34                     
  1450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1451  001A34  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1452  001A38  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1453  001A3C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  1454  001A40  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  1455  001A44  0E01               	movlw	1
  1456  001A46  264E               	addwf	??_vfpfcnvrt^0,f,c
  1457  001A48  0E00               	movlw	0
  1458  001A4A  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1459  001A4C  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1460  001A50  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1461  001A54                     	if	0	;tblptru may be non-zero
  1462  001A54                     	endif
  1463  001A54                     	if	0	;tblptru may be non-zero
  1464  001A54                     	endif
  1465  001A54  0008               	tblrd		*
  1466  001A56  50F5               	movf	tablat,w,c
  1467  001A58  6E07               	movwf	tolower@c^0,c
  1468  001A5A  6A08               	clrf	(tolower@c+1)^0,c
  1469  001A5C  EC54  F01A         	call	_tolower	;wreg free
  1470  001A60  5007               	movf	?_tolower^0,w,c
  1471  001A62  6E5B               	movwf	(vfpfcnvrt@ct+1)^0,c
  1472  001A64                     
  1473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1474  001A64  505B               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1475  001A66  B4D8               	btfsc	status,2,c
  1476  001A68  EF38  F00D         	goto	u4721
  1477  001A6C  EF3A  F00D         	goto	u4720
  1478  001A70                     u4721:
  1479  001A70  EF52  F00D         	goto	l3839
  1480  001A74                     u4720:
  1481  001A74                     
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1483  001A74  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1484  001A78  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1485  001A7C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  1486  001A80  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  1487  001A84  0E02               	movlw	2
  1488  001A86  264E               	addwf	??_vfpfcnvrt^0,f,c
  1489  001A88  0E00               	movlw	0
  1490  001A8A  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1491  001A8C  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1492  001A90  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1493  001A94                     	if	0	;tblptru may be non-zero
  1494  001A94                     	endif
  1495  001A94                     	if	0	;tblptru may be non-zero
  1496  001A94                     	endif
  1497  001A94  0008               	tblrd		*
  1498  001A96  50F5               	movf	tablat,w,c
  1499  001A98  6E07               	movwf	tolower@c^0,c
  1500  001A9A  6A08               	clrf	(tolower@c+1)^0,c
  1501  001A9C  EC54  F01A         	call	_tolower	;wreg free
  1502  001AA0  5007               	movf	?_tolower^0,w,c
  1503  001AA2  6E5C               	movwf	(vfpfcnvrt@ct+2)^0,c
  1504  001AA4                     l3839:
  1505                           
  1506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  1507  001AA4  0E66               	movlw	102
  1508  001AA6  185A               	xorwf	vfpfcnvrt@ct^0,w,c
  1509  001AA8  A4D8               	btfss	status,2,c
  1510  001AAA  EF59  F00D         	goto	u4731
  1511  001AAE  EF5B  F00D         	goto	u4730
  1512  001AB2                     u4731:
  1513  001AB2  EF9B  F00D         	goto	l3851
  1514  001AB6                     u4730:
  1515  001AB6                     
  1516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  1517  001AB6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1518  001ABA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1519  001ABE  CFDE FFF6          	movff	postinc2,tblptrl
  1520  001AC2  CFDD FFF7          	movff	postdec2,tblptrh
  1521  001AC6                     	if	0	;tblptru may be non-zero
  1522  001AC6                     	endif
  1523  001AC6                     	if	0	;tblptru may be non-zero
  1524  001AC6                     	endif
  1525  001AC6  0008               	tblrd		*
  1526  001AC8  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  1527  001ACC                     
  1528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  1529  001ACC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1530  001AD0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1531  001AD4  2ADE               	incf	postinc2,f,c
  1532  001AD6  0E00               	movlw	0
  1533  001AD8  22DD               	addwfc	postdec2,f,c
  1534  001ADA                     
  1535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1536  001ADA  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1537  001ADE  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1538  001AE2  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1539  001AE6  0E04               	movlw	4
  1540  001AE8  26DE               	addwf	postinc2,f,c
  1541  001AEA  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1542  001AEE  0E00               	movlw	0
  1543  001AF0  22DD               	addwfc	postdec2,f,c
  1544  001AF2  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1545  001AF6  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1546  001AFA  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  1547  001AFE  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  1548  001B02  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  1549  001B06  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  1550  001B0A                     l3847:
  1551                           
  1552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  1553  001B0A  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  1554  001B0E  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1555  001B12  C056  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  1556  001B16  C057  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1557  001B1A  C058  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1558  001B1E  C059  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1559  001B22  C05D  F042         	movff	vfpfcnvrt@c,efgtoa@c
  1560  001B26  EC17  F004         	call	_efgtoa	;wreg free
  1561  001B2A  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  1562  001B2E  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1563  001B32  EF7E  F00E         	goto	l264
  1564  001B36                     l3851:
  1565                           
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1567  001B36  0E5A               	movlw	low vfpfcnvrt@ct
  1568  001B38  6E01               	movwf	strncmp@_l^0,c
  1569  001B3A  0E00               	movlw	high vfpfcnvrt@ct
  1570  001B3C  6E02               	movwf	(strncmp@_l+1)^0,c
  1571  001B3E  0E2A               	movlw	low STR_10
  1572  001B40  6E03               	movwf	strncmp@_r^0,c
  1573  001B42  0E08               	movlw	high STR_10
  1574  001B44  6E04               	movwf	(strncmp@_r+1)^0,c
  1575  001B46  0E00               	movlw	0
  1576  001B48  6E06               	movwf	(strncmp@n+1)^0,c
  1577  001B4A  0E02               	movlw	2
  1578  001B4C  6E05               	movwf	strncmp@n^0,c
  1579  001B4E  EC16  F017         	call	_strncmp	;wreg free
  1580  001B52  5001               	movf	?_strncmp^0,w,c
  1581  001B54  1002               	iorwf	(?_strncmp+1)^0,w,c
  1582  001B56  A4D8               	btfss	status,2,c
  1583  001B58  EFB0  F00D         	goto	u4741
  1584  001B5C  EFB2  F00D         	goto	u4740
  1585  001B60                     u4741:
  1586  001B60  EF2D  F00E         	goto	l3867
  1587  001B64                     u4740:
  1588  001B64                     
  1589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1590  001B64  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1591  001B68  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1592  001B6C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  1593  001B70  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  1594  001B74  0E01               	movlw	1
  1595  001B76  264E               	addwf	??_vfpfcnvrt^0,f,c
  1596  001B78  0E00               	movlw	0
  1597  001B7A  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1598  001B7C  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1599  001B80  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1600  001B84                     	if	0	;tblptru may be non-zero
  1601  001B84                     	endif
  1602  001B84                     	if	0	;tblptru may be non-zero
  1603  001B84                     	endif
  1604  001B84  0008               	tblrd		*
  1605  001B86  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  1606  001B8A  0EBF               	movlw	191
  1607  001B8C  6E4E               	movwf	??_vfpfcnvrt^0,c
  1608  001B8E  0EFF               	movlw	255
  1609  001B90  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  1610  001B92  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611  001B96  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612  001B9A  CFDE FFF6          	movff	postinc2,tblptrl
  1613  001B9E  CFDD FFF7          	movff	postdec2,tblptrh
  1614  001BA2                     	if	0	;tblptru may be non-zero
  1615  001BA2                     	endif
  1616  001BA2                     	if	0	;tblptru may be non-zero
  1617  001BA2                     	endif
  1618  001BA2  0008               	tblrd		*
  1619  001BA4  50F5               	movf	tablat,w,c
  1620  001BA6  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  1621  001BA8  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  1622  001BAA  504E               	movf	??_vfpfcnvrt^0,w,c
  1623  001BAC  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1624  001BAE  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1625  001BB0  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1626  001BB2  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  1627  001BB4  E10A               	bnz	u4750
  1628  001BB6  0E1A               	movlw	26
  1629  001BB8  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1630  001BBA  A0D8               	btfss	status,0,c
  1631  001BBC  EFE2  F00D         	goto	u4751
  1632  001BC0  EFE5  F00D         	goto	u4750
  1633  001BC4                     u4751:
  1634  001BC4  0E01               	movlw	1
  1635  001BC6  EFE6  F00D         	goto	u4760
  1636  001BCA                     u4750:
  1637  001BCA  0E00               	movlw	0
  1638  001BCC                     u4760:
  1639  001BCC  6E54               	movwf	_vfpfcnvrt$434^0,c
  1640  001BCE  6A55               	clrf	(_vfpfcnvrt$434+1)^0,c
  1641  001BD0  5054               	movf	_vfpfcnvrt$434^0,w,c
  1642  001BD2  1055               	iorwf	(_vfpfcnvrt$434+1)^0,w,c
  1643  001BD4  B4D8               	btfsc	status,2,c
  1644  001BD6  EFEF  F00D         	goto	u4771
  1645  001BDA  EFF1  F00D         	goto	u4770
  1646  001BDE                     u4771:
  1647  001BDE  EF0B  F00E         	goto	l3861
  1648  001BE2                     u4770:
  1649  001BE2                     
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1651  001BE2  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1652  001BE6  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1653  001BEA  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1654  001BEE  0E04               	movlw	4
  1655  001BF0  26DE               	addwf	postinc2,f,c
  1656  001BF2  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1657  001BF6  0E00               	movlw	0
  1658  001BF8  22DD               	addwfc	postdec2,f,c
  1659  001BFA  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1660  001BFE  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1661  001C02  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  1662  001C06  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  1663  001C0A  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  1664  001C0E  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  1665                           
  1666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  1667  001C12  EF23  F00E         	goto	l271
  1668  001C16                     l3861:
  1669                           
  1670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1671  001C16  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1672  001C1A  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1673  001C1E  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1674  001C22  0E04               	movlw	4
  1675  001C24  26DE               	addwf	postinc2,f,c
  1676  001C26  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1677  001C2A  0E00               	movlw	0
  1678  001C2C  22DD               	addwfc	postdec2,f,c
  1679  001C2E  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1680  001C32  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1681  001C36  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  1682  001C3A  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  1683  001C3E  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  1684  001C42  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  1685  001C46                     l271:
  1686                           
  1687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1688  001C46  0E02               	movlw	2
  1689  001C48  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690  001C4C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691  001C50  26DE               	addwf	postinc2,f,c
  1692  001C52  0E00               	movlw	0
  1693  001C54  22DD               	addwfc	postdec2,f,c
  1694  001C56  EF85  F00D         	goto	l3847
  1695  001C5A                     l3867:
  1696                           
  1697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1698  001C5A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1699  001C5E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1700  001C62  CFDE FFF6          	movff	postinc2,tblptrl
  1701  001C66  CFDD FFF7          	movff	postdec2,tblptrh
  1702  001C6A                     	if	0	;tblptru may be non-zero
  1703  001C6A                     	endif
  1704  001C6A                     	if	0	;tblptru may be non-zero
  1705  001C6A                     	endif
  1706  001C6A  0008               	tblrd		*
  1707  001C6C  50F5               	movf	tablat,w,c
  1708  001C6E  0A25               	xorlw	37
  1709  001C70  A4D8               	btfss	status,2,c
  1710  001C72  EF3D  F00E         	goto	u4781
  1711  001C76  EF3F  F00E         	goto	u4780
  1712  001C7A                     u4781:
  1713  001C7A  EF56  F00E         	goto	l3877
  1714  001C7E                     u4780:
  1715  001C7E                     
  1716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1717  001C7E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1718  001C82  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1719  001C86  2ADE               	incf	postinc2,f,c
  1720  001C88  0E00               	movlw	0
  1721  001C8A  22DD               	addwfc	postdec2,f,c
  1722  001C8C                     
  1723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1724  001C8C  0E00               	movlw	0
  1725  001C8E  6E02               	movwf	(fputc@c+1)^0,c
  1726  001C90  0E25               	movlw	37
  1727  001C92  6E01               	movwf	fputc@c^0,c
  1728  001C94  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1729  001C98  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1730  001C9C  EC81  F017         	call	_fputc	;wreg free
  1731  001CA0                     l3873:
  1732                           
  1733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1734  001CA0  0E00               	movlw	0
  1735  001CA2  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1736  001CA4  0E01               	movlw	1
  1737  001CA6  6E48               	movwf	?_vfpfcnvrt^0,c
  1738  001CA8  EF7E  F00E         	goto	l264
  1739  001CAC                     l3877:
  1740                           
  1741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1742  001CAC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1743  001CB0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1744  001CB4  2ADE               	incf	postinc2,f,c
  1745  001CB6  0E00               	movlw	0
  1746  001CB8  22DD               	addwfc	postdec2,f,c
  1747  001CBA                     
  1748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1749  001CBA  0E00               	movlw	0
  1750  001CBC  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1751  001CBE  0E00               	movlw	0
  1752  001CC0  6E48               	movwf	?_vfpfcnvrt^0,c
  1753  001CC2  EF7E  F00E         	goto	l264
  1754  001CC6                     l3883:
  1755                           
  1756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1757  001CC6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1758  001CCA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1759  001CCE  CFDE FFF6          	movff	postinc2,tblptrl
  1760  001CD2  CFDD FFF7          	movff	postdec2,tblptrh
  1761  001CD6                     	if	0	;tblptru may be non-zero
  1762  001CD6                     	endif
  1763  001CD6                     	if	0	;tblptru may be non-zero
  1764  001CD6                     	endif
  1765  001CD6  0008               	tblrd		*
  1766  001CD8  50F5               	movf	tablat,w,c
  1767  001CDA  6E01               	movwf	fputc@c^0,c
  1768  001CDC  6A02               	clrf	(fputc@c+1)^0,c
  1769  001CDE  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1770  001CE2  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1771  001CE6  EC81  F017         	call	_fputc	;wreg free
  1772  001CEA                     
  1773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1774  001CEA  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1775  001CEE  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1776  001CF2  2ADE               	incf	postinc2,f,c
  1777  001CF4  0E00               	movlw	0
  1778  001CF6  22DD               	addwfc	postdec2,f,c
  1779  001CF8  EF50  F00E         	goto	l3873
  1780  001CFC                     l264:
  1781  001CFC  0012               	return		;funcret
  1782  001CFE                     __end_of_vfpfcnvrt:
  1783                           	opt callstack 0
  1784                           
  1785 ;; *************** function _strncmp *****************
  1786 ;; Defined at:
  1787 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1790 ;;		 -> vfpfcnvrt@ct(3), 
  1791 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1792 ;;		 -> STR_12(3), 
  1793 ;;  n               2    4[COMRAM] unsigned int 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1796 ;;		 -> STR_12(3), 
  1797 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1798 ;;		 -> vfpfcnvrt@ct(3), 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2    0[COMRAM] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1808 ;;      Params:         6       0       0       0       0       0       0       0       0
  1809 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1810 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1811 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1812 ;;Total ram usage:       11 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_vfpfcnvrt
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text4
  1822  002E2C                     __ptext4:
  1823                           	opt callstack 0
  1824  002E2C                     _strncmp:
  1825                           	opt callstack 27
  1826  002E2C  C001  F008         	movff	strncmp@_l,strncmp@l
  1827  002E30  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1828  002E34  C003  F00A         	movff	strncmp@_r,strncmp@r
  1829  002E38  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1830  002E3C  0605               	decf	strncmp@n^0,f,c
  1831  002E3E  A0D8               	btfss	status,0,c
  1832  002E40  0606               	decf	(strncmp@n+1)^0,f,c
  1833  002E42  2805               	incf	strncmp@n^0,w,c
  1834  002E44  E106               	bnz	u4581
  1835  002E46  2806               	incf	(strncmp@n+1)^0,w,c
  1836  002E48  A4D8               	btfss	status,2,c
  1837  002E4A  EF29  F017         	goto	u4581
  1838  002E4E  EF2B  F017         	goto	u4580
  1839  002E52                     u4581:
  1840  002E52  EF38  F017         	goto	l3759
  1841  002E56                     u4580:
  1842  002E56  0E00               	movlw	0
  1843  002E58  6E02               	movwf	(?_strncmp+1)^0,c
  1844  002E5A  0E00               	movlw	0
  1845  002E5C  6E01               	movwf	?_strncmp^0,c
  1846  002E5E  EF80  F017         	goto	l1073
  1847  002E62                     l3757:
  1848  002E62  4A08               	infsnz	strncmp@l^0,f,c
  1849  002E64  2A09               	incf	(strncmp@l+1)^0,f,c
  1850  002E66  4A0A               	infsnz	strncmp@r^0,f,c
  1851  002E68  2A0B               	incf	(strncmp@r+1)^0,f,c
  1852  002E6A  0605               	decf	strncmp@n^0,f,c
  1853  002E6C  A0D8               	btfss	status,0,c
  1854  002E6E  0606               	decf	(strncmp@n+1)^0,f,c
  1855  002E70                     l3759:
  1856  002E70  C008  FFD9         	movff	strncmp@l,fsr2l
  1857  002E74  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1858  002E78  50DF               	movf	indf2,w,c
  1859  002E7A  B4D8               	btfsc	status,2,c
  1860  002E7C  EF42  F017         	goto	u4591
  1861  002E80  EF44  F017         	goto	u4590
  1862  002E84                     u4591:
  1863  002E84  EF6F  F017         	goto	l3767
  1864  002E88                     u4590:
  1865  002E88  C00A  FFF6         	movff	strncmp@r,tblptrl
  1866  002E8C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1867  002E90                     	if	0	;tblptru may be non-zero
  1868  002E90                     	endif
  1869  002E90                     	if	0	;tblptru may be non-zero
  1870  002E90                     	endif
  1871  002E90  0008               	tblrd		*
  1872  002E92  50F5               	movf	tablat,w,c
  1873  002E94  0900               	iorlw	0
  1874  002E96  B4D8               	btfsc	status,2,c
  1875  002E98  EF50  F017         	goto	u4601
  1876  002E9C  EF52  F017         	goto	u4600
  1877  002EA0                     u4601:
  1878  002EA0  EF6F  F017         	goto	l3767
  1879  002EA4                     u4600:
  1880  002EA4  5005               	movf	strncmp@n^0,w,c
  1881  002EA6  1006               	iorwf	(strncmp@n+1)^0,w,c
  1882  002EA8  B4D8               	btfsc	status,2,c
  1883  002EAA  EF59  F017         	goto	u4611
  1884  002EAE  EF5B  F017         	goto	u4610
  1885  002EB2                     u4611:
  1886  002EB2  EF6F  F017         	goto	l3767
  1887  002EB6                     u4610:
  1888  002EB6  C008  FFD9         	movff	strncmp@l,fsr2l
  1889  002EBA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1890  002EBE  50DF               	movf	indf2,w,c
  1891  002EC0  6E07               	movwf	??_strncmp^0,c
  1892  002EC2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1893  002EC6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1894  002ECA                     	if	0	;tblptru may be non-zero
  1895  002ECA                     	endif
  1896  002ECA                     	if	0	;tblptru may be non-zero
  1897  002ECA                     	endif
  1898  002ECA  0008               	tblrd		*
  1899  002ECC  50F5               	movf	tablat,w,c
  1900  002ECE  1807               	xorwf	??_strncmp^0,w,c
  1901  002ED0  B4D8               	btfsc	status,2,c
  1902  002ED2  EF6D  F017         	goto	u4621
  1903  002ED6  EF6F  F017         	goto	u4620
  1904  002EDA                     u4621:
  1905  002EDA  EF31  F017         	goto	l3757
  1906  002EDE                     u4620:
  1907  002EDE                     l3767:
  1908  002EDE  C008  FFD9         	movff	strncmp@l,fsr2l
  1909  002EE2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1910  002EE6  50DF               	movf	indf2,w,c
  1911  002EE8  6E07               	movwf	??_strncmp^0,c
  1912  002EEA  C00A  FFF6         	movff	strncmp@r,tblptrl
  1913  002EEE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1914  002EF2                     	if	0	;tblptru may be non-zero
  1915  002EF2                     	endif
  1916  002EF2                     	if	0	;tblptru may be non-zero
  1917  002EF2                     	endif
  1918  002EF2  0008               	tblrd		*
  1919  002EF4  50F5               	movf	tablat,w,c
  1920  002EF6  5C07               	subwf	??_strncmp^0,w,c
  1921  002EF8  6E01               	movwf	?_strncmp^0,c
  1922  002EFA  6A02               	clrf	(?_strncmp+1)^0,c
  1923  002EFC  A0D8               	btfss	status,0,c
  1924  002EFE  0602               	decf	(?_strncmp+1)^0,f,c
  1925  002F00                     l1073:
  1926  002F00  0012               	return		;funcret
  1927  002F02                     __end_of_strncmp:
  1928                           	opt callstack 0
  1929                           
  1930 ;; *************** function _efgtoa *****************
  1931 ;; Defined at:
  1932 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1935 ;;		 -> sprintf@f(6), 
  1936 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  1937 ;;  c               1   65[COMRAM] unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  u               4   52[BANK0 ] unsigned char 
  1940 ;;  g               4   44[BANK0 ] unsigned char 
  1941 ;;  l               4   38[BANK0 ] unsigned char 
  1942 ;;  h               4   34[BANK0 ] unsigned char 
  1943 ;;  ou              4    0[BANK0 ] unsigned char 
  1944 ;;  n               2   50[BANK0 ] int 
  1945 ;;  e               2   48[BANK0 ] int 
  1946 ;;  i               2   42[BANK0 ] int 
  1947 ;;  w               2   31[BANK0 ] int 
  1948 ;;  p               2   28[BANK0 ] int 
  1949 ;;  sign            2   26[BANK0 ] int 
  1950 ;;  d               2   24[BANK0 ] int 
  1951 ;;  ne              2   22[BANK0 ] int 
  1952 ;;  m               2   20[BANK0 ] int 
  1953 ;;  pp              2   18[BANK0 ] int 
  1954 ;;  t               2   16[BANK0 ] int 
  1955 ;;  mode            1   33[BANK0 ] unsigned char 
  1956 ;;  nmode           1   30[BANK0 ] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2   59[COMRAM] int 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1966 ;;      Params:         7       0       0       0       0       0       0       0       0
  1967 ;;      Locals:         0      56       0       0       0       0       0       0       0
  1968 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1969 ;;      Totals:        12      56       0       0       0       0       0       0       0
  1970 ;;Total ram usage:       68 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    4
  1973 ;; This function calls:
  1974 ;;		___awdiv
  1975 ;;		___awmod
  1976 ;;		___fladd
  1977 ;;		___fldiv
  1978 ;;		___fleq
  1979 ;;		___flge
  1980 ;;		___flmul
  1981 ;;		___flneg
  1982 ;;		___flsub
  1983 ;;		___fltol
  1984 ;;		___fpclassifyf
  1985 ;;		_floorf
  1986 ;;		_isupper
  1987 ;;		_pad
  1988 ;;		_strcpy
  1989 ;;		_tolower
  1990 ;; This function is called by:
  1991 ;;		_vfpfcnvrt
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text5
  1996  00082E                     __ptext5:
  1997                           	opt callstack 0
  1998  00082E                     _efgtoa:
  1999                           	opt callstack 23
  2000  00082E                     
  2001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2002  00082E  0E00               	movlw	0
  2003  000830  0100               	movlb	0	; () banked
  2004  000832  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2005  000834  0E00               	movlw	0
  2006  000836  6F7A               	movwf	efgtoa@sign& (0+255),b
  2007  000838                     
  2008                           ; BSR set to: 0
  2009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2010  000838  C03E  F08C         	movff	efgtoa@f,efgtoa@g
  2011  00083C  C03F  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2012  000840  C040  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2013  000844  C041  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2014  000848                     
  2015                           ; BSR set to: 0
  2016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2017  000848  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2018  00084A  EF2B  F004         	goto	u3990
  2019  00084E  EF29  F004         	goto	u3991
  2020  000852                     u3991:
  2021  000852  EF41  F004         	goto	l3421
  2022  000856                     u3990:
  2023  000856                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2026  000856  0E00               	movlw	0
  2027  000858  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2028  00085A  0E01               	movlw	1
  2029  00085C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2030  00085E                     
  2031                           ; BSR set to: 0
  2032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2033  00085E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2034  000862  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2035  000866  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2036  00086A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2037  00086E  EC8A  F01B         	call	___flneg	;wreg free
  2038  000872  C001  F08C         	movff	?___flneg,efgtoa@g
  2039  000876  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2040  00087A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2041  00087E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2042  000882                     l3421:
  2043                           
  2044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2045  000882  0E00               	movlw	0
  2046  000884  0100               	movlb	0	; () banked
  2047  000886  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2048  000888  0E00               	movlw	0
  2049  00088A  6F92               	movwf	efgtoa@n& (0+255),b
  2050  00088C                     
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2053  00088C  C0DD  F07F         	movff	_width,efgtoa@w
  2054  000890  C0DE  F080         	movff	_width+1,efgtoa@w+1
  2055  000894                     
  2056                           ; BSR set to: 0
  2057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2058  000894  517A               	movf	efgtoa@sign& (0+255),w,b
  2059  000896  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2060  000898  A4D8               	btfss	status,2,c
  2061  00089A  EF51  F004         	goto	u4001
  2062  00089E  EF53  F004         	goto	u4000
  2063  0008A2                     u4001:
  2064  0008A2  EF5A  F004         	goto	l3429
  2065  0008A6                     u4000:
  2066  0008A6                     
  2067                           ; BSR set to: 0
  2068  0008A6  A5E1               	btfss	_flags& (0+255),2,b
  2069  0008A8  EF58  F004         	goto	u4011
  2070  0008AC  EF5A  F004         	goto	u4010
  2071  0008B0                     u4011:
  2072  0008B0  EF74  F004         	goto	l3441
  2073  0008B4                     u4010:
  2074  0008B4                     l3429:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2078  0008B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2079  0008B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2080  0008B8  A4D8               	btfss	status,2,c
  2081  0008BA  EF61  F004         	goto	u4021
  2082  0008BE  EF63  F004         	goto	u4020
  2083  0008C2                     u4021:
  2084  0008C2  EF69  F004         	goto	l3433
  2085  0008C6                     u4020:
  2086  0008C6                     
  2087                           ; BSR set to: 0
  2088  0008C6  0E00               	movlw	0
  2089  0008C8  6F65               	movwf	(_efgtoa$404+1)& (0+255),b
  2090  0008CA  0E2B               	movlw	43
  2091  0008CC  6F64               	movwf	_efgtoa$404& (0+255),b
  2092  0008CE  EF6D  F004         	goto	l3435
  2093  0008D2                     l3433:
  2094                           
  2095                           ; BSR set to: 0
  2096  0008D2  0E00               	movlw	0
  2097  0008D4  6F65               	movwf	(_efgtoa$404+1)& (0+255),b
  2098  0008D6  0E2D               	movlw	45
  2099  0008D8  6F64               	movwf	_efgtoa$404& (0+255),b
  2100  0008DA                     l3435:
  2101                           
  2102                           ; BSR set to: 0
  2103  0008DA  C064  F100         	movff	_efgtoa$404,_dbuf
  2104  0008DE                     
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2107  0008DE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2108  0008E0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2109  0008E2                     
  2110                           ; BSR set to: 0
  2111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2112  0008E2  077F               	decf	efgtoa@w& (0+255),f,b
  2113  0008E4  A0D8               	btfss	status,0,c
  2114  0008E6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2115  0008E8                     l3441:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2119  0008E8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2120  0008EC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2121  0008F0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2122  0008F4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2123  0008F8  EC97  F016         	call	___fpclassifyf	;wreg free
  2124  0008FC  0401               	decf	?___fpclassifyf^0,w,c
  2125  0008FE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2126  000900  A4D8               	btfss	status,2,c
  2127  000902  EF85  F004         	goto	u4031
  2128  000906  EF87  F004         	goto	u4030
  2129  00090A                     u4031:
  2130  00090A  EFDE  F004         	goto	l3459
  2131  00090E                     u4030:
  2132  00090E  0EBF               	movlw	191
  2133  000910  6E43               	movwf	??_efgtoa^0,c
  2134  000912  0EFF               	movlw	255
  2135  000914  6E44               	movwf	(??_efgtoa+1)^0,c
  2136  000916  5042               	movf	efgtoa@c^0,w,c
  2137  000918  6E45               	movwf	(??_efgtoa+2)^0,c
  2138  00091A  6A46               	clrf	(??_efgtoa+3)^0,c
  2139  00091C  5043               	movf	??_efgtoa^0,w,c
  2140  00091E  2645               	addwf	(??_efgtoa+2)^0,f,c
  2141  000920  5044               	movf	(??_efgtoa+1)^0,w,c
  2142  000922  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2143  000924  5046               	movf	(??_efgtoa+3)^0,w,c
  2144  000926  E10A               	bnz	u4040
  2145  000928  0E1A               	movlw	26
  2146  00092A  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2147  00092C  A0D8               	btfss	status,0,c
  2148  00092E  EF9B  F004         	goto	u4041
  2149  000932  EF9E  F004         	goto	u4040
  2150  000936                     u4041:
  2151  000936  0E01               	movlw	1
  2152  000938  EF9F  F004         	goto	u4050
  2153  00093C                     u4040:
  2154  00093C  0E00               	movlw	0
  2155  00093E                     u4050:
  2156  00093E  0100               	movlb	0	; () banked
  2157  000940  6F66               	movwf	_efgtoa$405& (0+255),b
  2158  000942  6B67               	clrf	(_efgtoa$405+1)& (0+255),b
  2159  000944                     
  2160                           ; BSR set to: 0
  2161  000944  5166               	movf	_efgtoa$405& (0+255),w,b
  2162  000946  1167               	iorwf	(_efgtoa$405+1)& (0+255),w,b
  2163  000948  B4D8               	btfsc	status,2,c
  2164  00094A  EFA9  F004         	goto	u4061
  2165  00094E  EFAB  F004         	goto	u4060
  2166  000952                     u4061:
  2167  000952  EFB9  F004         	goto	l3451
  2168  000956                     u4060:
  2169  000956                     
  2170                           ; BSR set to: 0
  2171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2172  000956  0E00               	movlw	low _dbuf
  2173  000958  2592               	addwf	efgtoa@n& (0+255),w,b
  2174  00095A  6E01               	movwf	strcpy@dest^0,c
  2175  00095C  0E01               	movlw	high _dbuf
  2176  00095E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2177  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2178  000962  0E1A               	movlw	low STR_2
  2179  000964  6E03               	movwf	strcpy@src^0,c
  2180  000966  0E08               	movlw	high STR_2
  2181  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2182  00096A  EC84  F01A         	call	_strcpy	;wreg free
  2183                           
  2184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2185  00096E  EFC5  F004         	goto	l3453
  2186  000972                     l3451:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2190  000972  0E00               	movlw	low _dbuf
  2191  000974  2592               	addwf	efgtoa@n& (0+255),w,b
  2192  000976  6E01               	movwf	strcpy@dest^0,c
  2193  000978  0E01               	movlw	high _dbuf
  2194  00097A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2195  00097C  6E02               	movwf	(strcpy@dest+1)^0,c
  2196  00097E  0E22               	movlw	low STR_3
  2197  000980  6E03               	movwf	strcpy@src^0,c
  2198  000982  0E08               	movlw	high STR_3
  2199  000984  6E04               	movwf	(strcpy@src+1)^0,c
  2200  000986  EC84  F01A         	call	_strcpy	;wreg free
  2201  00098A                     l3453:
  2202                           
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2204  00098A  0100               	movlb	0	; () banked
  2205  00098C  0EFD               	movlw	253
  2206  00098E  277F               	addwf	efgtoa@w& (0+255),f,b
  2207  000990  0EFF               	movlw	255
  2208  000992  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2209  000994                     l3455:
  2210                           
  2211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2212  000994  C03C  F011         	movff	efgtoa@fp,pad@fp
  2213  000998  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  2214  00099C  0E00               	movlw	low _dbuf
  2215  00099E  6E13               	movwf	pad@buf^0,c
  2216  0009A0  0E01               	movlw	high _dbuf
  2217  0009A2  6E14               	movwf	(pad@buf+1)^0,c
  2218  0009A4  C07F  F015         	movff	efgtoa@w,pad@p
  2219  0009A8  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2220  0009AC  ECE6  F017         	call	_pad	;wreg free
  2221  0009B0  C011  F03C         	movff	?_pad,?_efgtoa
  2222  0009B4  C012  F03D         	movff	?_pad+1,?_efgtoa+1
  2223  0009B8  EFEE  F009         	goto	l174
  2224  0009BC                     l3459:
  2225                           
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2227  0009BC  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2228  0009C0  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2229  0009C4  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2230  0009C8  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2231  0009CC  EC97  F016         	call	___fpclassifyf	;wreg free
  2232  0009D0  5001               	movf	?___fpclassifyf^0,w,c
  2233  0009D2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2234  0009D4  A4D8               	btfss	status,2,c
  2235  0009D6  EFEF  F004         	goto	u4071
  2236  0009DA  EFF1  F004         	goto	u4070
  2237  0009DE                     u4071:
  2238  0009DE  EF31  F005         	goto	l3477
  2239  0009E2                     u4070:
  2240  0009E2  0EBF               	movlw	191
  2241  0009E4  6E43               	movwf	??_efgtoa^0,c
  2242  0009E6  0EFF               	movlw	255
  2243  0009E8  6E44               	movwf	(??_efgtoa+1)^0,c
  2244  0009EA  5042               	movf	efgtoa@c^0,w,c
  2245  0009EC  6E45               	movwf	(??_efgtoa+2)^0,c
  2246  0009EE  6A46               	clrf	(??_efgtoa+3)^0,c
  2247  0009F0  5043               	movf	??_efgtoa^0,w,c
  2248  0009F2  2645               	addwf	(??_efgtoa+2)^0,f,c
  2249  0009F4  5044               	movf	(??_efgtoa+1)^0,w,c
  2250  0009F6  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2251  0009F8  5046               	movf	(??_efgtoa+3)^0,w,c
  2252  0009FA  E10A               	bnz	u4080
  2253  0009FC  0E1A               	movlw	26
  2254  0009FE  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2255  000A00  A0D8               	btfss	status,0,c
  2256  000A02  EF05  F005         	goto	u4081
  2257  000A06  EF08  F005         	goto	u4080
  2258  000A0A                     u4081:
  2259  000A0A  0E01               	movlw	1
  2260  000A0C  EF09  F005         	goto	u4090
  2261  000A10                     u4080:
  2262  000A10  0E00               	movlw	0
  2263  000A12                     u4090:
  2264  000A12  0100               	movlb	0	; () banked
  2265  000A14  6F68               	movwf	_efgtoa$410& (0+255),b
  2266  000A16  6B69               	clrf	(_efgtoa$410+1)& (0+255),b
  2267  000A18                     
  2268                           ; BSR set to: 0
  2269  000A18  5168               	movf	_efgtoa$410& (0+255),w,b
  2270  000A1A  1169               	iorwf	(_efgtoa$410+1)& (0+255),w,b
  2271  000A1C  B4D8               	btfsc	status,2,c
  2272  000A1E  EF13  F005         	goto	u4101
  2273  000A22  EF15  F005         	goto	u4100
  2274  000A26                     u4101:
  2275  000A26  EF23  F005         	goto	l3469
  2276  000A2A                     u4100:
  2277  000A2A                     
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2280  000A2A  0E00               	movlw	low _dbuf
  2281  000A2C  2592               	addwf	efgtoa@n& (0+255),w,b
  2282  000A2E  6E01               	movwf	strcpy@dest^0,c
  2283  000A30  0E01               	movlw	high _dbuf
  2284  000A32  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2285  000A34  6E02               	movwf	(strcpy@dest+1)^0,c
  2286  000A36  0E1E               	movlw	low STR_6
  2287  000A38  6E03               	movwf	strcpy@src^0,c
  2288  000A3A  0E08               	movlw	high STR_6
  2289  000A3C  6E04               	movwf	(strcpy@src+1)^0,c
  2290  000A3E  EC84  F01A         	call	_strcpy	;wreg free
  2291                           
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2293  000A42  EFC5  F004         	goto	l3453
  2294  000A46                     l3469:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2298  000A46  0E00               	movlw	low _dbuf
  2299  000A48  2592               	addwf	efgtoa@n& (0+255),w,b
  2300  000A4A  6E01               	movwf	strcpy@dest^0,c
  2301  000A4C  0E01               	movlw	high _dbuf
  2302  000A4E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2303  000A50  6E02               	movwf	(strcpy@dest+1)^0,c
  2304  000A52  0E26               	movlw	low STR_7
  2305  000A54  6E03               	movwf	strcpy@src^0,c
  2306  000A56  0E08               	movlw	high STR_7
  2307  000A58  6E04               	movwf	(strcpy@src+1)^0,c
  2308  000A5A  EC84  F01A         	call	_strcpy	;wreg free
  2309  000A5E  EFC5  F004         	goto	l3453
  2310  000A62                     l3477:
  2311                           
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2313  000A62  0E00               	movlw	0
  2314  000A64  0100               	movlb	0	; () banked
  2315  000A66  6F94               	movwf	efgtoa@u& (0+255),b
  2316  000A68  0E00               	movlw	0
  2317  000A6A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2318  000A6C  0E80               	movlw	128
  2319  000A6E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2320  000A70  0E3F               	movlw	63
  2321  000A72  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2322                           
  2323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2324  000A74  0E00               	movlw	0
  2325  000A76  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2326  000A78  0E00               	movlw	0
  2327  000A7A  6F90               	movwf	efgtoa@e& (0+255),b
  2328  000A7C                     
  2329                           ; BSR set to: 0
  2330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2331  000A7C  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2332  000A80  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2333  000A84  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2334  000A88  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2335  000A8C  0E00               	movlw	0
  2336  000A8E  6E05               	movwf	___fleq@ff2^0,c
  2337  000A90  0E00               	movlw	0
  2338  000A92  6E06               	movwf	(___fleq@ff2+1)^0,c
  2339  000A94  0E00               	movlw	0
  2340  000A96  6E07               	movwf	(___fleq@ff2+2)^0,c
  2341  000A98  0E00               	movlw	0
  2342  000A9A  6E08               	movwf	(___fleq@ff2+3)^0,c
  2343  000A9C  EC03  F019         	call	___fleq	;wreg free
  2344  000AA0  B0D8               	btfsc	status,0,c
  2345  000AA2  EF55  F005         	goto	u4111
  2346  000AA6  EF57  F005         	goto	u4110
  2347  000AAA                     u4111:
  2348  000AAA  EFDA  F005         	goto	l3495
  2349  000AAE                     u4110:
  2350  000AAE  EF76  F005         	goto	l3487
  2351  000AB2                     l3483:
  2352                           
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2354  000AB2  C094  F001         	movff	efgtoa@u,___flmul@b
  2355  000AB6  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2356  000ABA  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2357  000ABE  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2358  000AC2  0E00               	movlw	0
  2359  000AC4  6E05               	movwf	___flmul@a^0,c
  2360  000AC6  0E00               	movlw	0
  2361  000AC8  6E06               	movwf	(___flmul@a+1)^0,c
  2362  000ACA  0E20               	movlw	32
  2363  000ACC  6E07               	movwf	(___flmul@a+2)^0,c
  2364  000ACE  0E41               	movlw	65
  2365  000AD0  6E08               	movwf	(___flmul@a+3)^0,c
  2366  000AD2  EC7F  F00E         	call	___flmul	;wreg free
  2367  000AD6  C001  F094         	movff	?___flmul,efgtoa@u
  2368  000ADA  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2369  000ADE  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2370  000AE2  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2371  000AE6                     
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2373  000AE6  0100               	movlb	0	; () banked
  2374  000AE8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2375  000AEA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2376  000AEC                     l3487:
  2377                           
  2378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2379  000AEC  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2380  000AF0  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2381  000AF4  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2382  000AF8  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2383  000AFC  0E00               	movlw	0
  2384  000AFE  6E05               	movwf	___flmul@a^0,c
  2385  000B00  0E00               	movlw	0
  2386  000B02  6E06               	movwf	(___flmul@a+1)^0,c
  2387  000B04  0E20               	movlw	32
  2388  000B06  6E07               	movwf	(___flmul@a+2)^0,c
  2389  000B08  0E41               	movlw	65
  2390  000B0A  6E08               	movwf	(___flmul@a+3)^0,c
  2391  000B0C  C094  F001         	movff	efgtoa@u,___flmul@b
  2392  000B10  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2393  000B14  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2394  000B18  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2395  000B1C  EC7F  F00E         	call	___flmul	;wreg free
  2396  000B20  C001  F01E         	movff	?___flmul,___flge@ff2
  2397  000B24  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2398  000B28  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2399  000B2C  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2400  000B30  EC15  F016         	call	___flge	;wreg free
  2401  000B34  B0D8               	btfsc	status,0,c
  2402  000B36  EF9F  F005         	goto	u4121
  2403  000B3A  EFA1  F005         	goto	u4120
  2404  000B3E                     u4121:
  2405  000B3E  EF59  F005         	goto	l3483
  2406  000B42                     u4120:
  2407  000B42  EFC1  F005         	goto	l3493
  2408  000B46                     l3489:
  2409                           
  2410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2411  000B46  C094  F00F         	movff	efgtoa@u,___fldiv@b
  2412  000B4A  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2413  000B4E  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2414  000B52  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2415  000B56  0E00               	movlw	0
  2416  000B58  6E13               	movwf	___fldiv@a^0,c
  2417  000B5A  0E00               	movlw	0
  2418  000B5C  6E14               	movwf	(___fldiv@a+1)^0,c
  2419  000B5E  0E20               	movlw	32
  2420  000B60  6E15               	movwf	(___fldiv@a+2)^0,c
  2421  000B62  0E41               	movlw	65
  2422  000B64  6E16               	movwf	(___fldiv@a+3)^0,c
  2423  000B66  EC94  F010         	call	___fldiv	;wreg free
  2424  000B6A  C00F  F094         	movff	?___fldiv,efgtoa@u
  2425  000B6E  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  2426  000B72  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  2427  000B76  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  2428  000B7A                     
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2430  000B7A  0100               	movlb	0	; () banked
  2431  000B7C  0790               	decf	efgtoa@e& (0+255),f,b
  2432  000B7E  A0D8               	btfss	status,0,c
  2433  000B80  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2434  000B82                     l3493:
  2435                           
  2436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2437  000B82  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2438  000B86  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2439  000B8A  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2440  000B8E  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2441  000B92  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2442  000B96  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2443  000B9A  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2444  000B9E  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2445  000BA2  EC15  F016         	call	___flge	;wreg free
  2446  000BA6  A0D8               	btfss	status,0,c
  2447  000BA8  EFD8  F005         	goto	u4131
  2448  000BAC  EFDA  F005         	goto	u4130
  2449  000BB0                     u4131:
  2450  000BB0  EFA3  F005         	goto	l3489
  2451  000BB4                     u4130:
  2452  000BB4                     l3495:
  2453                           
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2455  000BB4  C042  F007         	movff	efgtoa@c,tolower@c
  2456  000BB8  6A08               	clrf	(tolower@c+1)^0,c
  2457  000BBA  EC54  F01A         	call	_tolower	;wreg free
  2458  000BBE  5007               	movf	?_tolower^0,w,c
  2459  000BC0  0100               	movlb	0	; () banked
  2460  000BC2  6F81               	movwf	efgtoa@mode& (0+255),b
  2461  000BC4                     
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2464  000BC4  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2465  000BC8                     
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2468  000BC8  0E67               	movlw	103
  2469  000BCA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2470  000BCC  A4D8               	btfss	status,2,c
  2471  000BCE  EFEB  F005         	goto	u4141
  2472  000BD2  EFED  F005         	goto	u4140
  2473  000BD6                     u4141:
  2474  000BD6  EF13  F006         	goto	l3509
  2475  000BDA                     u4140:
  2476  000BDA                     
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2479  000BDA  51DF               	movf	_prec& (0+255),w,b
  2480  000BDC  11E0               	iorwf	(_prec+1)& (0+255),w,b
  2481  000BDE  A4D8               	btfss	status,2,c
  2482  000BE0  EFF4  F005         	goto	u4151
  2483  000BE4  EFF6  F005         	goto	u4150
  2484  000BE8                     u4151:
  2485  000BE8  EFFA  F005         	goto	l3505
  2486  000BEC                     u4150:
  2487  000BEC                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2490  000BEC  0E00               	movlw	0
  2491  000BEE  6FE0               	movwf	(_prec+1)& (0+255),b
  2492  000BF0  0E01               	movlw	1
  2493  000BF2  6FDF               	movwf	_prec& (0+255),b
  2494  000BF4                     l3505:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2498  000BF4  BFE0               	btfsc	(_prec+1)& (0+255),7,b
  2499  000BF6  EF07  F006         	goto	u4160
  2500  000BFA  51E0               	movf	(_prec+1)& (0+255),w,b
  2501  000BFC  E106               	bnz	u4161
  2502  000BFE  05DF               	decf	_prec& (0+255),w,b
  2503  000C00  B0D8               	btfsc	status,0,c
  2504  000C02  EF05  F006         	goto	u4161
  2505  000C06  EF07  F006         	goto	u4160
  2506  000C0A                     u4161:
  2507  000C0A  EF0D  F006         	goto	l192
  2508  000C0E                     u4160:
  2509  000C0E                     l3507:
  2510                           
  2511                           ; BSR set to: 0
  2512  000C0E  0E00               	movlw	0
  2513  000C10  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2514  000C12  0E06               	movlw	6
  2515  000C14  6F7C               	movwf	efgtoa@p& (0+255),b
  2516  000C16  EF1C  F006         	goto	l3515
  2517  000C1A                     l192:
  2518                           
  2519                           ; BSR set to: 0
  2520  000C1A  C0DF  F07C         	movff	_prec,efgtoa@p
  2521  000C1E  C0E0  F07D         	movff	_prec+1,efgtoa@p+1
  2522  000C22  EF1C  F006         	goto	l3515
  2523  000C26                     l3509:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2527  000C26  BFE0               	btfsc	(_prec+1)& (0+255),7,b
  2528  000C28  EF18  F006         	goto	u4171
  2529  000C2C  EF1A  F006         	goto	u4170
  2530  000C30                     u4171:
  2531  000C30  EF07  F006         	goto	l3507
  2532  000C34                     u4170:
  2533  000C34  EF0D  F006         	goto	l192
  2534  000C38                     l3515:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2538  000C38  0E67               	movlw	103
  2539  000C3A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2540  000C3C  A4D8               	btfss	status,2,c
  2541  000C3E  EF23  F006         	goto	u4181
  2542  000C42  EF25  F006         	goto	u4180
  2543  000C46                     u4181:
  2544  000C46  EF54  F006         	goto	l3525
  2545  000C4A                     u4180:
  2546  000C4A                     
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2549  000C4A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2550  000C4C  EF33  F006         	goto	u4190
  2551  000C50  0EFC               	movlw	252
  2552  000C52  5D90               	subwf	efgtoa@e& (0+255),w,b
  2553  000C54  0EFF               	movlw	255
  2554  000C56  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2555  000C58  A0D8               	btfss	status,0,c
  2556  000C5A  EF31  F006         	goto	u4191
  2557  000C5E  EF33  F006         	goto	u4190
  2558  000C62                     u4191:
  2559  000C62  EF52  F006         	goto	l3523
  2560  000C66                     u4190:
  2561  000C66                     
  2562                           ; BSR set to: 0
  2563  000C66  0EFF               	movlw	255
  2564  000C68  6E43               	movwf	??_efgtoa^0,c
  2565  000C6A  0EFF               	movlw	255
  2566  000C6C  6E44               	movwf	(??_efgtoa+1)^0,c
  2567  000C6E  C07C  F045         	movff	efgtoa@p,??_efgtoa+2
  2568  000C72  C07D  F046         	movff	efgtoa@p+1,??_efgtoa+3
  2569  000C76  5043               	movf	??_efgtoa^0,w,c
  2570  000C78  2645               	addwf	(??_efgtoa+2)^0,f,c
  2571  000C7A  5044               	movf	(??_efgtoa+1)^0,w,c
  2572  000C7C  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2573  000C7E  5190               	movf	efgtoa@e& (0+255),w,b
  2574  000C80  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2575  000C82  5046               	movf	(??_efgtoa+3)^0,w,c
  2576  000C84  0A80               	xorlw	128
  2577  000C86  6E47               	movwf	(??_efgtoa+4)^0,c
  2578  000C88  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2579  000C8A  0A80               	xorlw	128
  2580  000C8C  5847               	subwfb	(??_efgtoa+4)^0,w,c
  2581  000C8E  A0D8               	btfss	status,0,c
  2582  000C90  EF4C  F006         	goto	u4201
  2583  000C94  EF4E  F006         	goto	u4200
  2584  000C98                     u4201:
  2585  000C98  EF52  F006         	goto	l3523
  2586  000C9C                     u4200:
  2587  000C9C                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2590  000C9C  0E66               	movlw	102
  2591  000C9E  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2592                           
  2593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  2594  000CA0  EF54  F006         	goto	l3525
  2595  000CA4                     l3523:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2599  000CA4  0E65               	movlw	101
  2600  000CA6  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2601  000CA8                     l3525:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2605  000CA8  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2606  000CAC  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2607  000CB0                     
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2610  000CB0  0E67               	movlw	103
  2611  000CB2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2612  000CB4  A4D8               	btfss	status,2,c
  2613  000CB6  EF5F  F006         	goto	u4211
  2614  000CBA  EF61  F006         	goto	u4210
  2615  000CBE                     u4211:
  2616  000CBE  EF71  F006         	goto	l3533
  2617  000CC2                     u4210:
  2618  000CC2                     
  2619                           ; BSR set to: 0
  2620  000CC2  0E66               	movlw	102
  2621  000CC4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2622  000CC6  A4D8               	btfss	status,2,c
  2623  000CC8  EF68  F006         	goto	u4221
  2624  000CCC  EF6A  F006         	goto	u4220
  2625  000CD0                     u4221:
  2626  000CD0  EF73  F006         	goto	l3535
  2627  000CD4                     u4220:
  2628  000CD4                     
  2629                           ; BSR set to: 0
  2630  000CD4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2631  000CD6  EF71  F006         	goto	u4230
  2632  000CDA  EF6F  F006         	goto	u4231
  2633  000CDE                     u4231:
  2634  000CDE  EF73  F006         	goto	l3535
  2635  000CE2                     u4230:
  2636  000CE2                     l3533:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2640  000CE2  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2641  000CE4  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2642  000CE6                     l3535:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2646  000CE6  0E66               	movlw	102
  2647  000CE8  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2648  000CEA  A4D8               	btfss	status,2,c
  2649  000CEC  EF7A  F006         	goto	u4241
  2650  000CF0  EF7C  F006         	goto	u4240
  2651  000CF4                     u4241:
  2652  000CF4  EF9C  F006         	goto	l3545
  2653  000CF8                     u4240:
  2654  000CF8                     
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2657  000CF8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2658  000CFA  EF83  F006         	goto	u4250
  2659  000CFE  EF81  F006         	goto	u4251
  2660  000D02                     u4251:
  2661  000D02  EF8F  F006         	goto	l3541
  2662  000D06                     u4250:
  2663  000D06                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2666  000D06  0E00               	movlw	0
  2667  000D08  6F94               	movwf	efgtoa@u& (0+255),b
  2668  000D0A  0E00               	movlw	0
  2669  000D0C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2670  000D0E  0E80               	movlw	128
  2671  000D10  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2672  000D12  0E3F               	movlw	63
  2673  000D14  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2674                           
  2675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2676  000D16  0E00               	movlw	0
  2677  000D18  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2678  000D1A  0E00               	movlw	0
  2679  000D1C  6F90               	movwf	efgtoa@e& (0+255),b
  2680  000D1E                     l3541:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2684  000D1E  0E67               	movlw	103
  2685  000D20  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2686  000D22  B4D8               	btfsc	status,2,c
  2687  000D24  EF96  F006         	goto	u4261
  2688  000D28  EF98  F006         	goto	u4260
  2689  000D2C                     u4261:
  2690  000D2C  EF9C  F006         	goto	l3545
  2691  000D30                     u4260:
  2692  000D30                     
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2695  000D30  5190               	movf	efgtoa@e& (0+255),w,b
  2696  000D32  2774               	addwf	efgtoa@m& (0+255),f,b
  2697  000D34  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2698  000D36  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2699  000D38                     l3545:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2703  000D38  0E00               	movlw	0
  2704  000D3A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2705  000D3C  0E00               	movlw	0
  2706  000D3E  6F8A               	movwf	efgtoa@i& (0+255),b
  2707  000D40                     
  2708                           ; BSR set to: 0
  2709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2710  000D40  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2711  000D44  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2712  000D48  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2713  000D4C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2714  000D50                     
  2715                           ; BSR set to: 0
  2716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2717  000D50  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2718  000D54  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2719  000D58  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2720  000D5C  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2721                           
  2722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2723  000D60  EF2D  F007         	goto	l3559
  2724  000D64                     l3551:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2728  000D64  C082  F00F         	movff	efgtoa@h,___fldiv@b
  2729  000D68  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  2730  000D6C  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  2731  000D70  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  2732  000D74  C094  F013         	movff	efgtoa@u,___fldiv@a
  2733  000D78  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  2734  000D7C  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  2735  000D80  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  2736  000D84  EC94  F010         	call	___fldiv	;wreg free
  2737  000D88  C00F  F028         	movff	?___fldiv,floorf@x
  2738  000D8C  C010  F029         	movff	?___fldiv+1,floorf@x+1
  2739  000D90  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  2740  000D94  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  2741  000D98  EC61  F012         	call	_floorf	;wreg free
  2742  000D9C  C028  F086         	movff	?_floorf,efgtoa@l
  2743  000DA0  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  2744  000DA4  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  2745  000DA8  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  2746                           
  2747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2748  000DAC  C086  F028         	movff	efgtoa@l,___fltol@f1
  2749  000DB0  C087  F029         	movff	efgtoa@l+1,___fltol@f1+1
  2750  000DB4  C088  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  2751  000DB8  C089  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  2752  000DBC  EC92  F015         	call	___fltol	;wreg free
  2753  000DC0  C028  F078         	movff	?___fltol,efgtoa@d
  2754  000DC4  C029  F079         	movff	?___fltol+1,efgtoa@d+1
  2755  000DC8                     
  2756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2757  000DC8  C082  F01A         	movff	efgtoa@h,___flsub@b
  2758  000DCC  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2759  000DD0  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2760  000DD4  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2761  000DD8  C094  F005         	movff	efgtoa@u,___flmul@a
  2762  000DDC  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  2763  000DE0  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  2764  000DE4  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  2765  000DE8  C086  F001         	movff	efgtoa@l,___flmul@b
  2766  000DEC  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  2767  000DF0  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  2768  000DF4  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  2769  000DF8  EC7F  F00E         	call	___flmul	;wreg free
  2770  000DFC  C001  F01E         	movff	?___flmul,___flsub@a
  2771  000E00  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2772  000E04  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2773  000E08  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2774  000E0C  EC29  F01B         	call	___flsub	;wreg free
  2775  000E10  C01A  F082         	movff	?___flsub,efgtoa@h
  2776  000E14  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  2777  000E18  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  2778  000E1C  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  2779  000E20                     
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2781  000E20  C094  F00F         	movff	efgtoa@u,___fldiv@b
  2782  000E24  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2783  000E28  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2784  000E2C  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2785  000E30  0E00               	movlw	0
  2786  000E32  6E13               	movwf	___fldiv@a^0,c
  2787  000E34  0E00               	movlw	0
  2788  000E36  6E14               	movwf	(___fldiv@a+1)^0,c
  2789  000E38  0E20               	movlw	32
  2790  000E3A  6E15               	movwf	(___fldiv@a+2)^0,c
  2791  000E3C  0E41               	movlw	65
  2792  000E3E  6E16               	movwf	(___fldiv@a+3)^0,c
  2793  000E40  EC94  F010         	call	___fldiv	;wreg free
  2794  000E44  C00F  F094         	movff	?___fldiv,efgtoa@u
  2795  000E48  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  2796  000E4C  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  2797  000E50  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  2798  000E54                     
  2799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2800  000E54  0100               	movlb	0	; () banked
  2801  000E56  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2802  000E58  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2803  000E5A                     l3559:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2807  000E5A  5174               	movf	efgtoa@m& (0+255),w,b
  2808  000E5C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2809  000E5E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2810  000E60  0A80               	xorlw	128
  2811  000E62  6E43               	movwf	??_efgtoa^0,c
  2812  000E64  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2813  000E66  0A80               	xorlw	128
  2814  000E68  5843               	subwfb	??_efgtoa^0,w,c
  2815  000E6A  A0D8               	btfss	status,0,c
  2816  000E6C  EF3A  F007         	goto	u4271
  2817  000E70  EF3C  F007         	goto	u4270
  2818  000E74                     u4271:
  2819  000E74  EFB2  F006         	goto	l3551
  2820  000E78                     u4270:
  2821  000E78                     
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  2824  000E78  C094  F001         	movff	efgtoa@u,___flmul@b
  2825  000E7C  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2826  000E80  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2827  000E84  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2828  000E88  0E00               	movlw	0
  2829  000E8A  6E05               	movwf	___flmul@a^0,c
  2830  000E8C  0E00               	movlw	0
  2831  000E8E  6E06               	movwf	(___flmul@a+1)^0,c
  2832  000E90  0EA0               	movlw	160
  2833  000E92  6E07               	movwf	(___flmul@a+2)^0,c
  2834  000E94  0E40               	movlw	64
  2835  000E96  6E08               	movwf	(___flmul@a+3)^0,c
  2836  000E98  EC7F  F00E         	call	___flmul	;wreg free
  2837  000E9C  C001  F086         	movff	?___flmul,efgtoa@l
  2838  000EA0  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  2839  000EA4  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  2840  000EA8  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  2841  000EAC                     
  2842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  2843  000EAC  C082  F01A         	movff	efgtoa@h,___flge@ff1
  2844  000EB0  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2845  000EB4  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2846  000EB8  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2847  000EBC  C086  F01E         	movff	efgtoa@l,___flge@ff2
  2848  000EC0  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2849  000EC4  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2850  000EC8  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2851  000ECC  EC15  F016         	call	___flge	;wreg free
  2852  000ED0  B0D8               	btfsc	status,0,c
  2853  000ED2  EF6D  F007         	goto	u4281
  2854  000ED6  EF6F  F007         	goto	u4280
  2855  000EDA                     u4281:
  2856  000EDA  EF7A  F007         	goto	l3567
  2857  000EDE                     u4280:
  2858  000EDE                     
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  2860  000EDE  0E00               	movlw	0
  2861  000EE0  0100               	movlb	0	; () banked
  2862  000EE2  6F86               	movwf	efgtoa@l& (0+255),b
  2863  000EE4  0E00               	movlw	0
  2864  000EE6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2865  000EE8  0E00               	movlw	0
  2866  000EEA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2867  000EEC  0E00               	movlw	0
  2868  000EEE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2869                           
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  2871  000EF0  EFA3  F007         	goto	l3573
  2872  000EF4                     l3567:
  2873                           
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  2875  000EF4  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2876  000EF8  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2877  000EFC  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2878  000F00  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2879  000F04  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2880  000F08  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2881  000F0C  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2882  000F10  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2883  000F14  EC03  F019         	call	___fleq	;wreg free
  2884  000F18  A0D8               	btfss	status,0,c
  2885  000F1A  EF91  F007         	goto	u4291
  2886  000F1E  EF93  F007         	goto	u4290
  2887  000F22                     u4291:
  2888  000F22  EFA3  F007         	goto	l3573
  2889  000F26                     u4290:
  2890  000F26  0100               	movlb	0	; () banked
  2891  000F28  B178               	btfsc	efgtoa@d& (0+255),0,b
  2892  000F2A  EF99  F007         	goto	u4301
  2893  000F2E  EF9B  F007         	goto	u4300
  2894  000F32                     u4301:
  2895  000F32  EFA3  F007         	goto	l3573
  2896  000F36                     u4300:
  2897  000F36                     
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  2900  000F36  0E00               	movlw	0
  2901  000F38  6F86               	movwf	efgtoa@l& (0+255),b
  2902  000F3A  0E00               	movlw	0
  2903  000F3C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2904  000F3E  0E00               	movlw	0
  2905  000F40  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2906  000F42  0E00               	movlw	0
  2907  000F44  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2908  000F46                     l3573:
  2909                           
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  2911  000F46  C08C  F001         	movff	efgtoa@g,___fladd@b
  2912  000F4A  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  2913  000F4E  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  2914  000F52  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  2915  000F56  C086  F005         	movff	efgtoa@l,___fladd@a
  2916  000F5A  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  2917  000F5E  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  2918  000F62  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  2919  000F66  ECEF  F009         	call	___fladd	;wreg free
  2920  000F6A  C001  F082         	movff	?___fladd,efgtoa@h
  2921  000F6E  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  2922  000F72  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  2923  000F76  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  2924  000F7A                     
  2925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  2926  000F7A  C060  F094         	movff	efgtoa@ou,efgtoa@u
  2927  000F7E  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  2928  000F82  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  2929  000F86  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  2930  000F8A                     
  2931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  2932  000F8A  0E65               	movlw	101
  2933  000F8C  0100               	movlb	0	; () banked
  2934  000F8E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2935  000F90  B4D8               	btfsc	status,2,c
  2936  000F92  EFCD  F007         	goto	u4311
  2937  000F96  EFCF  F007         	goto	u4310
  2938  000F9A                     u4311:
  2939  000F9A  EFD5  F007         	goto	l3581
  2940  000F9E                     u4310:
  2941  000F9E                     
  2942                           ; BSR set to: 0
  2943  000F9E  C090  F076         	movff	efgtoa@e,efgtoa@ne
  2944  000FA2  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  2945  000FA6  EFD9  F007         	goto	l218
  2946  000FAA                     l3581:
  2947                           
  2948                           ; BSR set to: 0
  2949  000FAA  0E00               	movlw	0
  2950  000FAC  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  2951  000FAE  0E00               	movlw	0
  2952  000FB0  6F76               	movwf	efgtoa@ne& (0+255),b
  2953  000FB2                     l218:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  2957  000FB2  0E00               	movlw	0
  2958  000FB4  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  2959  000FB6  0E00               	movlw	0
  2960  000FB8  6F72               	movwf	efgtoa@pp& (0+255),b
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  2963  000FBA  0E00               	movlw	0
  2964  000FBC  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  2965  000FBE  0E00               	movlw	0
  2966  000FC0  6F70               	movwf	efgtoa@t& (0+255),b
  2967                           
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  2969  000FC2  0E00               	movlw	0
  2970  000FC4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2971  000FC6  0E00               	movlw	0
  2972  000FC8  6F8A               	movwf	efgtoa@i& (0+255),b
  2973                           
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  2975  000FCA  EFD4  F008         	goto	l3631
  2976  000FCE                     l3583:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  2980  000FCE  C082  F00F         	movff	efgtoa@h,___fldiv@b
  2981  000FD2  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  2982  000FD6  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  2983  000FDA  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  2984  000FDE  C094  F013         	movff	efgtoa@u,___fldiv@a
  2985  000FE2  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  2986  000FE6  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  2987  000FEA  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  2988  000FEE  EC94  F010         	call	___fldiv	;wreg free
  2989  000FF2  C00F  F028         	movff	?___fldiv,floorf@x
  2990  000FF6  C010  F029         	movff	?___fldiv+1,floorf@x+1
  2991  000FFA  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  2992  000FFE  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  2993  001002  EC61  F012         	call	_floorf	;wreg free
  2994  001006  C028  F086         	movff	?_floorf,efgtoa@l
  2995  00100A  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  2996  00100E  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  2997  001012  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  2998                           
  2999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3000  001016  C086  F028         	movff	efgtoa@l,___fltol@f1
  3001  00101A  C087  F029         	movff	efgtoa@l+1,___fltol@f1+1
  3002  00101E  C088  F02A         	movff	efgtoa@l+2,___fltol@f1+2
  3003  001022  C089  F02B         	movff	efgtoa@l+3,___fltol@f1+3
  3004  001026  EC92  F015         	call	___fltol	;wreg free
  3005  00102A  C028  F078         	movff	?___fltol,efgtoa@d
  3006  00102E  C029  F079         	movff	?___fltol+1,efgtoa@d+1
  3007  001032                     
  3008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3009  001032  0100               	movlb	0	; () banked
  3010  001034  B9E1               	btfsc	_flags& (0+255),4,b
  3011  001036  EF1F  F008         	goto	u4321
  3012  00103A  EF21  F008         	goto	u4320
  3013  00103E                     u4321:
  3014  00103E  EF3E  F008         	goto	l3595
  3015  001042                     u4320:
  3016  001042                     
  3017                           ; BSR set to: 0
  3018  001042  5178               	movf	efgtoa@d& (0+255),w,b
  3019  001044  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3020  001046  A4D8               	btfss	status,2,c
  3021  001048  EF28  F008         	goto	u4331
  3022  00104C  EF2A  F008         	goto	u4330
  3023  001050                     u4331:
  3024  001050  EF3E  F008         	goto	l3595
  3025  001054                     u4330:
  3026  001054                     
  3027                           ; BSR set to: 0
  3028  001054  0E67               	movlw	103
  3029  001056  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3030  001058  A4D8               	btfss	status,2,c
  3031  00105A  EF31  F008         	goto	u4341
  3032  00105E  EF33  F008         	goto	u4340
  3033  001062                     u4341:
  3034  001062  EF3E  F008         	goto	l3595
  3035  001066                     u4340:
  3036  001066                     
  3037                           ; BSR set to: 0
  3038  001066  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3039  001068  EF3A  F008         	goto	u4350
  3040  00106C  EF38  F008         	goto	u4351
  3041  001070                     u4351:
  3042  001070  EF3E  F008         	goto	l3595
  3043  001074                     u4350:
  3044  001074                     
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3047  001074  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3048  001076  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3049                           
  3050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3051  001078  EF88  F008         	goto	l3623
  3052  00107C                     l3595:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3056  00107C  5172               	movf	efgtoa@pp& (0+255),w,b
  3057  00107E  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3058  001080  A4D8               	btfss	status,2,c
  3059  001082  EF45  F008         	goto	u4361
  3060  001086  EF47  F008         	goto	u4360
  3061  00108A                     u4361:
  3062  00108A  EF71  F008         	goto	l3615
  3063  00108E                     u4360:
  3064  00108E                     
  3065                           ; BSR set to: 0
  3066  00108E  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3067  001090  EF4E  F008         	goto	u4370
  3068  001094  EF4C  F008         	goto	u4371
  3069  001098                     u4371:
  3070  001098  EF71  F008         	goto	l3615
  3071  00109C                     u4370:
  3072  00109C                     
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3075  00109C  0E00               	movlw	low _dbuf
  3076  00109E  2592               	addwf	efgtoa@n& (0+255),w,b
  3077  0010A0  6ED9               	movwf	fsr2l,c
  3078  0010A2  0E01               	movlw	high _dbuf
  3079  0010A4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3080  0010A6  6EDA               	movwf	fsr2h,c
  3081  0010A8  0E2E               	movlw	46
  3082  0010AA  6EDF               	movwf	indf2,c
  3083  0010AC                     
  3084                           ; BSR set to: 0
  3085  0010AC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3086  0010AE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3087  0010B0                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3090  0010B0  077F               	decf	efgtoa@w& (0+255),f,b
  3091  0010B2  A0D8               	btfss	status,0,c
  3092  0010B4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3093  0010B6                     
  3094                           ; BSR set to: 0
  3095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3096  0010B6  0E00               	movlw	0
  3097  0010B8  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3098  0010BA  0E01               	movlw	1
  3099  0010BC  6F72               	movwf	efgtoa@pp& (0+255),b
  3100  0010BE  EF71  F008         	goto	l3615
  3101  0010C2                     l3607:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3105  0010C2  0E00               	movlw	low _dbuf
  3106  0010C4  2592               	addwf	efgtoa@n& (0+255),w,b
  3107  0010C6  6ED9               	movwf	fsr2l,c
  3108  0010C8  0E01               	movlw	high _dbuf
  3109  0010CA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3110  0010CC  6EDA               	movwf	fsr2h,c
  3111  0010CE  0E30               	movlw	48
  3112  0010D0  6EDF               	movwf	indf2,c
  3113  0010D2                     
  3114                           ; BSR set to: 0
  3115  0010D2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3116  0010D4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3117  0010D6                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3120  0010D6  077F               	decf	efgtoa@w& (0+255),f,b
  3121  0010D8  A0D8               	btfss	status,0,c
  3122  0010DA  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3123  0010DC                     
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3126  0010DC  0770               	decf	efgtoa@t& (0+255),f,b
  3127  0010DE  A0D8               	btfss	status,0,c
  3128  0010E0  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3129  0010E2                     l3615:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3133  0010E2  5170               	movf	efgtoa@t& (0+255),w,b
  3134  0010E4  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3135  0010E6  A4D8               	btfss	status,2,c
  3136  0010E8  EF78  F008         	goto	u4381
  3137  0010EC  EF7A  F008         	goto	u4380
  3138  0010F0                     u4381:
  3139  0010F0  EF61  F008         	goto	l3607
  3140  0010F4                     u4380:
  3141  0010F4                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3144  0010F4  0E00               	movlw	low _dbuf
  3145  0010F6  2592               	addwf	efgtoa@n& (0+255),w,b
  3146  0010F8  6ED9               	movwf	fsr2l,c
  3147  0010FA  0E01               	movlw	high _dbuf
  3148  0010FC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3149  0010FE  6EDA               	movwf	fsr2h,c
  3150  001100  5178               	movf	efgtoa@d& (0+255),w,b
  3151  001102  0F30               	addlw	48
  3152  001104  6EDF               	movwf	indf2,c
  3153  001106                     
  3154                           ; BSR set to: 0
  3155  001106  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3156  001108  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3157  00110A                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3160  00110A  077F               	decf	efgtoa@w& (0+255),f,b
  3161  00110C  A0D8               	btfss	status,0,c
  3162  00110E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3163  001110                     l3623:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3167  001110  C082  F01A         	movff	efgtoa@h,___flsub@b
  3168  001114  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3169  001118  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3170  00111C  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3171  001120  C094  F005         	movff	efgtoa@u,___flmul@a
  3172  001124  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3173  001128  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3174  00112C  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3175  001130  C086  F001         	movff	efgtoa@l,___flmul@b
  3176  001134  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3177  001138  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3178  00113C  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3179  001140  EC7F  F00E         	call	___flmul	;wreg free
  3180  001144  C001  F01E         	movff	?___flmul,___flsub@a
  3181  001148  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3182  00114C  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3183  001150  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3184  001154  EC29  F01B         	call	___flsub	;wreg free
  3185  001158  C01A  F082         	movff	?___flsub,efgtoa@h
  3186  00115C  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3187  001160  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3188  001164  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3189  001168                     
  3190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3191  001168  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3192  00116C  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3193  001170  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3194  001174  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3195  001178  0E00               	movlw	0
  3196  00117A  6E13               	movwf	___fldiv@a^0,c
  3197  00117C  0E00               	movlw	0
  3198  00117E  6E14               	movwf	(___fldiv@a+1)^0,c
  3199  001180  0E20               	movlw	32
  3200  001182  6E15               	movwf	(___fldiv@a+2)^0,c
  3201  001184  0E41               	movlw	65
  3202  001186  6E16               	movwf	(___fldiv@a+3)^0,c
  3203  001188  EC94  F010         	call	___fldiv	;wreg free
  3204  00118C  C00F  F094         	movff	?___fldiv,efgtoa@u
  3205  001190  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3206  001194  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3207  001198  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3208  00119C                     
  3209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3210  00119C  0100               	movlb	0	; () banked
  3211  00119E  0776               	decf	efgtoa@ne& (0+255),f,b
  3212  0011A0  A0D8               	btfss	status,0,c
  3213  0011A2  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3214  0011A4                     
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3217  0011A4  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3218  0011A6  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3219  0011A8                     l3631:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3223  0011A8  5174               	movf	efgtoa@m& (0+255),w,b
  3224  0011AA  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3225  0011AC  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3226  0011AE  0A80               	xorlw	128
  3227  0011B0  6E43               	movwf	??_efgtoa^0,c
  3228  0011B2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3229  0011B4  0A80               	xorlw	128
  3230  0011B6  5843               	subwfb	??_efgtoa^0,w,c
  3231  0011B8  B0D8               	btfsc	status,0,c
  3232  0011BA  EFE1  F008         	goto	u4391
  3233  0011BE  EFE3  F008         	goto	u4390
  3234  0011C2                     u4391:
  3235  0011C2  EFF1  F008         	goto	l3635
  3236  0011C6                     u4390:
  3237  0011C6                     
  3238                           ; BSR set to: 0
  3239  0011C6  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3240  0011C8  EFEF  F008         	goto	u4401
  3241  0011CC  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3242  0011CE  E109               	bnz	u4400
  3243  0011D0  0E4B               	movlw	75
  3244  0011D2  5D92               	subwf	efgtoa@n& (0+255),w,b
  3245  0011D4  A0D8               	btfss	status,0,c
  3246  0011D6  EFEF  F008         	goto	u4401
  3247  0011DA  EFF1  F008         	goto	u4400
  3248  0011DE                     u4401:
  3249  0011DE  EFE7  F007         	goto	l3583
  3250  0011E2                     u4400:
  3251  0011E2                     l3635:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3255  0011E2  5172               	movf	efgtoa@pp& (0+255),w,b
  3256  0011E4  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3257  0011E6  A4D8               	btfss	status,2,c
  3258  0011E8  EFF8  F008         	goto	u4411
  3259  0011EC  EFFA  F008         	goto	u4410
  3260  0011F0                     u4411:
  3261  0011F0  EF0B  F009         	goto	l3643
  3262  0011F4                     u4410:
  3263  0011F4                     
  3264                           ; BSR set to: 0
  3265  0011F4  A9E1               	btfss	_flags& (0+255),4,b
  3266  0011F6  EFFF  F008         	goto	u4421
  3267  0011FA  EF01  F009         	goto	u4420
  3268  0011FE                     u4421:
  3269  0011FE  EF0B  F009         	goto	l3643
  3270  001202                     u4420:
  3271  001202                     
  3272                           ; BSR set to: 0
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3274  001202  0E00               	movlw	low _dbuf
  3275  001204  2592               	addwf	efgtoa@n& (0+255),w,b
  3276  001206  6ED9               	movwf	fsr2l,c
  3277  001208  0E01               	movlw	high _dbuf
  3278  00120A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3279  00120C  6EDA               	movwf	fsr2h,c
  3280  00120E  0E2E               	movlw	46
  3281  001210  6EDF               	movwf	indf2,c
  3282  001212                     
  3283                           ; BSR set to: 0
  3284  001212  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3285  001214  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3286  001216                     l3643:
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3290  001216  0E00               	movlw	low _dbuf
  3291  001218  2592               	addwf	efgtoa@n& (0+255),w,b
  3292  00121A  6ED9               	movwf	fsr2l,c
  3293  00121C  0E01               	movlw	high _dbuf
  3294  00121E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3295  001220  6EDA               	movwf	fsr2h,c
  3296  001222  0E00               	movlw	0
  3297  001224  6EDF               	movwf	indf2,c
  3298  001226                     
  3299                           ; BSR set to: 0
  3300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3301  001226  0E65               	movlw	101
  3302  001228  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3303  00122A  A4D8               	btfss	status,2,c
  3304  00122C  EF1A  F009         	goto	u4431
  3305  001230  EF1C  F009         	goto	u4430
  3306  001234                     u4431:
  3307  001234  EFCA  F004         	goto	l3455
  3308  001238                     u4430:
  3309  001238                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3312  001238  0E00               	movlw	0
  3313  00123A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3314  00123C  0E4F               	movlw	79
  3315  00123E  6F8A               	movwf	efgtoa@i& (0+255),b
  3316  001240                     
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3319  001240  0E00               	movlw	low _dbuf
  3320  001242  258A               	addwf	efgtoa@i& (0+255),w,b
  3321  001244  6ED9               	movwf	fsr2l,c
  3322  001246  0E01               	movlw	high _dbuf
  3323  001248  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3324  00124A  6EDA               	movwf	fsr2h,c
  3325  00124C  0E00               	movlw	0
  3326  00124E  6EDF               	movwf	indf2,c
  3327  001250                     
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3330  001250  0E00               	movlw	0
  3331  001252  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3332  001254  0E00               	movlw	0
  3333  001256  6F7A               	movwf	efgtoa@sign& (0+255),b
  3334  001258                     
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3337  001258  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3338  00125A  EF33  F009         	goto	u4440
  3339  00125E  EF31  F009         	goto	u4441
  3340  001262                     u4441:
  3341  001262  EF3B  F009         	goto	l3659
  3342  001266                     u4440:
  3343  001266                     
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3346  001266  0E00               	movlw	0
  3347  001268  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3348  00126A  0E01               	movlw	1
  3349  00126C  6F7A               	movwf	efgtoa@sign& (0+255),b
  3350  00126E                     
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3353  00126E  6D90               	negf	efgtoa@e& (0+255),b
  3354  001270  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3355  001272  B0D8               	btfsc	status,0,c
  3356  001274  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3357  001276                     l3659:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3361  001276  0E00               	movlw	0
  3362  001278  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3363  00127A  0E02               	movlw	2
  3364  00127C  6F7C               	movwf	efgtoa@p& (0+255),b
  3365                           
  3366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3367  00127E  EF6C  F009         	goto	l3671
  3368  001282                     l3661:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3372  001282  078A               	decf	efgtoa@i& (0+255),f,b
  3373  001284  A0D8               	btfss	status,0,c
  3374  001286  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3375  001288                     
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3378  001288  0E00               	movlw	low _dbuf
  3379  00128A  258A               	addwf	efgtoa@i& (0+255),w,b
  3380  00128C  6ED9               	movwf	fsr2l,c
  3381  00128E  0E01               	movlw	high _dbuf
  3382  001290  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3383  001292  6EDA               	movwf	fsr2h,c
  3384  001294  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3385  001298  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3386  00129C  0E00               	movlw	0
  3387  00129E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3388  0012A0  0E0A               	movlw	10
  3389  0012A2  6E03               	movwf	___awmod@divisor^0,c
  3390  0012A4  ECAB  F018         	call	___awmod	;wreg free
  3391  0012A8  5001               	movf	?___awmod^0,w,c
  3392  0012AA  0F30               	addlw	48
  3393  0012AC  6EDF               	movwf	indf2,c
  3394  0012AE                     
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3396  0012AE  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3397  0012B2  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3398  0012B6  0E00               	movlw	0
  3399  0012B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3400  0012BA  0E0A               	movlw	10
  3401  0012BC  6E03               	movwf	___awdiv@divisor^0,c
  3402  0012BE  EC49  F018         	call	___awdiv	;wreg free
  3403  0012C2  C001  F090         	movff	?___awdiv,efgtoa@e
  3404  0012C6  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3405  0012CA                     
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3407  0012CA  0100               	movlb	0	; () banked
  3408  0012CC  077C               	decf	efgtoa@p& (0+255),f,b
  3409  0012CE  A0D8               	btfss	status,0,c
  3410  0012D0  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3411  0012D2                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3414  0012D2  077F               	decf	efgtoa@w& (0+255),f,b
  3415  0012D4  A0D8               	btfss	status,0,c
  3416  0012D6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3417  0012D8                     l3671:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3421  0012D8  5190               	movf	efgtoa@e& (0+255),w,b
  3422  0012DA  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3423  0012DC  A4D8               	btfss	status,2,c
  3424  0012DE  EF73  F009         	goto	u4451
  3425  0012E2  EF75  F009         	goto	u4450
  3426  0012E6                     u4451:
  3427  0012E6  EF41  F009         	goto	l3661
  3428  0012EA                     u4450:
  3429  0012EA                     
  3430                           ; BSR set to: 0
  3431  0012EA  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3432  0012EC  EF82  F009         	goto	u4460
  3433  0012F0  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3434  0012F2  E106               	bnz	u4461
  3435  0012F4  057C               	decf	efgtoa@p& (0+255),w,b
  3436  0012F6  B0D8               	btfsc	status,0,c
  3437  0012F8  EF80  F009         	goto	u4461
  3438  0012FC  EF82  F009         	goto	u4460
  3439  001300                     u4461:
  3440  001300  EF41  F009         	goto	l3661
  3441  001304                     u4460:
  3442  001304                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3445  001304  078A               	decf	efgtoa@i& (0+255),f,b
  3446  001306  A0D8               	btfss	status,0,c
  3447  001308  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3448  00130A                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3451  00130A  517A               	movf	efgtoa@sign& (0+255),w,b
  3452  00130C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3453  00130E  A4D8               	btfss	status,2,c
  3454  001310  EF8C  F009         	goto	u4471
  3455  001314  EF8E  F009         	goto	u4470
  3456  001318                     u4471:
  3457  001318  EF94  F009         	goto	l3681
  3458  00131C                     u4470:
  3459  00131C                     
  3460                           ; BSR set to: 0
  3461  00131C  0E00               	movlw	0
  3462  00131E  6F6B               	movwf	(_efgtoa$414+1)& (0+255),b
  3463  001320  0E2B               	movlw	43
  3464  001322  6F6A               	movwf	_efgtoa$414& (0+255),b
  3465  001324  EF98  F009         	goto	l3683
  3466  001328                     l3681:
  3467                           
  3468                           ; BSR set to: 0
  3469  001328  0E00               	movlw	0
  3470  00132A  6F6B               	movwf	(_efgtoa$414+1)& (0+255),b
  3471  00132C  0E2D               	movlw	45
  3472  00132E  6F6A               	movwf	_efgtoa$414& (0+255),b
  3473  001330                     l3683:
  3474                           
  3475                           ; BSR set to: 0
  3476  001330  0E00               	movlw	low _dbuf
  3477  001332  258A               	addwf	efgtoa@i& (0+255),w,b
  3478  001334  6ED9               	movwf	fsr2l,c
  3479  001336  0E01               	movlw	high _dbuf
  3480  001338  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3481  00133A  6EDA               	movwf	fsr2h,c
  3482  00133C  C06A  FFDF         	movff	_efgtoa$414,indf2
  3483  001340                     
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3486  001340  077F               	decf	efgtoa@w& (0+255),f,b
  3487  001342  A0D8               	btfss	status,0,c
  3488  001344  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3489  001346                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3492  001346  078A               	decf	efgtoa@i& (0+255),f,b
  3493  001348  A0D8               	btfss	status,0,c
  3494  00134A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3495  00134C                     
  3496                           ; BSR set to: 0
  3497  00134C  0EBF               	movlw	191
  3498  00134E  6E43               	movwf	??_efgtoa^0,c
  3499  001350  0EFF               	movlw	255
  3500  001352  6E44               	movwf	(??_efgtoa+1)^0,c
  3501  001354  5042               	movf	efgtoa@c^0,w,c
  3502  001356  6E45               	movwf	(??_efgtoa+2)^0,c
  3503  001358  6A46               	clrf	(??_efgtoa+3)^0,c
  3504  00135A  5043               	movf	??_efgtoa^0,w,c
  3505  00135C  2645               	addwf	(??_efgtoa+2)^0,f,c
  3506  00135E  5044               	movf	(??_efgtoa+1)^0,w,c
  3507  001360  2246               	addwfc	(??_efgtoa+3)^0,f,c
  3508  001362  5046               	movf	(??_efgtoa+3)^0,w,c
  3509  001364  E10A               	bnz	u4480
  3510  001366  0E1A               	movlw	26
  3511  001368  5C45               	subwf	(??_efgtoa+2)^0,w,c
  3512  00136A  A0D8               	btfss	status,0,c
  3513  00136C  EFBA  F009         	goto	u4481
  3514  001370  EFBD  F009         	goto	u4480
  3515  001374                     u4481:
  3516  001374  0E01               	movlw	1
  3517  001376  EFBE  F009         	goto	u4490
  3518  00137A                     u4480:
  3519  00137A  0E00               	movlw	0
  3520  00137C                     u4490:
  3521  00137C  6F6E               	movwf	_efgtoa$416& (0+255),b
  3522  00137E  6B6F               	clrf	(_efgtoa$416+1)& (0+255),b
  3523  001380                     
  3524                           ; BSR set to: 0
  3525  001380  516E               	movf	_efgtoa$416& (0+255),w,b
  3526  001382  116F               	iorwf	(_efgtoa$416+1)& (0+255),w,b
  3527  001384  A4D8               	btfss	status,2,c
  3528  001386  EFC7  F009         	goto	u4501
  3529  00138A  EFC9  F009         	goto	u4500
  3530  00138E                     u4501:
  3531  00138E  EFCF  F009         	goto	l3697
  3532  001392                     u4500:
  3533  001392                     
  3534                           ; BSR set to: 0
  3535  001392  0E00               	movlw	0
  3536  001394  6F6D               	movwf	(_efgtoa$415+1)& (0+255),b
  3537  001396  0E65               	movlw	101
  3538  001398  6F6C               	movwf	_efgtoa$415& (0+255),b
  3539  00139A  EFD3  F009         	goto	l3699
  3540  00139E                     l3697:
  3541                           
  3542                           ; BSR set to: 0
  3543  00139E  0E00               	movlw	0
  3544  0013A0  6F6D               	movwf	(_efgtoa$415+1)& (0+255),b
  3545  0013A2  0E45               	movlw	69
  3546  0013A4  6F6C               	movwf	_efgtoa$415& (0+255),b
  3547  0013A6                     l3699:
  3548                           
  3549                           ; BSR set to: 0
  3550  0013A6  0E00               	movlw	low _dbuf
  3551  0013A8  258A               	addwf	efgtoa@i& (0+255),w,b
  3552  0013AA  6ED9               	movwf	fsr2l,c
  3553  0013AC  0E01               	movlw	high _dbuf
  3554  0013AE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3555  0013B0  6EDA               	movwf	fsr2h,c
  3556  0013B2  C06C  FFDF         	movff	_efgtoa$415,indf2
  3557  0013B6                     
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3560  0013B6  077F               	decf	efgtoa@w& (0+255),f,b
  3561  0013B8  A0D8               	btfss	status,0,c
  3562  0013BA  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3563  0013BC                     
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3566  0013BC  0E00               	movlw	low _dbuf
  3567  0013BE  2592               	addwf	efgtoa@n& (0+255),w,b
  3568  0013C0  6E01               	movwf	strcpy@dest^0,c
  3569  0013C2  0E01               	movlw	high _dbuf
  3570  0013C4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3571  0013C6  6E02               	movwf	(strcpy@dest+1)^0,c
  3572  0013C8  0E00               	movlw	low _dbuf
  3573  0013CA  258A               	addwf	efgtoa@i& (0+255),w,b
  3574  0013CC  6E03               	movwf	strcpy@src^0,c
  3575  0013CE  0E01               	movlw	high _dbuf
  3576  0013D0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3577  0013D2  6E04               	movwf	(strcpy@src+1)^0,c
  3578  0013D4  EC84  F01A         	call	_strcpy	;wreg free
  3579  0013D8  EFCA  F004         	goto	l3455
  3580  0013DC                     l174:
  3581  0013DC  0012               	return		;funcret
  3582  0013DE                     __end_of_efgtoa:
  3583                           	opt callstack 0
  3584                           
  3585 ;; *************** function _tolower *****************
  3586 ;; Defined at:
  3587 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  c               2    6[COMRAM] int 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  2    6[COMRAM] int 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3601 ;;      Params:         2       0       0       0       0       0       0       0       0
  3602 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3603 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3604 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3605 ;;Total ram usage:        8 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    1
  3608 ;; This function calls:
  3609 ;;		_isupper
  3610 ;; This function is called by:
  3611 ;;		_efgtoa
  3612 ;;		_vfpfcnvrt
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text6
  3617  0034A8                     __ptext6:
  3618                           	opt callstack 0
  3619  0034A8                     _tolower:
  3620                           	opt callstack 26
  3621  0034A8  0EBF               	movlw	191
  3622  0034AA  6E09               	movwf	??_tolower^0,c
  3623  0034AC  0EFF               	movlw	255
  3624  0034AE  6E0A               	movwf	(??_tolower+1)^0,c
  3625  0034B0  C007  F00B         	movff	tolower@c,??_tolower+2
  3626  0034B4  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3627  0034B8  5009               	movf	??_tolower^0,w,c
  3628  0034BA  260B               	addwf	(??_tolower+2)^0,f,c
  3629  0034BC  500A               	movf	(??_tolower+1)^0,w,c
  3630  0034BE  220C               	addwfc	(??_tolower+3)^0,f,c
  3631  0034C0  500C               	movf	(??_tolower+3)^0,w,c
  3632  0034C2  E10A               	bnz	u3100
  3633  0034C4  0E1A               	movlw	26
  3634  0034C6  5C0B               	subwf	(??_tolower+2)^0,w,c
  3635  0034C8  A0D8               	btfss	status,0,c
  3636  0034CA  EF69  F01A         	goto	u3101
  3637  0034CE  EF6C  F01A         	goto	u3100
  3638  0034D2                     u3101:
  3639  0034D2  0E01               	movlw	1
  3640  0034D4  EF6D  F01A         	goto	u3110
  3641  0034D8                     u3100:
  3642  0034D8  0E00               	movlw	0
  3643  0034DA                     u3110:
  3644  0034DA  6E0D               	movwf	_tolower$1021^0,c
  3645  0034DC  6A0E               	clrf	(_tolower$1021+1)^0,c
  3646  0034DE  500D               	movf	_tolower$1021^0,w,c
  3647  0034E0  100E               	iorwf	(_tolower$1021+1)^0,w,c
  3648  0034E2  B4D8               	btfsc	status,2,c
  3649  0034E4  EF76  F01A         	goto	u3121
  3650  0034E8  EF78  F01A         	goto	u3120
  3651  0034EC                     u3121:
  3652  0034EC  EF7F  F01A         	goto	l1083
  3653  0034F0                     u3120:
  3654  0034F0  0E20               	movlw	32
  3655  0034F2  1007               	iorwf	tolower@c^0,w,c
  3656  0034F4  6E07               	movwf	?_tolower^0,c
  3657  0034F6  5008               	movf	(tolower@c+1)^0,w,c
  3658  0034F8  6E08               	movwf	(?_tolower+1)^0,c
  3659  0034FA  EF83  F01A         	goto	l1088
  3660  0034FE                     l1083:
  3661  0034FE  C007  F007         	movff	tolower@c,?_tolower
  3662  003502  C008  F008         	movff	tolower@c+1,?_tolower+1
  3663  003506                     l1088:
  3664  003506  0012               	return		;funcret
  3665  003508                     __end_of_tolower:
  3666                           	opt callstack 0
  3667                           
  3668 ;; *************** function _isupper *****************
  3669 ;; Defined at:
  3670 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  c               2    0[COMRAM] int 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  2    0[COMRAM] int 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3684 ;;      Params:         2       0       0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3686 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3687 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3688 ;;Total ram usage:        6 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_efgtoa
  3694 ;;		_vfpfcnvrt
  3695 ;;		_tolower
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text7
  3700  0036DC                     __ptext7:
  3701                           	opt callstack 0
  3702  0036DC                     _isupper:
  3703                           	opt callstack 26
  3704  0036DC  0EBF               	movlw	191
  3705  0036DE  6E03               	movwf	??_isupper^0,c
  3706  0036E0  0EFF               	movlw	255
  3707  0036E2  6E04               	movwf	(??_isupper+1)^0,c
  3708  0036E4  C001  F005         	movff	isupper@c,??_isupper+2
  3709  0036E8  C002  F006         	movff	isupper@c+1,??_isupper+3
  3710  0036EC  5003               	movf	??_isupper^0,w,c
  3711  0036EE  2605               	addwf	(??_isupper+2)^0,f,c
  3712  0036F0  5004               	movf	(??_isupper+1)^0,w,c
  3713  0036F2  2206               	addwfc	(??_isupper+3)^0,f,c
  3714  0036F4  5006               	movf	(??_isupper+3)^0,w,c
  3715  0036F6  E10A               	bnz	u2560
  3716  0036F8  0E1A               	movlw	26
  3717  0036FA  5C05               	subwf	(??_isupper+2)^0,w,c
  3718  0036FC  A0D8               	btfss	status,0,c
  3719  0036FE  EF83  F01B         	goto	u2561
  3720  003702  EF86  F01B         	goto	u2560
  3721  003706                     u2561:
  3722  003706  0E01               	movlw	1
  3723  003708  EF87  F01B         	goto	u2570
  3724  00370C                     u2560:
  3725  00370C  0E00               	movlw	0
  3726  00370E                     u2570:
  3727  00370E  6E01               	movwf	?_isupper^0,c
  3728  003710  6A02               	clrf	(?_isupper+1)^0,c
  3729  003712  0012               	return		;funcret
  3730  003714                     __end_of_isupper:
  3731                           	opt callstack 0
  3732                           
  3733 ;; *************** function _strcpy *****************
  3734 ;; Defined at:
  3735 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3738 ;;		 -> dbuf(80), 
  3739 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3740 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3741 ;;		 -> dbuf(80), 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  d               2    8[COMRAM] PTR unsigned char 
  3744 ;;		 -> dbuf(80), 
  3745 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3746 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3747 ;;		 -> dbuf(80), 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  2    0[COMRAM] PTR unsigned char 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3757 ;;      Params:         4       0       0       0       0       0       0       0       0
  3758 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3759 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3760 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3761 ;;Total ram usage:       10 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_efgtoa
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text8
  3771  003508                     __ptext8:
  3772                           	opt callstack 0
  3773  003508                     _strcpy:
  3774                           	opt callstack 26
  3775  003508  C003  F007         	movff	strcpy@src,strcpy@s
  3776  00350C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3777  003510  C001  F009         	movff	strcpy@dest,strcpy@d
  3778  003514  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3779  003518                     l2899:
  3780  003518  5007               	movf	strcpy@s^0,w,c
  3781  00351A  6E05               	movwf	??_strcpy^0,c
  3782  00351C  5008               	movf	(strcpy@s+1)^0,w,c
  3783  00351E  6E06               	movwf	(??_strcpy+1)^0,c
  3784  003520  4A07               	infsnz	strcpy@s^0,f,c
  3785  003522  2A08               	incf	(strcpy@s+1)^0,f,c
  3786  003524  C005  FFF6         	movff	??_strcpy,tblptrl
  3787  003528  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3788  00352C  6AF8               	clrf	tblptru,c
  3789  00352E  C009  FFD9         	movff	strcpy@d,fsr2l
  3790  003532  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3791  003536  4A09               	infsnz	strcpy@d^0,f,c
  3792  003538  2A0A               	incf	(strcpy@d+1)^0,f,c
  3793  00353A  0E07               	movlw	(high __ramtop+-1)
  3794  00353C  64F7               	cpfsgt	tblptrh,c
  3795  00353E  D003               	bra	u3087
  3796  003540  0008               	tblrd		*
  3797  003542  50F5               	movf	tablat,w,c
  3798  003544  D005               	bra	u3080
  3799  003546                     u3087:
  3800  003546  CFF6 FFE1          	movff	tblptrl,fsr1l
  3801  00354A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3802  00354E  50E7               	movf	indf1,w,c
  3803  003550                     u3080:
  3804  003550  6EDF               	movwf	indf2,c
  3805  003552  50DF               	movf	indf2,w,c
  3806  003554  A4D8               	btfss	status,2,c
  3807  003556  EFAF  F01A         	goto	u3091
  3808  00355A  EFB1  F01A         	goto	u3090
  3809  00355E                     u3091:
  3810  00355E  EF8C  F01A         	goto	l2899
  3811  003562                     u3090:
  3812  003562  0012               	return		;funcret
  3813  003564                     __end_of_strcpy:
  3814                           	opt callstack 0
  3815                           
  3816 ;; *************** function _pad *****************
  3817 ;; Defined at:
  3818 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3821 ;;		 -> sprintf@f(6), 
  3822 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3823 ;;		 -> dbuf(80), 
  3824 ;;  p               2   20[COMRAM] int 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  w               2   25[COMRAM] int 
  3827 ;;  i               2   23[COMRAM] int 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  2   16[COMRAM] int 
  3830 ;; Registers used:
  3831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3837 ;;      Params:         6       0       0       0       0       0       0       0       0
  3838 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3839 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3840 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3841 ;;Total ram usage:       11 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    3
  3844 ;; This function calls:
  3845 ;;		_fputc
  3846 ;;		_fputs
  3847 ;;		_strlen
  3848 ;; This function is called by:
  3849 ;;		_efgtoa
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text9
  3854  002FCC                     __ptext9:
  3855                           	opt callstack 0
  3856  002FCC                     _pad:
  3857                           	opt callstack 23
  3858  002FCC                     
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3860  002FCC  0100               	movlb	0	; () banked
  3861  002FCE  A1E1               	btfss	_flags& (0+255),0,b
  3862  002FD0  EFEC  F017         	goto	u2971
  3863  002FD4  EFEE  F017         	goto	u2970
  3864  002FD8                     u2971:
  3865  002FD8  EFF8  F017         	goto	l2857
  3866  002FDC                     u2970:
  3867  002FDC                     
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3870  002FDC  C013  F00A         	movff	pad@buf,fputs@s
  3871  002FE0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3872  002FE4  C011  F00C         	movff	pad@fp,fputs@fp
  3873  002FE8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3874  002FEC  EC4C  F01B         	call	_fputs	;wreg free
  3875  002FF0                     l2857:
  3876                           
  3877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3878  002FF0  BE16               	btfsc	(pad@p+1)^0,7,c
  3879  002FF2  EFFD  F017         	goto	u2981
  3880  002FF6  EFFF  F017         	goto	u2980
  3881  002FFA                     u2981:
  3882  002FFA  EF05  F018         	goto	l2861
  3883  002FFE                     u2980:
  3884  002FFE  C015  F01A         	movff	pad@p,pad@w
  3885  003002  C016  F01B         	movff	pad@p+1,pad@w+1
  3886  003006  EF09  F018         	goto	l151
  3887  00300A                     l2861:
  3888  00300A  0E00               	movlw	0
  3889  00300C  6E1B               	movwf	(pad@w+1)^0,c
  3890  00300E  0E00               	movlw	0
  3891  003010  6E1A               	movwf	pad@w^0,c
  3892  003012                     l151:
  3893                           
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3895  003012  0E00               	movlw	0
  3896  003014  6E19               	movwf	(pad@i+1)^0,c
  3897  003016  0E00               	movlw	0
  3898  003018  6E18               	movwf	pad@i^0,c
  3899                           
  3900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3901  00301A  EF1B  F018         	goto	l2867
  3902  00301E                     l2863:
  3903                           
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3905  00301E  0E00               	movlw	0
  3906  003020  6E02               	movwf	(fputc@c+1)^0,c
  3907  003022  0E20               	movlw	32
  3908  003024  6E01               	movwf	fputc@c^0,c
  3909  003026  C011  F003         	movff	pad@fp,fputc@fp
  3910  00302A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3911  00302E  EC81  F017         	call	_fputc	;wreg free
  3912  003032                     
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3914  003032  4A18               	infsnz	pad@i^0,f,c
  3915  003034  2A19               	incf	(pad@i+1)^0,f,c
  3916  003036                     l2867:
  3917                           
  3918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3919  003036  501A               	movf	pad@w^0,w,c
  3920  003038  5C18               	subwf	pad@i^0,w,c
  3921  00303A  5019               	movf	(pad@i+1)^0,w,c
  3922  00303C  0A80               	xorlw	128
  3923  00303E  6E17               	movwf	??_pad^0,c
  3924  003040  501B               	movf	(pad@w+1)^0,w,c
  3925  003042  0A80               	xorlw	128
  3926  003044  5817               	subwfb	??_pad^0,w,c
  3927  003046  A0D8               	btfss	status,0,c
  3928  003048  EF28  F018         	goto	u2991
  3929  00304C  EF2A  F018         	goto	u2990
  3930  003050                     u2991:
  3931  003050  EF0F  F018         	goto	l2863
  3932  003054                     u2990:
  3933  003054                     
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3935  003054  0100               	movlb	0	; () banked
  3936  003056  B1E1               	btfsc	_flags& (0+255),0,b
  3937  003058  EF30  F018         	goto	u3001
  3938  00305C  EF32  F018         	goto	u3000
  3939  003060                     u3001:
  3940  003060  EF3C  F018         	goto	l2871
  3941  003064                     u3000:
  3942  003064                     
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3945  003064  C013  F00A         	movff	pad@buf,fputs@s
  3946  003068  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3947  00306C  C011  F00C         	movff	pad@fp,fputs@fp
  3948  003070  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3949  003074  EC4C  F01B         	call	_fputs	;wreg free
  3950  003078                     l2871:
  3951                           
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3953  003078  C013  F001         	movff	pad@buf,strlen@s
  3954  00307C  C014  F002         	movff	pad@buf+1,strlen@s+1
  3955  003080  ECC2  F01B         	call	_strlen	;wreg free
  3956  003084  501A               	movf	pad@w^0,w,c
  3957  003086  2401               	addwf	?_strlen^0,w,c
  3958  003088  6E11               	movwf	?_pad^0,c
  3959  00308A  501B               	movf	(pad@w+1)^0,w,c
  3960  00308C  2002               	addwfc	(?_strlen+1)^0,w,c
  3961  00308E  6E12               	movwf	(?_pad+1)^0,c
  3962  003090  0012               	return		;funcret
  3963  003092                     __end_of_pad:
  3964                           	opt callstack 0
  3965                           
  3966 ;; *************** function _strlen *****************
  3967 ;; Defined at:
  3968 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3971 ;;		 -> dbuf(80), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3974 ;;		 -> dbuf(80), 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  2    0[COMRAM] unsigned int 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3984 ;;      Params:         2       0       0       0       0       0       0       0       0
  3985 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3987 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3988 ;;Total ram usage:        4 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_pad
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text10
  3998  003784                     __ptext10:
  3999                           	opt callstack 0
  4000  003784                     _strlen:
  4001                           	opt callstack 25
  4002  003784  C001  F003         	movff	strlen@s,strlen@a
  4003  003788  C002  F004         	movff	strlen@s+1,strlen@a+1
  4004  00378C  EFCA  F01B         	goto	l2641
  4005  003790                     l2639:
  4006  003790  4A01               	infsnz	strlen@s^0,f,c
  4007  003792  2A02               	incf	(strlen@s+1)^0,f,c
  4008  003794                     l2641:
  4009  003794  C001  FFD9         	movff	strlen@s,fsr2l
  4010  003798  C002  FFDA         	movff	strlen@s+1,fsr2h
  4011  00379C  50DF               	movf	indf2,w,c
  4012  00379E  A4D8               	btfss	status,2,c
  4013  0037A0  EFD4  F01B         	goto	u2551
  4014  0037A4  EFD6  F01B         	goto	u2550
  4015  0037A8                     u2551:
  4016  0037A8  EFC8  F01B         	goto	l2639
  4017  0037AC                     u2550:
  4018  0037AC  5003               	movf	strlen@a^0,w,c
  4019  0037AE  5C01               	subwf	strlen@s^0,w,c
  4020  0037B0  6E01               	movwf	?_strlen^0,c
  4021  0037B2  5004               	movf	(strlen@a+1)^0,w,c
  4022  0037B4  5802               	subwfb	(strlen@s+1)^0,w,c
  4023  0037B6  6E02               	movwf	(?_strlen+1)^0,c
  4024  0037B8  0012               	return		;funcret
  4025  0037BA                     __end_of_strlen:
  4026                           	opt callstack 0
  4027                           
  4028 ;; *************** function _fputs *****************
  4029 ;; Defined at:
  4030 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4033 ;;		 -> dbuf(80), 
  4034 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4035 ;;		 -> sprintf@f(6), 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  i               2   14[COMRAM] int 
  4038 ;;  c               1   13[COMRAM] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  2    9[COMRAM] int 
  4041 ;; Registers used:
  4042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4048 ;;      Params:         4       0       0       0       0       0       0       0       0
  4049 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4051 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4052 ;;Total ram usage:        7 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    2
  4055 ;; This function calls:
  4056 ;;		_fputc
  4057 ;; This function is called by:
  4058 ;;		_pad
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text11
  4063  003698                     __ptext11:
  4064                           	opt callstack 0
  4065  003698                     _fputs:
  4066                           	opt callstack 23
  4067  003698  0E00               	movlw	0
  4068  00369A  6E10               	movwf	(fputs@i+1)^0,c
  4069  00369C  0E00               	movlw	0
  4070  00369E  6E0F               	movwf	fputs@i^0,c
  4071  0036A0  EF5D  F01B         	goto	l2635
  4072  0036A4                     l2631:
  4073  0036A4  C00E  F001         	movff	fputs@c,fputc@c
  4074  0036A8  6A02               	clrf	(fputc@c+1)^0,c
  4075  0036AA  C00C  F003         	movff	fputs@fp,fputc@fp
  4076  0036AE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4077  0036B2  EC81  F017         	call	_fputc	;wreg free
  4078  0036B6  4A0F               	infsnz	fputs@i^0,f,c
  4079  0036B8  2A10               	incf	(fputs@i+1)^0,f,c
  4080  0036BA                     l2635:
  4081  0036BA  500F               	movf	fputs@i^0,w,c
  4082  0036BC  240A               	addwf	fputs@s^0,w,c
  4083  0036BE  6ED9               	movwf	fsr2l,c
  4084  0036C0  5010               	movf	(fputs@i+1)^0,w,c
  4085  0036C2  200B               	addwfc	(fputs@s+1)^0,w,c
  4086  0036C4  6EDA               	movwf	fsr2h,c
  4087  0036C6  50DF               	movf	indf2,w,c
  4088  0036C8  6E0E               	movwf	fputs@c^0,c
  4089  0036CA  500E               	movf	fputs@c^0,w,c
  4090  0036CC  A4D8               	btfss	status,2,c
  4091  0036CE  EF6B  F01B         	goto	u2541
  4092  0036D2  EF6D  F01B         	goto	u2540
  4093  0036D6                     u2541:
  4094  0036D6  EF52  F01B         	goto	l2631
  4095  0036DA                     u2540:
  4096  0036DA  0012               	return		;funcret
  4097  0036DC                     __end_of_fputs:
  4098                           	opt callstack 0
  4099                           
  4100 ;; *************** function _fputc *****************
  4101 ;; Defined at:
  4102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  c               2    0[COMRAM] int 
  4105 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4106 ;;		 -> sprintf@f(6), 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  2    0[COMRAM] int 
  4111 ;; Registers used:
  4112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4118 ;;      Params:         4       0       0       0       0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4120 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4121 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4122 ;;Total ram usage:        9 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    1
  4125 ;; This function calls:
  4126 ;;		_putch
  4127 ;; This function is called by:
  4128 ;;		_pad
  4129 ;;		_vfpfcnvrt
  4130 ;;		_fputs
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text12
  4135  002F02                     __ptext12:
  4136                           	opt callstack 0
  4137  002F02                     _fputc:
  4138                           	opt callstack 26
  4139  002F02  5003               	movf	fputc@fp^0,w,c
  4140  002F04  1004               	iorwf	(fputc@fp+1)^0,w,c
  4141  002F06  B4D8               	btfsc	status,2,c
  4142  002F08  EF88  F017         	goto	u2501
  4143  002F0C  EF8A  F017         	goto	u2500
  4144  002F10                     u2501:
  4145  002F10  EF93  F017         	goto	l2619
  4146  002F14                     u2500:
  4147  002F14  5003               	movf	fputc@fp^0,w,c
  4148  002F16  1004               	iorwf	(fputc@fp+1)^0,w,c
  4149  002F18  A4D8               	btfss	status,2,c
  4150  002F1A  EF91  F017         	goto	u2511
  4151  002F1E  EF93  F017         	goto	u2510
  4152  002F22                     u2511:
  4153  002F22  EF98  F017         	goto	l2621
  4154  002F26                     u2510:
  4155  002F26                     l2619:
  4156  002F26  5001               	movf	fputc@c^0,w,c
  4157  002F28  EC7E  F01C         	call	_putch
  4158  002F2C  EFE5  F017         	goto	l1039
  4159  002F30                     l2621:
  4160  002F30  EE20 F004          	lfsr	2,4
  4161  002F34  5003               	movf	fputc@fp^0,w,c
  4162  002F36  26D9               	addwf	fsr2l,f,c
  4163  002F38  5004               	movf	(fputc@fp+1)^0,w,c
  4164  002F3A  22DA               	addwfc	fsr2h,f,c
  4165  002F3C  50DE               	movf	postinc2,w,c
  4166  002F3E  10DE               	iorwf	postinc2,w,c
  4167  002F40  B4D8               	btfsc	status,2,c
  4168  002F42  EFA5  F017         	goto	u2521
  4169  002F46  EFA7  F017         	goto	u2520
  4170  002F4A                     u2521:
  4171  002F4A  EFC2  F017         	goto	l2625
  4172  002F4E                     u2520:
  4173  002F4E  EE20 F004          	lfsr	2,4
  4174  002F52  5003               	movf	fputc@fp^0,w,c
  4175  002F54  26D9               	addwf	fsr2l,f,c
  4176  002F56  5004               	movf	(fputc@fp+1)^0,w,c
  4177  002F58  22DA               	addwfc	fsr2h,f,c
  4178  002F5A  EE10 F002          	lfsr	1,2
  4179  002F5E  5003               	movf	fputc@fp^0,w,c
  4180  002F60  26E1               	addwf	fsr1l,f,c
  4181  002F62  5004               	movf	(fputc@fp+1)^0,w,c
  4182  002F64  22E2               	addwfc	fsr1h,f,c
  4183  002F66  50DE               	movf	postinc2,w,c
  4184  002F68  5CE6               	subwf	postinc1,w,c
  4185  002F6A  50E6               	movf	postinc1,w,c
  4186  002F6C  0A80               	xorlw	128
  4187  002F6E  6E09               	movwf	(??_fputc+4)^0,c
  4188  002F70  50DE               	movf	postinc2,w,c
  4189  002F72  0A80               	xorlw	128
  4190  002F74  5809               	subwfb	(??_fputc+4)^0,w,c
  4191  002F76  B0D8               	btfsc	status,0,c
  4192  002F78  EFC0  F017         	goto	u2531
  4193  002F7C  EFC2  F017         	goto	u2530
  4194  002F80                     u2531:
  4195  002F80  EFE5  F017         	goto	l1039
  4196  002F84                     u2530:
  4197  002F84                     l2625:
  4198  002F84  EE20 F002          	lfsr	2,2
  4199  002F88  5003               	movf	fputc@fp^0,w,c
  4200  002F8A  26D9               	addwf	fsr2l,f,c
  4201  002F8C  5004               	movf	(fputc@fp+1)^0,w,c
  4202  002F8E  22DA               	addwfc	fsr2h,f,c
  4203  002F90  CFDE F005          	movff	postinc2,??_fputc
  4204  002F94  CFDD F006          	movff	postdec2,??_fputc+1
  4205  002F98  C003  FFD9         	movff	fputc@fp,fsr2l
  4206  002F9C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4207  002FA0  CFDE F007          	movff	postinc2,??_fputc+2
  4208  002FA4  CFDD F008          	movff	postdec2,??_fputc+3
  4209  002FA8  5005               	movf	??_fputc^0,w,c
  4210  002FAA  2407               	addwf	(??_fputc+2)^0,w,c
  4211  002FAC  6ED9               	movwf	fsr2l,c
  4212  002FAE  5006               	movf	(??_fputc+1)^0,w,c
  4213  002FB0  2008               	addwfc	(??_fputc+3)^0,w,c
  4214  002FB2  6EDA               	movwf	fsr2h,c
  4215  002FB4  C001  FFDF         	movff	fputc@c,indf2
  4216  002FB8  EE20 F002          	lfsr	2,2
  4217  002FBC  5003               	movf	fputc@fp^0,w,c
  4218  002FBE  26D9               	addwf	fsr2l,f,c
  4219  002FC0  5004               	movf	(fputc@fp+1)^0,w,c
  4220  002FC2  22DA               	addwfc	fsr2h,f,c
  4221  002FC4  2ADE               	incf	postinc2,f,c
  4222  002FC6  0E00               	movlw	0
  4223  002FC8  22DD               	addwfc	postdec2,f,c
  4224  002FCA                     l1039:
  4225  002FCA  0012               	return		;funcret
  4226  002FCC                     __end_of_fputc:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _putch *****************
  4230 ;; Defined at:
  4231 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  c               1    wreg     unsigned char 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  c               1    0[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_fputc
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text13
  4259  0038FC                     __ptext13:
  4260                           	opt callstack 0
  4261  0038FC                     _putch:
  4262                           	opt callstack 26
  4263  0038FC  0012               	return		;funcret
  4264  0038FE                     __end_of_putch:
  4265                           	opt callstack 0
  4266                           
  4267 ;; *************** function _floorf *****************
  4268 ;; Defined at:
  4269 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  x               4   39[COMRAM] float 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  u               4   55[COMRAM] struct .
  4274 ;;  m               4   49[COMRAM] unsigned long 
  4275 ;;  e               2   53[COMRAM] int 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  4   39[COMRAM] float 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4285 ;;      Params:         4       0       0       0       0       0       0       0       0
  4286 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4287 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4288 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:       20 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_efgtoa
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text14
  4299  0024C2                     __ptext14:
  4300                           	opt callstack 0
  4301  0024C2                     _floorf:
  4302                           	opt callstack 26
  4303  0024C2  C0D3  F038         	movff	floorf@F524,floorf@u
  4304  0024C6  C0D4  F039         	movff	floorf@F524+1,floorf@u+1
  4305  0024CA  C0D5  F03A         	movff	floorf@F524+2,floorf@u+2
  4306  0024CE  C0D6  F03B         	movff	floorf@F524+3,floorf@u+3
  4307  0024D2  C028  F038         	movff	floorf@x,floorf@u
  4308  0024D6  C029  F039         	movff	floorf@x+1,floorf@u+1
  4309  0024DA  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  4310  0024DE  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  4311  0024E2  0E81               	movlw	129
  4312  0024E4  6E2C               	movwf	??_floorf^0,c
  4313  0024E6  0EFF               	movlw	255
  4314  0024E8  6E2D               	movwf	(??_floorf+1)^0,c
  4315  0024EA  C038  F02E         	movff	floorf@u,??_floorf+2
  4316  0024EE  C039  F02F         	movff	floorf@u+1,??_floorf+3
  4317  0024F2  C03A  F030         	movff	floorf@u+2,??_floorf+4
  4318  0024F6  C03B  F031         	movff	floorf@u+3,??_floorf+5
  4319  0024FA  0E18               	movlw	24
  4320  0024FC  EF85  F012         	goto	u3130
  4321  002500                     u3135:
  4322  002500  90D8               	bcf	status,0,c
  4323  002502  3231               	rrcf	(??_floorf+5)^0,f,c
  4324  002504  3230               	rrcf	(??_floorf+4)^0,f,c
  4325  002506  322F               	rrcf	(??_floorf+3)^0,f,c
  4326  002508  322E               	rrcf	(??_floorf+2)^0,f,c
  4327  00250A                     u3130:
  4328  00250A  2EE8               	decfsz	wreg,f,c
  4329  00250C  EF80  F012         	goto	u3135
  4330  002510  502E               	movf	(??_floorf+2)^0,w,c
  4331  002512  242C               	addwf	??_floorf^0,w,c
  4332  002514  6E36               	movwf	floorf@e^0,c
  4333  002516  0E00               	movlw	0
  4334  002518  202D               	addwfc	(??_floorf+1)^0,w,c
  4335  00251A  6E37               	movwf	(floorf@e+1)^0,c
  4336  00251C  BE37               	btfsc	(floorf@e+1)^0,7,c
  4337  00251E  EF9A  F012         	goto	u3141
  4338  002522  5037               	movf	(floorf@e+1)^0,w,c
  4339  002524  E109               	bnz	u3140
  4340  002526  0E17               	movlw	23
  4341  002528  5C36               	subwf	floorf@e^0,w,c
  4342  00252A  A0D8               	btfss	status,0,c
  4343  00252C  EF9A  F012         	goto	u3141
  4344  002530  EF9C  F012         	goto	u3140
  4345  002534                     u3141:
  4346  002534  EFA6  F012         	goto	l2917
  4347  002538                     u3140:
  4348  002538                     l2915:
  4349  002538  C028  F028         	movff	floorf@x,?_floorf
  4350  00253C  C029  F029         	movff	floorf@x+1,?_floorf+1
  4351  002540  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  4352  002544  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  4353  002548  EF69  F013         	goto	l1000
  4354  00254C                     l2917:
  4355  00254C  BE37               	btfsc	(floorf@e+1)^0,7,c
  4356  00254E  EFAB  F012         	goto	u3151
  4357  002552  EFAD  F012         	goto	u3150
  4358  002556                     u3151:
  4359  002556  EF1D  F013         	goto	l2927
  4360  00255A                     u3150:
  4361  00255A  C036  F02C         	movff	floorf@e,??_floorf
  4362  00255E  0EFF               	movlw	255
  4363  002560  6E2D               	movwf	(??_floorf+1)^0,c
  4364  002562  0EFF               	movlw	255
  4365  002564  6E2E               	movwf	(??_floorf+2)^0,c
  4366  002566  0E7F               	movlw	127
  4367  002568  6E2F               	movwf	(??_floorf+3)^0,c
  4368  00256A  0E00               	movlw	0
  4369  00256C  6E30               	movwf	(??_floorf+4)^0,c
  4370  00256E                     u3165:
  4371  00256E  662C               	tstfsz	??_floorf^0,c
  4372  002570  EFBC  F012         	goto	u3166
  4373  002574  EFC4  F012         	goto	u3167
  4374  002578                     u3166:
  4375  002578  3430               	rlcf	(??_floorf+4)^0,w,c
  4376  00257A  3230               	rrcf	(??_floorf+4)^0,f,c
  4377  00257C  322F               	rrcf	(??_floorf+3)^0,f,c
  4378  00257E  322E               	rrcf	(??_floorf+2)^0,f,c
  4379  002580  322D               	rrcf	(??_floorf+1)^0,f,c
  4380  002582  2E2C               	decfsz	??_floorf^0,f,c
  4381  002584  EFB7  F012         	goto	u3165
  4382  002588                     u3167:
  4383  002588  C02D  F032         	movff	??_floorf+1,floorf@m
  4384  00258C  C02E  F033         	movff	??_floorf+2,floorf@m+1
  4385  002590  C02F  F034         	movff	??_floorf+3,floorf@m+2
  4386  002594  C030  F035         	movff	??_floorf+4,floorf@m+3
  4387  002598  5032               	movf	floorf@m^0,w,c
  4388  00259A  1438               	andwf	floorf@u^0,w,c
  4389  00259C  6E2C               	movwf	??_floorf^0,c
  4390  00259E  5033               	movf	(floorf@m+1)^0,w,c
  4391  0025A0  1439               	andwf	(floorf@u+1)^0,w,c
  4392  0025A2  6E2D               	movwf	(??_floorf+1)^0,c
  4393  0025A4  5034               	movf	(floorf@m+2)^0,w,c
  4394  0025A6  143A               	andwf	(floorf@u+2)^0,w,c
  4395  0025A8  6E2E               	movwf	(??_floorf+2)^0,c
  4396  0025AA  5035               	movf	(floorf@m+3)^0,w,c
  4397  0025AC  143B               	andwf	(floorf@u+3)^0,w,c
  4398  0025AE  6E2F               	movwf	(??_floorf+3)^0,c
  4399  0025B0  502C               	movf	??_floorf^0,w,c
  4400  0025B2  102D               	iorwf	(??_floorf+1)^0,w,c
  4401  0025B4  102E               	iorwf	(??_floorf+2)^0,w,c
  4402  0025B6  102F               	iorwf	(??_floorf+3)^0,w,c
  4403  0025B8  A4D8               	btfss	status,2,c
  4404  0025BA  EFE1  F012         	goto	u3171
  4405  0025BE  EFE3  F012         	goto	u3170
  4406  0025C2                     u3171:
  4407  0025C2  EFE5  F012         	goto	l2923
  4408  0025C6                     u3170:
  4409  0025C6  EF9C  F012         	goto	l2915
  4410  0025CA                     l2923:
  4411  0025CA  C038  F02C         	movff	floorf@u,??_floorf
  4412  0025CE  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4413  0025D2  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4414  0025D6  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4415  0025DA  0E20               	movlw	32
  4416  0025DC  EFF5  F012         	goto	u3180
  4417  0025E0                     u3185:
  4418  0025E0  90D8               	bcf	status,0,c
  4419  0025E2  322F               	rrcf	(??_floorf+3)^0,f,c
  4420  0025E4  322E               	rrcf	(??_floorf+2)^0,f,c
  4421  0025E6  322D               	rrcf	(??_floorf+1)^0,f,c
  4422  0025E8  322C               	rrcf	??_floorf^0,f,c
  4423  0025EA                     u3180:
  4424  0025EA  2EE8               	decfsz	wreg,f,c
  4425  0025EC  EFF0  F012         	goto	u3185
  4426  0025F0  502C               	movf	??_floorf^0,w,c
  4427  0025F2  102D               	iorwf	(??_floorf+1)^0,w,c
  4428  0025F4  102E               	iorwf	(??_floorf+2)^0,w,c
  4429  0025F6  102F               	iorwf	(??_floorf+3)^0,w,c
  4430  0025F8  B4D8               	btfsc	status,2,c
  4431  0025FA  EF01  F013         	goto	u3191
  4432  0025FE  EF03  F013         	goto	u3190
  4433  002602                     u3191:
  4434  002602  EF0B  F013         	goto	l1003
  4435  002606                     u3190:
  4436  002606  5032               	movf	floorf@m^0,w,c
  4437  002608  2638               	addwf	floorf@u^0,f,c
  4438  00260A  5033               	movf	(floorf@m+1)^0,w,c
  4439  00260C  2239               	addwfc	(floorf@u+1)^0,f,c
  4440  00260E  5034               	movf	(floorf@m+2)^0,w,c
  4441  002610  223A               	addwfc	(floorf@u+2)^0,f,c
  4442  002612  5035               	movf	(floorf@m+3)^0,w,c
  4443  002614  223B               	addwfc	(floorf@u+3)^0,f,c
  4444  002616                     l1003:
  4445  002616  1C32               	comf	floorf@m^0,w,c
  4446  002618  6E2C               	movwf	??_floorf^0,c
  4447  00261A  1C33               	comf	(floorf@m+1)^0,w,c
  4448  00261C  6E2D               	movwf	(??_floorf+1)^0,c
  4449  00261E  1C34               	comf	(floorf@m+2)^0,w,c
  4450  002620  6E2E               	movwf	(??_floorf+2)^0,c
  4451  002622  1C35               	comf	(floorf@m+3)^0,w,c
  4452  002624  6E2F               	movwf	(??_floorf+3)^0,c
  4453  002626  502C               	movf	??_floorf^0,w,c
  4454  002628  1638               	andwf	floorf@u^0,f,c
  4455  00262A  502D               	movf	(??_floorf+1)^0,w,c
  4456  00262C  1639               	andwf	(floorf@u+1)^0,f,c
  4457  00262E  502E               	movf	(??_floorf+2)^0,w,c
  4458  002630  163A               	andwf	(floorf@u+2)^0,f,c
  4459  002632  502F               	movf	(??_floorf+3)^0,w,c
  4460  002634  163B               	andwf	(floorf@u+3)^0,f,c
  4461  002636  EF61  F013         	goto	l2935
  4462  00263A                     l2927:
  4463  00263A  C038  F02C         	movff	floorf@u,??_floorf
  4464  00263E  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4465  002642  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4466  002646  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4467  00264A  0E20               	movlw	32
  4468  00264C  EF2D  F013         	goto	u3200
  4469  002650                     u3205:
  4470  002650  90D8               	bcf	status,0,c
  4471  002652  322F               	rrcf	(??_floorf+3)^0,f,c
  4472  002654  322E               	rrcf	(??_floorf+2)^0,f,c
  4473  002656  322D               	rrcf	(??_floorf+1)^0,f,c
  4474  002658  322C               	rrcf	??_floorf^0,f,c
  4475  00265A                     u3200:
  4476  00265A  2EE8               	decfsz	wreg,f,c
  4477  00265C  EF28  F013         	goto	u3205
  4478  002660  502C               	movf	??_floorf^0,w,c
  4479  002662  102D               	iorwf	(??_floorf+1)^0,w,c
  4480  002664  102E               	iorwf	(??_floorf+2)^0,w,c
  4481  002666  102F               	iorwf	(??_floorf+3)^0,w,c
  4482  002668  A4D8               	btfss	status,2,c
  4483  00266A  EF39  F013         	goto	u3211
  4484  00266E  EF3B  F013         	goto	u3210
  4485  002672                     u3211:
  4486  002672  EF45  F013         	goto	l2931
  4487  002676                     u3210:
  4488  002676  0E00               	movlw	0
  4489  002678  6E38               	movwf	floorf@u^0,c
  4490  00267A  0E00               	movlw	0
  4491  00267C  6E39               	movwf	(floorf@u+1)^0,c
  4492  00267E  0E00               	movlw	0
  4493  002680  6E3A               	movwf	(floorf@u+2)^0,c
  4494  002682  0E00               	movlw	0
  4495  002684  6E3B               	movwf	(floorf@u+3)^0,c
  4496  002686  EF61  F013         	goto	l2935
  4497  00268A                     l2931:
  4498  00268A  90D8               	bcf	status,0,c
  4499  00268C  3438               	rlcf	floorf@u^0,w,c
  4500  00268E  6E2C               	movwf	??_floorf^0,c
  4501  002690  3439               	rlcf	(floorf@u+1)^0,w,c
  4502  002692  6E2D               	movwf	(??_floorf+1)^0,c
  4503  002694  343A               	rlcf	(floorf@u+2)^0,w,c
  4504  002696  6E2E               	movwf	(??_floorf+2)^0,c
  4505  002698  343B               	rlcf	(floorf@u+3)^0,w,c
  4506  00269A  6E2F               	movwf	(??_floorf+3)^0,c
  4507  00269C  502C               	movf	??_floorf^0,w,c
  4508  00269E  102D               	iorwf	(??_floorf+1)^0,w,c
  4509  0026A0  102E               	iorwf	(??_floorf+2)^0,w,c
  4510  0026A2  102F               	iorwf	(??_floorf+3)^0,w,c
  4511  0026A4  B4D8               	btfsc	status,2,c
  4512  0026A6  EF57  F013         	goto	u3221
  4513  0026AA  EF59  F013         	goto	u3220
  4514  0026AE                     u3221:
  4515  0026AE  EF61  F013         	goto	l2935
  4516  0026B2                     u3220:
  4517  0026B2  0E00               	movlw	0
  4518  0026B4  6E38               	movwf	floorf@u^0,c
  4519  0026B6  0E00               	movlw	0
  4520  0026B8  6E39               	movwf	(floorf@u+1)^0,c
  4521  0026BA  0E80               	movlw	128
  4522  0026BC  6E3A               	movwf	(floorf@u+2)^0,c
  4523  0026BE  0EBF               	movlw	191
  4524  0026C0  6E3B               	movwf	(floorf@u+3)^0,c
  4525  0026C2                     l2935:
  4526  0026C2  C038  F028         	movff	floorf@u,?_floorf
  4527  0026C6  C039  F029         	movff	floorf@u+1,?_floorf+1
  4528  0026CA  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  4529  0026CE  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  4530  0026D2                     l1000:
  4531  0026D2  0012               	return		;funcret
  4532  0026D4                     __end_of_floorf:
  4533                           	opt callstack 0
  4534                           
  4535 ;; *************** function ___fpclassifyf *****************
  4536 ;; Defined at:
  4537 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  x               4    0[COMRAM] float 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  u               4   10[COMRAM] struct .
  4542 ;;  e               2    8[COMRAM] int 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  2    0[COMRAM] int 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4552 ;;      Params:         4       0       0       0       0       0       0       0       0
  4553 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4554 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4555 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4556 ;;Total ram usage:       14 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_efgtoa
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text15
  4566  002D2E                     __ptext15:
  4567                           	opt callstack 0
  4568  002D2E                     ___fpclassifyf:
  4569                           	opt callstack 26
  4570  002D2E  C0D7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4571  002D32  C0D8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4572  002D36  C0D9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4573  002D3A  C0DA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4574  002D3E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4575  002D42  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4576  002D46  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4577  002D4A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4578  002D4E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4579  002D52  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4580  002D56  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4581  002D5A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4582  002D5E  0E18               	movlw	24
  4583  002D60  EFB7  F016         	goto	u3010
  4584  002D64                     u3015:
  4585  002D64  90D8               	bcf	status,0,c
  4586  002D66  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4587  002D68  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4588  002D6A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4589  002D6C  3205               	rrcf	??___fpclassifyf^0,f,c
  4590  002D6E                     u3010:
  4591  002D6E  2EE8               	decfsz	wreg,f,c
  4592  002D70  EFB2  F016         	goto	u3015
  4593  002D74  5005               	movf	??___fpclassifyf^0,w,c
  4594  002D76  6E09               	movwf	___fpclassifyf@e^0,c
  4595  002D78  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4596  002D7A  5009               	movf	___fpclassifyf@e^0,w,c
  4597  002D7C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4598  002D7E  A4D8               	btfss	status,2,c
  4599  002D80  EFC4  F016         	goto	u3021
  4600  002D84  EFC6  F016         	goto	u3020
  4601  002D88                     u3021:
  4602  002D88  EFE6  F016         	goto	l2887
  4603  002D8C                     u3020:
  4604  002D8C  90D8               	bcf	status,0,c
  4605  002D8E  340B               	rlcf	___fpclassifyf@u^0,w,c
  4606  002D90  6E05               	movwf	??___fpclassifyf^0,c
  4607  002D92  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4608  002D94  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4609  002D96  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4610  002D98  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4611  002D9A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4612  002D9C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4613  002D9E  5005               	movf	??___fpclassifyf^0,w,c
  4614  002DA0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4615  002DA2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4616  002DA4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4617  002DA6  A4D8               	btfss	status,2,c
  4618  002DA8  EFD8  F016         	goto	u3031
  4619  002DAC  EFDA  F016         	goto	u3030
  4620  002DB0                     u3031:
  4621  002DB0  EFE0  F016         	goto	l2883
  4622  002DB4                     u3030:
  4623  002DB4  0E00               	movlw	0
  4624  002DB6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4625  002DB8  0E02               	movlw	2
  4626  002DBA  6E01               	movwf	?___fpclassifyf^0,c
  4627  002DBC  EF15  F017         	goto	l962
  4628  002DC0                     l2883:
  4629  002DC0  0E00               	movlw	0
  4630  002DC2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4631  002DC4  0E03               	movlw	3
  4632  002DC6  6E01               	movwf	?___fpclassifyf^0,c
  4633  002DC8  EF15  F017         	goto	l962
  4634  002DCC                     l2887:
  4635  002DCC  2809               	incf	___fpclassifyf@e^0,w,c
  4636  002DCE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4637  002DD0  A4D8               	btfss	status,2,c
  4638  002DD2  EFED  F016         	goto	u3041
  4639  002DD6  EFEF  F016         	goto	u3040
  4640  002DDA                     u3041:
  4641  002DDA  EF11  F017         	goto	l2893
  4642  002DDE                     u3040:
  4643  002DDE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4644  002DE2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4645  002DE6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4646  002DEA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4647  002DEE  0E09               	movlw	9
  4648  002DF0                     u3055:
  4649  002DF0  90D8               	bcf	status,0,c
  4650  002DF2  3605               	rlcf	??___fpclassifyf^0,f,c
  4651  002DF4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4652  002DF6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4653  002DF8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4654  002DFA  2EE8               	decfsz	wreg,f,c
  4655  002DFC  EFF8  F016         	goto	u3055
  4656  002E00  5005               	movf	??___fpclassifyf^0,w,c
  4657  002E02  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4658  002E04  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4659  002E06  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4660  002E08  B4D8               	btfsc	status,2,c
  4661  002E0A  EF09  F017         	goto	u3061
  4662  002E0E  EF0C  F017         	goto	u3060
  4663  002E12                     u3061:
  4664  002E12  0E01               	movlw	1
  4665  002E14  EF0D  F017         	goto	u3070
  4666  002E18                     u3060:
  4667  002E18  0E00               	movlw	0
  4668  002E1A                     u3070:
  4669  002E1A  6E01               	movwf	?___fpclassifyf^0,c
  4670  002E1C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4671  002E1E  EF15  F017         	goto	l962
  4672  002E22                     l2893:
  4673  002E22  0E00               	movlw	0
  4674  002E24  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4675  002E26  0E04               	movlw	4
  4676  002E28  6E01               	movwf	?___fpclassifyf^0,c
  4677  002E2A                     l962:
  4678  002E2A  0012               	return		;funcret
  4679  002E2C                     __end_of___fpclassifyf:
  4680                           	opt callstack 0
  4681                           
  4682 ;; *************** function ___flsub *****************
  4683 ;; Defined at:
  4684 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  b               4   25[COMRAM] int 
  4687 ;;  a               4   29[COMRAM] int 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  4   25[COMRAM] int 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4699 ;;      Params:         8       0       0       0       0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4702 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4703 ;;Total ram usage:        8 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    1
  4706 ;; This function calls:
  4707 ;;		___fladd
  4708 ;; This function is called by:
  4709 ;;		_efgtoa
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text16
  4714  003652                     __ptext16:
  4715                           	opt callstack 0
  4716  003652                     ___flsub:
  4717                           	opt callstack 25
  4718  003652  0E00               	movlw	0
  4719  003654  1A1E               	xorwf	___flsub@a^0,f,c
  4720  003656  0E00               	movlw	0
  4721  003658  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4722  00365A  0E00               	movlw	0
  4723  00365C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4724  00365E  0E80               	movlw	128
  4725  003660  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4726  003662  C01A  F001         	movff	___flsub@b,___fladd@b
  4727  003666  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4728  00366A  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4729  00366E  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4730  003672  C01E  F005         	movff	___flsub@a,___fladd@a
  4731  003676  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4732  00367A  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4733  00367E  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4734  003682  ECEF  F009         	call	___fladd	;wreg free
  4735  003686  C001  F01A         	movff	?___fladd,?___flsub
  4736  00368A  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4737  00368E  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4738  003692  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4739  003696  0012               	return		;funcret
  4740  003698                     __end_of___flsub:
  4741                           	opt callstack 0
  4742                           
  4743 ;; *************** function ___fladd *****************
  4744 ;; Defined at:
  4745 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  b               4    0[COMRAM] int 
  4748 ;;  a               4    4[COMRAM] int 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  grs             1   15[COMRAM] unsigned char 
  4751 ;;  bexp            1   14[COMRAM] unsigned char 
  4752 ;;  aexp            1   13[COMRAM] unsigned char 
  4753 ;;  signs           1   12[COMRAM] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  4    0[COMRAM] unsigned char 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4763 ;;      Params:         8       0       0       0       0       0       0       0       0
  4764 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4765 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4766 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4767 ;;Total ram usage:       16 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_efgtoa
  4773 ;;		___flsub
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text17
  4778  0013DE                     __ptext17:
  4779                           	opt callstack 0
  4780  0013DE                     ___fladd:
  4781                           	opt callstack 25
  4782  0013DE  5004               	movf	(___fladd@b+3)^0,w,c
  4783  0013E0  0B80               	andlw	128
  4784  0013E2  6E0D               	movwf	___fladd@signs^0,c
  4785  0013E4  5004               	movf	(___fladd@b+3)^0,w,c
  4786  0013E6  2404               	addwf	(___fladd@b+3)^0,w,c
  4787  0013E8  6E0F               	movwf	___fladd@bexp^0,c
  4788  0013EA  AE03               	btfss	(___fladd@b+2)^0,7,c
  4789  0013EC  EFFA  F009         	goto	u2581
  4790  0013F0  EFFC  F009         	goto	u2580
  4791  0013F4                     u2581:
  4792  0013F4  EFFD  F009         	goto	l2657
  4793  0013F8                     u2580:
  4794  0013F8  800F               	bsf	___fladd@bexp^0,0,c
  4795  0013FA                     l2657:
  4796  0013FA  500F               	movf	___fladd@bexp^0,w,c
  4797  0013FC  B4D8               	btfsc	status,2,c
  4798  0013FE  EF03  F00A         	goto	u2591
  4799  001402  EF05  F00A         	goto	u2590
  4800  001406                     u2591:
  4801  001406  EF1A  F00A         	goto	l2667
  4802  00140A                     u2590:
  4803  00140A  280F               	incf	___fladd@bexp^0,w,c
  4804  00140C  A4D8               	btfss	status,2,c
  4805  00140E  EF0B  F00A         	goto	u2601
  4806  001412  EF0D  F00A         	goto	u2600
  4807  001416                     u2601:
  4808  001416  EF15  F00A         	goto	l2663
  4809  00141A                     u2600:
  4810  00141A  0E00               	movlw	0
  4811  00141C  6E01               	movwf	___fladd@b^0,c
  4812  00141E  0E00               	movlw	0
  4813  001420  6E02               	movwf	(___fladd@b+1)^0,c
  4814  001422  0E00               	movlw	0
  4815  001424  6E03               	movwf	(___fladd@b+2)^0,c
  4816  001426  0E00               	movlw	0
  4817  001428  6E04               	movwf	(___fladd@b+3)^0,c
  4818  00142A                     l2663:
  4819  00142A  8E03               	bsf	(___fladd@b+2)^0,7,c
  4820  00142C  0E00               	movlw	0
  4821  00142E  6E04               	movwf	(___fladd@b+3)^0,c
  4822  001430  EF22  F00A         	goto	l2669
  4823  001434                     l2667:
  4824  001434  0E00               	movlw	0
  4825  001436  6E01               	movwf	___fladd@b^0,c
  4826  001438  0E00               	movlw	0
  4827  00143A  6E02               	movwf	(___fladd@b+1)^0,c
  4828  00143C  0E00               	movlw	0
  4829  00143E  6E03               	movwf	(___fladd@b+2)^0,c
  4830  001440  0E00               	movlw	0
  4831  001442  6E04               	movwf	(___fladd@b+3)^0,c
  4832  001444                     l2669:
  4833  001444  5008               	movf	(___fladd@a+3)^0,w,c
  4834  001446  0B80               	andlw	128
  4835  001448  6E0E               	movwf	___fladd@aexp^0,c
  4836  00144A  500D               	movf	___fladd@signs^0,w,c
  4837  00144C  180E               	xorwf	___fladd@aexp^0,w,c
  4838  00144E  B4D8               	btfsc	status,2,c
  4839  001450  EF2C  F00A         	goto	u2611
  4840  001454  EF2E  F00A         	goto	u2610
  4841  001458                     u2611:
  4842  001458  EF2F  F00A         	goto	l2675
  4843  00145C                     u2610:
  4844  00145C  8C0D               	bsf	___fladd@signs^0,6,c
  4845  00145E                     l2675:
  4846  00145E  5008               	movf	(___fladd@a+3)^0,w,c
  4847  001460  2408               	addwf	(___fladd@a+3)^0,w,c
  4848  001462  6E0E               	movwf	___fladd@aexp^0,c
  4849  001464  AE07               	btfss	(___fladd@a+2)^0,7,c
  4850  001466  EF37  F00A         	goto	u2621
  4851  00146A  EF39  F00A         	goto	u2620
  4852  00146E                     u2621:
  4853  00146E  EF3A  F00A         	goto	l2681
  4854  001472                     u2620:
  4855  001472  800E               	bsf	___fladd@aexp^0,0,c
  4856  001474                     l2681:
  4857  001474  500E               	movf	___fladd@aexp^0,w,c
  4858  001476  B4D8               	btfsc	status,2,c
  4859  001478  EF40  F00A         	goto	u2631
  4860  00147C  EF42  F00A         	goto	u2630
  4861  001480                     u2631:
  4862  001480  EF57  F00A         	goto	l2691
  4863  001484                     u2630:
  4864  001484  280E               	incf	___fladd@aexp^0,w,c
  4865  001486  A4D8               	btfss	status,2,c
  4866  001488  EF48  F00A         	goto	u2641
  4867  00148C  EF4A  F00A         	goto	u2640
  4868  001490                     u2641:
  4869  001490  EF52  F00A         	goto	l2687
  4870  001494                     u2640:
  4871  001494  0E00               	movlw	0
  4872  001496  6E05               	movwf	___fladd@a^0,c
  4873  001498  0E00               	movlw	0
  4874  00149A  6E06               	movwf	(___fladd@a+1)^0,c
  4875  00149C  0E00               	movlw	0
  4876  00149E  6E07               	movwf	(___fladd@a+2)^0,c
  4877  0014A0  0E00               	movlw	0
  4878  0014A2  6E08               	movwf	(___fladd@a+3)^0,c
  4879  0014A4                     l2687:
  4880  0014A4  8E07               	bsf	(___fladd@a+2)^0,7,c
  4881  0014A6  0E00               	movlw	0
  4882  0014A8  6E08               	movwf	(___fladd@a+3)^0,c
  4883  0014AA  EF5F  F00A         	goto	l2693
  4884  0014AE                     l2691:
  4885  0014AE  0E00               	movlw	0
  4886  0014B0  6E05               	movwf	___fladd@a^0,c
  4887  0014B2  0E00               	movlw	0
  4888  0014B4  6E06               	movwf	(___fladd@a+1)^0,c
  4889  0014B6  0E00               	movlw	0
  4890  0014B8  6E07               	movwf	(___fladd@a+2)^0,c
  4891  0014BA  0E00               	movlw	0
  4892  0014BC  6E08               	movwf	(___fladd@a+3)^0,c
  4893  0014BE                     l2693:
  4894  0014BE  500F               	movf	___fladd@bexp^0,w,c
  4895  0014C0  5C0E               	subwf	___fladd@aexp^0,w,c
  4896  0014C2  B0D8               	btfsc	status,0,c
  4897  0014C4  EF66  F00A         	goto	u2651
  4898  0014C8  EF68  F00A         	goto	u2650
  4899  0014CC                     u2651:
  4900  0014CC  EF8F  F00A         	goto	l2729
  4901  0014D0                     u2650:
  4902  0014D0  AC0D               	btfss	___fladd@signs^0,6,c
  4903  0014D2  EF6D  F00A         	goto	u2661
  4904  0014D6  EF6F  F00A         	goto	u2660
  4905  0014DA                     u2661:
  4906  0014DA  EF71  F00A         	goto	l2699
  4907  0014DE                     u2660:
  4908  0014DE  0E80               	movlw	128
  4909  0014E0  1A0D               	xorwf	___fladd@signs^0,f,c
  4910  0014E2                     l2699:
  4911  0014E2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4912  0014E6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4913  0014EA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4914  0014EE  C001  F010         	movff	___fladd@b,___fladd@grs
  4915  0014F2  C005  F001         	movff	___fladd@a,___fladd@b
  4916  0014F6  C010  F005         	movff	___fladd@grs,___fladd@a
  4917  0014FA  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4918  0014FE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4919  001502  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4920  001506  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4921  00150A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4922  00150E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4923  001512  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4924  001516  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4925  00151A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4926  00151E                     l2729:
  4927  00151E  0E00               	movlw	0
  4928  001520  6E10               	movwf	___fladd@grs^0,c
  4929  001522  500F               	movf	___fladd@bexp^0,w,c
  4930  001524  C00E  F009         	movff	___fladd@aexp,??___fladd
  4931  001528  6A0A               	clrf	(??___fladd+1)^0,c
  4932  00152A  5E09               	subwf	??___fladd^0,f,c
  4933  00152C  0E00               	movlw	0
  4934  00152E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4935  001530  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4936  001532  EFA4  F00A         	goto	u2671
  4937  001536  500A               	movf	(??___fladd+1)^0,w,c
  4938  001538  E109               	bnz	u2670
  4939  00153A  0E1A               	movlw	26
  4940  00153C  5C09               	subwf	??___fladd^0,w,c
  4941  00153E  A0D8               	btfss	status,0,c
  4942  001540  EFA4  F00A         	goto	u2671
  4943  001544  EFA6  F00A         	goto	u2670
  4944  001548                     u2671:
  4945  001548  EFDD  F00A         	goto	l810
  4946  00154C                     u2670:
  4947  00154C  5001               	movf	___fladd@b^0,w,c
  4948  00154E  1002               	iorwf	(___fladd@b+1)^0,w,c
  4949  001550  1003               	iorwf	(___fladd@b+2)^0,w,c
  4950  001552  1004               	iorwf	(___fladd@b+3)^0,w,c
  4951  001554  A4D8               	btfss	status,2,c
  4952  001556  EFAF  F00A         	goto	u2681
  4953  00155A  EFB2  F00A         	goto	u2680
  4954  00155E                     u2681:
  4955  00155E  0E01               	movlw	1
  4956  001560  EFB3  F00A         	goto	u2690
  4957  001564                     u2680:
  4958  001564  0E00               	movlw	0
  4959  001566                     u2690:
  4960  001566  6E10               	movwf	___fladd@grs^0,c
  4961  001568  0E00               	movlw	0
  4962  00156A  6E01               	movwf	___fladd@b^0,c
  4963  00156C  0E00               	movlw	0
  4964  00156E  6E02               	movwf	(___fladd@b+1)^0,c
  4965  001570  0E00               	movlw	0
  4966  001572  6E03               	movwf	(___fladd@b+2)^0,c
  4967  001574  0E00               	movlw	0
  4968  001576  6E04               	movwf	(___fladd@b+3)^0,c
  4969  001578  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4970  00157C  EFE6  F00A         	goto	l809
  4971  001580                     l811:
  4972  001580  A010               	btfss	___fladd@grs^0,0,c
  4973  001582  EFC5  F00A         	goto	u2701
  4974  001586  EFC7  F00A         	goto	u2700
  4975  00158A                     u2701:
  4976  00158A  EFCD  F00A         	goto	l2741
  4977  00158E                     u2700:
  4978  00158E  90D8               	bcf	status,0,c
  4979  001590  3010               	rrcf	___fladd@grs^0,w,c
  4980  001592  0901               	iorlw	1
  4981  001594  6E10               	movwf	___fladd@grs^0,c
  4982  001596  EFCF  F00A         	goto	l2743
  4983  00159A                     l2741:
  4984  00159A  90D8               	bcf	status,0,c
  4985  00159C  3210               	rrcf	___fladd@grs^0,f,c
  4986  00159E                     l2743:
  4987  00159E  A001               	btfss	___fladd@b^0,0,c
  4988  0015A0  EFD4  F00A         	goto	u2711
  4989  0015A4  EFD6  F00A         	goto	u2710
  4990  0015A8                     u2711:
  4991  0015A8  EFD7  F00A         	goto	l2747
  4992  0015AC                     u2710:
  4993  0015AC  8E10               	bsf	___fladd@grs^0,7,c
  4994  0015AE                     l2747:
  4995  0015AE  3404               	rlcf	(___fladd@b+3)^0,w,c
  4996  0015B0  3204               	rrcf	(___fladd@b+3)^0,f,c
  4997  0015B2  3203               	rrcf	(___fladd@b+2)^0,f,c
  4998  0015B4  3202               	rrcf	(___fladd@b+1)^0,f,c
  4999  0015B6  3201               	rrcf	___fladd@b^0,f,c
  5000  0015B8  2A0F               	incf	___fladd@bexp^0,f,c
  5001  0015BA                     l810:
  5002  0015BA  500E               	movf	___fladd@aexp^0,w,c
  5003  0015BC  5C0F               	subwf	___fladd@bexp^0,w,c
  5004  0015BE  A0D8               	btfss	status,0,c
  5005  0015C0  EFE4  F00A         	goto	u2721
  5006  0015C4  EFE6  F00A         	goto	u2720
  5007  0015C8                     u2721:
  5008  0015C8  EFC0  F00A         	goto	l811
  5009  0015CC                     u2720:
  5010  0015CC                     l809:
  5011  0015CC  BC0D               	btfsc	___fladd@signs^0,6,c
  5012  0015CE  EFEB  F00A         	goto	u2731
  5013  0015D2  EFED  F00A         	goto	u2730
  5014  0015D6                     u2731:
  5015  0015D6  EF2D  F00B         	goto	l2775
  5016  0015DA                     u2730:
  5017  0015DA  500F               	movf	___fladd@bexp^0,w,c
  5018  0015DC  A4D8               	btfss	status,2,c
  5019  0015DE  EFF3  F00A         	goto	u2741
  5020  0015E2  EFF5  F00A         	goto	u2740
  5021  0015E6                     u2741:
  5022  0015E6  EFFF  F00A         	goto	l2757
  5023  0015EA                     u2740:
  5024  0015EA  0E00               	movlw	0
  5025  0015EC  6E01               	movwf	?___fladd^0,c
  5026  0015EE  0E00               	movlw	0
  5027  0015F0  6E02               	movwf	(?___fladd+1)^0,c
  5028  0015F2  0E00               	movlw	0
  5029  0015F4  6E03               	movwf	(?___fladd+2)^0,c
  5030  0015F6  0E00               	movlw	0
  5031  0015F8  6E04               	movwf	(?___fladd+3)^0,c
  5032  0015FA  EF4E  F00C         	goto	l818
  5033  0015FE                     l2757:
  5034  0015FE  5005               	movf	___fladd@a^0,w,c
  5035  001600  2601               	addwf	___fladd@b^0,f,c
  5036  001602  5006               	movf	(___fladd@a+1)^0,w,c
  5037  001604  2202               	addwfc	(___fladd@b+1)^0,f,c
  5038  001606  5007               	movf	(___fladd@a+2)^0,w,c
  5039  001608  2203               	addwfc	(___fladd@b+2)^0,f,c
  5040  00160A  5008               	movf	(___fladd@a+3)^0,w,c
  5041  00160C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5042  00160E  A004               	btfss	(___fladd@b+3)^0,0,c
  5043  001610  EF0C  F00B         	goto	u2751
  5044  001614  EF0E  F00B         	goto	u2750
  5045  001618                     u2751:
  5046  001618  EFBA  F00B         	goto	l2811
  5047  00161C                     u2750:
  5048  00161C  A010               	btfss	___fladd@grs^0,0,c
  5049  00161E  EF13  F00B         	goto	u2761
  5050  001622  EF15  F00B         	goto	u2760
  5051  001626                     u2761:
  5052  001626  EF1B  F00B         	goto	l2765
  5053  00162A                     u2760:
  5054  00162A  90D8               	bcf	status,0,c
  5055  00162C  3010               	rrcf	___fladd@grs^0,w,c
  5056  00162E  0901               	iorlw	1
  5057  001630  6E10               	movwf	___fladd@grs^0,c
  5058  001632  EF1D  F00B         	goto	l2767
  5059  001636                     l2765:
  5060  001636  90D8               	bcf	status,0,c
  5061  001638  3210               	rrcf	___fladd@grs^0,f,c
  5062  00163A                     l2767:
  5063  00163A  A001               	btfss	___fladd@b^0,0,c
  5064  00163C  EF22  F00B         	goto	u2771
  5065  001640  EF24  F00B         	goto	u2770
  5066  001644                     u2771:
  5067  001644  EF25  F00B         	goto	l2771
  5068  001648                     u2770:
  5069  001648  8E10               	bsf	___fladd@grs^0,7,c
  5070  00164A                     l2771:
  5071  00164A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5072  00164C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5073  00164E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5074  001650  3202               	rrcf	(___fladd@b+1)^0,f,c
  5075  001652  3201               	rrcf	___fladd@b^0,f,c
  5076  001654  2A0F               	incf	___fladd@bexp^0,f,c
  5077  001656  EFBA  F00B         	goto	l2811
  5078  00165A                     l2775:
  5079  00165A  5005               	movf	___fladd@a^0,w,c
  5080  00165C  5C01               	subwf	___fladd@b^0,w,c
  5081  00165E  5006               	movf	(___fladd@a+1)^0,w,c
  5082  001660  5802               	subwfb	(___fladd@b+1)^0,w,c
  5083  001662  5007               	movf	(___fladd@a+2)^0,w,c
  5084  001664  5803               	subwfb	(___fladd@b+2)^0,w,c
  5085  001666  5004               	movf	(___fladd@b+3)^0,w,c
  5086  001668  0A80               	xorlw	128
  5087  00166A  6E09               	movwf	??___fladd^0,c
  5088  00166C  5008               	movf	(___fladd@a+3)^0,w,c
  5089  00166E  0A80               	xorlw	128
  5090  001670  5809               	subwfb	??___fladd^0,w,c
  5091  001672  B0D8               	btfsc	status,0,c
  5092  001674  EF3E  F00B         	goto	u2781
  5093  001678  EF40  F00B         	goto	u2780
  5094  00167C                     u2781:
  5095  00167C  EF6B  F00B         	goto	l2785
  5096  001680                     u2780:
  5097  001680  5001               	movf	___fladd@b^0,w,c
  5098  001682  5C05               	subwf	___fladd@a^0,w,c
  5099  001684  6E09               	movwf	??___fladd^0,c
  5100  001686  5002               	movf	(___fladd@b+1)^0,w,c
  5101  001688  5806               	subwfb	(___fladd@a+1)^0,w,c
  5102  00168A  6E0A               	movwf	(??___fladd+1)^0,c
  5103  00168C  5003               	movf	(___fladd@b+2)^0,w,c
  5104  00168E  5807               	subwfb	(___fladd@a+2)^0,w,c
  5105  001690  6E0B               	movwf	(??___fladd+2)^0,c
  5106  001692  5004               	movf	(___fladd@b+3)^0,w,c
  5107  001694  5808               	subwfb	(___fladd@a+3)^0,w,c
  5108  001696  6E0C               	movwf	(??___fladd+3)^0,c
  5109  001698  0EFF               	movlw	255
  5110  00169A  2409               	addwf	??___fladd^0,w,c
  5111  00169C  6E01               	movwf	___fladd@b^0,c
  5112  00169E  0EFF               	movlw	255
  5113  0016A0  200A               	addwfc	(??___fladd+1)^0,w,c
  5114  0016A2  6E02               	movwf	(___fladd@b+1)^0,c
  5115  0016A4  0EFF               	movlw	255
  5116  0016A6  200B               	addwfc	(??___fladd+2)^0,w,c
  5117  0016A8  6E03               	movwf	(___fladd@b+2)^0,c
  5118  0016AA  0EFF               	movlw	255
  5119  0016AC  200C               	addwfc	(??___fladd+3)^0,w,c
  5120  0016AE  6E04               	movwf	(___fladd@b+3)^0,c
  5121  0016B0  0E80               	movlw	128
  5122  0016B2  1A0D               	xorwf	___fladd@signs^0,f,c
  5123  0016B4  6C10               	negf	___fladd@grs^0,c
  5124  0016B6  5010               	movf	___fladd@grs^0,w,c
  5125  0016B8  A4D8               	btfss	status,2,c
  5126  0016BA  EF61  F00B         	goto	u2791
  5127  0016BE  EF63  F00B         	goto	u2790
  5128  0016C2                     u2791:
  5129  0016C2  EF73  F00B         	goto	l826
  5130  0016C6                     u2790:
  5131  0016C6  0E01               	movlw	1
  5132  0016C8  2601               	addwf	___fladd@b^0,f,c
  5133  0016CA  0E00               	movlw	0
  5134  0016CC  2202               	addwfc	(___fladd@b+1)^0,f,c
  5135  0016CE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5136  0016D0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5137  0016D2  EF73  F00B         	goto	l826
  5138  0016D6                     l2785:
  5139  0016D6  5005               	movf	___fladd@a^0,w,c
  5140  0016D8  5E01               	subwf	___fladd@b^0,f,c
  5141  0016DA  5006               	movf	(___fladd@a+1)^0,w,c
  5142  0016DC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5143  0016DE  5007               	movf	(___fladd@a+2)^0,w,c
  5144  0016E0  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5145  0016E2  5008               	movf	(___fladd@a+3)^0,w,c
  5146  0016E4  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5147  0016E6                     l826:
  5148  0016E6  5001               	movf	___fladd@b^0,w,c
  5149  0016E8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5150  0016EA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5151  0016EC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5152  0016EE  A4D8               	btfss	status,2,c
  5153  0016F0  EF7C  F00B         	goto	u2801
  5154  0016F4  EF7E  F00B         	goto	u2800
  5155  0016F8                     u2801:
  5156  0016F8  EFB3  F00B         	goto	l2809
  5157  0016FC                     u2800:
  5158  0016FC  5010               	movf	___fladd@grs^0,w,c
  5159  0016FE  A4D8               	btfss	status,2,c
  5160  001700  EF84  F00B         	goto	u2811
  5161  001704  EF86  F00B         	goto	u2810
  5162  001708                     u2811:
  5163  001708  EFB3  F00B         	goto	l2809
  5164  00170C                     u2810:
  5165  00170C  0E00               	movlw	0
  5166  00170E  6E01               	movwf	?___fladd^0,c
  5167  001710  0E00               	movlw	0
  5168  001712  6E02               	movwf	(?___fladd+1)^0,c
  5169  001714  0E00               	movlw	0
  5170  001716  6E03               	movwf	(?___fladd+2)^0,c
  5171  001718  0E00               	movlw	0
  5172  00171A  6E04               	movwf	(?___fladd+3)^0,c
  5173  00171C  EF4E  F00C         	goto	l818
  5174  001720                     l2793:
  5175  001720  90D8               	bcf	status,0,c
  5176  001722  3601               	rlcf	___fladd@b^0,f,c
  5177  001724  3602               	rlcf	(___fladd@b+1)^0,f,c
  5178  001726  3603               	rlcf	(___fladd@b+2)^0,f,c
  5179  001728  3604               	rlcf	(___fladd@b+3)^0,f,c
  5180  00172A  AE10               	btfss	___fladd@grs^0,7,c
  5181  00172C  EF9A  F00B         	goto	u2821
  5182  001730  EF9C  F00B         	goto	u2820
  5183  001734                     u2821:
  5184  001734  EF9D  F00B         	goto	l2799
  5185  001738                     u2820:
  5186  001738  8001               	bsf	___fladd@b^0,0,c
  5187  00173A                     l2799:
  5188  00173A  A010               	btfss	___fladd@grs^0,0,c
  5189  00173C  EFA2  F00B         	goto	u2831
  5190  001740  EFA4  F00B         	goto	u2830
  5191  001744                     u2831:
  5192  001744  EFA8  F00B         	goto	l2803
  5193  001748                     u2830:
  5194  001748  80D8               	bsf	status,0,c
  5195  00174A  3610               	rlcf	___fladd@grs^0,f,c
  5196  00174C  EFAA  F00B         	goto	l2805
  5197  001750                     l2803:
  5198  001750  90D8               	bcf	status,0,c
  5199  001752  3610               	rlcf	___fladd@grs^0,f,c
  5200  001754                     l2805:
  5201  001754  500F               	movf	___fladd@bexp^0,w,c
  5202  001756  B4D8               	btfsc	status,2,c
  5203  001758  EFB0  F00B         	goto	u2841
  5204  00175C  EFB2  F00B         	goto	u2840
  5205  001760                     u2841:
  5206  001760  EFB3  F00B         	goto	l2809
  5207  001764                     u2840:
  5208  001764  060F               	decf	___fladd@bexp^0,f,c
  5209  001766                     l2809:
  5210  001766  AE03               	btfss	(___fladd@b+2)^0,7,c
  5211  001768  EFB8  F00B         	goto	u2851
  5212  00176C  EFBA  F00B         	goto	u2850
  5213  001770                     u2851:
  5214  001770  EF90  F00B         	goto	l2793
  5215  001774                     u2850:
  5216  001774                     l2811:
  5217  001774  0E00               	movlw	0
  5218  001776  6E0E               	movwf	___fladd@aexp^0,c
  5219  001778  AE10               	btfss	___fladd@grs^0,7,c
  5220  00177A  EFC1  F00B         	goto	u2861
  5221  00177E  EFC3  F00B         	goto	u2860
  5222  001782                     u2861:
  5223  001782  EFDB  F00B         	goto	l835
  5224  001786                     u2860:
  5225  001786  C010  F009         	movff	___fladd@grs,??___fladd
  5226  00178A  0E7F               	movlw	127
  5227  00178C  1609               	andwf	??___fladd^0,f,c
  5228  00178E  B4D8               	btfsc	status,2,c
  5229  001790  EFCC  F00B         	goto	u2871
  5230  001794  EFCE  F00B         	goto	u2870
  5231  001798                     u2871:
  5232  001798  EFD2  F00B         	goto	l836
  5233  00179C                     u2870:
  5234  00179C                     l2817:
  5235  00179C  0E01               	movlw	1
  5236  00179E  6E0E               	movwf	___fladd@aexp^0,c
  5237  0017A0  EFDB  F00B         	goto	l835
  5238  0017A4                     l836:
  5239  0017A4  A001               	btfss	___fladd@b^0,0,c
  5240  0017A6  EFD7  F00B         	goto	u2881
  5241  0017AA  EFD9  F00B         	goto	u2880
  5242  0017AE                     u2881:
  5243  0017AE  EFDB  F00B         	goto	l835
  5244  0017B2                     u2880:
  5245  0017B2  EFCE  F00B         	goto	l2817
  5246  0017B6                     l835:
  5247  0017B6  500E               	movf	___fladd@aexp^0,w,c
  5248  0017B8  B4D8               	btfsc	status,2,c
  5249  0017BA  EFE1  F00B         	goto	u2891
  5250  0017BE  EFE3  F00B         	goto	u2890
  5251  0017C2                     u2891:
  5252  0017C2  EF0E  F00C         	goto	l2829
  5253  0017C6                     u2890:
  5254  0017C6  0E01               	movlw	1
  5255  0017C8  2601               	addwf	___fladd@b^0,f,c
  5256  0017CA  0E00               	movlw	0
  5257  0017CC  2202               	addwfc	(___fladd@b+1)^0,f,c
  5258  0017CE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5259  0017D0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5260  0017D2  A004               	btfss	(___fladd@b+3)^0,0,c
  5261  0017D4  EFEE  F00B         	goto	u2901
  5262  0017D8  EFF0  F00B         	goto	u2900
  5263  0017DC                     u2901:
  5264  0017DC  EF0E  F00C         	goto	l2829
  5265  0017E0                     u2900:
  5266  0017E0  C001  F009         	movff	___fladd@b,??___fladd
  5267  0017E4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5268  0017E8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5269  0017EC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5270  0017F0  340C               	rlcf	(??___fladd+3)^0,w,c
  5271  0017F2  320C               	rrcf	(??___fladd+3)^0,f,c
  5272  0017F4  320B               	rrcf	(??___fladd+2)^0,f,c
  5273  0017F6  320A               	rrcf	(??___fladd+1)^0,f,c
  5274  0017F8  3209               	rrcf	??___fladd^0,f,c
  5275  0017FA  C009  F001         	movff	??___fladd,___fladd@b
  5276  0017FE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5277  001802  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5278  001806  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5279  00180A  280F               	incf	___fladd@bexp^0,w,c
  5280  00180C  B4D8               	btfsc	status,2,c
  5281  00180E  EF0B  F00C         	goto	u2911
  5282  001812  EF0D  F00C         	goto	u2910
  5283  001816                     u2911:
  5284  001816  EF0E  F00C         	goto	l2829
  5285  00181A                     u2910:
  5286  00181A  2A0F               	incf	___fladd@bexp^0,f,c
  5287  00181C                     l2829:
  5288  00181C  280F               	incf	___fladd@bexp^0,w,c
  5289  00181E  B4D8               	btfsc	status,2,c
  5290  001820  EF14  F00C         	goto	u2921
  5291  001824  EF16  F00C         	goto	u2920
  5292  001828                     u2921:
  5293  001828  EF1E  F00C         	goto	l2833
  5294  00182C                     u2920:
  5295  00182C  500F               	movf	___fladd@bexp^0,w,c
  5296  00182E  A4D8               	btfss	status,2,c
  5297  001830  EF1C  F00C         	goto	u2931
  5298  001834  EF1E  F00C         	goto	u2930
  5299  001838                     u2931:
  5300  001838  EF30  F00C         	goto	l2837
  5301  00183C                     u2930:
  5302  00183C                     l2833:
  5303  00183C  0E00               	movlw	0
  5304  00183E  6E01               	movwf	___fladd@b^0,c
  5305  001840  0E00               	movlw	0
  5306  001842  6E02               	movwf	(___fladd@b+1)^0,c
  5307  001844  0E00               	movlw	0
  5308  001846  6E03               	movwf	(___fladd@b+2)^0,c
  5309  001848  0E00               	movlw	0
  5310  00184A  6E04               	movwf	(___fladd@b+3)^0,c
  5311  00184C  500F               	movf	___fladd@bexp^0,w,c
  5312  00184E  A4D8               	btfss	status,2,c
  5313  001850  EF2C  F00C         	goto	u2941
  5314  001854  EF2E  F00C         	goto	u2940
  5315  001858                     u2941:
  5316  001858  EF30  F00C         	goto	l2837
  5317  00185C                     u2940:
  5318  00185C  0E00               	movlw	0
  5319  00185E  6E0D               	movwf	___fladd@signs^0,c
  5320  001860                     l2837:
  5321  001860  A00F               	btfss	___fladd@bexp^0,0,c
  5322  001862  EF35  F00C         	goto	u2951
  5323  001866  EF37  F00C         	goto	u2950
  5324  00186A                     u2951:
  5325  00186A  EF3A  F00C         	goto	l2841
  5326  00186E                     u2950:
  5327  00186E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5328  001870  EF3B  F00C         	goto	l2843
  5329  001874                     l2841:
  5330  001874  9E03               	bcf	(___fladd@b+2)^0,7,c
  5331  001876                     l2843:
  5332  001876  90D8               	bcf	status,0,c
  5333  001878  300F               	rrcf	___fladd@bexp^0,w,c
  5334  00187A  6E04               	movwf	(___fladd@b+3)^0,c
  5335  00187C  AE0D               	btfss	___fladd@signs^0,7,c
  5336  00187E  EF43  F00C         	goto	u2961
  5337  001882  EF45  F00C         	goto	u2960
  5338  001886                     u2961:
  5339  001886  EF46  F00C         	goto	l2849
  5340  00188A                     u2960:
  5341  00188A  8E04               	bsf	(___fladd@b+3)^0,7,c
  5342  00188C                     l2849:
  5343  00188C  C001  F001         	movff	___fladd@b,?___fladd
  5344  001890  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5345  001894  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5346  001898  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5347  00189C                     l818:
  5348  00189C  0012               	return		;funcret
  5349  00189E                     __end_of___fladd:
  5350                           	opt callstack 0
  5351                           
  5352 ;; *************** function ___flneg *****************
  5353 ;; Defined at:
  5354 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  f1              4    0[COMRAM] unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  4    0[COMRAM] unsigned char 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5368 ;;      Params:         4       0       0       0       0       0       0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5371 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5372 ;;Total ram usage:        4 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; This function calls:
  5375 ;;		Nothing
  5376 ;; This function is called by:
  5377 ;;		_efgtoa
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text18
  5382  003714                     __ptext18:
  5383                           	opt callstack 0
  5384  003714                     ___flneg:
  5385                           	opt callstack 26
  5386  003714  5001               	movf	___flneg@f1^0,w,c
  5387  003716  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5388  003718  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5389  00371A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5390  00371C  B4D8               	btfsc	status,2,c
  5391  00371E  EF93  F01B         	goto	u3871
  5392  003722  EF95  F01B         	goto	u3870
  5393  003726                     u3871:
  5394  003726  EF9D  F01B         	goto	l3345
  5395  00372A                     u3870:
  5396  00372A  0E00               	movlw	0
  5397  00372C  1A01               	xorwf	___flneg@f1^0,f,c
  5398  00372E  0E00               	movlw	0
  5399  003730  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5400  003732  0E00               	movlw	0
  5401  003734  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5402  003736  0E80               	movlw	128
  5403  003738  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5404  00373A                     l3345:
  5405  00373A  C001  F001         	movff	___flneg@f1,?___flneg
  5406  00373E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5407  003742  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5408  003746  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5409  00374A  0012               	return		;funcret
  5410  00374C                     __end_of___flneg:
  5411                           	opt callstack 0
  5412                           
  5413 ;; *************** function ___flmul *****************
  5414 ;; Defined at:
  5415 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  b               4    0[COMRAM] unsigned char 
  5418 ;;  a               4    4[COMRAM] unsigned char 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  prod            4   19[COMRAM] struct .
  5421 ;;  grs             4   13[COMRAM] unsigned long 
  5422 ;;  temp            2   23[COMRAM] struct .
  5423 ;;  bexp            1   18[COMRAM] unsigned char 
  5424 ;;  aexp            1   17[COMRAM] unsigned char 
  5425 ;;  sign            1   12[COMRAM] unsigned char 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  4    0[COMRAM] unsigned char 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0, prodl, prodh
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5435 ;;      Params:         8       0       0       0       0       0       0       0       0
  5436 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5437 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5438 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5439 ;;Total ram usage:       25 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_efgtoa
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text19
  5449  001CFE                     __ptext19:
  5450                           	opt callstack 0
  5451  001CFE                     ___flmul:
  5452                           	opt callstack 26
  5453  001CFE  5004               	movf	(___flmul@b+3)^0,w,c
  5454  001D00  0B80               	andlw	128
  5455  001D02  6E0D               	movwf	___flmul@sign^0,c
  5456  001D04  5004               	movf	(___flmul@b+3)^0,w,c
  5457  001D06  2404               	addwf	(___flmul@b+3)^0,w,c
  5458  001D08  6E13               	movwf	___flmul@bexp^0,c
  5459  001D0A  AE03               	btfss	(___flmul@b+2)^0,7,c
  5460  001D0C  EF8A  F00E         	goto	u3481
  5461  001D10  EF8C  F00E         	goto	u3480
  5462  001D14                     u3481:
  5463  001D14  EF8D  F00E         	goto	l3093
  5464  001D18                     u3480:
  5465  001D18  8013               	bsf	___flmul@bexp^0,0,c
  5466  001D1A                     l3093:
  5467  001D1A  5013               	movf	___flmul@bexp^0,w,c
  5468  001D1C  B4D8               	btfsc	status,2,c
  5469  001D1E  EF93  F00E         	goto	u3491
  5470  001D22  EF95  F00E         	goto	u3490
  5471  001D26                     u3491:
  5472  001D26  EFA8  F00E         	goto	l3101
  5473  001D2A                     u3490:
  5474  001D2A  2813               	incf	___flmul@bexp^0,w,c
  5475  001D2C  A4D8               	btfss	status,2,c
  5476  001D2E  EF9B  F00E         	goto	u3501
  5477  001D32  EF9D  F00E         	goto	u3500
  5478  001D36                     u3501:
  5479  001D36  EFA5  F00E         	goto	l3099
  5480  001D3A                     u3500:
  5481  001D3A  0E00               	movlw	0
  5482  001D3C  6E01               	movwf	___flmul@b^0,c
  5483  001D3E  0E00               	movlw	0
  5484  001D40  6E02               	movwf	(___flmul@b+1)^0,c
  5485  001D42  0E00               	movlw	0
  5486  001D44  6E03               	movwf	(___flmul@b+2)^0,c
  5487  001D46  0E00               	movlw	0
  5488  001D48  6E04               	movwf	(___flmul@b+3)^0,c
  5489  001D4A                     l3099:
  5490  001D4A  8E03               	bsf	(___flmul@b+2)^0,7,c
  5491  001D4C  EFB0  F00E         	goto	l3103
  5492  001D50                     l3101:
  5493  001D50  0E00               	movlw	0
  5494  001D52  6E01               	movwf	___flmul@b^0,c
  5495  001D54  0E00               	movlw	0
  5496  001D56  6E02               	movwf	(___flmul@b+1)^0,c
  5497  001D58  0E00               	movlw	0
  5498  001D5A  6E03               	movwf	(___flmul@b+2)^0,c
  5499  001D5C  0E00               	movlw	0
  5500  001D5E  6E04               	movwf	(___flmul@b+3)^0,c
  5501  001D60                     l3103:
  5502  001D60  5008               	movf	(___flmul@a+3)^0,w,c
  5503  001D62  0B80               	andlw	128
  5504  001D64  1A0D               	xorwf	___flmul@sign^0,f,c
  5505  001D66  5008               	movf	(___flmul@a+3)^0,w,c
  5506  001D68  2408               	addwf	(___flmul@a+3)^0,w,c
  5507  001D6A  6E12               	movwf	___flmul@aexp^0,c
  5508  001D6C  AE07               	btfss	(___flmul@a+2)^0,7,c
  5509  001D6E  EFBB  F00E         	goto	u3511
  5510  001D72  EFBD  F00E         	goto	u3510
  5511  001D76                     u3511:
  5512  001D76  EFBE  F00E         	goto	l3111
  5513  001D7A                     u3510:
  5514  001D7A  8012               	bsf	___flmul@aexp^0,0,c
  5515  001D7C                     l3111:
  5516  001D7C  5012               	movf	___flmul@aexp^0,w,c
  5517  001D7E  B4D8               	btfsc	status,2,c
  5518  001D80  EFC4  F00E         	goto	u3521
  5519  001D84  EFC6  F00E         	goto	u3520
  5520  001D88                     u3521:
  5521  001D88  EFD9  F00E         	goto	l3119
  5522  001D8C                     u3520:
  5523  001D8C  2812               	incf	___flmul@aexp^0,w,c
  5524  001D8E  A4D8               	btfss	status,2,c
  5525  001D90  EFCC  F00E         	goto	u3531
  5526  001D94  EFCE  F00E         	goto	u3530
  5527  001D98                     u3531:
  5528  001D98  EFD6  F00E         	goto	l3117
  5529  001D9C                     u3530:
  5530  001D9C  0E00               	movlw	0
  5531  001D9E  6E05               	movwf	___flmul@a^0,c
  5532  001DA0  0E00               	movlw	0
  5533  001DA2  6E06               	movwf	(___flmul@a+1)^0,c
  5534  001DA4  0E00               	movlw	0
  5535  001DA6  6E07               	movwf	(___flmul@a+2)^0,c
  5536  001DA8  0E00               	movlw	0
  5537  001DAA  6E08               	movwf	(___flmul@a+3)^0,c
  5538  001DAC                     l3117:
  5539  001DAC  8E07               	bsf	(___flmul@a+2)^0,7,c
  5540  001DAE  EFE1  F00E         	goto	l895
  5541  001DB2                     l3119:
  5542  001DB2  0E00               	movlw	0
  5543  001DB4  6E05               	movwf	___flmul@a^0,c
  5544  001DB6  0E00               	movlw	0
  5545  001DB8  6E06               	movwf	(___flmul@a+1)^0,c
  5546  001DBA  0E00               	movlw	0
  5547  001DBC  6E07               	movwf	(___flmul@a+2)^0,c
  5548  001DBE  0E00               	movlw	0
  5549  001DC0  6E08               	movwf	(___flmul@a+3)^0,c
  5550  001DC2                     l895:
  5551  001DC2  5012               	movf	___flmul@aexp^0,w,c
  5552  001DC4  B4D8               	btfsc	status,2,c
  5553  001DC6  EFE7  F00E         	goto	u3541
  5554  001DCA  EFE9  F00E         	goto	u3540
  5555  001DCE                     u3541:
  5556  001DCE  EFF1  F00E         	goto	l3123
  5557  001DD2                     u3540:
  5558  001DD2  5013               	movf	___flmul@bexp^0,w,c
  5559  001DD4  A4D8               	btfss	status,2,c
  5560  001DD6  EFEF  F00E         	goto	u3551
  5561  001DDA  EFF1  F00E         	goto	u3550
  5562  001DDE                     u3551:
  5563  001DDE  EFFB  F00E         	goto	l3127
  5564  001DE2                     u3550:
  5565  001DE2                     l3123:
  5566  001DE2  0E00               	movlw	0
  5567  001DE4  6E01               	movwf	?___flmul^0,c
  5568  001DE6  0E00               	movlw	0
  5569  001DE8  6E02               	movwf	(?___flmul+1)^0,c
  5570  001DEA  0E00               	movlw	0
  5571  001DEC  6E03               	movwf	(?___flmul+2)^0,c
  5572  001DEE  0E00               	movlw	0
  5573  001DF0  6E04               	movwf	(?___flmul+3)^0,c
  5574  001DF2  EF93  F010         	goto	l899
  5575  001DF6                     l3127:
  5576  001DF6  5007               	movf	(___flmul@a+2)^0,w,c
  5577  001DF8  0201               	mulwf	___flmul@b^0,c
  5578  001DFA  CFF3 F018          	movff	prodl,___flmul@temp
  5579  001DFE  CFF4 F019          	movff	prodh,___flmul@temp+1
  5580  001E02  5018               	movf	___flmul@temp^0,w,c
  5581  001E04  6E0E               	movwf	___flmul@grs^0,c
  5582  001E06  6A0F               	clrf	(___flmul@grs+1)^0,c
  5583  001E08  6A10               	clrf	(___flmul@grs+2)^0,c
  5584  001E0A  6A11               	clrf	(___flmul@grs+3)^0,c
  5585  001E0C  5019               	movf	(___flmul@temp+1)^0,w,c
  5586  001E0E  6E14               	movwf	___flmul@prod^0,c
  5587  001E10  6A15               	clrf	(___flmul@prod+1)^0,c
  5588  001E12  6A16               	clrf	(___flmul@prod+2)^0,c
  5589  001E14  6A17               	clrf	(___flmul@prod+3)^0,c
  5590  001E16  5006               	movf	(___flmul@a+1)^0,w,c
  5591  001E18  0202               	mulwf	(___flmul@b+1)^0,c
  5592  001E1A  CFF3 F018          	movff	prodl,___flmul@temp
  5593  001E1E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5594  001E22  5018               	movf	___flmul@temp^0,w,c
  5595  001E24  260E               	addwf	___flmul@grs^0,f,c
  5596  001E26  0E00               	movlw	0
  5597  001E28  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5598  001E2A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5599  001E2C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5600  001E2E  5019               	movf	(___flmul@temp+1)^0,w,c
  5601  001E30  2614               	addwf	___flmul@prod^0,f,c
  5602  001E32  0E00               	movlw	0
  5603  001E34  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5604  001E36  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5605  001E38  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5606  001E3A  5005               	movf	___flmul@a^0,w,c
  5607  001E3C  0203               	mulwf	(___flmul@b+2)^0,c
  5608  001E3E  CFF3 F018          	movff	prodl,___flmul@temp
  5609  001E42  CFF4 F019          	movff	prodh,___flmul@temp+1
  5610  001E46  5018               	movf	___flmul@temp^0,w,c
  5611  001E48  260E               	addwf	___flmul@grs^0,f,c
  5612  001E4A  0E00               	movlw	0
  5613  001E4C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5614  001E4E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5615  001E50  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5616  001E52  5019               	movf	(___flmul@temp+1)^0,w,c
  5617  001E54  2614               	addwf	___flmul@prod^0,f,c
  5618  001E56  0E00               	movlw	0
  5619  001E58  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5620  001E5A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5621  001E5C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5622  001E5E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5623  001E62  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5624  001E66  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5625  001E6A  6A0E               	clrf	___flmul@grs^0,c
  5626  001E6C  5005               	movf	___flmul@a^0,w,c
  5627  001E6E  0202               	mulwf	(___flmul@b+1)^0,c
  5628  001E70  CFF3 F018          	movff	prodl,___flmul@temp
  5629  001E74  CFF4 F019          	movff	prodh,___flmul@temp+1
  5630  001E78  5018               	movf	___flmul@temp^0,w,c
  5631  001E7A  260E               	addwf	___flmul@grs^0,f,c
  5632  001E7C  5019               	movf	(___flmul@temp+1)^0,w,c
  5633  001E7E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5634  001E80  0E00               	movlw	0
  5635  001E82  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5636  001E84  0E00               	movlw	0
  5637  001E86  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5638  001E88  5006               	movf	(___flmul@a+1)^0,w,c
  5639  001E8A  0201               	mulwf	___flmul@b^0,c
  5640  001E8C  CFF3 F018          	movff	prodl,___flmul@temp
  5641  001E90  CFF4 F019          	movff	prodh,___flmul@temp+1
  5642  001E94  5018               	movf	___flmul@temp^0,w,c
  5643  001E96  260E               	addwf	___flmul@grs^0,f,c
  5644  001E98  5019               	movf	(___flmul@temp+1)^0,w,c
  5645  001E9A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5646  001E9C  0E00               	movlw	0
  5647  001E9E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5648  001EA0  0E00               	movlw	0
  5649  001EA2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5650  001EA4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5651  001EA8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5652  001EAC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5653  001EB0  6A0E               	clrf	___flmul@grs^0,c
  5654  001EB2  5005               	movf	___flmul@a^0,w,c
  5655  001EB4  0201               	mulwf	___flmul@b^0,c
  5656  001EB6  CFF3 F018          	movff	prodl,___flmul@temp
  5657  001EBA  CFF4 F019          	movff	prodh,___flmul@temp+1
  5658  001EBE  5018               	movf	___flmul@temp^0,w,c
  5659  001EC0  260E               	addwf	___flmul@grs^0,f,c
  5660  001EC2  5019               	movf	(___flmul@temp+1)^0,w,c
  5661  001EC4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5662  001EC6  0E00               	movlw	0
  5663  001EC8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5664  001ECA  0E00               	movlw	0
  5665  001ECC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5666  001ECE  5007               	movf	(___flmul@a+2)^0,w,c
  5667  001ED0  0202               	mulwf	(___flmul@b+1)^0,c
  5668  001ED2  CFF3 F018          	movff	prodl,___flmul@temp
  5669  001ED6  CFF4 F019          	movff	prodh,___flmul@temp+1
  5670  001EDA  5018               	movf	___flmul@temp^0,w,c
  5671  001EDC  2614               	addwf	___flmul@prod^0,f,c
  5672  001EDE  5019               	movf	(___flmul@temp+1)^0,w,c
  5673  001EE0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5674  001EE2  0E00               	movlw	0
  5675  001EE4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5676  001EE6  0E00               	movlw	0
  5677  001EE8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5678  001EEA  5006               	movf	(___flmul@a+1)^0,w,c
  5679  001EEC  0203               	mulwf	(___flmul@b+2)^0,c
  5680  001EEE  CFF3 F018          	movff	prodl,___flmul@temp
  5681  001EF2  CFF4 F019          	movff	prodh,___flmul@temp+1
  5682  001EF6  5018               	movf	___flmul@temp^0,w,c
  5683  001EF8  2614               	addwf	___flmul@prod^0,f,c
  5684  001EFA  5019               	movf	(___flmul@temp+1)^0,w,c
  5685  001EFC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5686  001EFE  0E00               	movlw	0
  5687  001F00  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5688  001F02  0E00               	movlw	0
  5689  001F04  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5690  001F06  5007               	movf	(___flmul@a+2)^0,w,c
  5691  001F08  0203               	mulwf	(___flmul@b+2)^0,c
  5692  001F0A  CFF3 F018          	movff	prodl,___flmul@temp
  5693  001F0E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5694  001F12  5018               	movf	___flmul@temp^0,w,c
  5695  001F14  6E09               	movwf	??___flmul^0,c
  5696  001F16  5019               	movf	(___flmul@temp+1)^0,w,c
  5697  001F18  6E0A               	movwf	(??___flmul+1)^0,c
  5698  001F1A  6A0B               	clrf	(??___flmul+2)^0,c
  5699  001F1C  6A0C               	clrf	(??___flmul+3)^0,c
  5700  001F1E  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5701  001F22  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5702  001F26  C009  F00A         	movff	??___flmul,??___flmul+1
  5703  001F2A  6A09               	clrf	??___flmul^0,c
  5704  001F2C  5009               	movf	??___flmul^0,w,c
  5705  001F2E  2614               	addwf	___flmul@prod^0,f,c
  5706  001F30  500A               	movf	(??___flmul+1)^0,w,c
  5707  001F32  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5708  001F34  500B               	movf	(??___flmul+2)^0,w,c
  5709  001F36  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5710  001F38  500C               	movf	(??___flmul+3)^0,w,c
  5711  001F3A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5712  001F3C  C00E  F009         	movff	___flmul@grs,??___flmul
  5713  001F40  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5714  001F44  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5715  001F48  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5716  001F4C  0E19               	movlw	25
  5717  001F4E  EFAE  F00F         	goto	u3560
  5718  001F52                     u3565:
  5719  001F52  90D8               	bcf	status,0,c
  5720  001F54  320C               	rrcf	(??___flmul+3)^0,f,c
  5721  001F56  320B               	rrcf	(??___flmul+2)^0,f,c
  5722  001F58  320A               	rrcf	(??___flmul+1)^0,f,c
  5723  001F5A  3209               	rrcf	??___flmul^0,f,c
  5724  001F5C                     u3560:
  5725  001F5C  2EE8               	decfsz	wreg,f,c
  5726  001F5E  EFA9  F00F         	goto	u3565
  5727  001F62  5009               	movf	??___flmul^0,w,c
  5728  001F64  2614               	addwf	___flmul@prod^0,f,c
  5729  001F66  500A               	movf	(??___flmul+1)^0,w,c
  5730  001F68  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5731  001F6A  500B               	movf	(??___flmul+2)^0,w,c
  5732  001F6C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5733  001F6E  500C               	movf	(??___flmul+3)^0,w,c
  5734  001F70  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5735  001F72  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5736  001F76  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5737  001F7A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5738  001F7E  6A0E               	clrf	___flmul@grs^0,c
  5739  001F80  5012               	movf	___flmul@aexp^0,w,c
  5740  001F82  C013  F009         	movff	___flmul@bexp,??___flmul
  5741  001F86  6A0A               	clrf	(??___flmul+1)^0,c
  5742  001F88  2609               	addwf	??___flmul^0,f,c
  5743  001F8A  0E00               	movlw	0
  5744  001F8C  220A               	addwfc	(??___flmul+1)^0,f,c
  5745  001F8E  0E82               	movlw	130
  5746  001F90  2409               	addwf	??___flmul^0,w,c
  5747  001F92  6E18               	movwf	___flmul@temp^0,c
  5748  001F94  0EFF               	movlw	255
  5749  001F96  200A               	addwfc	(??___flmul+1)^0,w,c
  5750  001F98  6E19               	movwf	(___flmul@temp+1)^0,c
  5751  001F9A  EFE4  F00F         	goto	l3175
  5752  001F9E                     l3169:
  5753  001F9E  90D8               	bcf	status,0,c
  5754  001FA0  3614               	rlcf	___flmul@prod^0,f,c
  5755  001FA2  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5756  001FA4  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5757  001FA6  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5758  001FA8  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5759  001FAA  EFD9  F00F         	goto	u3571
  5760  001FAE  EFDB  F00F         	goto	u3570
  5761  001FB2                     u3571:
  5762  001FB2  EFDC  F00F         	goto	l902
  5763  001FB6                     u3570:
  5764  001FB6  8014               	bsf	___flmul@prod^0,0,c
  5765  001FB8                     l902:
  5766  001FB8  90D8               	bcf	status,0,c
  5767  001FBA  360E               	rlcf	___flmul@grs^0,f,c
  5768  001FBC  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5769  001FBE  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5770  001FC0  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5771  001FC2  0618               	decf	___flmul@temp^0,f,c
  5772  001FC4  A0D8               	btfss	status,0,c
  5773  001FC6  0619               	decf	(___flmul@temp+1)^0,f,c
  5774  001FC8                     l3175:
  5775  001FC8  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5776  001FCA  EFE9  F00F         	goto	u3581
  5777  001FCE  EFEB  F00F         	goto	u3580
  5778  001FD2                     u3581:
  5779  001FD2  EFCF  F00F         	goto	l3169
  5780  001FD6                     u3580:
  5781  001FD6  0E00               	movlw	0
  5782  001FD8  6E12               	movwf	___flmul@aexp^0,c
  5783  001FDA  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5784  001FDC  EFF2  F00F         	goto	u3591
  5785  001FE0  EFF4  F00F         	goto	u3590
  5786  001FE4                     u3591:
  5787  001FE4  EF18  F010         	goto	l904
  5788  001FE8                     u3590:
  5789  001FE8  0EFF               	movlw	255
  5790  001FEA  140E               	andwf	___flmul@grs^0,w,c
  5791  001FEC  6E09               	movwf	??___flmul^0,c
  5792  001FEE  0EFF               	movlw	255
  5793  001FF0  140F               	andwf	(___flmul@grs+1)^0,w,c
  5794  001FF2  6E0A               	movwf	(??___flmul+1)^0,c
  5795  001FF4  0EFF               	movlw	255
  5796  001FF6  1410               	andwf	(___flmul@grs+2)^0,w,c
  5797  001FF8  6E0B               	movwf	(??___flmul+2)^0,c
  5798  001FFA  0E7F               	movlw	127
  5799  001FFC  1411               	andwf	(___flmul@grs+3)^0,w,c
  5800  001FFE  6E0C               	movwf	(??___flmul+3)^0,c
  5801  002000  5009               	movf	??___flmul^0,w,c
  5802  002002  100A               	iorwf	(??___flmul+1)^0,w,c
  5803  002004  100B               	iorwf	(??___flmul+2)^0,w,c
  5804  002006  100C               	iorwf	(??___flmul+3)^0,w,c
  5805  002008  B4D8               	btfsc	status,2,c
  5806  00200A  EF09  F010         	goto	u3601
  5807  00200E  EF0B  F010         	goto	u3600
  5808  002012                     u3601:
  5809  002012  EF0F  F010         	goto	l905
  5810  002016                     u3600:
  5811  002016                     l3183:
  5812  002016  0E01               	movlw	1
  5813  002018  6E12               	movwf	___flmul@aexp^0,c
  5814  00201A  EF18  F010         	goto	l904
  5815  00201E                     l905:
  5816  00201E  A014               	btfss	___flmul@prod^0,0,c
  5817  002020  EF14  F010         	goto	u3611
  5818  002024  EF16  F010         	goto	u3610
  5819  002028                     u3611:
  5820  002028  EF18  F010         	goto	l904
  5821  00202C                     u3610:
  5822  00202C  EF0B  F010         	goto	l3183
  5823  002030                     l904:
  5824  002030  5012               	movf	___flmul@aexp^0,w,c
  5825  002032  B4D8               	btfsc	status,2,c
  5826  002034  EF1E  F010         	goto	u3621
  5827  002038  EF20  F010         	goto	u3620
  5828  00203C                     u3621:
  5829  00203C  EF44  F010         	goto	l3195
  5830  002040                     u3620:
  5831  002040  0E01               	movlw	1
  5832  002042  2614               	addwf	___flmul@prod^0,f,c
  5833  002044  0E00               	movlw	0
  5834  002046  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5835  002048  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5836  00204A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5837  00204C  A017               	btfss	(___flmul@prod+3)^0,0,c
  5838  00204E  EF2B  F010         	goto	u3631
  5839  002052  EF2D  F010         	goto	u3630
  5840  002056                     u3631:
  5841  002056  EF44  F010         	goto	l3195
  5842  00205A                     u3630:
  5843  00205A  C014  F009         	movff	___flmul@prod,??___flmul
  5844  00205E  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5845  002062  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5846  002066  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5847  00206A  340C               	rlcf	(??___flmul+3)^0,w,c
  5848  00206C  320C               	rrcf	(??___flmul+3)^0,f,c
  5849  00206E  320B               	rrcf	(??___flmul+2)^0,f,c
  5850  002070  320A               	rrcf	(??___flmul+1)^0,f,c
  5851  002072  3209               	rrcf	??___flmul^0,f,c
  5852  002074  C009  F014         	movff	??___flmul,___flmul@prod
  5853  002078  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5854  00207C  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5855  002080  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5856  002084  4A18               	infsnz	___flmul@temp^0,f,c
  5857  002086  2A19               	incf	(___flmul@temp+1)^0,f,c
  5858  002088                     l3195:
  5859  002088  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5860  00208A  EF4F  F010         	goto	u3641
  5861  00208E  5019               	movf	(___flmul@temp+1)^0,w,c
  5862  002090  E108               	bnz	u3640
  5863  002092  2818               	incf	___flmul@temp^0,w,c
  5864  002094  A0D8               	btfss	status,0,c
  5865  002096  EF4F  F010         	goto	u3641
  5866  00209A  EF51  F010         	goto	u3640
  5867  00209E                     u3641:
  5868  00209E  EF5B  F010         	goto	l3199
  5869  0020A2                     u3640:
  5870  0020A2  0E00               	movlw	0
  5871  0020A4  6E14               	movwf	___flmul@prod^0,c
  5872  0020A6  0E00               	movlw	0
  5873  0020A8  6E15               	movwf	(___flmul@prod+1)^0,c
  5874  0020AA  0E80               	movlw	128
  5875  0020AC  6E16               	movwf	(___flmul@prod+2)^0,c
  5876  0020AE  0E7F               	movlw	127
  5877  0020B0  6E17               	movwf	(___flmul@prod+3)^0,c
  5878  0020B2  EF89  F010         	goto	l3211
  5879  0020B6                     l3199:
  5880  0020B6  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5881  0020B8  EF68  F010         	goto	u3650
  5882  0020BC  5019               	movf	(___flmul@temp+1)^0,w,c
  5883  0020BE  E106               	bnz	u3651
  5884  0020C0  0418               	decf	___flmul@temp^0,w,c
  5885  0020C2  B0D8               	btfsc	status,0,c
  5886  0020C4  EF66  F010         	goto	u3651
  5887  0020C8  EF68  F010         	goto	u3650
  5888  0020CC                     u3651:
  5889  0020CC  EF74  F010         	goto	l912
  5890  0020D0                     u3650:
  5891  0020D0  0E00               	movlw	0
  5892  0020D2  6E14               	movwf	___flmul@prod^0,c
  5893  0020D4  0E00               	movlw	0
  5894  0020D6  6E15               	movwf	(___flmul@prod+1)^0,c
  5895  0020D8  0E00               	movlw	0
  5896  0020DA  6E16               	movwf	(___flmul@prod+2)^0,c
  5897  0020DC  0E00               	movlw	0
  5898  0020DE  6E17               	movwf	(___flmul@prod+3)^0,c
  5899  0020E0  0E00               	movlw	0
  5900  0020E2  6E0D               	movwf	___flmul@sign^0,c
  5901  0020E4  EF89  F010         	goto	l3211
  5902  0020E8                     l912:
  5903  0020E8  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5904  0020EC  0EFF               	movlw	255
  5905  0020EE  1614               	andwf	___flmul@prod^0,f,c
  5906  0020F0  0EFF               	movlw	255
  5907  0020F2  1615               	andwf	(___flmul@prod+1)^0,f,c
  5908  0020F4  0E7F               	movlw	127
  5909  0020F6  1616               	andwf	(___flmul@prod+2)^0,f,c
  5910  0020F8  0E00               	movlw	0
  5911  0020FA  1617               	andwf	(___flmul@prod+3)^0,f,c
  5912  0020FC  A013               	btfss	___flmul@bexp^0,0,c
  5913  0020FE  EF83  F010         	goto	u3661
  5914  002102  EF85  F010         	goto	u3660
  5915  002106                     u3661:
  5916  002106  EF86  F010         	goto	l3209
  5917  00210A                     u3660:
  5918  00210A  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5919  00210C                     l3209:
  5920  00210C  90D8               	bcf	status,0,c
  5921  00210E  3013               	rrcf	___flmul@bexp^0,w,c
  5922  002110  6E17               	movwf	(___flmul@prod+3)^0,c
  5923  002112                     l3211:
  5924  002112  500D               	movf	___flmul@sign^0,w,c
  5925  002114  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5926  002116  C014  F001         	movff	___flmul@prod,?___flmul
  5927  00211A  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5928  00211E  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5929  002122  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5930  002126                     l899:
  5931  002126  0012               	return		;funcret
  5932  002128                     __end_of___flmul:
  5933                           	opt callstack 0
  5934                           
  5935 ;; *************** function ___flge *****************
  5936 ;; Defined at:
  5937 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  ff1             4   25[COMRAM] unsigned char 
  5940 ;;  ff2             4   29[COMRAM] unsigned char 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;		None               void
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5952 ;;      Params:         8       0       0       0       0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5954 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5955 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5956 ;;Total ram usage:       12 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_efgtoa
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text20
  5966  002C2A                     __ptext20:
  5967                           	opt callstack 0
  5968  002C2A                     ___flge:
  5969                           	opt callstack 26
  5970  002C2A  0E00               	movlw	0
  5971  002C2C  141A               	andwf	___flge@ff1^0,w,c
  5972  002C2E  6E22               	movwf	??___flge^0,c
  5973  002C30  0E00               	movlw	0
  5974  002C32  141B               	andwf	(___flge@ff1+1)^0,w,c
  5975  002C34  6E23               	movwf	(??___flge+1)^0,c
  5976  002C36  0E80               	movlw	128
  5977  002C38  141C               	andwf	(___flge@ff1+2)^0,w,c
  5978  002C3A  6E24               	movwf	(??___flge+2)^0,c
  5979  002C3C  0E7F               	movlw	127
  5980  002C3E  141D               	andwf	(___flge@ff1+3)^0,w,c
  5981  002C40  6E25               	movwf	(??___flge+3)^0,c
  5982  002C42  5022               	movf	??___flge^0,w,c
  5983  002C44  1023               	iorwf	(??___flge+1)^0,w,c
  5984  002C46  1024               	iorwf	(??___flge+2)^0,w,c
  5985  002C48  1025               	iorwf	(??___flge+3)^0,w,c
  5986  002C4A  A4D8               	btfss	status,2,c
  5987  002C4C  EF2A  F016         	goto	u3821
  5988  002C50  EF2C  F016         	goto	u3820
  5989  002C54                     u3821:
  5990  002C54  EF34  F016         	goto	l3323
  5991  002C58                     u3820:
  5992  002C58  0E00               	movlw	0
  5993  002C5A  6E1A               	movwf	___flge@ff1^0,c
  5994  002C5C  0E00               	movlw	0
  5995  002C5E  6E1B               	movwf	(___flge@ff1+1)^0,c
  5996  002C60  0E00               	movlw	0
  5997  002C62  6E1C               	movwf	(___flge@ff1+2)^0,c
  5998  002C64  0E00               	movlw	0
  5999  002C66  6E1D               	movwf	(___flge@ff1+3)^0,c
  6000  002C68                     l3323:
  6001  002C68  0E00               	movlw	0
  6002  002C6A  141E               	andwf	___flge@ff2^0,w,c
  6003  002C6C  6E22               	movwf	??___flge^0,c
  6004  002C6E  0E00               	movlw	0
  6005  002C70  141F               	andwf	(___flge@ff2+1)^0,w,c
  6006  002C72  6E23               	movwf	(??___flge+1)^0,c
  6007  002C74  0E80               	movlw	128
  6008  002C76  1420               	andwf	(___flge@ff2+2)^0,w,c
  6009  002C78  6E24               	movwf	(??___flge+2)^0,c
  6010  002C7A  0E7F               	movlw	127
  6011  002C7C  1421               	andwf	(___flge@ff2+3)^0,w,c
  6012  002C7E  6E25               	movwf	(??___flge+3)^0,c
  6013  002C80  5022               	movf	??___flge^0,w,c
  6014  002C82  1023               	iorwf	(??___flge+1)^0,w,c
  6015  002C84  1024               	iorwf	(??___flge+2)^0,w,c
  6016  002C86  1025               	iorwf	(??___flge+3)^0,w,c
  6017  002C88  A4D8               	btfss	status,2,c
  6018  002C8A  EF49  F016         	goto	u3831
  6019  002C8E  EF4B  F016         	goto	u3830
  6020  002C92                     u3831:
  6021  002C92  EF53  F016         	goto	l3327
  6022  002C96                     u3830:
  6023  002C96  0E00               	movlw	0
  6024  002C98  6E1E               	movwf	___flge@ff2^0,c
  6025  002C9A  0E00               	movlw	0
  6026  002C9C  6E1F               	movwf	(___flge@ff2+1)^0,c
  6027  002C9E  0E00               	movlw	0
  6028  002CA0  6E20               	movwf	(___flge@ff2+2)^0,c
  6029  002CA2  0E00               	movlw	0
  6030  002CA4  6E21               	movwf	(___flge@ff2+3)^0,c
  6031  002CA6                     l3327:
  6032  002CA6  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6033  002CA8  EF58  F016         	goto	u3841
  6034  002CAC  EF5A  F016         	goto	u3840
  6035  002CB0                     u3841:
  6036  002CB0  EF63  F016         	goto	l3331
  6037  002CB4                     u3840:
  6038  002CB4  6C1A               	negf	___flge@ff1^0,c
  6039  002CB6  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6040  002CB8  B0D8               	btfsc	status,0,c
  6041  002CBA  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6042  002CBC  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6043  002CBE  B0D8               	btfsc	status,0,c
  6044  002CC0  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6045  002CC2  0E80               	movlw	128
  6046  002CC4  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6047  002CC6                     l3331:
  6048  002CC6  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6049  002CC8  EF68  F016         	goto	u3851
  6050  002CCC  EF6A  F016         	goto	u3850
  6051  002CD0                     u3851:
  6052  002CD0  EF73  F016         	goto	l546
  6053  002CD4                     u3850:
  6054  002CD4  6C1E               	negf	___flge@ff2^0,c
  6055  002CD6  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6056  002CD8  B0D8               	btfsc	status,0,c
  6057  002CDA  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6058  002CDC  1E20               	comf	(___flge@ff2+2)^0,f,c
  6059  002CDE  B0D8               	btfsc	status,0,c
  6060  002CE0  2A20               	incf	(___flge@ff2+2)^0,f,c
  6061  002CE2  0E80               	movlw	128
  6062  002CE4  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6063  002CE6                     l546:
  6064  002CE6  0E00               	movlw	0
  6065  002CE8  1A1A               	xorwf	___flge@ff1^0,f,c
  6066  002CEA  0E00               	movlw	0
  6067  002CEC  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6068  002CEE  0E00               	movlw	0
  6069  002CF0  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6070  002CF2  0E80               	movlw	128
  6071  002CF4  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6072  002CF6  0E00               	movlw	0
  6073  002CF8  1A1E               	xorwf	___flge@ff2^0,f,c
  6074  002CFA  0E00               	movlw	0
  6075  002CFC  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6076  002CFE  0E00               	movlw	0
  6077  002D00  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6078  002D02  0E80               	movlw	128
  6079  002D04  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6080  002D06  501E               	movf	___flge@ff2^0,w,c
  6081  002D08  5C1A               	subwf	___flge@ff1^0,w,c
  6082  002D0A  501F               	movf	(___flge@ff2+1)^0,w,c
  6083  002D0C  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6084  002D0E  5020               	movf	(___flge@ff2+2)^0,w,c
  6085  002D10  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6086  002D12  5021               	movf	(___flge@ff2+3)^0,w,c
  6087  002D14  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6088  002D16  B0D8               	btfsc	status,0,c
  6089  002D18  EF90  F016         	goto	u3861
  6090  002D1C  EF92  F016         	goto	u3860
  6091  002D20                     u3861:
  6092  002D20  EF95  F016         	goto	l3337
  6093  002D24                     u3860:
  6094  002D24  90D8               	bcf	status,0,c
  6095  002D26  EF96  F016         	goto	l551
  6096  002D2A                     l3337:
  6097  002D2A  80D8               	bsf	status,0,c
  6098  002D2C                     l551:
  6099  002D2C  0012               	return		;funcret
  6100  002D2E                     __end_of___flge:
  6101                           	opt callstack 0
  6102                           
  6103 ;; *************** function ___fleq *****************
  6104 ;; Defined at:
  6105 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  ff1             4    0[COMRAM] unsigned char 
  6108 ;;  ff2             4    4[COMRAM] unsigned char 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;		None               void
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6120 ;;      Params:         8       0       0       0       0       0       0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6122 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6123 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6124 ;;Total ram usage:       12 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_efgtoa
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text21
  6134  003206                     __ptext21:
  6135                           	opt callstack 0
  6136  003206                     ___fleq:
  6137                           	opt callstack 26
  6138  003206  0E00               	movlw	0
  6139  003208  1401               	andwf	___fleq@ff1^0,w,c
  6140  00320A  6E09               	movwf	??___fleq^0,c
  6141  00320C  0E00               	movlw	0
  6142  00320E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6143  003210  6E0A               	movwf	(??___fleq+1)^0,c
  6144  003212  0E80               	movlw	128
  6145  003214  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6146  003216  6E0B               	movwf	(??___fleq+2)^0,c
  6147  003218  0E7F               	movlw	127
  6148  00321A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6149  00321C  6E0C               	movwf	(??___fleq+3)^0,c
  6150  00321E  5009               	movf	??___fleq^0,w,c
  6151  003220  100A               	iorwf	(??___fleq+1)^0,w,c
  6152  003222  100B               	iorwf	(??___fleq+2)^0,w,c
  6153  003224  100C               	iorwf	(??___fleq+3)^0,w,c
  6154  003226  A4D8               	btfss	status,2,c
  6155  003228  EF18  F019         	goto	u3791
  6156  00322C  EF1A  F019         	goto	u3790
  6157  003230                     u3791:
  6158  003230  EF22  F019         	goto	l3307
  6159  003234                     u3790:
  6160  003234  0E00               	movlw	0
  6161  003236  6E01               	movwf	___fleq@ff1^0,c
  6162  003238  0E00               	movlw	0
  6163  00323A  6E02               	movwf	(___fleq@ff1+1)^0,c
  6164  00323C  0E00               	movlw	0
  6165  00323E  6E03               	movwf	(___fleq@ff1+2)^0,c
  6166  003240  0E00               	movlw	0
  6167  003242  6E04               	movwf	(___fleq@ff1+3)^0,c
  6168  003244                     l3307:
  6169  003244  0E00               	movlw	0
  6170  003246  1405               	andwf	___fleq@ff2^0,w,c
  6171  003248  6E09               	movwf	??___fleq^0,c
  6172  00324A  0E00               	movlw	0
  6173  00324C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6174  00324E  6E0A               	movwf	(??___fleq+1)^0,c
  6175  003250  0E80               	movlw	128
  6176  003252  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6177  003254  6E0B               	movwf	(??___fleq+2)^0,c
  6178  003256  0E7F               	movlw	127
  6179  003258  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6180  00325A  6E0C               	movwf	(??___fleq+3)^0,c
  6181  00325C  5009               	movf	??___fleq^0,w,c
  6182  00325E  100A               	iorwf	(??___fleq+1)^0,w,c
  6183  003260  100B               	iorwf	(??___fleq+2)^0,w,c
  6184  003262  100C               	iorwf	(??___fleq+3)^0,w,c
  6185  003264  A4D8               	btfss	status,2,c
  6186  003266  EF37  F019         	goto	u3801
  6187  00326A  EF39  F019         	goto	u3800
  6188  00326E                     u3801:
  6189  00326E  EF41  F019         	goto	l3311
  6190  003272                     u3800:
  6191  003272  0E00               	movlw	0
  6192  003274  6E05               	movwf	___fleq@ff2^0,c
  6193  003276  0E00               	movlw	0
  6194  003278  6E06               	movwf	(___fleq@ff2+1)^0,c
  6195  00327A  0E00               	movlw	0
  6196  00327C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6197  00327E  0E00               	movlw	0
  6198  003280  6E08               	movwf	(___fleq@ff2+3)^0,c
  6199  003282                     l3311:
  6200  003282  5005               	movf	___fleq@ff2^0,w,c
  6201  003284  1801               	xorwf	___fleq@ff1^0,w,c
  6202  003286  E10F               	bnz	u3810
  6203  003288  5006               	movf	(___fleq@ff2+1)^0,w,c
  6204  00328A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6205  00328C  E10C               	bnz	u3810
  6206  00328E  5007               	movf	(___fleq@ff2+2)^0,w,c
  6207  003290  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6208  003292  E109               	bnz	u3810
  6209  003294  5008               	movf	(___fleq@ff2+3)^0,w,c
  6210  003296  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6211  003298  B4D8               	btfsc	status,2,c
  6212  00329A  EF51  F019         	goto	u3811
  6213  00329E  EF53  F019         	goto	u3810
  6214  0032A2                     u3811:
  6215  0032A2  EF56  F019         	goto	l3315
  6216  0032A6                     u3810:
  6217  0032A6  90D8               	bcf	status,0,c
  6218  0032A8  EF57  F019         	goto	l540
  6219  0032AC                     l3315:
  6220  0032AC  80D8               	bsf	status,0,c
  6221  0032AE                     l540:
  6222  0032AE  0012               	return		;funcret
  6223  0032B0                     __end_of___fleq:
  6224                           	opt callstack 0
  6225                           
  6226 ;; *************** function ___awmod *****************
  6227 ;; Defined at:
  6228 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  dividend        2    0[COMRAM] int 
  6231 ;;  divisor         2    2[COMRAM] int 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  sign            1    5[COMRAM] unsigned char 
  6234 ;;  counter         1    4[COMRAM] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  2    0[COMRAM] int 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6244 ;;      Params:         4       0       0       0       0       0       0       0       0
  6245 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6247 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6248 ;;Total ram usage:        6 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_efgtoa
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text22
  6258  003156                     __ptext22:
  6259                           	opt callstack 0
  6260  003156                     ___awmod:
  6261                           	opt callstack 26
  6262  003156  0E00               	movlw	0
  6263  003158  6E06               	movwf	___awmod@sign^0,c
  6264  00315A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6265  00315C  EFB4  F018         	goto	u3730
  6266  003160  EFB2  F018         	goto	u3731
  6267  003164                     u3731:
  6268  003164  EFBA  F018         	goto	l3275
  6269  003168                     u3730:
  6270  003168  6C01               	negf	___awmod@dividend^0,c
  6271  00316A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6272  00316C  B0D8               	btfsc	status,0,c
  6273  00316E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6274  003170  0E01               	movlw	1
  6275  003172  6E06               	movwf	___awmod@sign^0,c
  6276  003174                     l3275:
  6277  003174  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6278  003176  EFC1  F018         	goto	u3740
  6279  00317A  EFBF  F018         	goto	u3741
  6280  00317E                     u3741:
  6281  00317E  EFC5  F018         	goto	l3279
  6282  003182                     u3740:
  6283  003182  6C03               	negf	___awmod@divisor^0,c
  6284  003184  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6285  003186  B0D8               	btfsc	status,0,c
  6286  003188  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6287  00318A                     l3279:
  6288  00318A  5003               	movf	___awmod@divisor^0,w,c
  6289  00318C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6290  00318E  B4D8               	btfsc	status,2,c
  6291  003190  EFCC  F018         	goto	u3751
  6292  003194  EFCE  F018         	goto	u3750
  6293  003198                     u3751:
  6294  003198  EFF2  F018         	goto	l3295
  6295  00319C                     u3750:
  6296  00319C  0E01               	movlw	1
  6297  00319E  6E05               	movwf	___awmod@counter^0,c
  6298  0031A0  EFD6  F018         	goto	l3285
  6299  0031A4                     l3283:
  6300  0031A4  90D8               	bcf	status,0,c
  6301  0031A6  3603               	rlcf	___awmod@divisor^0,f,c
  6302  0031A8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6303  0031AA  2A05               	incf	___awmod@counter^0,f,c
  6304  0031AC                     l3285:
  6305  0031AC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6306  0031AE  EFDB  F018         	goto	u3761
  6307  0031B2  EFDD  F018         	goto	u3760
  6308  0031B6                     u3761:
  6309  0031B6  EFD2  F018         	goto	l3283
  6310  0031BA                     u3760:
  6311  0031BA                     l3287:
  6312  0031BA  5003               	movf	___awmod@divisor^0,w,c
  6313  0031BC  5C01               	subwf	___awmod@dividend^0,w,c
  6314  0031BE  5004               	movf	(___awmod@divisor+1)^0,w,c
  6315  0031C0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6316  0031C2  A0D8               	btfss	status,0,c
  6317  0031C4  EFE6  F018         	goto	u3771
  6318  0031C8  EFE8  F018         	goto	u3770
  6319  0031CC                     u3771:
  6320  0031CC  EFEC  F018         	goto	l3291
  6321  0031D0                     u3770:
  6322  0031D0  5003               	movf	___awmod@divisor^0,w,c
  6323  0031D2  5E01               	subwf	___awmod@dividend^0,f,c
  6324  0031D4  5004               	movf	(___awmod@divisor+1)^0,w,c
  6325  0031D6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6326  0031D8                     l3291:
  6327  0031D8  90D8               	bcf	status,0,c
  6328  0031DA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6329  0031DC  3203               	rrcf	___awmod@divisor^0,f,c
  6330  0031DE  2E05               	decfsz	___awmod@counter^0,f,c
  6331  0031E0  EFDD  F018         	goto	l3287
  6332  0031E4                     l3295:
  6333  0031E4  5006               	movf	___awmod@sign^0,w,c
  6334  0031E6  B4D8               	btfsc	status,2,c
  6335  0031E8  EFF8  F018         	goto	u3781
  6336  0031EC  EFFA  F018         	goto	u3780
  6337  0031F0                     u3781:
  6338  0031F0  EFFE  F018         	goto	l3299
  6339  0031F4                     u3780:
  6340  0031F4  6C01               	negf	___awmod@dividend^0,c
  6341  0031F6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6342  0031F8  B0D8               	btfsc	status,0,c
  6343  0031FA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6344  0031FC                     l3299:
  6345  0031FC  C001  F001         	movff	___awmod@dividend,?___awmod
  6346  003200  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6347  003204  0012               	return		;funcret
  6348  003206                     __end_of___awmod:
  6349                           	opt callstack 0
  6350                           
  6351 ;; *************** function ___awdiv *****************
  6352 ;; Defined at:
  6353 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  dividend        2    0[COMRAM] int 
  6356 ;;  divisor         2    2[COMRAM] int 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  quotient        2    6[COMRAM] int 
  6359 ;;  sign            1    5[COMRAM] unsigned char 
  6360 ;;  counter         1    4[COMRAM] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  2    0[COMRAM] int 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6370 ;;      Params:         4       0       0       0       0       0       0       0       0
  6371 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6373 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6374 ;;Total ram usage:        8 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_efgtoa
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text23
  6384  003092                     __ptext23:
  6385                           	opt callstack 0
  6386  003092                     ___awdiv:
  6387                           	opt callstack 26
  6388  003092  0E00               	movlw	0
  6389  003094  6E06               	movwf	___awdiv@sign^0,c
  6390  003096  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6391  003098  EF52  F018         	goto	u3670
  6392  00309C  EF50  F018         	goto	u3671
  6393  0030A0                     u3671:
  6394  0030A0  EF58  F018         	goto	l3231
  6395  0030A4                     u3670:
  6396  0030A4  6C03               	negf	___awdiv@divisor^0,c
  6397  0030A6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6398  0030A8  B0D8               	btfsc	status,0,c
  6399  0030AA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6400  0030AC  0E01               	movlw	1
  6401  0030AE  6E06               	movwf	___awdiv@sign^0,c
  6402  0030B0                     l3231:
  6403  0030B0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6404  0030B2  EF5F  F018         	goto	u3680
  6405  0030B6  EF5D  F018         	goto	u3681
  6406  0030BA                     u3681:
  6407  0030BA  EF65  F018         	goto	l3237
  6408  0030BE                     u3680:
  6409  0030BE  6C01               	negf	___awdiv@dividend^0,c
  6410  0030C0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6411  0030C2  B0D8               	btfsc	status,0,c
  6412  0030C4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6413  0030C6  0E01               	movlw	1
  6414  0030C8  1A06               	xorwf	___awdiv@sign^0,f,c
  6415  0030CA                     l3237:
  6416  0030CA  0E00               	movlw	0
  6417  0030CC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6418  0030CE  0E00               	movlw	0
  6419  0030D0  6E07               	movwf	___awdiv@quotient^0,c
  6420  0030D2  5003               	movf	___awdiv@divisor^0,w,c
  6421  0030D4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6422  0030D6  B4D8               	btfsc	status,2,c
  6423  0030D8  EF70  F018         	goto	u3691
  6424  0030DC  EF72  F018         	goto	u3690
  6425  0030E0                     u3691:
  6426  0030E0  EF9A  F018         	goto	l3259
  6427  0030E4                     u3690:
  6428  0030E4  0E01               	movlw	1
  6429  0030E6  6E05               	movwf	___awdiv@counter^0,c
  6430  0030E8  EF7A  F018         	goto	l3245
  6431  0030EC                     l3243:
  6432  0030EC  90D8               	bcf	status,0,c
  6433  0030EE  3603               	rlcf	___awdiv@divisor^0,f,c
  6434  0030F0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6435  0030F2  2A05               	incf	___awdiv@counter^0,f,c
  6436  0030F4                     l3245:
  6437  0030F4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6438  0030F6  EF7F  F018         	goto	u3701
  6439  0030FA  EF81  F018         	goto	u3700
  6440  0030FE                     u3701:
  6441  0030FE  EF76  F018         	goto	l3243
  6442  003102                     u3700:
  6443  003102                     l3247:
  6444  003102  90D8               	bcf	status,0,c
  6445  003104  3607               	rlcf	___awdiv@quotient^0,f,c
  6446  003106  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6447  003108  5003               	movf	___awdiv@divisor^0,w,c
  6448  00310A  5C01               	subwf	___awdiv@dividend^0,w,c
  6449  00310C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6450  00310E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6451  003110  A0D8               	btfss	status,0,c
  6452  003112  EF8D  F018         	goto	u3711
  6453  003116  EF8F  F018         	goto	u3710
  6454  00311A                     u3711:
  6455  00311A  EF94  F018         	goto	l3255
  6456  00311E                     u3710:
  6457  00311E  5003               	movf	___awdiv@divisor^0,w,c
  6458  003120  5E01               	subwf	___awdiv@dividend^0,f,c
  6459  003122  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6460  003124  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6461  003126  8007               	bsf	___awdiv@quotient^0,0,c
  6462  003128                     l3255:
  6463  003128  90D8               	bcf	status,0,c
  6464  00312A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6465  00312C  3203               	rrcf	___awdiv@divisor^0,f,c
  6466  00312E  2E05               	decfsz	___awdiv@counter^0,f,c
  6467  003130  EF81  F018         	goto	l3247
  6468  003134                     l3259:
  6469  003134  5006               	movf	___awdiv@sign^0,w,c
  6470  003136  B4D8               	btfsc	status,2,c
  6471  003138  EFA0  F018         	goto	u3721
  6472  00313C  EFA2  F018         	goto	u3720
  6473  003140                     u3721:
  6474  003140  EFA6  F018         	goto	l3263
  6475  003144                     u3720:
  6476  003144  6C07               	negf	___awdiv@quotient^0,c
  6477  003146  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6478  003148  B0D8               	btfsc	status,0,c
  6479  00314A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6480  00314C                     l3263:
  6481  00314C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6482  003150  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6483  003154  0012               	return		;funcret
  6484  003156                     __end_of___awdiv:
  6485                           	opt callstack 0
  6486                           
  6487 ;; *************** function _atoi *****************
  6488 ;; Defined at:
  6489 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6492 ;;		 -> STR_1(25), 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  n               2   20[COMRAM] int 
  6495 ;;  neg             2   13[COMRAM] int 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  2    7[COMRAM] int 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6505 ;;      Params:         2       0       0       0       0       0       0       0       0
  6506 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6507 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6508 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6509 ;;Total ram usage:       15 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    1
  6512 ;; This function calls:
  6513 ;;		___wmul
  6514 ;;		_isdigit
  6515 ;;		_isspace
  6516 ;; This function is called by:
  6517 ;;		_vfpfcnvrt
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text24
  6522  002888                     __ptext24:
  6523                           	opt callstack 0
  6524  002888                     _atoi:
  6525                           	opt callstack 26
  6526  002888  0E00               	movlw	0
  6527  00288A  6E16               	movwf	(atoi@n+1)^0,c
  6528  00288C  0E00               	movlw	0
  6529  00288E  6E15               	movwf	atoi@n^0,c
  6530  002890  0E00               	movlw	0
  6531  002892  6E0F               	movwf	(atoi@neg+1)^0,c
  6532  002894  0E00               	movlw	0
  6533  002896  6E0E               	movwf	atoi@neg^0,c
  6534  002898  EF50  F014         	goto	l3713
  6535  00289C                     l3711:
  6536  00289C  4A08               	infsnz	atoi@s^0,f,c
  6537  00289E  2A09               	incf	(atoi@s+1)^0,f,c
  6538  0028A0                     l3713:
  6539  0028A0  0E01               	movlw	1
  6540  0028A2  6E14               	movwf	_atoi$906^0,c
  6541  0028A4  C008  FFF6         	movff	atoi@s,tblptrl
  6542  0028A8  C009  FFF7         	movff	atoi@s+1,tblptrh
  6543  0028AC                     	if	0	;tblptru may be non-zero
  6544  0028AC                     	endif
  6545  0028AC                     	if	0	;tblptru may be non-zero
  6546  0028AC                     	endif
  6547  0028AC  0008               	tblrd		*
  6548  0028AE  50F5               	movf	tablat,w,c
  6549  0028B0  0A20               	xorlw	32
  6550  0028B2  B4D8               	btfsc	status,2,c
  6551  0028B4  EF5E  F014         	goto	u4511
  6552  0028B8  EF60  F014         	goto	u4510
  6553  0028BC                     u4511:
  6554  0028BC  EF7D  F014         	goto	l3721
  6555  0028C0                     u4510:
  6556  0028C0  0EF7               	movlw	247
  6557  0028C2  6E0A               	movwf	??_atoi^0,c
  6558  0028C4  0EFF               	movlw	255
  6559  0028C6  6E0B               	movwf	(??_atoi+1)^0,c
  6560  0028C8  C008  FFF6         	movff	atoi@s,tblptrl
  6561  0028CC  C009  FFF7         	movff	atoi@s+1,tblptrh
  6562  0028D0                     	if	0	;tblptru may be non-zero
  6563  0028D0                     	endif
  6564  0028D0                     	if	0	;tblptru may be non-zero
  6565  0028D0                     	endif
  6566  0028D0  0008               	tblrd		*
  6567  0028D2  50F5               	movf	tablat,w,c
  6568  0028D4  6E0C               	movwf	(??_atoi+2)^0,c
  6569  0028D6  6A0D               	clrf	(??_atoi+3)^0,c
  6570  0028D8  500A               	movf	??_atoi^0,w,c
  6571  0028DA  260C               	addwf	(??_atoi+2)^0,f,c
  6572  0028DC  500B               	movf	(??_atoi+1)^0,w,c
  6573  0028DE  220D               	addwfc	(??_atoi+3)^0,f,c
  6574  0028E0  500D               	movf	(??_atoi+3)^0,w,c
  6575  0028E2  E109               	bnz	u4520
  6576  0028E4  0E05               	movlw	5
  6577  0028E6  5C0C               	subwf	(??_atoi+2)^0,w,c
  6578  0028E8  A0D8               	btfss	status,0,c
  6579  0028EA  EF79  F014         	goto	u4521
  6580  0028EE  EF7B  F014         	goto	u4520
  6581  0028F2                     u4521:
  6582  0028F2  EF7D  F014         	goto	l3721
  6583  0028F6                     u4520:
  6584  0028F6  0E00               	movlw	0
  6585  0028F8  6E14               	movwf	_atoi$906^0,c
  6586  0028FA                     l3721:
  6587  0028FA  C014  F010         	movff	_atoi$906,_atoi$905
  6588  0028FE  6A11               	clrf	(_atoi$905+1)^0,c
  6589  002900  5010               	movf	_atoi$905^0,w,c
  6590  002902  1011               	iorwf	(_atoi$905+1)^0,w,c
  6591  002904  A4D8               	btfss	status,2,c
  6592  002906  EF87  F014         	goto	u4531
  6593  00290A  EF89  F014         	goto	u4530
  6594  00290E                     u4531:
  6595  00290E  EF4E  F014         	goto	l3711
  6596  002912                     u4530:
  6597  002912  EF93  F014         	goto	l3731
  6598  002916                     l3727:
  6599  002916  0E00               	movlw	0
  6600  002918  6E0F               	movwf	(atoi@neg+1)^0,c
  6601  00291A  0E01               	movlw	1
  6602  00291C  6E0E               	movwf	atoi@neg^0,c
  6603  00291E                     l3729:
  6604  00291E  4A08               	infsnz	atoi@s^0,f,c
  6605  002920  2A09               	incf	(atoi@s+1)^0,f,c
  6606  002922  EFC8  F014         	goto	l3737
  6607  002926                     l3731:
  6608  002926  C008  FFF6         	movff	atoi@s,tblptrl
  6609  00292A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6610  00292E                     	if	0	;tblptru may be non-zero
  6611  00292E                     	endif
  6612  00292E                     	if	0	;tblptru may be non-zero
  6613  00292E                     	endif
  6614  00292E  0008               	tblrd		*
  6615  002930  50F5               	movf	tablat,w,c
  6616  002932  6E0A               	movwf	??_atoi^0,c
  6617  002934  6A0B               	clrf	(??_atoi+1)^0,c
  6618                           
  6619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6620                           ; Switch size 1, requested type "simple"
  6621                           ; Number of cases is 1, Range of values is 0 to 0
  6622                           ; switch strategies available:
  6623                           ; Name         Instructions Cycles
  6624                           ; simple_byte            4     3 (average)
  6625                           ;	Chosen strategy is simple_byte
  6626  002936  500B               	movf	(??_atoi+1)^0,w,c
  6627  002938  0A00               	xorlw	0	; case 0
  6628  00293A  B4D8               	btfsc	status,2,c
  6629  00293C  EFA2  F014         	goto	l4131
  6630  002940  EFC8  F014         	goto	l3737
  6631  002944                     l4131:
  6632                           
  6633                           ; Switch size 1, requested type "simple"
  6634                           ; Number of cases is 2, Range of values is 43 to 45
  6635                           ; switch strategies available:
  6636                           ; Name         Instructions Cycles
  6637                           ; simple_byte            7     4 (average)
  6638                           ;	Chosen strategy is simple_byte
  6639  002944  500A               	movf	??_atoi^0,w,c
  6640  002946  0A2B               	xorlw	43	; case 43
  6641  002948  B4D8               	btfsc	status,2,c
  6642  00294A  EF8F  F014         	goto	l3729
  6643  00294E  0A06               	xorlw	6	; case 45
  6644  002950  B4D8               	btfsc	status,2,c
  6645  002952  EF8B  F014         	goto	l3727
  6646  002956  EFC8  F014         	goto	l3737
  6647  00295A                     l3733:
  6648  00295A  C015  F001         	movff	atoi@n,___wmul@multiplier
  6649  00295E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6650  002962  0E00               	movlw	0
  6651  002964  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6652  002966  0E0A               	movlw	10
  6653  002968  6E03               	movwf	___wmul@multiplicand^0,c
  6654  00296A  EC0C  F01C         	call	___wmul	;wreg free
  6655  00296E  C008  FFF6         	movff	atoi@s,tblptrl
  6656  002972  C009  FFF7         	movff	atoi@s+1,tblptrh
  6657  002976                     	if	0	;tblptru may be non-zero
  6658  002976                     	endif
  6659  002976                     	if	0	;tblptru may be non-zero
  6660  002976                     	endif
  6661  002976  0008               	tblrd		*
  6662  002978  50F5               	movf	tablat,w,c
  6663  00297A  5E01               	subwf	?___wmul^0,f,c
  6664  00297C  0E00               	movlw	0
  6665  00297E  5A02               	subwfb	(?___wmul+1)^0,f,c
  6666  002980  0E30               	movlw	48
  6667  002982  2401               	addwf	?___wmul^0,w,c
  6668  002984  6E15               	movwf	atoi@n^0,c
  6669  002986  0E00               	movlw	0
  6670  002988  2002               	addwfc	(?___wmul+1)^0,w,c
  6671  00298A  6E16               	movwf	(atoi@n+1)^0,c
  6672  00298C  EF8F  F014         	goto	l3729
  6673  002990                     l3737:
  6674  002990  0ED0               	movlw	208
  6675  002992  6E0A               	movwf	??_atoi^0,c
  6676  002994  0EFF               	movlw	255
  6677  002996  6E0B               	movwf	(??_atoi+1)^0,c
  6678  002998  C008  FFF6         	movff	atoi@s,tblptrl
  6679  00299C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6680  0029A0                     	if	0	;tblptru may be non-zero
  6681  0029A0                     	endif
  6682  0029A0                     	if	0	;tblptru may be non-zero
  6683  0029A0                     	endif
  6684  0029A0  0008               	tblrd		*
  6685  0029A2  50F5               	movf	tablat,w,c
  6686  0029A4  6E0C               	movwf	(??_atoi+2)^0,c
  6687  0029A6  6A0D               	clrf	(??_atoi+3)^0,c
  6688  0029A8  500A               	movf	??_atoi^0,w,c
  6689  0029AA  260C               	addwf	(??_atoi+2)^0,f,c
  6690  0029AC  500B               	movf	(??_atoi+1)^0,w,c
  6691  0029AE  220D               	addwfc	(??_atoi+3)^0,f,c
  6692  0029B0  500D               	movf	(??_atoi+3)^0,w,c
  6693  0029B2  E10A               	bnz	u4540
  6694  0029B4  0E0A               	movlw	10
  6695  0029B6  5C0C               	subwf	(??_atoi+2)^0,w,c
  6696  0029B8  A0D8               	btfss	status,0,c
  6697  0029BA  EFE1  F014         	goto	u4541
  6698  0029BE  EFE4  F014         	goto	u4540
  6699  0029C2                     u4541:
  6700  0029C2  0E01               	movlw	1
  6701  0029C4  EFE5  F014         	goto	u4550
  6702  0029C8                     u4540:
  6703  0029C8  0E00               	movlw	0
  6704  0029CA                     u4550:
  6705  0029CA  6E12               	movwf	_atoi$907^0,c
  6706  0029CC  6A13               	clrf	(_atoi$907+1)^0,c
  6707  0029CE  5012               	movf	_atoi$907^0,w,c
  6708  0029D0  1013               	iorwf	(_atoi$907+1)^0,w,c
  6709  0029D2  A4D8               	btfss	status,2,c
  6710  0029D4  EFEE  F014         	goto	u4561
  6711  0029D8  EFF0  F014         	goto	u4560
  6712  0029DC                     u4561:
  6713  0029DC  EFAD  F014         	goto	l3733
  6714  0029E0                     u4560:
  6715  0029E0  500E               	movf	atoi@neg^0,w,c
  6716  0029E2  100F               	iorwf	(atoi@neg+1)^0,w,c
  6717  0029E4  A4D8               	btfss	status,2,c
  6718  0029E6  EFF7  F014         	goto	u4571
  6719  0029EA  EFF9  F014         	goto	u4570
  6720  0029EE                     u4571:
  6721  0029EE  EF07  F015         	goto	l991
  6722  0029F2                     u4570:
  6723  0029F2  C015  F00A         	movff	atoi@n,??_atoi
  6724  0029F6  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6725  0029FA  1E0A               	comf	??_atoi^0,f,c
  6726  0029FC  1E0B               	comf	(??_atoi+1)^0,f,c
  6727  0029FE  4A0A               	infsnz	??_atoi^0,f,c
  6728  002A00  2A0B               	incf	(??_atoi+1)^0,f,c
  6729  002A02  C00A  F008         	movff	??_atoi,?_atoi
  6730  002A06  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6731  002A0A  EF0B  F015         	goto	l994
  6732  002A0E                     l991:
  6733  002A0E  C015  F008         	movff	atoi@n,?_atoi
  6734  002A12  C016  F009         	movff	atoi@n+1,?_atoi+1
  6735  002A16                     l994:
  6736  002A16  0012               	return		;funcret
  6737  002A18                     __end_of_atoi:
  6738                           	opt callstack 0
  6739                           
  6740 ;; *************** function _isspace *****************
  6741 ;; Defined at:
  6742 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  c               2    0[COMRAM] int 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  2    0[COMRAM] int 
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6756 ;;      Params:         2       0       0       0       0       0       0       0       0
  6757 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6758 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6759 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6760 ;;Total ram usage:        7 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_atoi
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text25
  6770  0035B6                     __ptext25:
  6771                           	opt callstack 0
  6772  0035B6                     _isspace:
  6773                           	opt callstack 26
  6774  0035B6  0E01               	movlw	1
  6775  0035B8  6E07               	movwf	_isspace$936^0,c
  6776  0035BA  0E20               	movlw	32
  6777  0035BC  1801               	xorwf	isspace@c^0,w,c
  6778  0035BE  1002               	iorwf	(isspace@c+1)^0,w,c
  6779  0035C0  B4D8               	btfsc	status,2,c
  6780  0035C2  EFE5  F01A         	goto	u3951
  6781  0035C6  EFE7  F01A         	goto	u3950
  6782  0035CA                     u3951:
  6783  0035CA  EF00  F01B         	goto	l3401
  6784  0035CE                     u3950:
  6785  0035CE  0EF7               	movlw	247
  6786  0035D0  6E03               	movwf	??_isspace^0,c
  6787  0035D2  0EFF               	movlw	255
  6788  0035D4  6E04               	movwf	(??_isspace+1)^0,c
  6789  0035D6  C001  F005         	movff	isspace@c,??_isspace+2
  6790  0035DA  C002  F006         	movff	isspace@c+1,??_isspace+3
  6791  0035DE  5003               	movf	??_isspace^0,w,c
  6792  0035E0  2605               	addwf	(??_isspace+2)^0,f,c
  6793  0035E2  5004               	movf	(??_isspace+1)^0,w,c
  6794  0035E4  2206               	addwfc	(??_isspace+3)^0,f,c
  6795  0035E6  5006               	movf	(??_isspace+3)^0,w,c
  6796  0035E8  E109               	bnz	u3960
  6797  0035EA  0E05               	movlw	5
  6798  0035EC  5C05               	subwf	(??_isspace+2)^0,w,c
  6799  0035EE  A0D8               	btfss	status,0,c
  6800  0035F0  EFFC  F01A         	goto	u3961
  6801  0035F4  EFFE  F01A         	goto	u3960
  6802  0035F8                     u3961:
  6803  0035F8  EF00  F01B         	goto	l3401
  6804  0035FC                     u3960:
  6805  0035FC  0E00               	movlw	0
  6806  0035FE  6E07               	movwf	_isspace$936^0,c
  6807  003600                     l3401:
  6808  003600  C007  F001         	movff	_isspace$936,?_isspace
  6809  003604  6A02               	clrf	(?_isspace+1)^0,c
  6810  003606  0012               	return		;funcret
  6811  003608                     __end_of_isspace:
  6812                           	opt callstack 0
  6813                           
  6814 ;; *************** function _isdigit *****************
  6815 ;; Defined at:
  6816 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  c               2    0[COMRAM] int 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  2    0[COMRAM] int 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6830 ;;      Params:         2       0       0       0       0       0       0       0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6832 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6833 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:        6 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_vfpfcnvrt
  6840 ;;		_atoi
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text26
  6845  00374C                     __ptext26:
  6846                           	opt callstack 0
  6847  00374C                     _isdigit:
  6848                           	opt callstack 27
  6849  00374C  0ED0               	movlw	208
  6850  00374E  6E03               	movwf	??_isdigit^0,c
  6851  003750  0EFF               	movlw	255
  6852  003752  6E04               	movwf	(??_isdigit+1)^0,c
  6853  003754  C001  F005         	movff	isdigit@c,??_isdigit+2
  6854  003758  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6855  00375C  5003               	movf	??_isdigit^0,w,c
  6856  00375E  2605               	addwf	(??_isdigit+2)^0,f,c
  6857  003760  5004               	movf	(??_isdigit+1)^0,w,c
  6858  003762  2206               	addwfc	(??_isdigit+3)^0,f,c
  6859  003764  5006               	movf	(??_isdigit+3)^0,w,c
  6860  003766  E10A               	bnz	u3230
  6861  003768  0E0A               	movlw	10
  6862  00376A  5C05               	subwf	(??_isdigit+2)^0,w,c
  6863  00376C  A0D8               	btfss	status,0,c
  6864  00376E  EFBB  F01B         	goto	u3231
  6865  003772  EFBE  F01B         	goto	u3230
  6866  003776                     u3231:
  6867  003776  0E01               	movlw	1
  6868  003778  EFBF  F01B         	goto	u3240
  6869  00377C                     u3230:
  6870  00377C  0E00               	movlw	0
  6871  00377E                     u3240:
  6872  00377E  6E01               	movwf	?_isdigit^0,c
  6873  003780  6A02               	clrf	(?_isdigit+1)^0,c
  6874  003782  0012               	return		;funcret
  6875  003784                     __end_of_isdigit:
  6876                           	opt callstack 0
  6877                           
  6878 ;; *************** function ___wmul *****************
  6879 ;; Defined at:
  6880 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  multiplier      2    0[COMRAM] unsigned int 
  6883 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  product         2    4[COMRAM] unsigned int 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  2    0[COMRAM] unsigned int 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0, prodl, prodh
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6895 ;;      Params:         4       0       0       0       0       0       0       0       0
  6896 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6898 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6899 ;;Total ram usage:        6 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_atoi
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text27
  6909  003818                     __ptext27:
  6910                           	opt callstack 0
  6911  003818                     ___wmul:
  6912                           	opt callstack 26
  6913  003818  5001               	movf	___wmul@multiplier^0,w,c
  6914  00381A  0203               	mulwf	___wmul@multiplicand^0,c
  6915  00381C  CFF3 F005          	movff	prodl,___wmul@product
  6916  003820  CFF4 F006          	movff	prodh,___wmul@product+1
  6917  003824  5001               	movf	___wmul@multiplier^0,w,c
  6918  003826  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6919  003828  50F3               	movf	243,w,c
  6920  00382A  2606               	addwf	(___wmul@product+1)^0,f,c
  6921  00382C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6922  00382E  0203               	mulwf	___wmul@multiplicand^0,c
  6923  003830  50F3               	movf	243,w,c
  6924  003832  2606               	addwf	(___wmul@product+1)^0,f,c
  6925  003834  C005  F001         	movff	___wmul@product,?___wmul
  6926  003838  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6927  00383C  0012               	return		;funcret
  6928  00383E                     __end_of___wmul:
  6929                           	opt callstack 0
  6930                           
  6931 ;; *************** function _i2c_iniciar *****************
  6932 ;; Defined at:
  6933 ;;		line 13 in file "./I2C.h"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;		None
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0
  6948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6950 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6951 ;;Total ram usage:        0 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_main
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text28
  6961  00389E                     __ptext28:
  6962                           	opt callstack 0
  6963  00389E                     _i2c_iniciar:
  6964                           	opt callstack 30
  6965  00389E                     
  6966                           ;./I2C.h: 14:     TRISBbits.RB0 = 1;
  6967  00389E  8093               	bsf	147,0,c	;volatile
  6968                           
  6969                           ;./I2C.h: 15:     TRISBbits.RB1 = 1;
  6970  0038A0  8293               	bsf	147,1,c	;volatile
  6971  0038A2                     
  6972                           ;./I2C.h: 16:     SSPSTAT = 0b10000000;
  6973  0038A2  0E80               	movlw	128
  6974  0038A4  6EC7               	movwf	199,c	;volatile
  6975                           
  6976                           ;./I2C.h: 17:     SSPCON1 = 0b00101000;
  6977  0038A6  0E28               	movlw	40
  6978  0038A8  6EC6               	movwf	198,c	;volatile
  6979                           
  6980                           ;./I2C.h: 18:     SSPCON2 = 0b00000000;
  6981  0038AA  0E00               	movlw	0
  6982  0038AC  6EC5               	movwf	197,c	;volatile
  6983                           
  6984                           ;./I2C.h: 19:     SSPADD = 9;
  6985  0038AE  0E09               	movlw	9
  6986  0038B0  6EC8               	movwf	200,c	;volatile
  6987  0038B2  0012               	return		;funcret
  6988  0038B4                     __end_of_i2c_iniciar:
  6989                           	opt callstack 0
  6990                           
  6991 ;; *************** function _get_lux_value *****************
  6992 ;; Defined at:
  6993 ;;		line 55 in file "./bh1750.h"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  mode            1    wreg     unsigned char 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  mode            1   54[COMRAM] unsigned char 
  6998 ;;  lux_value       4   55[COMRAM] unsigned long 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  4   49[COMRAM] unsigned long 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7008 ;;      Params:         4       0       0       0       0       0       0       0       0
  7009 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7010 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7011 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7012 ;;Total ram usage:       10 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    3
  7015 ;; This function calls:
  7016 ;;		_BH1750_read_word
  7017 ;;		_BH1750_write
  7018 ;;		___fldiv
  7019 ;;		___fltol
  7020 ;;		___xxtofl
  7021 ;; This function is called by:
  7022 ;;		_main
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text29
  7027  0032B0                     __ptext29:
  7028                           	opt callstack 0
  7029  0032B0                     _get_lux_value:
  7030                           	opt callstack 27
  7031                           
  7032                           ;incstack = 0
  7033                           ;get_lux_value@mode stored from wreg
  7034  0032B0  6E37               	movwf	get_lux_value@mode^0,c
  7035  0032B2                     
  7036                           ;./bh1750.h: 58:    BH1750_write(0x01);
  7037  0032B2  0E01               	movlw	1
  7038  0032B4  EC43  F01C         	call	_BH1750_write
  7039  0032B8                     
  7040                           ;./bh1750.h: 59:    BH1750_write(mode);
  7041  0032B8  5037               	movf	get_lux_value@mode^0,w,c
  7042  0032BA  EC43  F01C         	call	_BH1750_write
  7043  0032BE                     
  7044                           ;./bh1750.h: 60:    lux_value = BH1750_read_word();
  7045  0032BE  EC04  F01B         	call	_BH1750_read_word	;wreg free
  7046  0032C2  C004  F038         	movff	?_BH1750_read_word,get_lux_value@lux_value
  7047  0032C6  C005  F039         	movff	?_BH1750_read_word+1,get_lux_value@lux_value+1
  7048  0032CA  C006  F03A         	movff	?_BH1750_read_word+2,get_lux_value@lux_value+2
  7049  0032CE  C007  F03B         	movff	?_BH1750_read_word+3,get_lux_value@lux_value+3
  7050  0032D2                     
  7051                           ;./bh1750.h: 61:    _delay((unsigned long)((180)*(4000000/4000.0)));
  7052  0032D2  0EEA               	movlw	234
  7053  0032D4  6E36               	movwf	??_get_lux_value^0,c
  7054  0032D6  0EC3               	movlw	195
  7055  0032D8                     u4997:
  7056  0032D8  2EE8               	decfsz	wreg,f,c
  7057  0032DA  D7FE               	bra	u4997
  7058  0032DC  2E36               	decfsz	??_get_lux_value^0,f,c
  7059  0032DE  D7FC               	bra	u4997
  7060  0032E0  F000               	nop	
  7061  0032E2                     
  7062                           ;./bh1750.h: 62:    BH1750_write(0x00);
  7063  0032E2  0E00               	movlw	0
  7064  0032E4  EC43  F01C         	call	_BH1750_write
  7065  0032E8                     
  7066                           ;./bh1750.h: 63:    lux_value /= 1.2;
  7067  0032E8  0E9A               	movlw	154
  7068  0032EA  6E13               	movwf	___fldiv@a^0,c
  7069  0032EC  0E99               	movlw	153
  7070  0032EE  6E14               	movwf	(___fldiv@a+1)^0,c
  7071  0032F0  0E99               	movlw	153
  7072  0032F2  6E15               	movwf	(___fldiv@a+2)^0,c
  7073  0032F4  0E3F               	movlw	63
  7074  0032F6  6E16               	movwf	(___fldiv@a+3)^0,c
  7075  0032F8  C038  F001         	movff	get_lux_value@lux_value,___xxtofl@val
  7076  0032FC  C039  F002         	movff	get_lux_value@lux_value+1,___xxtofl@val+1
  7077  003300  C03A  F003         	movff	get_lux_value@lux_value+2,___xxtofl@val+2
  7078  003304  C03B  F004         	movff	get_lux_value@lux_value+3,___xxtofl@val+3
  7079  003308  0E00               	movlw	0
  7080  00330A  EC6A  F013         	call	___xxtofl
  7081  00330E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7082  003312  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7083  003316  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7084  00331A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7085  00331E  EC94  F010         	call	___fldiv	;wreg free
  7086  003322  C00F  F028         	movff	?___fldiv,___fltol@f1
  7087  003326  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  7088  00332A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  7089  00332E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  7090  003332  EC92  F015         	call	___fltol	;wreg free
  7091  003336  C028  F038         	movff	?___fltol,get_lux_value@lux_value
  7092  00333A  C029  F039         	movff	?___fltol+1,get_lux_value@lux_value+1
  7093  00333E  C02A  F03A         	movff	?___fltol+2,get_lux_value@lux_value+2
  7094  003342  C02B  F03B         	movff	?___fltol+3,get_lux_value@lux_value+3
  7095  003346                     
  7096                           ;./bh1750.h: 64:    return lux_value;
  7097  003346  C038  F032         	movff	get_lux_value@lux_value,?_get_lux_value
  7098  00334A  C039  F033         	movff	get_lux_value@lux_value+1,?_get_lux_value+1
  7099  00334E  C03A  F034         	movff	get_lux_value@lux_value+2,?_get_lux_value+2
  7100  003352  C03B  F035         	movff	get_lux_value@lux_value+3,?_get_lux_value+3
  7101  003356  0012               	return		;funcret
  7102  003358                     __end_of_get_lux_value:
  7103                           	opt callstack 0
  7104                           
  7105 ;; *************** function ___xxtofl *****************
  7106 ;; Defined at:
  7107 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  sign            1    wreg     unsigned char 
  7110 ;;  val             4    0[COMRAM] long 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  sign            1    8[COMRAM] unsigned char 
  7113 ;;  arg             4   10[COMRAM] unsigned long 
  7114 ;;  exp             1    9[COMRAM] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  4    0[COMRAM] unsigned char 
  7117 ;; Registers used:
  7118 ;;		wreg, status,2, status,0
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7124 ;;      Params:         4       0       0       0       0       0       0       0       0
  7125 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7126 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7127 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7128 ;;Total ram usage:       14 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_get_lux_value
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text30
  7138  0026D4                     __ptext30:
  7139                           	opt callstack 0
  7140  0026D4                     ___xxtofl:
  7141                           	opt callstack 29
  7142                           
  7143                           ;incstack = 0
  7144                           ;___xxtofl@sign stored from wreg
  7145  0026D4  6E09               	movwf	___xxtofl@sign^0,c
  7146  0026D6  5009               	movf	___xxtofl@sign^0,w,c
  7147  0026D8  B4D8               	btfsc	status,2,c
  7148  0026DA  EF71  F013         	goto	u4871
  7149  0026DE  EF73  F013         	goto	u4870
  7150  0026E2                     u4871:
  7151  0026E2  EF95  F013         	goto	l936
  7152  0026E6                     u4870:
  7153  0026E6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7154  0026E8  EF7A  F013         	goto	u4880
  7155  0026EC  EF78  F013         	goto	u4881
  7156  0026F0                     u4881:
  7157  0026F0  EF95  F013         	goto	l936
  7158  0026F4                     u4880:
  7159  0026F4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7160  0026F8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7161  0026FC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7162  002700  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7163  002704  1E05               	comf	??___xxtofl^0,f,c
  7164  002706  1E06               	comf	(??___xxtofl+1)^0,f,c
  7165  002708  1E07               	comf	(??___xxtofl+2)^0,f,c
  7166  00270A  1E08               	comf	(??___xxtofl+3)^0,f,c
  7167  00270C  2A05               	incf	??___xxtofl^0,f,c
  7168  00270E  0E00               	movlw	0
  7169  002710  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7170  002712  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7171  002714  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7172  002716  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7173  00271A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7174  00271E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7175  002722  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7176  002726  EF9D  F013         	goto	l3969
  7177  00272A                     l936:
  7178  00272A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7179  00272E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7180  002732  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7181  002736  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7182  00273A                     l3969:
  7183  00273A  5001               	movf	___xxtofl@val^0,w,c
  7184  00273C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7185  00273E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7186  002740  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7187  002742  A4D8               	btfss	status,2,c
  7188  002744  EFA6  F013         	goto	u4891
  7189  002748  EFA8  F013         	goto	u4890
  7190  00274C                     u4891:
  7191  00274C  EFB2  F013         	goto	l3975
  7192  002750                     u4890:
  7193  002750  0E00               	movlw	0
  7194  002752  6E01               	movwf	?___xxtofl^0,c
  7195  002754  0E00               	movlw	0
  7196  002756  6E02               	movwf	(?___xxtofl+1)^0,c
  7197  002758  0E00               	movlw	0
  7198  00275A  6E03               	movwf	(?___xxtofl+2)^0,c
  7199  00275C  0E00               	movlw	0
  7200  00275E  6E04               	movwf	(?___xxtofl+3)^0,c
  7201  002760  EF43  F014         	goto	l939
  7202  002764                     l3975:
  7203  002764  0E96               	movlw	150
  7204  002766  6E0A               	movwf	___xxtofl@exp^0,c
  7205  002768  EFBC  F013         	goto	l3979
  7206  00276C                     l3977:
  7207  00276C  2A0A               	incf	___xxtofl@exp^0,f,c
  7208  00276E  90D8               	bcf	status,0,c
  7209  002770  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7210  002772  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7211  002774  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7212  002776  320B               	rrcf	___xxtofl@arg^0,f,c
  7213  002778                     l3979:
  7214  002778  0E00               	movlw	0
  7215  00277A  140B               	andwf	___xxtofl@arg^0,w,c
  7216  00277C  6E05               	movwf	??___xxtofl^0,c
  7217  00277E  0E00               	movlw	0
  7218  002780  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7219  002782  6E06               	movwf	(??___xxtofl+1)^0,c
  7220  002784  0E00               	movlw	0
  7221  002786  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7222  002788  6E07               	movwf	(??___xxtofl+2)^0,c
  7223  00278A  0EFE               	movlw	254
  7224  00278C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7225  00278E  6E08               	movwf	(??___xxtofl+3)^0,c
  7226  002790  5005               	movf	??___xxtofl^0,w,c
  7227  002792  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7228  002794  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7229  002796  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7230  002798  A4D8               	btfss	status,2,c
  7231  00279A  EFD1  F013         	goto	u4901
  7232  00279E  EFD3  F013         	goto	u4900
  7233  0027A2                     u4901:
  7234  0027A2  EFB6  F013         	goto	l3977
  7235  0027A6                     u4900:
  7236  0027A6  EFE1  F013         	goto	l943
  7237  0027AA                     l3981:
  7238  0027AA  2A0A               	incf	___xxtofl@exp^0,f,c
  7239  0027AC  0E01               	movlw	1
  7240  0027AE  260B               	addwf	___xxtofl@arg^0,f,c
  7241  0027B0  0E00               	movlw	0
  7242  0027B2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7243  0027B4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7244  0027B6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7245  0027B8  90D8               	bcf	status,0,c
  7246  0027BA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7247  0027BC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7248  0027BE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7249  0027C0  320B               	rrcf	___xxtofl@arg^0,f,c
  7250  0027C2                     l943:
  7251  0027C2  0E00               	movlw	0
  7252  0027C4  140B               	andwf	___xxtofl@arg^0,w,c
  7253  0027C6  6E05               	movwf	??___xxtofl^0,c
  7254  0027C8  0E00               	movlw	0
  7255  0027CA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7256  0027CC  6E06               	movwf	(??___xxtofl+1)^0,c
  7257  0027CE  0E00               	movlw	0
  7258  0027D0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7259  0027D2  6E07               	movwf	(??___xxtofl+2)^0,c
  7260  0027D4  0EFF               	movlw	255
  7261  0027D6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7262  0027D8  6E08               	movwf	(??___xxtofl+3)^0,c
  7263  0027DA  5005               	movf	??___xxtofl^0,w,c
  7264  0027DC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7265  0027DE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7266  0027E0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7267  0027E2  A4D8               	btfss	status,2,c
  7268  0027E4  EFF6  F013         	goto	u4911
  7269  0027E8  EFF8  F013         	goto	u4910
  7270  0027EC                     u4911:
  7271  0027EC  EFD5  F013         	goto	l3981
  7272  0027F0                     u4910:
  7273  0027F0  EF00  F014         	goto	l3989
  7274  0027F4                     l3987:
  7275  0027F4  060A               	decf	___xxtofl@exp^0,f,c
  7276  0027F6  90D8               	bcf	status,0,c
  7277  0027F8  360B               	rlcf	___xxtofl@arg^0,f,c
  7278  0027FA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7279  0027FC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7280  0027FE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7281  002800                     l3989:
  7282  002800  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7283  002802  EF05  F014         	goto	u4921
  7284  002806  EF07  F014         	goto	u4920
  7285  00280A                     u4921:
  7286  00280A  EF0F  F014         	goto	l950
  7287  00280E                     u4920:
  7288  00280E  0E02               	movlw	2
  7289  002810  600A               	cpfslt	___xxtofl@exp^0,c
  7290  002812  EF0D  F014         	goto	u4931
  7291  002816  EF0F  F014         	goto	u4930
  7292  00281A                     u4931:
  7293  00281A  EFFA  F013         	goto	l3987
  7294  00281E                     u4930:
  7295  00281E                     l950:
  7296  00281E  B00A               	btfsc	___xxtofl@exp^0,0,c
  7297  002820  EF14  F014         	goto	u4941
  7298  002824  EF16  F014         	goto	u4940
  7299  002828                     u4941:
  7300  002828  EF17  F014         	goto	l3995
  7301  00282C                     u4940:
  7302  00282C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7303  00282E                     l3995:
  7304  00282E  90D8               	bcf	status,0,c
  7305  002830  320A               	rrcf	___xxtofl@exp^0,f,c
  7306  002832  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7307  002836  6A06               	clrf	(??___xxtofl+1)^0,c
  7308  002838  6A07               	clrf	(??___xxtofl+2)^0,c
  7309  00283A  6A08               	clrf	(??___xxtofl+3)^0,c
  7310  00283C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7311  002840  6A07               	clrf	(??___xxtofl+2)^0,c
  7312  002842  6A06               	clrf	(??___xxtofl+1)^0,c
  7313  002844  6A05               	clrf	??___xxtofl^0,c
  7314  002846  5005               	movf	??___xxtofl^0,w,c
  7315  002848  120B               	iorwf	___xxtofl@arg^0,f,c
  7316  00284A  5006               	movf	(??___xxtofl+1)^0,w,c
  7317  00284C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7318  00284E  5007               	movf	(??___xxtofl+2)^0,w,c
  7319  002850  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7320  002852  5008               	movf	(??___xxtofl+3)^0,w,c
  7321  002854  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7322  002856  5009               	movf	___xxtofl@sign^0,w,c
  7323  002858  B4D8               	btfsc	status,2,c
  7324  00285A  EF31  F014         	goto	u4951
  7325  00285E  EF33  F014         	goto	u4950
  7326  002862                     u4951:
  7327  002862  EF3B  F014         	goto	l4005
  7328  002866                     u4950:
  7329  002866  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7330  002868  EF3A  F014         	goto	u4960
  7331  00286C  EF38  F014         	goto	u4961
  7332  002870                     u4961:
  7333  002870  EF3B  F014         	goto	l4005
  7334  002874                     u4960:
  7335  002874  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7336  002876                     l4005:
  7337  002876  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7338  00287A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7339  00287E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7340  002882  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7341  002886                     l939:
  7342  002886  0012               	return		;funcret
  7343  002888                     __end_of___xxtofl:
  7344                           	opt callstack 0
  7345                           
  7346 ;; *************** function ___fltol *****************
  7347 ;; Defined at:
  7348 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  f1              4   39[COMRAM] unsigned char 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  exp1            1   48[COMRAM] unsigned char 
  7353 ;;  sign1           1   47[COMRAM] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  4   39[COMRAM] long 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7363 ;;      Params:         4       0       0       0       0       0       0       0       0
  7364 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7365 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7366 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7367 ;;Total ram usage:       10 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_get_lux_value
  7373 ;;		_efgtoa
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text31
  7378  002B24                     __ptext31:
  7379                           	opt callstack 0
  7380  002B24                     ___fltol:
  7381                           	opt callstack 26
  7382  002B24  342A               	rlcf	(___fltol@f1+2)^0,w,c
  7383  002B26  342B               	rlcf	(___fltol@f1+3)^0,w,c
  7384  002B28  6E31               	movwf	___fltol@exp1^0,c
  7385  002B2A  5031               	movf	___fltol@exp1^0,w,c
  7386  002B2C  A4D8               	btfss	status,2,c
  7387  002B2E  EF9B  F015         	goto	u3881
  7388  002B32  EF9D  F015         	goto	u3880
  7389  002B36                     u3881:
  7390  002B36  EFA7  F015         	goto	l3355
  7391  002B3A                     u3880:
  7392  002B3A                     l3351:
  7393  002B3A  0E00               	movlw	0
  7394  002B3C  6E28               	movwf	?___fltol^0,c
  7395  002B3E  0E00               	movlw	0
  7396  002B40  6E29               	movwf	(?___fltol+1)^0,c
  7397  002B42  0E00               	movlw	0
  7398  002B44  6E2A               	movwf	(?___fltol+2)^0,c
  7399  002B46  0E00               	movlw	0
  7400  002B48  6E2B               	movwf	(?___fltol+3)^0,c
  7401  002B4A  EF14  F016         	goto	l578
  7402  002B4E                     l3355:
  7403  002B4E  C028  F02C         	movff	___fltol@f1,??___fltol
  7404  002B52  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  7405  002B56  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  7406  002B5A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  7407  002B5E  0E20               	movlw	32
  7408  002B60  EFB7  F015         	goto	u3890
  7409  002B64                     u3895:
  7410  002B64  90D8               	bcf	status,0,c
  7411  002B66  322F               	rrcf	(??___fltol+3)^0,f,c
  7412  002B68  322E               	rrcf	(??___fltol+2)^0,f,c
  7413  002B6A  322D               	rrcf	(??___fltol+1)^0,f,c
  7414  002B6C  322C               	rrcf	??___fltol^0,f,c
  7415  002B6E                     u3890:
  7416  002B6E  2EE8               	decfsz	wreg,f,c
  7417  002B70  EFB2  F015         	goto	u3895
  7418  002B74  502C               	movf	??___fltol^0,w,c
  7419  002B76  6E30               	movwf	___fltol@sign1^0,c
  7420  002B78  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  7421  002B7A  0EFF               	movlw	255
  7422  002B7C  1628               	andwf	___fltol@f1^0,f,c
  7423  002B7E  0EFF               	movlw	255
  7424  002B80  1629               	andwf	(___fltol@f1+1)^0,f,c
  7425  002B82  0EFF               	movlw	255
  7426  002B84  162A               	andwf	(___fltol@f1+2)^0,f,c
  7427  002B86  0E00               	movlw	0
  7428  002B88  162B               	andwf	(___fltol@f1+3)^0,f,c
  7429  002B8A  0E96               	movlw	150
  7430  002B8C  5E31               	subwf	___fltol@exp1^0,f,c
  7431  002B8E  BE31               	btfsc	___fltol@exp1^0,7,c
  7432  002B90  EFCE  F015         	goto	u3900
  7433  002B94  EFCC  F015         	goto	u3901
  7434  002B98                     u3901:
  7435  002B98  EFE4  F015         	goto	l3375
  7436  002B9C                     u3900:
  7437  002B9C  5031               	movf	___fltol@exp1^0,w,c
  7438  002B9E  0A80               	xorlw	128
  7439  002BA0  0F97               	addlw	151
  7440  002BA2  B0D8               	btfsc	status,0,c
  7441  002BA4  EFD6  F015         	goto	u3911
  7442  002BA8  EFD8  F015         	goto	u3910
  7443  002BAC                     u3911:
  7444  002BAC  EFDA  F015         	goto	l3371
  7445  002BB0                     u3910:
  7446  002BB0  EF9D  F015         	goto	l3351
  7447  002BB4                     l3371:
  7448  002BB4  90D8               	bcf	status,0,c
  7449  002BB6  322B               	rrcf	(___fltol@f1+3)^0,f,c
  7450  002BB8  322A               	rrcf	(___fltol@f1+2)^0,f,c
  7451  002BBA  3229               	rrcf	(___fltol@f1+1)^0,f,c
  7452  002BBC  3228               	rrcf	___fltol@f1^0,f,c
  7453  002BBE  3E31               	incfsz	___fltol@exp1^0,f,c
  7454  002BC0  EFDA  F015         	goto	l3371
  7455  002BC4  EFFC  F015         	goto	l3385
  7456  002BC8                     l3375:
  7457  002BC8  0E1F               	movlw	31
  7458  002BCA  6431               	cpfsgt	___fltol@exp1^0,c
  7459  002BCC  EFEA  F015         	goto	u3921
  7460  002BD0  EFEC  F015         	goto	u3920
  7461  002BD4                     u3921:
  7462  002BD4  EFF4  F015         	goto	l3383
  7463  002BD8                     u3920:
  7464  002BD8  EF9D  F015         	goto	l3351
  7465  002BDC                     l3381:
  7466  002BDC  90D8               	bcf	status,0,c
  7467  002BDE  3628               	rlcf	___fltol@f1^0,f,c
  7468  002BE0  3629               	rlcf	(___fltol@f1+1)^0,f,c
  7469  002BE2  362A               	rlcf	(___fltol@f1+2)^0,f,c
  7470  002BE4  362B               	rlcf	(___fltol@f1+3)^0,f,c
  7471  002BE6  0631               	decf	___fltol@exp1^0,f,c
  7472  002BE8                     l3383:
  7473  002BE8  5031               	movf	___fltol@exp1^0,w,c
  7474  002BEA  A4D8               	btfss	status,2,c
  7475  002BEC  EFFA  F015         	goto	u3931
  7476  002BF0  EFFC  F015         	goto	u3930
  7477  002BF4                     u3931:
  7478  002BF4  EFEE  F015         	goto	l3381
  7479  002BF8                     u3930:
  7480  002BF8                     l3385:
  7481  002BF8  5030               	movf	___fltol@sign1^0,w,c
  7482  002BFA  B4D8               	btfsc	status,2,c
  7483  002BFC  EF02  F016         	goto	u3941
  7484  002C00  EF04  F016         	goto	u3940
  7485  002C04                     u3941:
  7486  002C04  EF0C  F016         	goto	l3389
  7487  002C08                     u3940:
  7488  002C08  1E2B               	comf	(___fltol@f1+3)^0,f,c
  7489  002C0A  1E2A               	comf	(___fltol@f1+2)^0,f,c
  7490  002C0C  1E29               	comf	(___fltol@f1+1)^0,f,c
  7491  002C0E  6C28               	negf	___fltol@f1^0,c
  7492  002C10  0E00               	movlw	0
  7493  002C12  2229               	addwfc	(___fltol@f1+1)^0,f,c
  7494  002C14  222A               	addwfc	(___fltol@f1+2)^0,f,c
  7495  002C16  222B               	addwfc	(___fltol@f1+3)^0,f,c
  7496  002C18                     l3389:
  7497  002C18  C028  F028         	movff	___fltol@f1,?___fltol
  7498  002C1C  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  7499  002C20  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  7500  002C24  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  7501  002C28                     l578:
  7502  002C28  0012               	return		;funcret
  7503  002C2A                     __end_of___fltol:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function ___fldiv *****************
  7507 ;; Defined at:
  7508 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  b               4   14[COMRAM] long 
  7511 ;;  a               4   18[COMRAM] long 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  grs             4   33[COMRAM] unsigned long 
  7514 ;;  rem             4   26[COMRAM] unsigned long 
  7515 ;;  new_exp         2   31[COMRAM] short 
  7516 ;;  aexp            1   38[COMRAM] unsigned char 
  7517 ;;  bexp            1   37[COMRAM] unsigned char 
  7518 ;;  sign            1   30[COMRAM] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  4   14[COMRAM] unsigned char 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7528 ;;      Params:         8       0       0       0       0       0       0       0       0
  7529 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7531 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7532 ;;Total ram usage:       25 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_get_lux_value
  7538 ;;		_efgtoa
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text32
  7543  002128                     __ptext32:
  7544                           	opt callstack 0
  7545  002128                     ___fldiv:
  7546                           	opt callstack 26
  7547  002128  5012               	movf	(___fldiv@b+3)^0,w,c
  7548  00212A  0B80               	andlw	128
  7549  00212C  6E1F               	movwf	___fldiv@sign^0,c
  7550  00212E  5012               	movf	(___fldiv@b+3)^0,w,c
  7551  002130  2412               	addwf	(___fldiv@b+3)^0,w,c
  7552  002132  6E26               	movwf	___fldiv@bexp^0,c
  7553  002134  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7554  002136  EF9F  F010         	goto	u3251
  7555  00213A  EFA1  F010         	goto	u3250
  7556  00213E                     u3251:
  7557  00213E  EFA2  F010         	goto	l2955
  7558  002142                     u3250:
  7559  002142  8026               	bsf	___fldiv@bexp^0,0,c
  7560  002144                     l2955:
  7561  002144  5026               	movf	___fldiv@bexp^0,w,c
  7562  002146  B4D8               	btfsc	status,2,c
  7563  002148  EFA8  F010         	goto	u3261
  7564  00214C  EFAA  F010         	goto	u3260
  7565  002150                     u3261:
  7566  002150  EFBF  F010         	goto	l2965
  7567  002154                     u3260:
  7568  002154  2826               	incf	___fldiv@bexp^0,w,c
  7569  002156  A4D8               	btfss	status,2,c
  7570  002158  EFB0  F010         	goto	u3271
  7571  00215C  EFB2  F010         	goto	u3270
  7572  002160                     u3271:
  7573  002160  EFBA  F010         	goto	l2961
  7574  002164                     u3270:
  7575  002164  0E00               	movlw	0
  7576  002166  6E0F               	movwf	___fldiv@b^0,c
  7577  002168  0E00               	movlw	0
  7578  00216A  6E10               	movwf	(___fldiv@b+1)^0,c
  7579  00216C  0E00               	movlw	0
  7580  00216E  6E11               	movwf	(___fldiv@b+2)^0,c
  7581  002170  0E00               	movlw	0
  7582  002172  6E12               	movwf	(___fldiv@b+3)^0,c
  7583  002174                     l2961:
  7584  002174  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7585  002176  0E00               	movlw	0
  7586  002178  6E12               	movwf	(___fldiv@b+3)^0,c
  7587  00217A  EFC7  F010         	goto	l2967
  7588  00217E                     l2965:
  7589  00217E  0E00               	movlw	0
  7590  002180  6E0F               	movwf	___fldiv@b^0,c
  7591  002182  0E00               	movlw	0
  7592  002184  6E10               	movwf	(___fldiv@b+1)^0,c
  7593  002186  0E00               	movlw	0
  7594  002188  6E11               	movwf	(___fldiv@b+2)^0,c
  7595  00218A  0E00               	movlw	0
  7596  00218C  6E12               	movwf	(___fldiv@b+3)^0,c
  7597  00218E                     l2967:
  7598  00218E  5016               	movf	(___fldiv@a+3)^0,w,c
  7599  002190  0B80               	andlw	128
  7600  002192  1A1F               	xorwf	___fldiv@sign^0,f,c
  7601  002194  5016               	movf	(___fldiv@a+3)^0,w,c
  7602  002196  2416               	addwf	(___fldiv@a+3)^0,w,c
  7603  002198  6E27               	movwf	___fldiv@aexp^0,c
  7604  00219A  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7605  00219C  EFD2  F010         	goto	u3281
  7606  0021A0  EFD4  F010         	goto	u3280
  7607  0021A4                     u3281:
  7608  0021A4  EFD5  F010         	goto	l2975
  7609  0021A8                     u3280:
  7610  0021A8  8027               	bsf	___fldiv@aexp^0,0,c
  7611  0021AA                     l2975:
  7612  0021AA  5027               	movf	___fldiv@aexp^0,w,c
  7613  0021AC  B4D8               	btfsc	status,2,c
  7614  0021AE  EFDB  F010         	goto	u3291
  7615  0021B2  EFDD  F010         	goto	u3290
  7616  0021B6                     u3291:
  7617  0021B6  EFF2  F010         	goto	l2985
  7618  0021BA                     u3290:
  7619  0021BA  2827               	incf	___fldiv@aexp^0,w,c
  7620  0021BC  A4D8               	btfss	status,2,c
  7621  0021BE  EFE3  F010         	goto	u3301
  7622  0021C2  EFE5  F010         	goto	u3300
  7623  0021C6                     u3301:
  7624  0021C6  EFED  F010         	goto	l2981
  7625  0021CA                     u3300:
  7626  0021CA  0E00               	movlw	0
  7627  0021CC  6E13               	movwf	___fldiv@a^0,c
  7628  0021CE  0E00               	movlw	0
  7629  0021D0  6E14               	movwf	(___fldiv@a+1)^0,c
  7630  0021D2  0E00               	movlw	0
  7631  0021D4  6E15               	movwf	(___fldiv@a+2)^0,c
  7632  0021D6  0E00               	movlw	0
  7633  0021D8  6E16               	movwf	(___fldiv@a+3)^0,c
  7634  0021DA                     l2981:
  7635  0021DA  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7636  0021DC  0E00               	movlw	0
  7637  0021DE  6E16               	movwf	(___fldiv@a+3)^0,c
  7638  0021E0  EFFA  F010         	goto	l2987
  7639  0021E4                     l2985:
  7640  0021E4  0E00               	movlw	0
  7641  0021E6  6E13               	movwf	___fldiv@a^0,c
  7642  0021E8  0E00               	movlw	0
  7643  0021EA  6E14               	movwf	(___fldiv@a+1)^0,c
  7644  0021EC  0E00               	movlw	0
  7645  0021EE  6E15               	movwf	(___fldiv@a+2)^0,c
  7646  0021F0  0E00               	movlw	0
  7647  0021F2  6E16               	movwf	(___fldiv@a+3)^0,c
  7648  0021F4                     l2987:
  7649  0021F4  5013               	movf	___fldiv@a^0,w,c
  7650  0021F6  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7651  0021F8  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7652  0021FA  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7653  0021FC  A4D8               	btfss	status,2,c
  7654  0021FE  EF03  F011         	goto	u3311
  7655  002202  EF05  F011         	goto	u3310
  7656  002206                     u3311:
  7657  002206  EF1D  F011         	goto	l2999
  7658  00220A                     u3310:
  7659  00220A  0E00               	movlw	0
  7660  00220C  6E0F               	movwf	___fldiv@b^0,c
  7661  00220E  0E00               	movlw	0
  7662  002210  6E10               	movwf	(___fldiv@b+1)^0,c
  7663  002212  0E00               	movlw	0
  7664  002214  6E11               	movwf	(___fldiv@b+2)^0,c
  7665  002216  0E00               	movlw	0
  7666  002218  6E12               	movwf	(___fldiv@b+3)^0,c
  7667  00221A  0E80               	movlw	128
  7668  00221C  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7669  00221E  0E7F               	movlw	127
  7670  002220  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7671  002222                     l2993:
  7672  002222  501F               	movf	___fldiv@sign^0,w,c
  7673  002224  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7674  002226  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7675  00222A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7676  00222E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7677  002232  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7678  002236  EF60  F012         	goto	l863
  7679  00223A                     l2999:
  7680  00223A  5026               	movf	___fldiv@bexp^0,w,c
  7681  00223C  A4D8               	btfss	status,2,c
  7682  00223E  EF23  F011         	goto	u3321
  7683  002242  EF25  F011         	goto	u3320
  7684  002246                     u3321:
  7685  002246  EF2F  F011         	goto	l3007
  7686  00224A                     u3320:
  7687  00224A  0E00               	movlw	0
  7688  00224C  6E0F               	movwf	?___fldiv^0,c
  7689  00224E  0E00               	movlw	0
  7690  002250  6E10               	movwf	(?___fldiv+1)^0,c
  7691  002252  0E00               	movlw	0
  7692  002254  6E11               	movwf	(?___fldiv+2)^0,c
  7693  002256  0E00               	movlw	0
  7694  002258  6E12               	movwf	(?___fldiv+3)^0,c
  7695  00225A  EF60  F012         	goto	l863
  7696  00225E                     l3007:
  7697  00225E  5027               	movf	___fldiv@aexp^0,w,c
  7698  002260  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7699  002264  6A18               	clrf	(??___fldiv+1)^0,c
  7700  002266  5E17               	subwf	??___fldiv^0,f,c
  7701  002268  0E00               	movlw	0
  7702  00226A  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7703  00226C  0E7F               	movlw	127
  7704  00226E  2417               	addwf	??___fldiv^0,w,c
  7705  002270  6E20               	movwf	___fldiv@new_exp^0,c
  7706  002272  0E00               	movlw	0
  7707  002274  2018               	addwfc	(??___fldiv+1)^0,w,c
  7708  002276  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7709  002278  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7710  00227C  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7711  002280  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7712  002284  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7713  002288  0E00               	movlw	0
  7714  00228A  6E0F               	movwf	___fldiv@b^0,c
  7715  00228C  0E00               	movlw	0
  7716  00228E  6E10               	movwf	(___fldiv@b+1)^0,c
  7717  002290  0E00               	movlw	0
  7718  002292  6E11               	movwf	(___fldiv@b+2)^0,c
  7719  002294  0E00               	movlw	0
  7720  002296  6E12               	movwf	(___fldiv@b+3)^0,c
  7721  002298  0E00               	movlw	0
  7722  00229A  6E22               	movwf	___fldiv@grs^0,c
  7723  00229C  0E00               	movlw	0
  7724  00229E  6E23               	movwf	(___fldiv@grs+1)^0,c
  7725  0022A0  0E00               	movlw	0
  7726  0022A2  6E24               	movwf	(___fldiv@grs+2)^0,c
  7727  0022A4  0E00               	movlw	0
  7728  0022A6  6E25               	movwf	(___fldiv@grs+3)^0,c
  7729  0022A8  0E00               	movlw	0
  7730  0022AA  6E27               	movwf	___fldiv@aexp^0,c
  7731  0022AC  EF90  F011         	goto	l865
  7732  0022B0                     l3017:
  7733  0022B0  5027               	movf	___fldiv@aexp^0,w,c
  7734  0022B2  B4D8               	btfsc	status,2,c
  7735  0022B4  EF5E  F011         	goto	u3331
  7736  0022B8  EF60  F011         	goto	u3330
  7737  0022BC                     u3331:
  7738  0022BC  EF77  F011         	goto	l3025
  7739  0022C0                     u3330:
  7740  0022C0  90D8               	bcf	status,0,c
  7741  0022C2  361B               	rlcf	___fldiv@rem^0,f,c
  7742  0022C4  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7743  0022C6  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7744  0022C8  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7745  0022CA  90D8               	bcf	status,0,c
  7746  0022CC  360F               	rlcf	___fldiv@b^0,f,c
  7747  0022CE  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7748  0022D0  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7749  0022D2  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7750  0022D4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7751  0022D6  EF6F  F011         	goto	u3341
  7752  0022DA  EF71  F011         	goto	u3340
  7753  0022DE                     u3341:
  7754  0022DE  EF72  F011         	goto	l868
  7755  0022E2                     u3340:
  7756  0022E2  800F               	bsf	___fldiv@b^0,0,c
  7757  0022E4                     l868:
  7758  0022E4  90D8               	bcf	status,0,c
  7759  0022E6  3622               	rlcf	___fldiv@grs^0,f,c
  7760  0022E8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7761  0022EA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7762  0022EC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7763  0022EE                     l3025:
  7764  0022EE  5013               	movf	___fldiv@a^0,w,c
  7765  0022F0  5C1B               	subwf	___fldiv@rem^0,w,c
  7766  0022F2  5014               	movf	(___fldiv@a+1)^0,w,c
  7767  0022F4  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7768  0022F6  5015               	movf	(___fldiv@a+2)^0,w,c
  7769  0022F8  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7770  0022FA  5016               	movf	(___fldiv@a+3)^0,w,c
  7771  0022FC  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7772  0022FE  A0D8               	btfss	status,0,c
  7773  002300  EF84  F011         	goto	u3351
  7774  002304  EF86  F011         	goto	u3350
  7775  002308                     u3351:
  7776  002308  EF8F  F011         	goto	l3031
  7777  00230C                     u3350:
  7778  00230C  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7779  00230E  5013               	movf	___fldiv@a^0,w,c
  7780  002310  5E1B               	subwf	___fldiv@rem^0,f,c
  7781  002312  5014               	movf	(___fldiv@a+1)^0,w,c
  7782  002314  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7783  002316  5015               	movf	(___fldiv@a+2)^0,w,c
  7784  002318  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7785  00231A  5016               	movf	(___fldiv@a+3)^0,w,c
  7786  00231C  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7787  00231E                     l3031:
  7788  00231E  2A27               	incf	___fldiv@aexp^0,f,c
  7789  002320                     l865:
  7790  002320  0E19               	movlw	25
  7791  002322  6427               	cpfsgt	___fldiv@aexp^0,c
  7792  002324  EF96  F011         	goto	u3361
  7793  002328  EF98  F011         	goto	u3360
  7794  00232C                     u3361:
  7795  00232C  EF58  F011         	goto	l3017
  7796  002330                     u3360:
  7797  002330  501B               	movf	___fldiv@rem^0,w,c
  7798  002332  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7799  002334  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7800  002336  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7801  002338  B4D8               	btfsc	status,2,c
  7802  00233A  EFA1  F011         	goto	u3371
  7803  00233E  EFA3  F011         	goto	u3370
  7804  002342                     u3371:
  7805  002342  EFBB  F011         	goto	l3043
  7806  002346                     u3370:
  7807  002346  8022               	bsf	___fldiv@grs^0,0,c
  7808  002348  EFBB  F011         	goto	l3043
  7809  00234C                     l3037:
  7810  00234C  90D8               	bcf	status,0,c
  7811  00234E  360F               	rlcf	___fldiv@b^0,f,c
  7812  002350  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7813  002352  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7814  002354  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7815  002356  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7816  002358  EFB0  F011         	goto	u3381
  7817  00235C  EFB2  F011         	goto	u3380
  7818  002360                     u3381:
  7819  002360  EFB3  F011         	goto	l874
  7820  002364                     u3380:
  7821  002364  800F               	bsf	___fldiv@b^0,0,c
  7822  002366                     l874:
  7823  002366  90D8               	bcf	status,0,c
  7824  002368  3622               	rlcf	___fldiv@grs^0,f,c
  7825  00236A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7826  00236C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7827  00236E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7828  002370  0620               	decf	___fldiv@new_exp^0,f,c
  7829  002372  A0D8               	btfss	status,0,c
  7830  002374  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7831  002376                     l3043:
  7832  002376  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7833  002378  EFC0  F011         	goto	u3391
  7834  00237C  EFC2  F011         	goto	u3390
  7835  002380                     u3391:
  7836  002380  EFA6  F011         	goto	l3037
  7837  002384                     u3390:
  7838  002384  0E00               	movlw	0
  7839  002386  6E27               	movwf	___fldiv@aexp^0,c
  7840  002388  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7841  00238A  EFC9  F011         	goto	u3401
  7842  00238E  EFCB  F011         	goto	u3400
  7843  002392                     u3401:
  7844  002392  EFEF  F011         	goto	l876
  7845  002396                     u3400:
  7846  002396  0EFF               	movlw	255
  7847  002398  1422               	andwf	___fldiv@grs^0,w,c
  7848  00239A  6E17               	movwf	??___fldiv^0,c
  7849  00239C  0EFF               	movlw	255
  7850  00239E  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7851  0023A0  6E18               	movwf	(??___fldiv+1)^0,c
  7852  0023A2  0EFF               	movlw	255
  7853  0023A4  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7854  0023A6  6E19               	movwf	(??___fldiv+2)^0,c
  7855  0023A8  0E7F               	movlw	127
  7856  0023AA  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7857  0023AC  6E1A               	movwf	(??___fldiv+3)^0,c
  7858  0023AE  5017               	movf	??___fldiv^0,w,c
  7859  0023B0  1018               	iorwf	(??___fldiv+1)^0,w,c
  7860  0023B2  1019               	iorwf	(??___fldiv+2)^0,w,c
  7861  0023B4  101A               	iorwf	(??___fldiv+3)^0,w,c
  7862  0023B6  B4D8               	btfsc	status,2,c
  7863  0023B8  EFE0  F011         	goto	u3411
  7864  0023BC  EFE2  F011         	goto	u3410
  7865  0023C0                     u3411:
  7866  0023C0  EFE6  F011         	goto	l877
  7867  0023C4                     u3410:
  7868  0023C4                     l3051:
  7869  0023C4  0E01               	movlw	1
  7870  0023C6  6E27               	movwf	___fldiv@aexp^0,c
  7871  0023C8  EFEF  F011         	goto	l876
  7872  0023CC                     l877:
  7873  0023CC  A00F               	btfss	___fldiv@b^0,0,c
  7874  0023CE  EFEB  F011         	goto	u3421
  7875  0023D2  EFED  F011         	goto	u3420
  7876  0023D6                     u3421:
  7877  0023D6  EFEF  F011         	goto	l876
  7878  0023DA                     u3420:
  7879  0023DA  EFE2  F011         	goto	l3051
  7880  0023DE                     l876:
  7881  0023DE  5027               	movf	___fldiv@aexp^0,w,c
  7882  0023E0  B4D8               	btfsc	status,2,c
  7883  0023E2  EFF5  F011         	goto	u3431
  7884  0023E6  EFF7  F011         	goto	u3430
  7885  0023EA                     u3431:
  7886  0023EA  EF1B  F012         	goto	l3063
  7887  0023EE                     u3430:
  7888  0023EE  0E01               	movlw	1
  7889  0023F0  260F               	addwf	___fldiv@b^0,f,c
  7890  0023F2  0E00               	movlw	0
  7891  0023F4  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7892  0023F6  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7893  0023F8  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7894  0023FA  A012               	btfss	(___fldiv@b+3)^0,0,c
  7895  0023FC  EF02  F012         	goto	u3441
  7896  002400  EF04  F012         	goto	u3440
  7897  002404                     u3441:
  7898  002404  EF1B  F012         	goto	l3063
  7899  002408                     u3440:
  7900  002408  C00F  F017         	movff	___fldiv@b,??___fldiv
  7901  00240C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7902  002410  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7903  002414  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7904  002418  341A               	rlcf	(??___fldiv+3)^0,w,c
  7905  00241A  321A               	rrcf	(??___fldiv+3)^0,f,c
  7906  00241C  3219               	rrcf	(??___fldiv+2)^0,f,c
  7907  00241E  3218               	rrcf	(??___fldiv+1)^0,f,c
  7908  002420  3217               	rrcf	??___fldiv^0,f,c
  7909  002422  C017  F00F         	movff	??___fldiv,___fldiv@b
  7910  002426  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7911  00242A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7912  00242E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7913  002432  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7914  002434  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7915  002436                     l3063:
  7916  002436  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7917  002438  EF26  F012         	goto	u3451
  7918  00243C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7919  00243E  E108               	bnz	u3450
  7920  002440  2820               	incf	___fldiv@new_exp^0,w,c
  7921  002442  A0D8               	btfss	status,0,c
  7922  002444  EF26  F012         	goto	u3451
  7923  002448  EF28  F012         	goto	u3450
  7924  00244C                     u3451:
  7925  00244C  EF33  F012         	goto	l3067
  7926  002450                     u3450:
  7927  002450  0E00               	movlw	0
  7928  002452  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7929  002454  6820               	setf	___fldiv@new_exp^0,c
  7930  002456  0E00               	movlw	0
  7931  002458  6E0F               	movwf	___fldiv@b^0,c
  7932  00245A  0E00               	movlw	0
  7933  00245C  6E10               	movwf	(___fldiv@b+1)^0,c
  7934  00245E  0E00               	movlw	0
  7935  002460  6E11               	movwf	(___fldiv@b+2)^0,c
  7936  002462  0E00               	movlw	0
  7937  002464  6E12               	movwf	(___fldiv@b+3)^0,c
  7938  002466                     l3067:
  7939  002466  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7940  002468  EF40  F012         	goto	u3460
  7941  00246C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7942  00246E  E106               	bnz	u3461
  7943  002470  0420               	decf	___fldiv@new_exp^0,w,c
  7944  002472  B0D8               	btfsc	status,0,c
  7945  002474  EF3E  F012         	goto	u3461
  7946  002478  EF40  F012         	goto	u3460
  7947  00247C                     u3461:
  7948  00247C  EF4E  F012         	goto	l3071
  7949  002480                     u3460:
  7950  002480  0E00               	movlw	0
  7951  002482  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7952  002484  0E00               	movlw	0
  7953  002486  6E20               	movwf	___fldiv@new_exp^0,c
  7954  002488  0E00               	movlw	0
  7955  00248A  6E0F               	movwf	___fldiv@b^0,c
  7956  00248C  0E00               	movlw	0
  7957  00248E  6E10               	movwf	(___fldiv@b+1)^0,c
  7958  002490  0E00               	movlw	0
  7959  002492  6E11               	movwf	(___fldiv@b+2)^0,c
  7960  002494  0E00               	movlw	0
  7961  002496  6E12               	movwf	(___fldiv@b+3)^0,c
  7962  002498  0E00               	movlw	0
  7963  00249A  6E1F               	movwf	___fldiv@sign^0,c
  7964  00249C                     l3071:
  7965  00249C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7966  0024A0  A026               	btfss	___fldiv@bexp^0,0,c
  7967  0024A2  EF55  F012         	goto	u3471
  7968  0024A6  EF57  F012         	goto	u3470
  7969  0024AA                     u3471:
  7970  0024AA  EF5A  F012         	goto	l3077
  7971  0024AE                     u3470:
  7972  0024AE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7973  0024B0  EF5B  F012         	goto	l3079
  7974  0024B4                     l3077:
  7975  0024B4  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7976  0024B6                     l3079:
  7977  0024B6  90D8               	bcf	status,0,c
  7978  0024B8  3026               	rrcf	___fldiv@bexp^0,w,c
  7979  0024BA  6E12               	movwf	(___fldiv@b+3)^0,c
  7980  0024BC  EF11  F011         	goto	l2993
  7981  0024C0                     l863:
  7982  0024C0  0012               	return		;funcret
  7983  0024C2                     __end_of___fldiv:
  7984                           	opt callstack 0
  7985                           
  7986 ;; *************** function _BH1750_read_word *****************
  7987 ;; Defined at:
  7988 ;;		line 40 in file "./bh1750.h"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  hb              1   10[COMRAM] unsigned char 
  7993 ;;  lb              1    9[COMRAM] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  4    3[COMRAM] unsigned long 
  7996 ;; Registers used:
  7997 ;;		wreg, status,2, status,0, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8003 ;;      Params:         4       0       0       0       0       0       0       0       0
  8004 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8005 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8006 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8007 ;;Total ram usage:        8 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    2
  8010 ;; This function calls:
  8011 ;;		_i2c_detener
  8012 ;;		_i2c_envia_dato
  8013 ;;		_i2c_inicia_com
  8014 ;;		_i2c_recibe_datoACK
  8015 ;; This function is called by:
  8016 ;;		_get_lux_value
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text33
  8021  003608                     __ptext33:
  8022                           	opt callstack 0
  8023  003608                     _BH1750_read_word:
  8024                           	opt callstack 27
  8025  003608                     
  8026                           ;./bh1750.h: 43:    T_UBYTE hb = 0;
  8027  003608  0E00               	movlw	0
  8028  00360A  6E0B               	movwf	BH1750_read_word@hb^0,c
  8029  00360C                     
  8030                           ;./bh1750.h: 45:    i2c_inicia_com();
  8031  00360C  EC76  F01C         	call	_i2c_inicia_com	;wreg free
  8032  003610                     
  8033                           ;./bh1750.h: 46:    i2c_envia_dato(0x47);
  8034  003610  0E47               	movlw	71
  8035  003612  EC70  F01C         	call	_i2c_envia_dato
  8036  003616                     
  8037                           ;./bh1750.h: 47:    hb = i2c_recibe_datoACK(1);
  8038  003616  0E01               	movlw	1
  8039  003618  ECF5  F01B         	call	_i2c_recibe_datoACK
  8040  00361C  6E0B               	movwf	BH1750_read_word@hb^0,c
  8041  00361E                     
  8042                           ;./bh1750.h: 48:    lb = i2c_recibe_datoACK(0);
  8043  00361E  0E00               	movlw	0
  8044  003620  ECF5  F01B         	call	_i2c_recibe_datoACK
  8045  003624  6E0A               	movwf	BH1750_read_word@lb^0,c
  8046  003626                     
  8047                           ;./bh1750.h: 49:    i2c_detener();
  8048  003626  EC7A  F01C         	call	_i2c_detener	;wreg free
  8049  00362A                     
  8050                           ;./bh1750.h: 51:    return (hb << 8) + lb;
  8051  00362A  500A               	movf	BH1750_read_word@lb^0,w,c
  8052  00362C  C00B  F008         	movff	BH1750_read_word@hb,??_BH1750_read_word
  8053  003630  6A09               	clrf	(??_BH1750_read_word+1)^0,c
  8054  003632  C008  F009         	movff	??_BH1750_read_word,??_BH1750_read_word+1
  8055  003636  6A08               	clrf	??_BH1750_read_word^0,c
  8056  003638  2608               	addwf	??_BH1750_read_word^0,f,c
  8057  00363A  0E00               	movlw	0
  8058  00363C  2209               	addwfc	(??_BH1750_read_word+1)^0,f,c
  8059  00363E  C008  F004         	movff	??_BH1750_read_word,?_BH1750_read_word
  8060  003642  C009  F005         	movff	??_BH1750_read_word+1,?_BH1750_read_word+1
  8061  003646  0E00               	movlw	0
  8062  003648  BE05               	btfsc	(?_BH1750_read_word+1)^0,7,c
  8063  00364A  0EFF               	movlw	-1
  8064  00364C  6E06               	movwf	(?_BH1750_read_word+2)^0,c
  8065  00364E  6E07               	movwf	(?_BH1750_read_word+3)^0,c
  8066  003650  0012               	return		;funcret
  8067  003652                     __end_of_BH1750_read_word:
  8068                           	opt callstack 0
  8069                           
  8070 ;; *************** function _i2c_recibe_datoACK *****************
  8071 ;; Defined at:
  8072 ;;		line 103 in file "./I2C.h"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;  a               1    wreg     unsigned char 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  a               1    1[COMRAM] unsigned char 
  8077 ;;  datoleido       1    2[COMRAM] unsigned char 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      unsigned char 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2, status,0, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0
  8088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8090 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8091 ;;Total ram usage:        2 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    1
  8094 ;; This function calls:
  8095 ;;		_i2c_espera
  8096 ;; This function is called by:
  8097 ;;		_BH1750_read_word
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text34
  8102  0037EA                     __ptext34:
  8103                           	opt callstack 0
  8104  0037EA                     _i2c_recibe_datoACK:
  8105                           	opt callstack 27
  8106                           
  8107                           ;incstack = 0
  8108                           ;i2c_recibe_datoACK@a stored from wreg
  8109  0037EA  6E02               	movwf	i2c_recibe_datoACK@a^0,c
  8110  0037EC                     
  8111                           ;./I2C.h: 105:     T_UBYTE datoleido;;./I2C.h: 108:     i2c_espera();
  8112  0037EC  EC1F  F01C         	call	_i2c_espera	;wreg free
  8113  0037F0                     
  8114                           ;./I2C.h: 109:     SSPCON2bits.RCEN = 1;
  8115  0037F0  86C5               	bsf	197,3,c	;volatile
  8116                           
  8117                           ;./I2C.h: 111:     i2c_espera();
  8118  0037F2  EC1F  F01C         	call	_i2c_espera	;wreg free
  8119  0037F6                     
  8120                           ;./I2C.h: 112:     datoleido = SSPBUF;
  8121  0037F6  CFC9 F003          	movff	4041,i2c_recibe_datoACK@datoleido	;volatile
  8122                           
  8123                           ;./I2C.h: 115:     i2c_espera();
  8124  0037FA  EC1F  F01C         	call	_i2c_espera	;wreg free
  8125  0037FE                     
  8126                           ;./I2C.h: 117:     ACKDT = (a) ? 0 : 1;
  8127  0037FE  5002               	movf	i2c_recibe_datoACK@a^0,w,c
  8128  003800  B4D8               	btfsc	status,2,c
  8129  003802  EF05  F01C         	goto	u4631
  8130  003806  EF08  F01C         	goto	u4630
  8131  00380A                     u4631:
  8132  00380A  8AC5               	bsf	4037,5,c	;volatile
  8133  00380C  EF09  F01C         	goto	u4645
  8134  003810                     u4630:
  8135  003810  9AC5               	bcf	4037,5,c	;volatile
  8136  003812                     u4645:
  8137  003812                     
  8138                           ;./I2C.h: 118:     ACKEN = 1;
  8139  003812  88C5               	bsf	4037,4,c	;volatile
  8140  003814                     
  8141                           ;./I2C.h: 120:     return datoleido;
  8142  003814  5003               	movf	i2c_recibe_datoACK@datoleido^0,w,c
  8143  003816  0012               	return		;funcret
  8144  003818                     __end_of_i2c_recibe_datoACK:
  8145                           	opt callstack 0
  8146                           
  8147 ;; *************** function _UART_printf *****************
  8148 ;; Defined at:
  8149 ;;		line 47 in file "./UART.h"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  8152 ;;		 -> main@buffer(30), 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;		None
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8164 ;;      Params:         2       0       0       0       0       0       0       0       0
  8165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8167 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8168 ;;Total ram usage:        2 bytes
  8169 ;; Hardware stack levels used:    1
  8170 ;; Hardware stack levels required when called:    1
  8171 ;; This function calls:
  8172 ;;		_UART_write
  8173 ;; This function is called by:
  8174 ;;		_main
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text35
  8179  0037BA                     __ptext35:
  8180                           	opt callstack 0
  8181  0037BA                     _UART_printf:
  8182                           	opt callstack 29
  8183  0037BA                     
  8184                           ;./UART.h: 48:     while (*cadena) {
  8185  0037BA  EFE8  F01B         	goto	l4043
  8186  0037BE                     l4039:
  8187                           
  8188                           ;./UART.h: 49:         UART_write(*cadena++);
  8189  0037BE  C002  FFD9         	movff	UART_printf@cadena,fsr2l
  8190  0037C2  C003  FFDA         	movff	UART_printf@cadena+1,fsr2h
  8191  0037C6  50DF               	movf	indf2,w,c
  8192  0037C8  EC5A  F01C         	call	_UART_write
  8193  0037CC  4A02               	infsnz	UART_printf@cadena^0,f,c
  8194  0037CE  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  8195  0037D0                     l4043:
  8196                           
  8197                           ;./UART.h: 48:     while (*cadena) {
  8198  0037D0  C002  FFD9         	movff	UART_printf@cadena,fsr2l
  8199  0037D4  C003  FFDA         	movff	UART_printf@cadena+1,fsr2h
  8200  0037D8  50DF               	movf	indf2,w,c
  8201  0037DA  A4D8               	btfss	status,2,c
  8202  0037DC  EFF2  F01B         	goto	u4971
  8203  0037E0  EFF4  F01B         	goto	u4970
  8204  0037E4                     u4971:
  8205  0037E4  EFDF  F01B         	goto	l4039
  8206  0037E8                     u4970:
  8207  0037E8  0012               	return		;funcret
  8208  0037EA                     __end_of_UART_printf:
  8209                           	opt callstack 0
  8210                           
  8211 ;; *************** function _UART_write *****************
  8212 ;; Defined at:
  8213 ;;		line 42 in file "./UART.h"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  dato            1    wreg     unsigned char 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  dato            1    0[COMRAM] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8227 ;;      Params:         0       0       0       0       0       0       0       0       0
  8228 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8230 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8231 ;;Total ram usage:        1 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_UART_printf
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           	psect	text36
  8241  0038B4                     __ptext36:
  8242                           	opt callstack 0
  8243  0038B4                     _UART_write:
  8244                           	opt callstack 29
  8245                           
  8246                           ;incstack = 0
  8247                           ;UART_write@dato stored from wreg
  8248  0038B4  6E01               	movwf	UART_write@dato^0,c
  8249  0038B6                     
  8250                           ;./UART.h: 43:     TXREG = dato;
  8251  0038B6  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8252  0038BA                     l81:
  8253  0038BA  A2AC               	btfss	172,1,c	;volatile
  8254  0038BC  EF62  F01C         	goto	u4791
  8255  0038C0  EF64  F01C         	goto	u4790
  8256  0038C4                     u4791:
  8257  0038C4  EF5D  F01C         	goto	l81
  8258  0038C8                     u4790:
  8259  0038C8  0012               	return		;funcret
  8260  0038CA                     __end_of_UART_write:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _UART_init *****************
  8264 ;; Defined at:
  8265 ;;		line 13 in file "./UART.h"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  BAUD            4   14[COMRAM] long 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  frecuenciaCr    4    0        long 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8279 ;;      Params:         4       0       0       0       0       0       0       0       0
  8280 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8282 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8283 ;;Total ram usage:       12 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    1
  8286 ;; This function calls:
  8287 ;;		___aldiv
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text37
  8294  0033D6                     __ptext37:
  8295                           	opt callstack 0
  8296  0033D6                     _UART_init:
  8297                           	opt callstack 29
  8298  0033D6                     
  8299                           ;./UART.h: 16:     TRISC6 = 0;
  8300  0033D6  9C94               	bcf	3988,6,c	;volatile
  8301  0033D8                     
  8302                           ;./UART.h: 17:     TRISC7 = 1;
  8303  0033D8  8E94               	bsf	3988,7,c	;volatile
  8304  0033DA                     
  8305                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8306  0033DA  0E10               	movlw	16
  8307  0033DC  6E05               	movwf	___aldiv@divisor^0,c
  8308  0033DE  0E00               	movlw	0
  8309  0033E0  6E06               	movwf	(___aldiv@divisor+1)^0,c
  8310  0033E2  0E00               	movlw	0
  8311  0033E4  6E07               	movwf	(___aldiv@divisor+2)^0,c
  8312  0033E6  0E00               	movlw	0
  8313  0033E8  6E08               	movwf	(___aldiv@divisor+3)^0,c
  8314  0033EA  0E00               	movlw	0
  8315  0033EC  6E01               	movwf	___aldiv@dividend^0,c
  8316  0033EE  0E09               	movlw	9
  8317  0033F0  6E02               	movwf	(___aldiv@dividend+1)^0,c
  8318  0033F2  0E3D               	movlw	61
  8319  0033F4  6E03               	movwf	(___aldiv@dividend+2)^0,c
  8320  0033F6  0E00               	movlw	0
  8321  0033F8  6E04               	movwf	(___aldiv@dividend+3)^0,c
  8322  0033FA  EC0C  F015         	call	___aldiv	;wreg free
  8323  0033FE  C001  F017         	movff	?___aldiv,_UART_init$1247
  8324  003402  C002  F018         	movff	?___aldiv+1,_UART_init$1247+1
  8325  003406  C003  F019         	movff	?___aldiv+2,_UART_init$1247+2
  8326  00340A  C004  F01A         	movff	?___aldiv+3,_UART_init$1247+3
  8327  00340E                     
  8328                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8329  00340E  C017  F001         	movff	_UART_init$1247,___aldiv@dividend
  8330  003412  C018  F002         	movff	_UART_init$1247+1,___aldiv@dividend+1
  8331  003416  C019  F003         	movff	_UART_init$1247+2,___aldiv@dividend+2
  8332  00341A  C01A  F004         	movff	_UART_init$1247+3,___aldiv@dividend+3
  8333  00341E  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  8334  003422  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  8335  003426  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  8336  00342A  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  8337  00342E  EC0C  F015         	call	___aldiv	;wreg free
  8338  003432  0401               	decf	?___aldiv^0,w,c
  8339  003434  6EAF               	movwf	175,c	;volatile
  8340  003436                     
  8341                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
  8342  003436  84AC               	bsf	172,2,c	;volatile
  8343  003438                     
  8344                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
  8345  003438  98AC               	bcf	172,4,c	;volatile
  8346  00343A                     
  8347                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
  8348  00343A  8EAB               	bsf	171,7,c	;volatile
  8349  00343C                     
  8350                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
  8351  00343C  9CAC               	bcf	172,6,c	;volatile
  8352  00343E                     
  8353                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
  8354  00343E  8AAC               	bsf	172,5,c	;volatile
  8355  003440                     
  8356                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
  8357  003440  9CAB               	bcf	171,6,c	;volatile
  8358  003442                     
  8359                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
  8360  003442  88AB               	bsf	171,4,c	;volatile
  8361  003444  0012               	return		;funcret
  8362  003446                     __end_of_UART_init:
  8363                           	opt callstack 0
  8364                           
  8365 ;; *************** function ___aldiv *****************
  8366 ;; Defined at:
  8367 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  dividend        4    0[COMRAM] long 
  8370 ;;  divisor         4    4[COMRAM] long 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  quotient        4   10[COMRAM] long 
  8373 ;;  sign            1    9[COMRAM] unsigned char 
  8374 ;;  counter         1    8[COMRAM] unsigned char 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  4    0[COMRAM] long 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8384 ;;      Params:         8       0       0       0       0       0       0       0       0
  8385 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8387 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8388 ;;Total ram usage:       14 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_UART_init
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text38
  8398  002A18                     __ptext38:
  8399                           	opt callstack 0
  8400  002A18                     ___aldiv:
  8401                           	opt callstack 29
  8402  002A18  0E00               	movlw	0
  8403  002A1A  6E0A               	movwf	___aldiv@sign^0,c
  8404  002A1C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  8405  002A1E  EF15  F015         	goto	u4810
  8406  002A22  EF13  F015         	goto	u4811
  8407  002A26                     u4811:
  8408  002A26  EF1F  F015         	goto	l3927
  8409  002A2A                     u4810:
  8410  002A2A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  8411  002A2C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  8412  002A2E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  8413  002A30  6C05               	negf	___aldiv@divisor^0,c
  8414  002A32  0E00               	movlw	0
  8415  002A34  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  8416  002A36  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  8417  002A38  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  8418  002A3A  0E01               	movlw	1
  8419  002A3C  6E0A               	movwf	___aldiv@sign^0,c
  8420  002A3E                     l3927:
  8421  002A3E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  8422  002A40  EF26  F015         	goto	u4820
  8423  002A44  EF24  F015         	goto	u4821
  8424  002A48                     u4821:
  8425  002A48  EF30  F015         	goto	l3933
  8426  002A4C                     u4820:
  8427  002A4C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  8428  002A4E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  8429  002A50  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  8430  002A52  6C01               	negf	___aldiv@dividend^0,c
  8431  002A54  0E00               	movlw	0
  8432  002A56  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  8433  002A58  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  8434  002A5A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  8435  002A5C  0E01               	movlw	1
  8436  002A5E  1A0A               	xorwf	___aldiv@sign^0,f,c
  8437  002A60                     l3933:
  8438  002A60  0E00               	movlw	0
  8439  002A62  6E0B               	movwf	___aldiv@quotient^0,c
  8440  002A64  0E00               	movlw	0
  8441  002A66  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  8442  002A68  0E00               	movlw	0
  8443  002A6A  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  8444  002A6C  0E00               	movlw	0
  8445  002A6E  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  8446  002A70  5005               	movf	___aldiv@divisor^0,w,c
  8447  002A72  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  8448  002A74  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  8449  002A76  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  8450  002A78  B4D8               	btfsc	status,2,c
  8451  002A7A  EF41  F015         	goto	u4831
  8452  002A7E  EF43  F015         	goto	u4830
  8453  002A82                     u4831:
  8454  002A82  EF79  F015         	goto	l3955
  8455  002A86                     u4830:
  8456  002A86  0E01               	movlw	1
  8457  002A88  6E09               	movwf	___aldiv@counter^0,c
  8458  002A8A  EF4D  F015         	goto	l3941
  8459  002A8E                     l3939:
  8460  002A8E  90D8               	bcf	status,0,c
  8461  002A90  3605               	rlcf	___aldiv@divisor^0,f,c
  8462  002A92  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  8463  002A94  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  8464  002A96  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  8465  002A98  2A09               	incf	___aldiv@counter^0,f,c
  8466  002A9A                     l3941:
  8467  002A9A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  8468  002A9C  EF52  F015         	goto	u4841
  8469  002AA0  EF54  F015         	goto	u4840
  8470  002AA4                     u4841:
  8471  002AA4  EF47  F015         	goto	l3939
  8472  002AA8                     u4840:
  8473  002AA8                     l3943:
  8474  002AA8  90D8               	bcf	status,0,c
  8475  002AAA  360B               	rlcf	___aldiv@quotient^0,f,c
  8476  002AAC  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  8477  002AAE  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  8478  002AB0  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  8479  002AB2  5005               	movf	___aldiv@divisor^0,w,c
  8480  002AB4  5C01               	subwf	___aldiv@dividend^0,w,c
  8481  002AB6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  8482  002AB8  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  8483  002ABA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  8484  002ABC  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  8485  002ABE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  8486  002AC0  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  8487  002AC2  A0D8               	btfss	status,0,c
  8488  002AC4  EF66  F015         	goto	u4851
  8489  002AC8  EF68  F015         	goto	u4850
  8490  002ACC                     u4851:
  8491  002ACC  EF71  F015         	goto	l3951
  8492  002AD0                     u4850:
  8493  002AD0  5005               	movf	___aldiv@divisor^0,w,c
  8494  002AD2  5E01               	subwf	___aldiv@dividend^0,f,c
  8495  002AD4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  8496  002AD6  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  8497  002AD8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  8498  002ADA  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  8499  002ADC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  8500  002ADE  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  8501  002AE0  800B               	bsf	___aldiv@quotient^0,0,c
  8502  002AE2                     l3951:
  8503  002AE2  90D8               	bcf	status,0,c
  8504  002AE4  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  8505  002AE6  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  8506  002AE8  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  8507  002AEA  3205               	rrcf	___aldiv@divisor^0,f,c
  8508  002AEC  2E09               	decfsz	___aldiv@counter^0,f,c
  8509  002AEE  EF54  F015         	goto	l3943
  8510  002AF2                     l3955:
  8511  002AF2  500A               	movf	___aldiv@sign^0,w,c
  8512  002AF4  B4D8               	btfsc	status,2,c
  8513  002AF6  EF7F  F015         	goto	u4861
  8514  002AFA  EF81  F015         	goto	u4860
  8515  002AFE                     u4861:
  8516  002AFE  EF89  F015         	goto	l3959
  8517  002B02                     u4860:
  8518  002B02  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  8519  002B04  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  8520  002B06  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  8521  002B08  6C0B               	negf	___aldiv@quotient^0,c
  8522  002B0A  0E00               	movlw	0
  8523  002B0C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  8524  002B0E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  8525  002B10  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  8526  002B12                     l3959:
  8527  002B12  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  8528  002B16  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  8529  002B1A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  8530  002B1E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  8531  002B22  0012               	return		;funcret
  8532  002B24                     __end_of___aldiv:
  8533                           	opt callstack 0
  8534                           
  8535 ;; *************** function _BH1750_init *****************
  8536 ;; Defined at:
  8537 ;;		line 24 in file "./bh1750.h"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, status,0, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8553 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8554 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8555 ;;Total ram usage:        1 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    3
  8558 ;; This function calls:
  8559 ;;		_BH1750_write
  8560 ;; This function is called by:
  8561 ;;		_main
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text39
  8566  0038CA                     __ptext39:
  8567                           	opt callstack 0
  8568  0038CA                     _BH1750_init:
  8569                           	opt callstack 27
  8570  0038CA                     
  8571                           ;./bh1750.h: 26:    _delay((unsigned long)((100)*(4000000/4000.0)));
  8572  0038CA  0E82               	movlw	130
  8573  0038CC  6E04               	movwf	??_BH1750_init^0,c
  8574  0038CE  0EDE               	movlw	222
  8575  0038D0                     u5007:
  8576  0038D0  2EE8               	decfsz	wreg,f,c
  8577  0038D2  D7FE               	bra	u5007
  8578  0038D4  2E04               	decfsz	??_BH1750_init^0,f,c
  8579  0038D6  D7FC               	bra	u5007
  8580  0038D8                     
  8581                           ;./bh1750.h: 27:    BH1750_write(0x00);
  8582  0038D8  0E00               	movlw	0
  8583  0038DA  EC43  F01C         	call	_BH1750_write
  8584  0038DE  0012               	return		;funcret
  8585  0038E0                     __end_of_BH1750_init:
  8586                           	opt callstack 0
  8587                           
  8588 ;; *************** function _BH1750_write *****************
  8589 ;; Defined at:
  8590 ;;		line 31 in file "./bh1750.h"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  cmd             1    wreg     unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  cmd             1    2[COMRAM] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0
  8605 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8607 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8608 ;;Total ram usage:        1 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    2
  8611 ;; This function calls:
  8612 ;;		_i2c_detener
  8613 ;;		_i2c_envia_dato
  8614 ;;		_i2c_inicia_com
  8615 ;; This function is called by:
  8616 ;;		_BH1750_init
  8617 ;;		_get_lux_value
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text40
  8622  003886                     __ptext40:
  8623                           	opt callstack 0
  8624  003886                     _BH1750_write:
  8625                           	opt callstack 27
  8626                           
  8627                           ;incstack = 0
  8628                           ;BH1750_write@cmd stored from wreg
  8629  003886  6E03               	movwf	BH1750_write@cmd^0,c
  8630  003888                     
  8631                           ;./bh1750.h: 31: void BH1750_write(T_UBYTE cmd);./bh1750.h: 32: {;./bh1750.h: 33:    i2c
      +                          _inicia_com();
  8632  003888  EC76  F01C         	call	_i2c_inicia_com	;wreg free
  8633                           
  8634                           ;./bh1750.h: 34:    i2c_envia_dato(0x46);
  8635  00388C  0E46               	movlw	70
  8636  00388E  EC70  F01C         	call	_i2c_envia_dato
  8637                           
  8638                           ;./bh1750.h: 35:    i2c_envia_dato(cmd);
  8639  003892  5003               	movf	BH1750_write@cmd^0,w,c
  8640  003894  EC70  F01C         	call	_i2c_envia_dato
  8641                           
  8642                           ;./bh1750.h: 36:    i2c_detener();
  8643  003898  EC7A  F01C         	call	_i2c_detener	;wreg free
  8644  00389C  0012               	return		;funcret
  8645  00389E                     __end_of_BH1750_write:
  8646                           	opt callstack 0
  8647                           
  8648 ;; *************** function _i2c_inicia_com *****************
  8649 ;; Defined at:
  8650 ;;		line 37 in file "./I2C.h"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; Hardware stack levels required when called:    1
  8671 ;; This function calls:
  8672 ;;		_i2c_espera
  8673 ;; This function is called by:
  8674 ;;		_BH1750_write
  8675 ;;		_BH1750_read_word
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text41
  8680  0038EC                     __ptext41:
  8681                           	opt callstack 0
  8682  0038EC                     _i2c_inicia_com:
  8683                           	opt callstack 27
  8684  0038EC                     
  8685                           ;./I2C.h: 38:     i2c_espera();
  8686  0038EC  EC1F  F01C         	call	_i2c_espera	;wreg free
  8687  0038F0                     
  8688                           ;./I2C.h: 39:     SSPCON2bits.SEN = 1;
  8689  0038F0  80C5               	bsf	197,0,c	;volatile
  8690  0038F2  0012               	return		;funcret
  8691  0038F4                     __end_of_i2c_inicia_com:
  8692                           	opt callstack 0
  8693                           
  8694 ;; *************** function _i2c_envia_dato *****************
  8695 ;; Defined at:
  8696 ;;		line 66 in file "./I2C.h"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  dato            1    wreg     unsigned char 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  dato            1    1[COMRAM] unsigned char 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  1    wreg      unsigned char 
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8710 ;;      Params:         0       0       0       0       0       0       0       0       0
  8711 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8713 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8714 ;;Total ram usage:        1 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:    1
  8717 ;; This function calls:
  8718 ;;		_i2c_espera
  8719 ;; This function is called by:
  8720 ;;		_BH1750_write
  8721 ;;		_BH1750_read_word
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text42
  8726  0038E0                     __ptext42:
  8727                           	opt callstack 0
  8728  0038E0                     _i2c_envia_dato:
  8729                           	opt callstack 27
  8730                           
  8731                           ;incstack = 0
  8732                           ;i2c_envia_dato@dato stored from wreg
  8733  0038E0  6E02               	movwf	i2c_envia_dato@dato^0,c
  8734  0038E2                     
  8735                           ;./I2C.h: 67:     i2c_espera();
  8736  0038E2  EC1F  F01C         	call	_i2c_espera	;wreg free
  8737  0038E6                     
  8738                           ;./I2C.h: 68:     SSPBUF = dato;
  8739  0038E6  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  8740  0038EA  0012               	return		;funcret
  8741  0038EC                     __end_of_i2c_envia_dato:
  8742                           	opt callstack 0
  8743                           
  8744 ;; *************** function _i2c_detener *****************
  8745 ;; Defined at:
  8746 ;;		line 55 in file "./I2C.h"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    1
  8767 ;; This function calls:
  8768 ;;		_i2c_espera
  8769 ;; This function is called by:
  8770 ;;		_BH1750_write
  8771 ;;		_BH1750_read_word
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text43
  8776  0038F4                     __ptext43:
  8777                           	opt callstack 0
  8778  0038F4                     _i2c_detener:
  8779                           	opt callstack 27
  8780  0038F4                     
  8781                           ;./I2C.h: 56:     i2c_espera();
  8782  0038F4  EC1F  F01C         	call	_i2c_espera	;wreg free
  8783  0038F8                     
  8784                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  8785  0038F8  84C5               	bsf	197,2,c	;volatile
  8786  0038FA  0012               	return		;funcret
  8787  0038FC                     __end_of_i2c_detener:
  8788                           	opt callstack 0
  8789                           
  8790 ;; *************** function _i2c_espera *****************
  8791 ;; Defined at:
  8792 ;;		line 29 in file "./I2C.h"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, status,2, status,0
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8808 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8809 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8810 ;;Total ram usage:        1 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; This function calls:
  8813 ;;		Nothing
  8814 ;; This function is called by:
  8815 ;;		_i2c_inicia_com
  8816 ;;		_i2c_detener
  8817 ;;		_i2c_envia_dato
  8818 ;;		_i2c_recibe_datoACK
  8819 ;;		_i2c_reinicia_com
  8820 ;;		_i2c_recibe_dato
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text44
  8825  00383E                     __ptext44:
  8826                           	opt callstack 0
  8827  00383E                     _i2c_espera:
  8828                           	opt callstack 27
  8829  00383E                     l3407:
  8830  00383E  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  8831  003842  0E1F               	movlw	31
  8832  003844  1601               	andwf	??_i2c_espera^0,f,c
  8833  003846  A4D8               	btfss	status,2,c
  8834  003848  EF28  F01C         	goto	u3971
  8835  00384C  EF2A  F01C         	goto	u3970
  8836  003850                     u3971:
  8837  003850  EF1F  F01C         	goto	l3407
  8838  003854                     u3970:
  8839  003854  B4C7               	btfsc	199,2,c	;volatile
  8840  003856  EF2F  F01C         	goto	u3981
  8841  00385A  EF31  F01C         	goto	u3980
  8842  00385E                     u3981:
  8843  00385E  EF1F  F01C         	goto	l3407
  8844  003862                     u3980:
  8845  003862  0012               	return		;funcret
  8846  003864                     __end_of_i2c_espera:
  8847                           	opt callstack 0
  8848                           
  8849                           	psect	rparam
  8850  0000                     tosu	equ	0xFFF
  8851                           tosh	equ	0xFFE
  8852                           tosl	equ	0xFFD
  8853                           stkptr	equ	0xFFC
  8854                           pclatu	equ	0xFFB
  8855                           pclath	equ	0xFFA
  8856                           pcl	equ	0xFF9
  8857                           tblptru	equ	0xFF8
  8858                           tblptrh	equ	0xFF7
  8859                           tblptrl	equ	0xFF6
  8860                           tablat	equ	0xFF5
  8861                           prodh	equ	0xFF4
  8862                           prodl	equ	0xFF3
  8863                           indf0	equ	0xFEF
  8864                           postinc0	equ	0xFEE
  8865                           postdec0	equ	0xFED
  8866                           preinc0	equ	0xFEC
  8867                           plusw0	equ	0xFEB
  8868                           fsr0h	equ	0xFEA
  8869                           fsr0l	equ	0xFE9
  8870                           wreg	equ	0xFE8
  8871                           indf1	equ	0xFE7
  8872                           postinc1	equ	0xFE6
  8873                           postdec1	equ	0xFE5
  8874                           preinc1	equ	0xFE4
  8875                           plusw1	equ	0xFE3
  8876                           fsr1h	equ	0xFE2
  8877                           fsr1l	equ	0xFE1
  8878                           bsr	equ	0xFE0
  8879                           indf2	equ	0xFDF
  8880                           postinc2	equ	0xFDE
  8881                           postdec2	equ	0xFDD
  8882                           preinc2	equ	0xFDC
  8883                           plusw2	equ	0xFDB
  8884                           fsr2h	equ	0xFDA
  8885                           fsr2l	equ	0xFD9
  8886                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    115     131
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S949_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 30
		 -> main@buffer(BANK0[30]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _get_lux_value->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _BH1750_read_word->_i2c_recibe_datoACK
    _i2c_recibe_datoACK->_i2c_espera
    _UART_printf->_UART_write
    _UART_init->___aldiv
    _BH1750_init->_BH1750_write
    _BH1750_write->_i2c_envia_dato
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   32048
                                             80 BANK0     35    35      0
                        _BH1750_init
                          _UART_init
                        _UART_printf
                      _get_lux_value
                        _i2c_iniciar
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27797
                                             62 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27440
                                             93 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27068
                                             71 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21769
                                             59 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_lux_value                                       10     6      4    3242
                                             49 COMRAM    10     6      4
                   _BH1750_read_word
                       _BH1750_write
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _BH1750_read_word                                     8     4      4     115
                                              3 COMRAM     8     4      4
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                 _i2c_recibe_datoACK
 ---------------------------------------------------------------------------------
 (3) _i2c_recibe_datoACK                                   2     2      0      45
                                              1 COMRAM     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     0      2     143
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _BH1750_init                                          1     1      0      44
                                              3 COMRAM     1     1      0
                       _BH1750_write
 ---------------------------------------------------------------------------------
 (2) _BH1750_write                                         1     1      0      44
                                              2 COMRAM     1     1      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BH1750_init
     _BH1750_write
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
   _UART_init
     ___aldiv
   _UART_printf
     _UART_write
   _get_lux_value
     _BH1750_read_word
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_datoACK
         _i2c_espera
     _BH1750_write
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _i2c_iniciar
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      83       5       81.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132      20        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Oct 11 17:41:07 2020

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                 ___fldiv@sign 001F  
                         l51 3862                           l60 38FA                           l45 38B2  
                         l54 38F2                           l63 38EA                           l72 3444  
                         l81 38BA                           l90 37E8                           l84 38C8  
                         l93 38DE                           l69 3816                           l96 389C  
                         l99 3650                 ___awdiv@sign 0006          ___wmul@multiplicand 0003  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l102 3356  
                        l151 3012                          l154 3054                          l218 0FB2  
                        l156 3090                          l174 13DC                          l271 1C46  
                        l360 2B22                          l512 3154                          l192 0C1A  
                        l264 1CFC                          l281 383C                          l540 32AE  
                        l525 3204                          l277 349E                          l278 34A6  
                        l551 2D2C                          l546 2CE6                          l810 15BA  
                        l555 374A                          l811 1580                          l902 1FB8  
                        l912 20E8                          l904 2030                          l905 201E  
                        l809 15CC                          l578 2C28                          l826 16E6  
                        l818 189C                          l835 17B6                          l851 3696  
                        l836 17A4                          l950 281E                          l863 24C0  
                        l943 27C2                          l936 272A                          l865 2320  
                        l874 2366                          l962 2E2A                          l939 2886  
                        l876 23DE                          l868 22E4                          l877 23CC  
                        l991 2A0E                          l895 1DC2                          l994 2A16  
                        l899 2126                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
               __CFG_BOR$OFF 000000                          _pad 2FCC                 ___awmod@sign 0006  
             ?_get_lux_value 0032                          wreg 000FE8                 ___flmul@aexp 0012  
               ___flmul@bexp 0013                 ___flmul@sign 000D                 ___flmul@temp 0018  
               ___flmul@prod 0014                 __CFG_LVP$OFF 000000                 ___fltol@exp1 0031  
               __CFG_WDT$OFF 000000                         l1000 26D2                         l1010 3782  
                       l1003 2616                         l1024 3712                         l1018 3606  
                       l1054 35B4                         l1039 2FCA                         l1047 36DA  
                       l1063 3562                         l3001 224A                         l1057 38FC  
                       l1073 2F00                         l3011 2288                         l3003 224A  
                       l1083 34FE                         l3021 22D4                         l3013 2298  
                       l3101 1D50                         l1069 37B8                         l3031 231E  
                       l3023 22E2                         l3015 22A8                         l3007 225E  
                       l3111 1D7C                         l3103 1D60                         l1088 3506  
                       l3041 2364                         l3033 2330                         l3025 22EE  
                       l3017 22B0                         l3009 2278                         l4001 2866  
                       l3201 20D0                         l3121 1DD2                         l3113 1D8C  
                       l3105 1D66                         l3051 23C4                         l3035 2346  
                       l3043 2376                         l3027 230C                         l3019 22C0  
                       l4003 2874                         l4011 38A2                         l3203 20EC  
                       l3211 2112                         l3131 1E0C                         l3123 1DE2  
                       l3115 1D9C                         l3107 1D6C                         l4021 340E  
                       l4013 33D6                         l3061 2432                         l3045 2384  
                       l3037 234C                         l3029 230E                         l4005 2876  
                       l3213 2116                         l3205 20FC                         l3141 1E5E  
                       l3133 1E22                         l3117 1DAC                         l3109 1D7A  
                       l4101 3370                         l4031 343E                         l4023 3436  
                       l4015 33D6                         l3071 249C                         l3055 23EE  
                       l3063 2436                         l3047 2388                         l3039 2356  
                       l3231 30B0                         l3223 3092                         l3311 3282  
                       l3303 3206                         l3207 210A                         l3151 1EA4  
                       l3143 1E6C                         l3135 1E2E                         l3127 1DF6  
                       l3119 1DB2                         l4103 3374                         l4033 3440  
                       l4025 3438                         l4017 33D8                         l4041 37CC  
                       l3073 24A0                         l3065 2450                         l3057 23FA  
                       l3049 2396                         l4009 389E                         l3401 3600  
                       l3241 30E4                         l3233 30BE                         l3225 3096  
                       l3313 32A6                         l3305 3234                         l3321 2C58  
                       l3209 210C                         l3161 1F12                         l3153 1EBE  
                       l3145 1E78                         l3137 1E46                         l3129 1E02  
                       l3217 3652                         l4105 338A                         l4035 3442  
                       l4027 343A                         l4019 33DA                         l4043 37D0  
                       l3075 24AE                         l3067 2466                         l3059 2408  
                       l4051 32B2                         l4131 2944                         l3251 311E  
                       l3243 30EC                         l3235 30C6                         l3227 30A4  
                       l3315 32AC                         l3307 3244                         l3331 2CC6  
                       l3323 2C68                         l3171 1FA8                         l3163 1F3C  
                       l3155 1ECE                         l3147 1E88                         l3139 1E52  
                       l3091 1D18                         l3219 3662                         l3411 082E  
                       l4107 33B0                         l3405 383E                         l4045 38CA  
                       l4029 343C                         l4037 37BA                         l3077 24B4  
                       l3069 2480                         l4061 32E8                         l4053 32B8  
                       l3261 3144                         l3253 3126                         l3245 30F4  
                       l3237 30CA                         l3229 30AC                         l3309 3272  
                       l3333 2CD4                         l3325 2C96                         l3181 1FE8  
                       l3173 1FB6                         l3165 1F72                         l3157 1EEA  
                       l3149 1E94                         l3093 1D1A                         l3341 3714  
                       l2701 14E6                         l2621 2F30                         l3501 0BDA  
                       l3421 0882                         l3413 0838                         l4109 33BC  
                       l3407 383E                         l4047 38D8                         l4039 37BE  
                       l3079 24B6                         l3351 2B3A                         l4063 3346  
                       l4055 32BE                         l3263 314C                         l3255 3128  
                       l3247 3102                         l3239 30D2                         l3271 3168  
                       l3335 2D24                         l3327 2CA6                         l3319 2C2A  
                       l3191 205A                         l3183 2016                         l3175 1FC8  
                       l3167 1F80                         l3159 1EF6                         l3095 1D2A  
                       l3087 1CFE                         l3343 372A                         l2711 14FA  
                       l2703 14EA                         l2623 2F4E                         l2615 2F02  
                       l2631 36A4                         l3503 0BEC                         l3431 08C6  
                       l3423 088C                         l3415 0848                         l4071 357E  
                       l3409 3854                         l3361 2B8A                         l4057 32D2  
                       l4049 32B2                         l3257 312E                         l3249 3108  
                       l3281 319C                         l3273 3170                         l3337 2D2A  
                       l3329 2CB4                         l3193 2084                         l3177 1FD6  
                       l3169 1F9E                         l3097 1D3A                         l3089 1D0A  
                       l3345 373A                         l2801 1748                         l2721 150E  
                       l2713 14FE                         l2705 14EE                         l2625 2F84  
                       l2617 2F14                         l2633 36B6                         l2641 3794  
                       l3601 10AC                         l3521 0C9C                         l3505 0BF4  
                       l3433 08D2                         l3441 08E8                         l3425 0894  
                       l3417 0856                         l4073 3586                         l3371 2BB4  
                       l3363 2B8E                         l3355 2B4E                         l4059 32E2  
                       l3259 3134                         l3291 31D8                         l3283 31A4  
                       l3275 3174                         l3267 3156                         l3187 2040  
                       l3195 2088                         l3179 1FDA                         l3099 1D4A  
                       l2803 1750                         l2811 1774                         l2731 1522  
                       l2723 1512                         l2715 1502                         l2707 14F2  
                       l2651 13DE                         l2619 2F26                         l2635 36BA  
                       l2643 37AC                         l3611 10D6                         l3603 10B0  
                       l3531 0CD4                         l3523 0CA4                         l3515 0C38  
                       l3507 0C0E                         l3451 0972                         l3443 090E  
                       l3435 08DA                         l3427 08A6                         l3419 085E  
                       l4075 35A2                         l4067 3564                         l3381 2BDC  
                       l3373 2BBE                         l3365 2B9C                         l3357 2B78  
                       l3349 2B24                         l3293 31DE                         l3285 31AC  
                       l3277 3182                         l3269 315A                         l3197 20A2  
                       l3189 204C                         l2821 17C6                         l2813 1778  
                       l2805 1754                         l2741 159A                         l2733 154C  
                       l2725 1516                         l2717 1506                         l2709 14F6  
                       l2661 141A                         l2653 13EA                         l2629 3698  
                       l2637 3784                         l2901 34A8                         l3701 13B6  
                       l3621 110A                         l3613 10DC                         l3605 10B6  
                       l3541 0D1E                         l3533 0CE2                         l3517 0C4A  
                       l3525 0CA8                         l3509 0C26                         l3461 09E2  
                       l3453 098A                         l3437 08DE                         l3429 08B4  
                       l4069 3576                         l3383 2BE8                         l3375 2BC8  
                       l3359 2B7A                         l3711 289C                         l3287 31BA  
                       l3295 31E4                         l3279 318A                         l3199 20B6  
                       l2831 182C                         l2823 17D2                         l2815 1786  
                       l2807 1764                         l2751 15DA                         l2743 159E  
                       l2735 1568                         l2727 151A                         l2719 150A  
                       l2671 144A                         l2663 142A                         l2655 13F8  
                       l2911 24C2                         l2639 3790                         l2647 36DC  
                       l3703 13BC                         l3607 10C2                         l3615 10E2  
                       l3623 1110                         l3631 11A8                         l3551 0D64  
                       l3543 0D30                         l3535 0CE6                         l3527 0CB0  
                       l3519 0C66                         l3455 0994                         l3447 0944  
                       l3439 08E2                         l4095 3358                         l3385 2BF8  
                       l3393 35B6                         l3721 28FA                         l3713 28A0  
                       l3297 31F4                         l3289 31D0                         l2841 1874  
                       l2833 183C                         l2825 17E0                         l2817 179C  
                       l2809 1766                         l2761 161C                         l2753 15EA  
                       l2745 15AC                         l2737 1578                         l2729 151E  
                       l2681 1474                         l2673 145C                         l2665 142C  
                       l2657 13FA                         l2913 24E2                         l2905 34DE  
                       l3641 1212                         l3633 11C6                         l3625 1168  
                       l3617 10F4                         l3609 10D2                         l3561 0E78  
                       l3553 0DC8                         l3537 0CF8                         l3545 0D38  
                       l3529 0CC2                         l3465 0A18                         l3449 0956  
                       l3801 189E                         l4097 3358                         l3387 2C08  
                       l3395 35BA                         l3731 2926                         l3715 28A4  
                       l3299 31FC                         l2843 1876                         l2835 185C  
                       l2827 181A                         l2771 164A                         l2763 162A  
                       l2747 15AE                         l2739 158E                         l2683 1484  
                       l2691 14AE                         l2675 145E                         l2659 140A  
                       l2667 1434                         l2931 268A                         l2923 25CA  
                       l2915 2538                         l2907 34F0                         l3651 1250  
                       l3643 1216                         l3635 11E2                         l3627 119C  
                       l3619 1106                         l3571 0F36                         l3563 0EAC  
                       l3555 0E20                         l3547 0D40                         l3539 0D06  
                       l3491 0B7A                         l3483 0AB2                         l3467 0A2A  
                       l3459 09BC                         l3811 190A                         l3803 18C2  
                       l4099 336C                         l3901 3616                         l3389 2C18  
                       l3397 35CE                         l3741 29CE                         l3733 295A  
                       l3725 2900                         l3717 28C0                         l3709 2888  
                       l2845 187C                         l2837 1860                         l2829 181C  
                       l2781 16B6                         l2773 1654                         l2765 1636  
                       l2757 15FE                         l2749 15B8                         l2693 14BE  
                       l2685 1494                         l2677 1464                         l2669 1444  
                       l2933 26B2                         l2925 2606                         l2917 254C  
                       l2861 300A                         l2853 2FCC                         l3661 1282  
                       l3653 1258                         l3645 1226                         l3637 11F4  
                       l3629 11A4                         l3581 0FAA                         l3573 0F46  
                       l3565 0EDE                         l3557 0E54                         l3549 0D50  
                       l3493 0B82                         l3485 0AE6                         l3469 0A46  
                       l3477 0A62                         l3821 199E                         l3813 1912  
                       l3805 18D0                         ?_pad 0011                         l3903 361E  
                       l2951 2134                         l2943 3818                         l3399 35FC  
                       l3743 29E0                         l3727 2916                         l3719 28F6  
                       l2847 188A                         l2839 186E                         l2783 16C6  
                       l2767 163A                         l2759 160E                         l2775 165A  
                       l2695 14D0                         l2687 14A4                         l2679 1472  
                       l2935 26C2                         l2919 255A                         l2927 263A  
                       l2871 3078                         l2863 301E                         l2855 2FDC  
                       l3663 1288                         l3671 12D8                         l3655 1266  
                       l3647 1238                         l3639 1202                         l3591 1066  
                       l3583 0FCE                         l3575 0F7A                         l3567 0EF4  
                       l3559 0E5A                         l3487 0AEC                         l3495 0BB4  
                       l3479 0A7C                         l3751 2E2C                         l3831 1A24  
                       l3823 19AC                         l3815 1920                         l3807 18E2  
                       l3911 3446                         l3921 2A1C                         l3905 3626  
                       l2961 2174                         l2953 2142                         l2945 3834  
                       l3745 29F2                         l3737 2990                         l3729 291E  
                       l2849 188C                         l2793 1720                         l2777 1680  
                       l2785 16D6                         l2769 1648                         l2697 14DE  
                       l2689 14A6                         l2881 2DB4                         l2929 2676  
                       l2865 3032                         l2857 2FF0                         l3681 1328  
                       l3673 12EA                         l3665 12AE                         l3657 126E  
                       l3649 1240                         l3593 1074                         l3585 1032  
                       l3577 0F8A                         l3569 0F26                         l3497 0BC4  
                       l3489 0B46                         l3761 2E88                         l3753 2E56  
                       l3841 1AB6                         l3833 1A34                         l3817 1944  
                       l3809 18E6                         l3913 344E                         l3771 38EC  
                       l3931 2A5C                         l3923 2A2A                         l3907 362A  
                       l2971 219A                         l2963 2176                         l2955 2144  
                       l2939 374C                         l2795 172A                         l2787 16FC  
                       l2779 16B4                         l2699 14E2                         l2883 2DC0  
                       l2875 2D2E                         l2867 3036                         l2859 2FFE  
                       l3683 1330                         l3675 1304                         l3667 12CA  
                       l3659 1276                         l3587 1042                         l3595 107C  
                       l3579 0F9E                         l3499 0BC8                         l3763 2EA4  
                       l3843 1ACC                         l3851 1B36                         l3835 1A64  
                       l3827 19F2                         l3819 197E                         l3915 345C  
                       l3781 38E6                         l3773 38F0                         l3941 2A9A  
                       l3933 2A60                         l3925 2A3A                         l2981 21DA  
                       l2973 21A8                         l2957 2154                         l2965 217E  
                       l2949 2128                         l2797 1738                         l2789 170C  
                       l2893 2E22                         l2877 2D4E                         l2869 3064  
                       l3693 1380                         l3685 1340                         l3677 130A  
                       l3669 12D2                         l3597 108E                         l3589 1054  
                       l3765 2EB6                         l3757 2E62                         l3861 1C16  
                       l3853 1B64                         l3845 1ADA                         l3837 1A74  
                       l3829 1A04                         l3917 3482                         l3775 38F4  
                       l3783 38EA                         l3951 2AE2                         l3943 2AA8  
                       l3935 2A70                         l3927 2A3E                         l3919 2A18  
                       l3791 37F6                         l2991 221A                         l2983 21DC  
                       l2975 21AA                         l2967 218E                         l2959 2164  
                       l2799 173A                         l2879 2D8C                         l2887 2DCC  
                       l3695 1392                         l3687 1346                         l3679 131C  
                       l3599 109C                         l3767 2EDE                         l3759 2E70  
                       l3871 1C8C                         l3847 1B0A                         l3839 1AA4  
                       l3777 38F8                         l3953 2AEC                         l3945 2AB2  
                       l3937 2A86                         l3929 2A4C                         l3793 37FE  
                       l2993 2222                         l2977 21BA                         l2985 21E4  
                       l2969 2194                         l2889 2DDE                         l2897 3508  
                       l3697 139E                         l3689 134C                         l3873 1CA0  
                       l3857 1BD0                         l3779 38E2                         l3947 2AD0  
                       l3939 2A8E                         l3955 2AF2                         l3891 38B6  
                       l3795 3812                         l3787 37EC                         l2995 2226  
                       l2987 21F4                         l2979 21CA                         l3971 2750  
                       l3963 26D6                         l2899 3518                         l3699 13A6  
                       l3859 1BE2                         l3867 1C5A                         l3883 1CC6  
                       l3893 3888                         l3957 2B02                         l3949 2AE0  
                       l3797 3814                         l3789 37F0                         l2989 220A  
                       l3981 27AA                         l3965 26E6                         l3885 1CEA  
                       l3869 1C7E                         l3877 1CAC                         l3959 2B12  
                       l3895 3608                         l2999 223A                         l3991 280E  
                       l3983 27AC                         l3975 2764                         l3967 26F4  
                       l3879 1CBA                         l3897 360C                         l3993 282C  
                       l3985 27B8                         l3977 276C                         l3969 273A  
                       l3899 3610                         l3995 282E                         l3987 27F4  
                       l3979 2778                         l3997 2832                         l3989 2800  
                       l3999 2856                         STR_1 0801                         STR_2 081A  
                       STR_3 0822                         STR_6 081E                         STR_7 0826  
                       u3000 3064                         u3001 3060                         u3010 2D6E  
                       u3020 2D8C                         u3100 34D8                         u3021 2D88  
                       u3101 34D2                         u3030 2DB4                         u3110 34DA  
                       u3031 2DB0                         u3015 2D64                         u3040 2DDE  
                       u3200 265A                         u3120 34F0                         u4000 08A6  
                       u3041 2DDA                         u3121 34EC                         u4001 08A2  
                       u3210 2676                         u3130 250A                         u4010 08B4  
                       u3211 2672                         u4011 08B0                         u3300 21CA  
                       u3060 2E18                         u3220 26B2                         u3140 2538  
                       u2500 2F14                         u4100 0A2A                         u4020 08C6  
                       u3301 21C6                         u3061 2E12                         u3221 26AE  
                       u3205 2650                         u3141 2534                         u2501 2F10  
                       u4101 0A26                         u4021 08C2                         u3310 220A  
                       u3230 377C                         u3070 2E1A                         u3150 255A  
                       u2510 2F26                         u4110 0AAE                         u4030 090E  
                       u3311 2206                         u3231 3776                         u3055 2DF0  
                       u3151 2556                         u3135 2500                         u2511 2F22  
                       u4111 0AAA                         u4031 090A                         u3400 2396  
                       u3320 224A                         u3240 377E                         u2600 141A  
                       u2520 2F4E                         u3080 3550                         u4200 0C9C  
                       u4120 0B42                         u4040 093C                         u3401 2392  
                       u3321 2246                         u2601 1416                         u2521 2F4A  
                       u4201 0C98                         u4121 0B3E                         u4041 0936  
                       u3410 23C4                         u3330 22C0                         u3250 2142  
                       u2610 145C                         u3170 25C6                         u2530 2F84  
                       u3090 3562                         u4210 0CC2                         u4130 0BB4  
                       u4050 093E                         u3411 23C0                         u3331 22BC  
                       u3251 213E                         u2611 1458                         u3171 25C2  
                       u2531 2F80                         u3091 355E                         u4211 0CBE  
                       u4131 0BB0                         u3420 23DA                         u3340 22E2  
                       u3260 2154                         u3500 1D3A                         u2700 158E  
                       u2620 1472                         u3180 25EA                         u2540 36DA  
                       u4300 0F36                         u4220 0CD4                         u4140 0BDA  
                       u4060 0956                         u3421 23D6                         u3341 22DE  
                       u3261 2150                         u3501 1D36                         u2701 158A  
                       u2621 146E                         u3165 256E                         u2541 36D6  
                       u4301 0F32                         u4221 0CD0                         u4141 0BD6  
                       u4061 0952                         u3430 23EE                         u3350 230C  
                       u3270 2164                         u3510 1D7A                         u2710 15AC  
                       u2630 1484                         u3190 2606                         u3166 2578  
                       u2550 37AC                         u4310 0F9E                         u4230 0CE2  
                       u4150 0BEC                         u4070 09E2                         u5007 38D0  
                       u3431 23EA                         u3351 2308                         u3271 2160  
                       u3511 1D76                         u2711 15A8                         u2631 1480  
                       u3191 2602                         u3167 2588                         u2551 37A8  
                       u3087 3546                         u4311 0F9A                         u4231 0CDE  
                       u4151 0BE8                         u4071 09DE                         u3440 2408  
                       u3360 2330                         u3280 21A8                         u3600 2016  
                       u3520 1D8C                         u2800 16FC                         u2720 15CC  
                       u2640 1494                         u2560 370C                         u4400 11E2  
                       u4320 1042                         u4240 0CF8                         u4160 0C0E  
                       u4080 0A10                         u3441 2404                         u3361 232C  
                       u3281 21A4                         u3601 2012                         u3521 1D88  
                       u2801 16F8                         u2721 15C8                         u2641 1490  
                       u3185 25E0                         u2561 3706                         u4401 11DE  
                       u4321 103E                         u4241 0CF4                         u4161 0C0A  
                       u4081 0A0A                         u3450 2450                         u3370 2346  
                       u3290 21BA                         u3610 202C                         u3530 1D9C  
                       u2810 170C                         u2730 15DA                         u2650 14D0  
                       u2570 370E                         u4410 11F4                         u4330 1054  
                       u4250 0D06                         u4170 0C34                         u4090 0A12  
                       u3451 244C                         u3371 2342                         u3291 21B6  
                       u3611 2028                         u3531 1D98                         u2811 1708  
                       u2731 15D6                         u2651 14CC                         u4411 11F0  
                       u4331 1050                         u4251 0D02                         u4171 0C30  
                       u3460 2480                         u3380 2364                         u3700 3102  
                       u3620 2040                         u3540 1DD2                         u2900 17E0  
                       u2820 1738                         u2740 15EA                         u2660 14DE  
                       u2580 13F8                         u4500 1392                         u4420 1202  
                       u4340 1066                         u4260 0D30                         u4180 0C4A  
                       u3461 247C                         u3381 2360                         u3701 30FE  
                       u3621 203C                         u3541 1DCE                         u2901 17DC  
                       u2821 1734                         u2741 15E6                         u2661 14DA  
                       u2581 13F4                         u4501 138E                         u4421 11FE  
                       u4341 1062                         u4261 0D2C                         u4181 0C46  
                       u3470 24AE                         u3390 2384                         u4510 28C0  
                       u3710 311E                         u3630 205A                         u3550 1DE2  
                       u2910 181A                         u2830 1748                         u2750 161C  
                       u2670 154C                         u2590 140A                         u4430 1238  
                       u4350 1074                         u4270 0E78                         u4190 0C66  
                       u3471 24AA                         u3391 2380                         u4511 28BC  
                       u3711 311A                         u3631 2056                         u3551 1DDE  
                       u2911 1816                         u2831 1744                         u2751 1618  
                       u2671 1548                         u2591 1406                         u4431 1234  
                       u4351 1070                         u4271 0E74                         u4191 0C62  
                       u4520 28F6                         u3720 3144                         u3800 3272  
                       u3640 20A2                         u3560 1F5C                         u3480 1D18  
                       u2920 182C                         u2840 1764                         u2760 162A  
                       u2680 1564                         u4440 1266                         u4360 108E  
                       u4280 0EDE                         u4600 2EA4                         u4521 28F2  
                       u3721 3140                         u3801 326E                         u3641 209E  
                       u3481 1D14                         u2921 1828                         u2841 1760  
                       u2761 1626                         u2681 155E                         u4441 1262  
                       u4361 108A                         u4281 0EDA                         u4601 2EA0  
                       u4530 2912                         u3730 3168                         u3810 32A6  
                       u3650 20D0                         u3570 1FB6                         u3490 1D2A  
                       u2930 183C                         u2850 1774                         u2770 1648  
                       u2690 1566                         u4450 12EA                         u4370 109C  
                       u4290 0F26                         u4610 2EB6                         u4531 290E  
                       u3731 3164                         u3811 32A2                         u3651 20CC  
                       u3571 1FB2                         u3491 1D26                         u2931 1838  
                       u2851 1770                         u2771 1644                         u4451 12E6  
                       u4371 1098                         u4291 0F22                         u4611 2EB2  
                       u3900 2B9C                         u4540 29C8                         u3740 3182  
                       u3820 2C58                         u3660 210A                         u3580 1FD6  
                       u2940 185C                         u2860 1786                         u2780 1680  
                       u4460 1304                         u4380 10F4                         u4620 2EDE  
                       u4700 1A04                         u3901 2B98                         u4541 29C2  
                       u3741 317E                         u3821 2C54                         u3661 2106  
                       u3581 1FD2                         u3565 1F52                         u2941 1858  
                       u2861 1782                         u2781 167C                         u4461 1300  
                       u4381 10F0                         u4621 2EDA                         u4701 1A00  
                       u4630 3810                         u3910 2BB0                         u4550 29CA  
                       u3670 30A4                         u3750 319C                         u3830 2C96  
                       u3590 1FE8                         u2950 186E                         u2870 179C  
                       u2790 16C6                         u4470 131C                         u4390 11C6  
                       u4710 1A34                         u4631 380A                         u3911 2BAC  
                       u3671 30A0                         u3751 3198                         u3831 2C92  
                       u3591 1FE4                         u2951 186A                         u2871 1798  
                       u2791 16C2                         u4471 1318                         u4391 11C2  
                       u4711 1A30                         u3920 2BD8                         u4560 29E0  
                       u3680 30BE                         u3760 31BA                         u3840 2CB4  
                       u2960 188A                         u2880 17B2                         u4480 137A  
                       u4720 1A74                         u4800 349E                         u3921 2BD4  
                       u4561 29DC                         u3681 30BA                         u3761 31B6  
                       u3841 2CB0                         u2961 1886                         u2881 17AE  
                       u4481 1374                         u4721 1A70                         u4801 349A  
                       u4810 2A2A                         u3930 2BF8                         u4570 29F2  
                       u3690 30E4                         u3770 31D0                         u3850 2CD4  
                       u2890 17C6                         u2970 2FDC                         u4490 137C  
                       u4730 1AB6                         u4650 18C2                         u4811 2A26  
                       u3931 2BF4                         u4571 29EE                         u3691 30E0  
                       u3771 31CC                         u3851 2CD0                         u2891 17C2  
                       u2971 2FD8                         u4731 1AB2                         u4651 18BE  
                       u4820 2A4C                         u3940 2C08                         u4900 27A6  
                       u3780 31F4                         u3860 2D24                         u2980 2FFE  
                       u4580 2E56                         u4740 1B64                         u4660 190A  
                       _RCIF 007CF5                         u4821 2A48                         u4645 3812  
                       u3941 2C04                         u4901 27A2                         u3781 31F0  
                       u3861 2D20                         u2981 2FFA                         u4581 2E52  
                       u4741 1B60                         u4661 1906                         u4830 2A86  
                       u4910 27F0                         u3950 35CE                         u3790 3234  
                       u3870 372A                         u2990 3054                         u4590 2E88  
                       u4750 1BCA                         u4670 1944                         u4831 2A82  
                       u4911 27EC                         u3951 35CA                         u3791 3230  
                       u3871 3726                         u2991 3050                         u4591 2E84  
                       u4751 1BC4                         u4671 1940                         u4840 2AA8  
                       u3880 2B3A                         u4920 280E                         u3960 35FC  
                       u4760 1BCC                         u4680 19EC                         u4841 2AA4  
                       u3881 2B36                         u4921 280A                         u3961 35F8  
                       u4681 19E6                         u3970 3854                         u4850 2AD0  
                       u3890 2B6E                         u4930 281E                         u4770 1BE2  
                       u4690 19EE                         u3971 3850                         u4851 2ACC  
                       u4931 281A                         u4771 1BDE                         u3980 3862  
                       u4860 2B02                         u4940 282C                         u4780 1C7E  
                       u3981 385E                         u4861 2AFE                         u4941 2828  
                       u4781 1C7A                         u4790 38C8                         u4950 2866  
                       u4870 26E6                         u3990 0856                         u4791 38C4  
                       u3895 2B64                         u4951 2862                         u4871 26E2  
                       u3991 0852                         u4960 2874                         u4880 26F4  
                       u4961 2870                         u4881 26F0                         u4970 37E8  
                       u4890 2750                         u4971 37E4                         u4891 274C  
                       u4987 33C4                         u4997 32D8                ??_i2c_detener 0002  
                       _dbuf 0100                         _atoi 2888                         _main 3358  
                       _prec 00DF                         _nout 00DB                         pad@i 0018  
                       pad@p 0015                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf1 000FE7                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 001A                         fsr2l 000FD9                ___fpclassifyf 2D2E  
              ??_i2c_iniciar 0001                         prodh 000FF4                         prodl 000FF3  
                       start 0000                __CFG_IESO$OFF 000000              ___fldiv@new_exp 0020  
               _tolower$1021 000D                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                      ??_pad 0017               _i2c_envia_dato 38E0                __CFG_PLLDIV$1 000000  
             _i2c_inicia_com 38EC     __end_of_BH1750_read_word 3652               __CFG_CCP2MX$ON 000000  
              ___fltol@sign1 0030              __end_of___aldiv 2B24                        ?_atoi 0008  
            __end_of___fladd 189E                        ?_main 0001                        _ACKEN 007E2C  
                      _ACKDT 007E2D              __end_of___fldiv 24C2              __end_of___awdiv 3156  
            __end_of___flneg 374C                        STR_10 082A                        STR_12 082A  
            __end_of___awmod 3206              __end_of___flmul 2128              __end_of___flsub 3698  
            __end_of___fltol 2C2A              ___awdiv@divisor 0003              ___awdiv@counter 0005  
                      _RCREG 000FAE                 vfpfcnvrt@fmt 004A                        _SPBRG 000FAF  
              __CFG_USBDIV$1 000000                        _TXREG 000FAD                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000           __size_of_UART_init 0070                        _flags 00E1  
                      _fputc 2F02                        _fputs 3698              __end_of_isdigit 3784  
                ?_UART_write 0001                        atoi@n 0015                        pad@fp 0011  
                      atoi@s 0008                        _width 00DD                        _putch 38FC  
            __end_of_isspace 3608              __end_of_isupper 3714                        tablat 000FF5  
                      status 000FD8              __end_of_sprintf 35B6               ?___fpclassifyf 0001  
            __end_of_tolower 3508              __end_of_strncmp 2F02               __CFG_ICPRT$OFF 000000  
                 _i2c_espera 383E              __initialization 3864  i2c_recibe_datoACK@datoleido 0003  
        __end_of_i2c_detener 38FC       __end_of_i2c_envia_dato 38EC                 __end_of_atoi 2A18  
               __end_of_main 33D6       __end_of_i2c_inicia_com 38F4          __end_of_i2c_iniciar 38B4  
                     ??_atoi 000A                       ??_main 00B0              ??_get_lux_value 0036  
              __activetblptr 000002           i2c_envia_dato@dato 0002  __size_of_i2c_recibe_datoACK 002E  
                     ?_fputc 0001                       ?_fputs 000A             ___awdiv@dividend 0001  
                     ?_putch 0001                       _SSPADD 000FC8                       _TRISC6 007CA6  
                     _TRISC7 007CA7                       _SSPBUF 000FC9             __end_of___xxtofl 2888  
             __CFG_XINST$OFF 000000                ??_BH1750_init 0004                 vfprintf@cfmt 005E  
                     ___flge 2C2A                       ___fleq 3206              ?_i2c_envia_dato 0001  
                  ??___aldiv 0009                    ??___fladd 0009                       ___wmul 3818  
          __end_of_UART_init 3446                    ??___fldiv 0017                    ??___awdiv 0005  
                  ??___flneg 0005                    ??___awmod 0005                    ??___flmul 0009  
                  ??___flsub 0022                    ??___fltol 002C              ?_i2c_inicia_com 0001  
                     _efgtoa 082E                       _floorf 24C2          __size_of_UART_write 0016  
               ?_UART_printf 0002                       clear_0 386A                       clear_1 3876  
              main@luzMedida 00CF             ___awdiv@quotient 0007              ___awmod@divisor 0003  
            ___awmod@counter 0005                       pad@buf 0013                       _strcpy 3508  
                     _strlen 3784                       fputc@c 0001                       fputs@c 000E  
                     fputs@i 000F                       fputs@s 000A                    ??_isdigit 0003  
            ___fpclassifyf@e 0009              ___fpclassifyf@u 000B              ___fpclassifyf@x 0001  
               __mediumconst 0000                    ??_isspace 0003                       tblptrh 000FF7  
                  ??_isupper 0003                       tblptrl 000FF6                       tblptru 000FF8  
                     putch@c 0001            get_lux_value@mode 0037             __end_of_vfprintf 34A8  
                  ??_sprintf 0060                    ??_tolower 0009                    ??_strncmp 0007  
                 ___flge@ff1 001A                   ___flge@ff2 001E              ??___fpclassifyf 0005  
               ___xxtofl@arg 000B                 ___xxtofl@exp 000A                 ___xxtofl@val 0001  
                 ___fleq@ff1 0001                   ___fleq@ff2 0005                   __accesstop 0060  
    __end_of__initialization 387C              __CFG_PBADEN$OFF 000000                   ___flneg@f1 0001  
            __CFG_FOSC$XT_XT 000000                  _i2c_detener 38F4                ___rparam_used 000001  
                 ___fltol@f1 0028                  _i2c_iniciar 389E                  ?_i2c_espera 0001  
             __pcstackCOMRAM 0001                __end_of_fputc 2FCC                __end_of_fputs 36DC  
              __end_of_putch 38FE          __end_of_BH1750_init 38E0                      ??_fputc 0005  
                    ??_fputs 000E                      ??_putch 0001                   __pbssBANK0 00D3  
                 __pbssBANK1 0100                   _efgtoa$410 0068                   _efgtoa$404 0064  
                 _efgtoa$405 0066                   _efgtoa$414 006A                   _efgtoa$415 006C  
                 _efgtoa$416 006E                      ?___flge 001A                      ?___fleq 0001  
              ?_BH1750_write 0001                      ?___wmul 0001                      ?_efgtoa 003C  
                    ?_floorf 0028                      _ACKSTAT 007E2E            ?_BH1750_read_word 0004  
                    ?_strcpy 0001                      ?_strlen 0001           ??_BH1750_read_word 0008  
                  ?___xxtofl 0001           __size_of_vfpfcnvrt 0460          __size_of_i2c_espera 0026  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                 ??_UART_write 0001  
                    _SSPSTAT 000FC7              __CFG_VREGEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000                  _BH1750_init 38CA               ??_BH1750_write 0003  
                    ___aldiv 2A18              __size_of___flge 0104              __size_of___fleq 00AA  
                    ___fladd 13DE                      ___fldiv 2128                      ___awdiv 3092  
                    ___flneg 3714                      ___awmod 3156                      ___flmul 1CFE  
                    ___flsub 3652                      ___fltol 2B24              __size_of___wmul 0026  
                  ?_vfprintf 0098                 __psmallconst 0800              __size_of_efgtoa 0BB0  
            __CFG_STVREN$OFF 000000              __size_of_floorf 0212                      __pcinit 3864  
                    __ramtop 0800           __end_of_UART_write 38CA                      __ptext0 3358  
                    __ptext1 3564                      __ptext2 3446                      __ptext3 189E  
                    __ptext4 2E2C                      __ptext5 082E                      __ptext6 34A8  
                    __ptext7 36DC                      __ptext8 3508                      __ptext9 2FCC  
            __size_of_strcpy 005C              __size_of_strlen 0036         __size_of_UART_printf 0030  
        i2c_recibe_datoACK@a 0002                 __size_of_pad 00C6                      _isdigit 374C  
                 ??___xxtofl 0005             ___awmod@dividend 0001             ___aldiv@dividend 0001  
         BH1750_read_word@hb 000B           BH1750_read_word@lb 000A                      _isspace 35B6  
                    _isupper 36DC                      efgtoa@c 0042                      efgtoa@d 0078  
                    efgtoa@e 0090                      efgtoa@f 003E                      efgtoa@g 008C  
                    efgtoa@h 0082                      efgtoa@i 008A                      efgtoa@l 0086  
                    efgtoa@m 0074                      efgtoa@n 0092                      efgtoa@p 007C  
                    efgtoa@t 0070                      efgtoa@u 0094                      efgtoa@w 007F  
                    atoi@neg 000E                      _sprintf 3564                      _tolower 34A8  
                    _strncmp 2E2C         end_of_initialization 387C                      floorf@e 0036  
                    floorf@m 0032                      floorf@u 0038                      floorf@x 0028  
                    fputc@fp 0003                __Lmediumconst 0000                      fputs@fp 000C  
           ??_i2c_envia_dato 0002             ??_i2c_inicia_com 0002            __end_of_vfpfcnvrt 1CFE  
                 efgtoa@mode 0081                   efgtoa@sign 007A                    _RCSTAbits 000FAB  
           ___aldiv@quotient 000B                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 005E  
                    strcpy@d 0009                      strlen@a 0003                      strcpy@s 0007  
                    strlen@s 0001                    _UART_init 33D6   __end_of_i2c_recibe_datoACK 3818  
                ___fladd@grs 0010        __end_of_get_lux_value 3358                ___xxtofl@sign 0009  
                  _TRISBbits 000F93                  ___fldiv@grs 0022                  ___fldiv@rem 001B  
                ___flmul@grs 000E               _UART_init$1247 0017                 ?_i2c_detener 0001  
                 main@buffer 00B1                    _TXSTAbits 000FAC                 ?_i2c_iniciar 0001  
               ??_i2c_espera 0001               __end_of___flge 2D2E               __end_of___fleq 32B0  
                vfpfcnvrt@ap 004C                  vfpfcnvrt@ct 005A                  vfpfcnvrt@fp 0048  
             __end_of___wmul 383E               __end_of_efgtoa 13DE               __end_of_floorf 26D4  
                 ?_UART_init 000F                   floorf@F524 00D3               __end_of_strcpy 3564  
             __end_of_strlen 37BA          start_initialization 3864                  __end_of_pad 3092  
       __end_of_BH1750_write 389E           __end_of_i2c_espera 3864        __end_of___fpclassifyf 2E2C  
                vfprintf@fmt 009A                     ??___flge 0022                     ??___fleq 0009  
     get_lux_value@lux_value 0038                     ??___wmul 0005                     ??_efgtoa 0043  
                   ??_floorf 002C             __CFG_LPT1OSC$OFF 000000                     ??_strcpy 0005  
                   ??_strlen 0003                    ___fladd@a 0005                    ___fladd@b 0001  
                  ___fldiv@a 0013                    ___fldiv@b 000F                    ___flmul@a 0005  
                  ___flmul@b 0001                    ___flsub@a 001E                    ___flsub@b 001A  
              __pcstackBANK0 0060            __size_of___xxtofl 01B4    __size_of_BH1750_read_word 004A  
          UART_printf@cadena 0002                 ?_BH1750_init 0001                     ?___aldiv 0001  
                   ?___fladd 0001                     ?___fldiv 000F                     ?___awdiv 0001  
                   ?___flneg 0001                     ?___awmod 0001                     ?___flmul 0001  
                   ?___flsub 001A                     ?___fltol 0028                  ??_UART_init 0013  
          __size_of_vfprintf 0062                  __smallconst 0800                     ?_isdigit 0001  
                   ?_isspace 0001                     ?_isupper 0001                     ?_sprintf 009E  
                   ?_tolower 0007               __size_of_fputc 00CA               __size_of_fputs 0044  
                   ?_strncmp 0001               __size_of_putch 0002              ___aldiv@divisor 0005  
            ___aldiv@counter 0009               ___wmul@product 0005         __size_of_i2c_detener 0008  
       __size_of_i2c_iniciar 0016             __CFG_WDTPS$32768 000000                ??_UART_printf 0004  
                  _vfpfcnvrt 189E            ___wmul@multiplier 0001        __size_of_BH1750_write 0018  
             UART_write@dato 0001                   vfpfcnvrt@c 005D                   vfpfcnvrt@f 0056  
         _i2c_recibe_datoACK 37EA                     __Hrparam 0000                UART_init@BAUD 000F  
                 vfprintf@ap 009C                     __Lrparam 0000                   vfprintf@fp 0098  
        ?_i2c_recibe_datoACK 0001                 _BH1750_write 3886             __size_of___aldiv 010C  
           __size_of___fladd 04C0             __size_of___fldiv 039A             __size_of___awdiv 00C4  
           __size_of___flneg 0038             __size_of___awmod 00B0             __size_of___flmul 042A  
           __size_of___flsub 0046             __size_of___fltol 0106                   ?_vfpfcnvrt 0048  
         ___fpclassifyf@F463 00D7                   sprintf@fmt 00A0                     ___xxtofl 26D4  
                   _atoi$905 0010                     _atoi$906 0014                     _atoi$907 0012  
        __end_of_UART_printf 37EA             __size_of_isdigit 0038         ??_i2c_recibe_datoACK 0002  
           __size_of_isspace 0052                     __ptext10 3784                     __ptext11 3698  
                   __ptext20 2C2A                     __ptext12 2F02                     __ptext21 3206  
                   __ptext13 38FC                     __ptext30 26D4                     __ptext22 3156  
                   __ptext14 24C2                     __ptext31 2B24                     __ptext23 3092  
                   __ptext15 2D2E                     __ptext40 3886                     __ptext32 2128  
                   __ptext24 2888                     __ptext16 3652                     __ptext41 38EC  
                   __ptext33 3608                     __ptext25 35B6                     __ptext17 13DE  
                   __ptext42 38E0                     __ptext34 37EA                     __ptext26 374C  
                   __ptext18 3714                     __ptext43 38F4                     __ptext35 37BA  
                   __ptext27 3818                     __ptext19 1CFE                     __ptext44 383E  
                   __ptext36 38B4                     __ptext28 389E                     __ptext37 33D6  
                   __ptext29 32B0                     __ptext38 2A18                     __ptext39 38CA  
           __size_of_isupper 0038             __size_of_sprintf 0052             __size_of_tolower 0060  
                 strcpy@dest 0001             __size_of_strncmp 00D6             _BH1750_read_word 3608  
              __size_of_atoi 0190                __size_of_main 007E                     efgtoa@fp 003C  
                   efgtoa@ne 0076                     efgtoa@pp 0072                     efgtoa@ou 0060  
     __size_of_get_lux_value 00A8         __size_of_BH1750_init 0016                     _vfprintf 3446  
    __size_of_i2c_envia_dato 000C                  _isspace$936 0007      __size_of_i2c_inicia_com 0008  
      __CFG_CPUDIV$OSC1_PLL2 000000                     isdigit@c 0001                    sprintf@ap 00A8  
                   isspace@c 0001                    strcpy@src 0003                     isupper@c 0001  
                  strncmp@_l 0001                    strncmp@_r 0003                  efgtoa@nmode 007E  
                ??_vfpfcnvrt 004E                _vfpfcnvrt$430 0052                _vfpfcnvrt$434 0054  
                _UART_printf 37BA                     sprintf@f 00AA                     tolower@c 0007  
                   sprintf@s 009E       __size_of___fpclassifyf 00FE                     strncmp@l 0008  
                   strncmp@n 0005                     strncmp@r 000A                 ___aldiv@sign 000A  
              _get_lux_value 32B0                  _SSPCON2bits 000FC5                ___fladd@signs 000D  
                 _UART_write 38B4                 ___fladd@aexp 000E                 ___fladd@bexp 000F  
            BH1750_write@cmd 0003  
